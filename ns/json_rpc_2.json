{
    "class": [
        {
            "desc": "<p>A JSON-RPC 2.0 client.<\/p>\n<p>A client calls methods on a server and handles the server's responses to\nthose method calls. Methods can be called with <a href=\"package-json_rpc_2_json_rpc_2\/Client\/sendRequest.html\">sendRequest<\/a>, or with\n<a href=\"package-json_rpc_2_json_rpc_2\/Client\/sendNotification.html\">sendNotification<\/a> if no response is expected.<\/p>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-json_rpc_2_json_rpc_2\/Client-class.html",
            "isAbstract": false,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "json_rpc_2",
            "name": "json_rpc_2.Client",
            "shortname": "Client",
            "extends": [],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [],
            "events": [],
            "methods": [
                {
                    "desc": "<p>Creates a <a href=\"package-json_rpc_2_json_rpc_2\/Client-class.html\">Client<\/a> that communicates over <code>channel<\/code>.<\/p>\n<p>Note that the client won't begin listening to <code>responses<\/code> until\n<a href=\"package-json_rpc_2_json_rpc_2\/Client\/listen.html\">Client.listen<\/a> is called.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Client(StreamChannel&lt;String&gt; channel)\n    : this.withoutJson(\n          jsonDocument.bind(channel).transformStream(ignoreFormatExceptions));<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Client\/Client.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "Client",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "json_rpc_2.Client",
                    "params": [
                        {
                            "name": "channel",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "stream_channel.StreamChannel<dart:core.String>"
                        }
                    ]
                },
                {
                    "desc": "<p>Closes the underlying connection.<\/p>\n<p>Returns a <a href=\"dart-async\/Future-class.html\">Future<\/a> that completes when all resources have been released.\nThis is the same as <a href=\"package-json_rpc_2_json_rpc_2\/Client\/done.html\">done<\/a>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future close() =&gt; _manager.close();<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Client\/close.html",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "name": "close",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Client",
                    "params": []
                },
                {
                    "desc": "<p>Starts listening to the underlying stream.<\/p>\n<p>Returns a <a href=\"dart-async\/Future-class.html\">Future<\/a> that will complete when the connection is closed or\nwhen it has an error. This is the same as <a href=\"package-json_rpc_2_json_rpc_2\/Client\/done.html\">done<\/a>.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Client\/listen.html\">listen<\/a> may only be called once.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future listen() =&gt; _manager.listen(_handleResponse);<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Client\/listen.html",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "name": "listen",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Client",
                    "params": []
                },
                {
                    "desc": "<p>Sends a JSON-RPC 2 request to invoke the given <code>method<\/code> without expecting\na response.<\/p>\n<p>If passed, <code>parameters<\/code> is the parameters for the method. This must be\neither an <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a> (to pass parameters by position) or a <a href=\"dart-core\/Map-class.html\">Map<\/a> with\n<a href=\"dart-core\/String-class.html\">String<\/a> keys (to pass parameters by name). Either way, it must be\nJSON-serializable.<\/p>\n<p>Since this is just a notification to which the server isn't expected to\nsend a response, it has no return value.<\/p>\n<p>Throws a <a href=\"dart-core\/StateError-class.html\">StateError<\/a> if the client is closed when this method is called.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void sendNotification(String method, [parameters]) =&gt;\n    _send(method, parameters);<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Client\/sendNotification.html",
                    "isDeprecated": false,
                    "type": "<void>",
                    "name": "sendNotification",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Client",
                    "params": [
                        {
                            "name": "method",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "parameters",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                },
                {
                    "desc": "<p>Sends a JSON-RPC 2 request to invoke the given <code>method<\/code>.<\/p>\n<p>If passed, <code>parameters<\/code> is the parameters for the method. This must be\neither an <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a> (to pass parameters by position) or a <a href=\"dart-core\/Map-class.html\">Map<\/a> with\n<a href=\"dart-core\/String-class.html\">String<\/a> keys (to pass parameters by name). Either way, it must be\nJSON-serializable.<\/p>\n<p>If the request succeeds, this returns the response result as a decoded\nJSON-serializable object. If it fails, it throws an <a href=\"package-json_rpc_2_json_rpc_2\/RpcException-class.html\">RpcException<\/a>\ndescribing the failure.<\/p>\n<p>Throws a <a href=\"dart-core\/StateError-class.html\">StateError<\/a> if the client is closed while the request is in\nflight, or if the client is closed when this method is called.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future sendRequest(String method, [parameters]) {\n  var id = _id++;\n  _send(method, parameters, id);\n\n  var completer = new Completer.sync();\n  _pendingRequests[id] = new _Request(method, completer, new Chain.current());\n  return completer.future;\n}<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Client\/sendRequest.html",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "name": "sendRequest",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Client",
                    "params": [
                        {
                            "name": "method",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "parameters",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                },
                {
                    "desc": "<p>Runs <code>callback<\/code> and batches any requests sent until it returns.<\/p>\n<p>A batch of requests is sent in a single message on the underlying stream,\nand the responses are likewise sent back in a single message.<\/p>\n<p><code>callback<\/code> may be synchronous or asynchronous. If it returns a <a href=\"dart-async\/Future-class.html\">Future<\/a>,\nrequests will be batched until that Future returns; otherwise, requests\nwill only be batched while synchronously executing <code>callback<\/code>.<\/p>\n<p>If this is called in the context of another <a href=\"package-json_rpc_2_json_rpc_2\/Client\/withBatch.html\">withBatch<\/a> call, it just\ninvokes <code>callback<\/code> without creating another batch. This means that\nresponses are batched until the first batch ends.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">withBatch(callback()) {\n  if (_batch != null) return callback();\n\n  _batch = [];\n  return tryFinally(callback, () {\n    _manager.add(_batch);\n    _batch = null;\n  });\n}<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Client\/withBatch.html",
                    "isDeprecated": false,
                    "type": "<dynamic>",
                    "name": "withBatch",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Client",
                    "params": [
                        {
                            "name": "callback",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                }
            ],
            "props": [
                {
                    "desc": "<p>Returns a <a href=\"dart-async\/Future-class.html\">Future<\/a> that completes when the underlying connection is\nclosed.<\/p>\n<p>This is the same future that's returned by <a href=\"package-json_rpc_2_json_rpc_2\/Client\/listen.html\">listen<\/a> and <a href=\"package-json_rpc_2_json_rpc_2\/Client\/close.html\">close<\/a>. It may\ncomplete before <a href=\"package-json_rpc_2_json_rpc_2\/Client\/close.html\">close<\/a> is called if the remote endpoint closes the\nconnection.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Future get done =&gt; _manager.done;<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Client\/done.html",
                    "name": "done",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Client",
                    "params": []
                },
                {
                    "desc": "<p>Whether the underlying connection is closed.<\/p>\n<p>Note that this will be <code>true<\/code> before <a href=\"package-json_rpc_2_json_rpc_2\/Client\/close.html\">close<\/a> is called if the remote\nendpoint closes the connection.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isClosed =&gt; _manager.isClosed;<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Client\/isClosed.html",
                    "name": "isClosed",
                    "isDeprecated": false,
                    "type": "dart:core.bool",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Client",
                    "params": []
                }
            ]
        },
        {
            "desc": "<p>A wrapper for a single parameter to a server method.<\/p>\n<p>This provides numerous functions for asserting the type of the parameter in\nquestion. These functions each have a version that asserts that the\nparameter exists (for example, <a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asNum.html\">asNum<\/a> and <a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asString.html\">asString<\/a>) and a version that\nreturns a default value if the parameter doesn't exist (for example,\n<a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asNumOr.html\">asNumOr<\/a> and <a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asStringOr.html\">asStringOr<\/a>). If an assertion fails, the request is\nautomatically rejected.<\/p>\n<p>This extends <a href=\"package-json_rpc_2_json_rpc_2\/Parameters-class.html\">Parameters<\/a> to make it easy to access nested parameters. For\nexample:<\/p>\n<pre class=\"language-dart\"><code>\/\/ \"params.value\" is \"{'scores': {'home': [5, 10, 17]}}\"\nparams['scores']['home'][2].asInt \/\/ =&gt; 17\n<\/code><\/pre>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-json_rpc_2_json_rpc_2\/Parameter-class.html",
            "isAbstract": false,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "json_rpc_2",
            "name": "json_rpc_2.Parameter",
            "shortname": "Parameter",
            "extends": [
                "json_rpc_2.Parameters",
                "dart:core.Object"
            ],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [],
            "events": [],
            "methods": [
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> is a boolean and returns it.<\/p>\n<p>If <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist, this returns <code>defaultValue<\/code>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool asBoolOr(bool defaultValue) =&gt; asBool;<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asBoolOr.html",
                    "isDeprecated": false,
                    "type": "dart:core.bool",
                    "name": "asBoolOr",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": [
                        {
                            "name": "defaultValue",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.bool"
                        }
                    ]
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists, is a string, and can be parsed as a\n<a href=\"dart-core\/DateTime-class.html\">DateTime<\/a> and returns it.<\/p>\n<p>If <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist, this returns <code>defaultValue<\/code>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">DateTime asDateTimeOr(DateTime defaultValue) =&gt; asDateTime;<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asDateTimeOr.html",
                    "isDeprecated": false,
                    "type": "dart:core.DateTime",
                    "name": "asDateTimeOr",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": [
                        {
                            "name": "defaultValue",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.DateTime"
                        }
                    ]
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> is an integer and returns it.<\/p>\n<p>If <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist, this returns <code>defaultValue<\/code>.<\/p>\n<p>Note that which values count as integers varies between the Dart VM and\ndart2js. The value <code>1.0<\/code> will be considered an integer under dart2js but\nnot under the VM.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">int asIntOr(int defaultValue) =&gt; asInt;<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asIntOr.html",
                    "isDeprecated": false,
                    "type": "dart:core.int",
                    "name": "asIntOr",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": [
                        {
                            "name": "defaultValue",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.int"
                        }
                    ]
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> is a <a href=\"dart-core\/List-class.html\">List<\/a> and returns it.<\/p>\n<p>If <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist, this returns <code>defaultValue<\/code>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">List asListOr(List defaultValue) =&gt; asList;<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asListOr.html",
                    "isDeprecated": false,
                    "type": "dart:core.List",
                    "name": "asListOr",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": [
                        {
                            "name": "defaultValue",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.List"
                        }
                    ]
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> is a <a href=\"dart-core\/Map-class.html\">Map<\/a> and returns it.<\/p>\n<p>If <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist, this returns <code>defaultValue<\/code>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Map asMapOr(Map defaultValue) =&gt; asMap;<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asMapOr.html",
                    "isDeprecated": false,
                    "type": "dart:core.Map",
                    "name": "asMapOr",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": [
                        {
                            "name": "defaultValue",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Map"
                        }
                    ]
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> is a number and returns it.<\/p>\n<p>If <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist, this returns <code>defaultValue<\/code>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">num asNumOr(num defaultValue) =&gt; asNum;<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asNumOr.html",
                    "isDeprecated": false,
                    "type": "dart:core.num",
                    "name": "asNumOr",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": [
                        {
                            "name": "defaultValue",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.num"
                        }
                    ]
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> is a string and returns it.<\/p>\n<p>If <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist, this returns <code>defaultValue<\/code>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String asStringOr(String defaultValue) =&gt; asString;<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asStringOr.html",
                    "isDeprecated": false,
                    "type": "dart:core.String",
                    "name": "asStringOr",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": [
                        {
                            "name": "defaultValue",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        }
                    ]
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists, is a string, and can be parsed as a\n<a href=\"dart-core\/Uri-class.html\">Uri<\/a> and returns it.<\/p>\n<p>If <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist, this returns <code>defaultValue<\/code>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Uri asUriOr(Uri defaultValue) =&gt; asUri;<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asUriOr.html",
                    "isDeprecated": false,
                    "type": "dart:core.Uri",
                    "name": "asUriOr",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": [
                        {
                            "name": "defaultValue",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Uri"
                        }
                    ]
                },
                {
                    "desc": "<p>Returns <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a>, or <code>defaultValue<\/code> if this parameter wasn't passed.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">valueOr(defaultValue) =&gt; value;<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/valueOr.html",
                    "isDeprecated": false,
                    "type": "<dynamic>",
                    "name": "valueOr",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": [
                        {
                            "name": "defaultValue",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                }
            ],
            "props": [
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists and is a boolean and returns it.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asBoolOr.html\">asBoolOr<\/a> may be used to provide a default value instead of rejecting the\nrequest if <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get asBool =&gt; _getTyped('a boolean', (value) =&gt; value is bool);<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asBool.html",
                    "name": "asBool",
                    "isDeprecated": false,
                    "type": "dart:core.bool",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": []
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists, is a string, and can be parsed as a\n<a href=\"dart-core\/DateTime-class.html\">DateTime<\/a> and returns it.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asDateTimeOr.html\">asDateTimeOr<\/a> may be used to provide a default value instead of rejecting\nthe request if <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">DateTime get asDateTime =&gt; _getParsed('date\/time', DateTime.parse);<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asDateTime.html",
                    "name": "asDateTime",
                    "isDeprecated": false,
                    "type": "dart:core.DateTime",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": []
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists and is an integer and returns it.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asIntOr.html\">asIntOr<\/a> may be used to provide a default value instead of rejecting the\nrequest if <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist.<\/p>\n<p>Note that which values count as integers varies between the Dart VM and\ndart2js. The value <code>1.0<\/code> will be considered an integer under dart2js but\nnot under the VM.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get asInt =&gt; _getTyped('an integer', (value) =&gt; value is int);<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asInt.html",
                    "name": "asInt",
                    "isDeprecated": false,
                    "type": "dart:core.int",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": []
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists and is a <a href=\"dart-core\/List-class.html\">List<\/a> and returns it.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asListOr.html\">asListOr<\/a> may be used to provide a default value instead of rejecting the\nrequest if <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List get asList =&gt; _getTyped('an Array', (value) =&gt; value is List);<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asList.html",
                    "name": "asList",
                    "isDeprecated": false,
                    "type": "dart:core.List",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": []
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists and is a <a href=\"dart-core\/Map-class.html\">Map<\/a> and returns it.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asMapOr.html\">asMapOr<\/a> may be used to provide a default value instead of rejecting the\nrequest if <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Map get asMap =&gt; _getTyped('an Object', (value) =&gt; value is Map);<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asMap.html",
                    "name": "asMap",
                    "isDeprecated": false,
                    "type": "dart:core.Map",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": []
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists and is a number and returns it.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asNumOr.html\">asNumOr<\/a> may be used to provide a default value instead of rejecting the\nrequest if <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">num get asNum =&gt; _getTyped('a number', (value) =&gt; value is num);<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asNum.html",
                    "name": "asNum",
                    "isDeprecated": false,
                    "type": "dart:core.num",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": []
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists and is a string and returns it.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asStringOr.html\">asStringOr<\/a> may be used to provide a default value instead of rejecting\nthe request if <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get asString =&gt; _getTyped('a string', (value) =&gt; value is String);<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asString.html",
                    "name": "asString",
                    "isDeprecated": false,
                    "type": "dart:core.String",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": []
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists, is a string, and can be parsed as a\n<a href=\"dart-core\/Uri-class.html\">Uri<\/a> and returns it.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asUriOr.html\">asUriOr<\/a> may be used to provide a default value instead of rejecting the\nrequest if <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> doesn't exist.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Uri get asUri =&gt; _getParsed('URI', Uri.parse);<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/asUri.html",
                    "name": "asUri",
                    "isDeprecated": false,
                    "type": "dart:core.Uri",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": []
                },
                {
                    "desc": "<p>Whether this parameter exists.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get exists =&gt; true;<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameter\/exists.html",
                    "name": "exists",
                    "isDeprecated": false,
                    "type": "dart:core.bool",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameter",
                    "params": []
                }
            ]
        },
        {
            "desc": "<p>A wrapper for the parameters to a server method.<\/p>\n<p>JSON-RPC 2.0 allows parameters that are either a list or a map. This class\nprovides functions that not only assert that the parameters object is the\ncorrect type, but also that the expected arguments exist and are themselves\nthe correct type.<\/p>\n<p>Example usage:<\/p>\n<pre class=\"language-dart\"><code>server.registerMethod(\"subtract\", (params) {\n  return params[\"minuend\"].asNum - params[\"subtrahend\"].asNum;\n});\n<\/code><\/pre>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-json_rpc_2_json_rpc_2\/Parameters-class.html",
            "isAbstract": false,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "json_rpc_2",
            "name": "json_rpc_2.Parameters",
            "shortname": "Parameters",
            "extends": [],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [
                "json_rpc_2.Parameter"
            ],
            "events": [],
            "methods": [
                {
                    "desc": "",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Parameters(this.method, this._value);<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameters\/Parameters.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "Parameters",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "json_rpc_2.Parameters",
                    "params": [
                        {
                            "name": "_value",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "<dynamic>"
                        },
                        {
                            "name": "method",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "dart:core.String"
                        }
                    ]
                }
            ],
            "props": [
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists and is a <a href=\"dart-core\/List-class.html\">List<\/a> and returns it.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List get asList {\n  _assertPositional();\n  return value;\n}<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameters\/asList.html",
                    "name": "asList",
                    "isDeprecated": false,
                    "type": "dart:core.List",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameters",
                    "params": []
                },
                {
                    "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists and is a <a href=\"dart-core\/Map-class.html\">Map<\/a> and returns it.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Map get asMap {\n  _assertNamed();\n  return value;\n}<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameters\/asMap.html",
                    "name": "asMap",
                    "isDeprecated": false,
                    "type": "dart:core.Map",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameters",
                    "params": []
                },
                {
                    "desc": "<p>The name of the method that this request called.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String method\n\n<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Parameters\/method.html",
                    "name": "method",
                    "isDeprecated": false,
                    "type": "dart:core.String",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Parameters",
                    "params": []
                }
            ]
        },
        {
            "desc": "<p>A JSON-RPC 2.0 client <em>and<\/em> server.<\/p>\n<p>This supports bidirectional peer-to-peer communication with another JSON-RPC\n2.0 endpoint. It sends both requests and responses across the same\ncommunication channel and expects to connect to a peer that does the same.<\/p>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-json_rpc_2_json_rpc_2\/Peer-class.html",
            "isAbstract": false,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "json_rpc_2",
            "name": "json_rpc_2.Peer",
            "shortname": "Peer",
            "extends": [],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [],
            "events": [],
            "methods": [
                {
                    "desc": "<p>Creates a <a href=\"package-json_rpc_2_json_rpc_2\/Peer-class.html\">Peer<\/a> that communicates over <code>channel<\/code>.<\/p>\n<p>Note that the peer won't begin listening to <code>channel<\/code> until <a href=\"package-json_rpc_2_json_rpc_2\/Peer\/listen.html\">Peer.listen<\/a>\nis called.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Peer(StreamChannel&lt;String&gt; channel)\n    : this.withoutJson(\n          jsonDocument.bind(channel).transform(respondToFormatExceptions));<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Peer\/Peer.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "Peer",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "json_rpc_2.Peer",
                    "params": [
                        {
                            "name": "channel",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "stream_channel.StreamChannel<dart:core.String>"
                        }
                    ]
                },
                {
                    "desc": "<p>Closes the underlying connection.<\/p>\n<p>Returns a <a href=\"dart-async\/Future-class.html\">Future<\/a> that completes when all resources have been released.\nThis is the same as <a href=\"package-json_rpc_2_json_rpc_2\/Peer\/done.html\">done<\/a>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future close() =&gt;\n    Future.wait([_client.close(), _server.close(), _manager.close()]);<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Peer\/close.html",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "name": "close",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Peer",
                    "params": []
                },
                {
                    "desc": "<p>Starts listening to the underlying stream.<\/p>\n<p>Returns a <a href=\"dart-async\/Future-class.html\">Future<\/a> that will complete when the connection is closed or\nwhen it has an error. This is the same as <a href=\"package-json_rpc_2_json_rpc_2\/Peer\/done.html\">done<\/a>.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Peer\/listen.html\">listen<\/a> may only be called once.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future listen() {\n  _client.listen();\n  _server.listen();\n  return _manager.listen((message) {\n    if (message is Map) {\n      if (message.containsKey('result') || message.containsKey('error')) {\n        _clientIncomingForwarder.add(message);\n      } else {\n        _serverIncomingForwarder.add(message);\n      }\n    } else if (message is List &amp;&amp;\n        message.isNotEmpty &amp;&amp;\n        message.first is Map) {\n      if (message.first.containsKey('result') ||\n          message.first.containsKey('error')) {\n        _clientIncomingForwarder.add(message);\n      } else {\n        _serverIncomingForwarder.add(message);\n      }\n    } else {\n      \/\/ Non-Map and -List messages are ill-formed, so we pass them to the\n      \/\/ server since it knows how to send error responses.\n      _serverIncomingForwarder.add(message);\n    }\n  });\n}<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Peer\/listen.html",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "name": "listen",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Peer",
                    "params": []
                },
                {
                    "desc": "<p>Registers a fallback method on this server.<\/p>\n<p>A server may have any number of fallback methods. When a request comes in\nthat doesn't match any named methods, each fallback is tried in order. A\nfallback can pass on handling a request by throwing a\n<a href=\"package-json_rpc_2_json_rpc_2\/RpcException\/RpcException.methodNotFound.html\">RpcException.methodNotFound<\/a> exception.<\/p>\n<p><code>callback<\/code> can return either a JSON-serializable object or a Future that\ncompletes to a JSON-serializable object. Any errors in <code>callback<\/code> will be\nreported to the client as JSON-RPC 2.0 errors. <code>callback<\/code> may send custom\nerrors by throwing an <a href=\"package-json_rpc_2_json_rpc_2\/RpcException-class.html\">RpcException<\/a>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void registerFallback(callback(Parameters parameters)) =&gt;\n    _server.registerFallback(callback);<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Peer\/registerFallback.html",
                    "isDeprecated": false,
                    "type": "<void>",
                    "name": "registerFallback",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Peer",
                    "params": [
                        {
                            "name": "parameters",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "json_rpc_2.Parameters"
                        }
                    ]
                },
                {
                    "desc": "<p>Registers a method named <code>name<\/code> on this server.<\/p>\n<p><code>callback<\/code> can take either zero or one arguments. If it takes zero, any\nrequests for that method that include parameters will be rejected. If it\ntakes one, it will be passed a <a href=\"package-json_rpc_2_json_rpc_2\/Parameters-class.html\">Parameters<\/a> object.<\/p>\n<p><code>callback<\/code> can return either a JSON-serializable object or a Future that\ncompletes to a JSON-serializable object. Any errors in <code>callback<\/code> will be\nreported to the client as JSON-RPC 2.0 errors.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void registerMethod(String name, Function callback) =&gt;\n    _server.registerMethod(name, callback);<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Peer\/registerMethod.html",
                    "isDeprecated": false,
                    "type": "<void>",
                    "name": "registerMethod",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Peer",
                    "params": [
                        {
                            "name": "callback",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Function"
                        },
                        {
                            "name": "name",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        }
                    ]
                },
                {
                    "desc": "<p>Sends a JSON-RPC 2 request to invoke the given <code>method<\/code> without expecting\na response.<\/p>\n<p>If passed, <code>parameters<\/code> is the parameters for the method. This must be\neither an <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a> (to pass parameters by position) or a <a href=\"dart-core\/Map-class.html\">Map<\/a> with\n<a href=\"dart-core\/String-class.html\">String<\/a> keys (to pass parameters by name). Either way, it must be\nJSON-serializable.<\/p>\n<p>Since this is just a notification to which the server isn't expected to\nsend a response, it has no return value.<\/p>\n<p>Throws a <a href=\"dart-core\/StateError-class.html\">StateError<\/a> if the client is closed when this method is called.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void sendNotification(String method, [parameters]) =&gt;\n    _client.sendNotification(method, parameters);<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Peer\/sendNotification.html",
                    "isDeprecated": false,
                    "type": "<void>",
                    "name": "sendNotification",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Peer",
                    "params": [
                        {
                            "name": "method",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "parameters",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                },
                {
                    "desc": "<p>Sends a JSON-RPC 2 request to invoke the given <code>method<\/code>.<\/p>\n<p>If passed, <code>parameters<\/code> is the parameters for the method. This must be\neither an <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a> (to pass parameters by position) or a <a href=\"dart-core\/Map-class.html\">Map<\/a> with\n<a href=\"dart-core\/String-class.html\">String<\/a> keys (to pass parameters by name). Either way, it must be\nJSON-serializable.<\/p>\n<p>If the request succeeds, this returns the response result as a decoded\nJSON-serializable object. If it fails, it throws an <a href=\"package-json_rpc_2_json_rpc_2\/RpcException-class.html\">RpcException<\/a>\ndescribing the failure.<\/p>\n<p>Throws a <a href=\"dart-core\/StateError-class.html\">StateError<\/a> if the client is closed while the request is in\nflight, or if the client is closed when this method is called.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future sendRequest(String method, [parameters]) =&gt;\n    _client.sendRequest(method, parameters);<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Peer\/sendRequest.html",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "name": "sendRequest",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Peer",
                    "params": [
                        {
                            "name": "method",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "parameters",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                },
                {
                    "desc": "<p>Runs <code>callback<\/code> and batches any requests sent until it returns.<\/p>\n<p>A batch of requests is sent in a single message on the underlying stream,\nand the responses are likewise sent back in a single message.<\/p>\n<p><code>callback<\/code> may be synchronous or asynchronous. If it returns a <a href=\"dart-async\/Future-class.html\">Future<\/a>,\nrequests will be batched until that Future returns; otherwise, requests\nwill only be batched while synchronously executing <code>callback<\/code>.<\/p>\n<p>If this is called in the context of another <a href=\"package-json_rpc_2_json_rpc_2\/Peer\/withBatch.html\">withBatch<\/a> call, it just\ninvokes <code>callback<\/code> without creating another batch. This means that\nresponses are batched until the first batch ends.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">withBatch(callback()) =&gt; _client.withBatch(callback);<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Peer\/withBatch.html",
                    "isDeprecated": false,
                    "type": "<dynamic>",
                    "name": "withBatch",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Peer",
                    "params": [
                        {
                            "name": "callback",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                }
            ],
            "props": [
                {
                    "desc": "<p>Returns a <a href=\"dart-async\/Future-class.html\">Future<\/a> that completes when the underlying connection is\nclosed.<\/p>\n<p>This is the same future that's returned by <a href=\"package-json_rpc_2_json_rpc_2\/Peer\/listen.html\">listen<\/a> and <a href=\"package-json_rpc_2_json_rpc_2\/Peer\/close.html\">close<\/a>. It may\ncomplete before <a href=\"package-json_rpc_2_json_rpc_2\/Peer\/close.html\">close<\/a> is called if the remote endpoint closes the\nconnection.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Future get done =&gt; _manager.done;<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Peer\/done.html",
                    "name": "done",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Peer",
                    "params": []
                },
                {
                    "desc": "<p>Whether the underlying connection is closed.<\/p>\n<p>Note that this will be <code>true<\/code> before <a href=\"package-json_rpc_2_json_rpc_2\/Peer\/close.html\">close<\/a> is called if the remote\nendpoint closes the connection.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isClosed =&gt; _manager.isClosed;<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Peer\/isClosed.html",
                    "name": "isClosed",
                    "isDeprecated": false,
                    "type": "dart:core.bool",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Peer",
                    "params": []
                }
            ]
        },
        {
            "desc": "<p>An exception from a JSON-RPC server that can be translated into an error\nresponse.<\/p>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-json_rpc_2_json_rpc_2\/RpcException-class.html",
            "isAbstract": false,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "json_rpc_2",
            "name": "json_rpc_2.RpcException",
            "shortname": "RpcException",
            "extends": [],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [],
            "events": [],
            "methods": [
                {
                    "desc": "",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RpcException(this.code, this.message, {this.data});<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/RpcException\/RpcException.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "RpcException",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "json_rpc_2.RpcException",
                    "params": [
                        {
                            "name": "code",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "dart:core.int"
                        },
                        {
                            "name": "data",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "<dynamic>"
                        },
                        {
                            "name": "message",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "dart:core.String"
                        }
                    ]
                },
                {
                    "desc": "<p>Converts this exception into a JSON-serializable object that's a valid\nJSON-RPC 2.0 error response.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">serialize(request) {\n  var modifiedData;\n  if (data is Map &amp;&amp; !data.containsKey('request')) {\n    modifiedData = new Map.from(data);\n    modifiedData['request'] = request;\n  } else if (data == null) {\n    modifiedData = {'request': request};\n  } else {\n    modifiedData = data;\n  }\n\n  var id = request is Map ? request['id'] : null;\n  if (id is! String &amp;&amp; id is! num) id = null;\n  return {\n    'jsonrpc': '2.0',\n    'error': {'code': code, 'message': message, 'data': modifiedData},\n    'id': id\n  };\n}<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/RpcException\/serialize.html",
                    "isDeprecated": false,
                    "type": "<dynamic>",
                    "name": "serialize",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.RpcException",
                    "params": [
                        {
                            "name": "request",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                },
                {
                    "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() {\n  var prefix = \"JSON-RPC error $code\";\n  var errorName = error_code.name(code);\n  if (errorName != null) prefix += \" ($errorName)\";\n  return \"$prefix: $message\";\n}<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/RpcException\/toString.html",
                    "isDeprecated": false,
                    "type": "dart:core.String",
                    "name": "toString",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.RpcException",
                    "params": []
                }
            ],
            "props": [
                {
                    "desc": "<p>The error code.<\/p>\n<p>All non-negative error codes are available for use by application\ndevelopers.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int code\n\n<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/RpcException\/code.html",
                    "name": "code",
                    "isDeprecated": false,
                    "type": "dart:core.int",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.RpcException",
                    "params": []
                },
                {
                    "desc": "<p>The error message.<\/p>\n<p>This should be limited to a concise single sentence. Further information\nshould be supplied via <a href=\"package-json_rpc_2_json_rpc_2\/RpcException\/data.html\">data<\/a>.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String message\n\n<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/RpcException\/message.html",
                    "name": "message",
                    "isDeprecated": false,
                    "type": "dart:core.String",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.RpcException",
                    "params": []
                }
            ]
        },
        {
            "desc": "<p>A JSON-RPC 2.0 server.<\/p>\n<p>A server exposes methods that are called by requests, to which it provides\nresponses. Methods can be registered using <a href=\"package-json_rpc_2_json_rpc_2\/Server\/registerMethod.html\">registerMethod<\/a> and\n<a href=\"package-json_rpc_2_json_rpc_2\/Server\/registerFallback.html\">registerFallback<\/a>. Requests can be handled using <code>handleRequest<\/code> and\n<code>parseRequest<\/code>.<\/p>\n<p>Note that since requests can arrive asynchronously and methods can run\nasynchronously, it's possible for multiple methods to be invoked at the same\ntime, or even for a single method to be invoked multiple times at once.<\/p>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-json_rpc_2_json_rpc_2\/Server-class.html",
            "isAbstract": false,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "json_rpc_2",
            "name": "json_rpc_2.Server",
            "shortname": "Server",
            "extends": [],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [],
            "events": [],
            "methods": [
                {
                    "desc": "<p>Creates a <a href=\"package-json_rpc_2_json_rpc_2\/Server-class.html\">Server<\/a> that communicates over <code>channel<\/code>.<\/p>\n<p>Note that the server won't begin listening to <code>requests<\/code> until\n<a href=\"package-json_rpc_2_json_rpc_2\/Server\/listen.html\">Server.listen<\/a> is called.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Server(StreamChannel&lt;String&gt; channel)\n    : this.withoutJson(\n          jsonDocument.bind(channel).transform(respondToFormatExceptions));<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Server\/Server.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "Server",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "json_rpc_2.Server",
                    "params": [
                        {
                            "name": "channel",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "stream_channel.StreamChannel<dart:core.String>"
                        }
                    ]
                },
                {
                    "desc": "<p>Closes the underlying connection.<\/p>\n<p>Returns a <a href=\"dart-async\/Future-class.html\">Future<\/a> that completes when all resources have been released.\nThis is the same as <a href=\"package-json_rpc_2_json_rpc_2\/Server\/done.html\">done<\/a>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future close() =&gt; _manager.close();<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Server\/close.html",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "name": "close",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Server",
                    "params": []
                },
                {
                    "desc": "<p>Starts listening to the underlying stream.<\/p>\n<p>Returns a <a href=\"dart-async\/Future-class.html\">Future<\/a> that will complete when the connection is closed or\nwhen it has an error. This is the same as <a href=\"package-json_rpc_2_json_rpc_2\/Server\/done.html\">done<\/a>.<\/p>\n<p><a href=\"package-json_rpc_2_json_rpc_2\/Server\/listen.html\">listen<\/a> may only be called once.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future listen() =&gt; _manager.listen(_handleRequest);<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Server\/listen.html",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "name": "listen",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Server",
                    "params": []
                },
                {
                    "desc": "<p>Registers a fallback method on this server.<\/p>\n<p>A server may have any number of fallback methods. When a request comes in\nthat doesn't match any named methods, each fallback is tried in order. A\nfallback can pass on handling a request by throwing a\n<a href=\"package-json_rpc_2_json_rpc_2\/RpcException\/RpcException.methodNotFound.html\">RpcException.methodNotFound<\/a> exception.<\/p>\n<p><code>callback<\/code> can return either a JSON-serializable object or a Future that\ncompletes to a JSON-serializable object. Any errors in <code>callback<\/code> will be\nreported to the client as JSON-RPC 2.0 errors. <code>callback<\/code> may send custom\nerrors by throwing an <a href=\"package-json_rpc_2_json_rpc_2\/RpcException-class.html\">RpcException<\/a>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void registerFallback(callback(Parameters parameters)) {\n  _fallbacks.add(callback);\n}<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Server\/registerFallback.html",
                    "isDeprecated": false,
                    "type": "<void>",
                    "name": "registerFallback",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Server",
                    "params": [
                        {
                            "name": "parameters",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "json_rpc_2.Parameters"
                        }
                    ]
                },
                {
                    "desc": "<p>Registers a method named <code>name<\/code> on this server.<\/p>\n<p><code>callback<\/code> can take either zero or one arguments. If it takes zero, any\nrequests for that method that include parameters will be rejected. If it\ntakes one, it will be passed a <a href=\"package-json_rpc_2_json_rpc_2\/Parameters-class.html\">Parameters<\/a> object.<\/p>\n<p><code>callback<\/code> can return either a JSON-serializable object or a Future that\ncompletes to a JSON-serializable object. Any errors in <code>callback<\/code> will be\nreported to the client as JSON-RPC 2.0 errors.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void registerMethod(String name, Function callback) {\n  if (_methods.containsKey(name)) {\n    throw new ArgumentError('There\\'s already a method named \"$name\".');\n  }\n\n  _methods[name] = callback;\n}<\/code><\/pre>\n    ",
                    "href": "package-json_rpc_2_json_rpc_2\/Server\/registerMethod.html",
                    "isDeprecated": false,
                    "type": "<void>",
                    "name": "registerMethod",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "json_rpc_2.Server",
                    "params": [
                        {
                            "name": "callback",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Function"
                        },
                        {
                            "name": "name",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        }
                    ]
                }
            ],
            "props": [
                {
                    "desc": "<p>Returns a <a href=\"dart-async\/Future-class.html\">Future<\/a> that completes when the underlying connection is\nclosed.<\/p>\n<p>This is the same future that's returned by <a href=\"package-json_rpc_2_json_rpc_2\/Server\/listen.html\">listen<\/a> and <a href=\"package-json_rpc_2_json_rpc_2\/Server\/close.html\">close<\/a>. It may\ncomplete before <a href=\"package-json_rpc_2_json_rpc_2\/Server\/close.html\">close<\/a> is called if the remote endpoint closes the\nconnection.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Future get done =&gt; _manager.done;<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Server\/done.html",
                    "name": "done",
                    "isDeprecated": false,
                    "type": "dart:async.Future",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Server",
                    "params": []
                },
                {
                    "desc": "<p>Whether the underlying connection is closed.<\/p>\n<p>Note that this will be <code>true<\/code> before <a href=\"package-json_rpc_2_json_rpc_2\/Server\/close.html\">close<\/a> is called if the remote\nendpoint closes the connection.<\/p>\n        ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isClosed =&gt; _manager.isClosed;<\/code><\/pre>\n        ",
                    "href": "package-json_rpc_2_json_rpc_2\/Server\/isClosed.html",
                    "name": "isClosed",
                    "isDeprecated": false,
                    "type": "dart:core.bool",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "json_rpc_2.Server",
                    "params": []
                }
            ]
        }
    ],
    "mixin": [],
    "enum": [],
    "typedef": []
}