{
    "name": "date_symbol_data_file",
    "href": "date_symbol_data_file\/date_symbol_data_file-library.html",
    "cn": [
        {
            "name": "initializeDateFormatting",
            "type": "dart:async.Future",
            "desc": "<p>This should be called for at least one <code>locale<\/code> before any date formatting\nmethods are called. It sets up the lookup for date symbols using <a href=\"package-path_path\/package-path_path-library.html\">path<\/a>.\nThe <a href=\"package-path_path\/package-path_path-library.html\">path<\/a> parameter should end with a directory separator appropriate\nfor the platform.<\/p>\n    ",
            "static": false,
            "memberOf": "date_symbol_data_file",
            "sig": "",
            "params": [
                {
                    "name": "locale",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "filePath",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "date_symbol_data_file\/initializeDateFormatting.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future initializeDateFormatting(String locale, String filePath) {\n  var reader = new FileDataReader(path.join(filePath, 'symbols'));\n  initializeDateSymbols(() =&gt; new LazyLocaleData(\n      reader, _createDateSymbol, availableLocalesForDateFormatting));\n  var reader2 = new FileDataReader(path.join(filePath, 'patterns'));\n  initializeDatePatterns(() =&gt;\n      new LazyLocaleData(reader2, (x) =&gt; x, availableLocalesForDateFormatting));\n  return initializeIndividualLocaleDateFormatting((symbols, patterns) {\n    return Future.wait(\n        &lt;Future&gt;[symbols.initLocale(locale), patterns.initLocale(locale)]);\n  });\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "isFakeNamespace": false,
    "desc": "",
    "example": "",
    "isDeprecated": false
}