{
    "name": "date_symbol_data_custom",
    "href": "package-intl_date_symbol_data_custom\/package-intl_date_symbol_data_custom-library.html",
    "cn": [
        {
            "name": "initializeDateFormattingCustom",
            "type": "",
            "desc": "<p>This should be called for at least one <code>locale<\/code> before any date\nformatting methods are called.<\/p>\n<p>It sets up the lookup for date information. The <code>symbols<\/code> argument should\ncontain a populated <a href=\"date_symbols\/DateSymbols-class.html\">DateSymbols<\/a>, and <code>patterns<\/code> should contain a Map for\nthe same locale from skeletons to the specific format strings. For examples,\nsee date_time_patterns.dart.<\/p>\n<p>If data for this locale has already been initialized it will be overwritten.<\/p>\n    ",
            "static": false,
            "memberOf": "date_symbol_data_custom",
            "sig": "",
            "params": [
                {
                    "name": "locale",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "symbols",
                    "type": "date_symbols.DateSymbols",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "patterns",
                    "type": "dart:core.Map<dart:core.String<dart:core.String>>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Map",
                        "dart:core.String",
                        "dart:core.String"
                    ]
                },
                {
                    "name": "locale",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "symbols",
                    "type": "date_symbols.DateSymbols",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "patterns",
                    "type": "dart:core.Map<dart:core.String<dart:core.String>>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Map",
                        "dart:core.String",
                        "dart:core.String"
                    ]
                }
            ],
            "isConstructor": false,
            "href": "package-intl_date_symbol_data_custom\/initializeDateFormattingCustom.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void initializeDateFormattingCustom(\n    {String locale, DateSymbols symbols, Map&lt;String, String&gt; patterns}) {\n  initializeDateSymbols(_emptySymbols);\n  initializeDatePatterns(_emptyPatterns);\n  if (symbols == null)\n    throw new ArgumentError(\"Missing DateTime formatting symbols\");\n  if (patterns == null)\n    throw new ArgumentError(\"Missing DateTime formatting patterns\");\n  if (locale != symbols.NAME)\n    throw new ArgumentError.value(\n        [locale, symbols.NAME], \"Locale does not match symbols.NAME\");\n  dateTimeSymbols[symbols.NAME] = symbols;\n  dateTimePatterns[symbols.NAME] = patterns;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "isFakeNamespace": false,
    "desc": "",
    "example": "",
    "isDeprecated": false
}