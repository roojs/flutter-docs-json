{
    "name": "pedantic",
    "href": "package-pedantic_pedantic\/package-pedantic_pedantic-library.html",
    "cn": [
        {
            "name": "unawaited",
            "type": "",
            "desc": "<p>Indicates to tools that <code>future<\/code> is intentionally not <code>await<\/code>-ed.<\/p>\n<p>In an <code>async<\/code> context, it is normally expected than all <a href=\"dart-async\/Future-class.html\">Future<\/a>s are\nawaited, and that is the basis of the lint <code>unawaited_futures<\/code>. However,\nthere are times where one or more futures are intentionally not awaited.\nThis function may be used to ignore a particular future. It silences the\n<code>unawaited_futures<\/code> lint.<\/p>\n<pre class=\"language-dart\"><code>Future&lt;void&gt; saveUserPreferences() async {\n  await _writePreferences();\n\n  \/\/ While 'log' returns a Future, the consumer of 'saveUserPreferences'\n  \/\/ is unlikely to want to wait for that future to complete; they only\n  \/\/ care about the preferences being written).\n  unawaited(log('Preferences saved!'));\n}\n<\/code><\/pre>\n    ",
            "static": false,
            "memberOf": "pedantic",
            "sig": "",
            "params": [
                {
                    "name": "future",
                    "type": "dart:async.Future",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "future",
                    "type": "dart:async.Future",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-pedantic_pedantic\/unawaited.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void unawaited(Future&lt;void&gt; future) {}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "isFakeNamespace": false,
    "desc": "",
    "example": "",
    "isDeprecated": false
}