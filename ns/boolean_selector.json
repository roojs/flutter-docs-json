{
    "name": "boolean_selector",
    "href": "package-boolean_selector_boolean_selector\/package-boolean_selector_boolean_selector-library.html",
    "cn": [
        {
            "name": "boolean_selector.BooleanSelector",
            "extends": [],
            "memberOf": "boolean_selector",
            "events": [],
            "methods": [
                {
                    "name": "evaluate",
                    "type": "dart:core.bool",
                    "desc": "<p>Returns whether the selector matches the given <code>semantics<\/code>.<\/p>\n<p>The <code>semantics<\/code> define which variables evaluate to <code>true<\/code> or <code>false<\/code>. The\nparameter can be either an <code>Iterable&lt;String&gt;<\/code> containing variables that\nshould evaluate to <code>true<\/code>, or a function <code>bool semantics(String variable)<\/code>\nthat returns a variable's value.<\/p>\n    ",
                    "static": false,
                    "memberOf": "boolean_selector.BooleanSelector",
                    "sig": "",
                    "params": [
                        {
                            "name": "semantics",
                            "type": "",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false,
                            "types": []
                        }
                    ],
                    "isConstructor": false,
                    "href": "package-boolean_selector_boolean_selector\/BooleanSelector\/evaluate.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool evaluate(semantics);<\/code><\/pre>\n    ",
                    "isDeprecated": false
                },
                {
                    "name": "intersection",
                    "type": "boolean_selector.BooleanSelector",
                    "desc": "<p>Returns a new <a href=\"package-boolean_selector_boolean_selector\/BooleanSelector-class.html\">BooleanSelector<\/a> that matches only inputs matched by both\n<a href=\"package-boolean_selector_boolean_selector\/BooleanSelector-class.html\">this<\/a> and <code>other<\/code>.<\/p>\n    ",
                    "static": false,
                    "memberOf": "boolean_selector.BooleanSelector",
                    "sig": "",
                    "params": [
                        {
                            "name": "other",
                            "type": "boolean_selector.BooleanSelector",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        }
                    ],
                    "isConstructor": false,
                    "href": "package-boolean_selector_boolean_selector\/BooleanSelector\/intersection.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">BooleanSelector intersection(BooleanSelector other);<\/code><\/pre>\n    ",
                    "isDeprecated": false
                },
                {
                    "name": "BooleanSelector.parse",
                    "type": "",
                    "desc": "<p>Parses <code>selector<\/code>.<\/p>\n<p>This will throw a <a href=\"package-source_span_source_span\/SourceSpanFormatException-class.html\">SourceSpanFormatException<\/a> if the selector is\nmalformed or if it uses an undefined variable.<\/p>\n    ",
                    "static": false,
                    "memberOf": "boolean_selector.BooleanSelector",
                    "sig": "",
                    "params": [
                        {
                            "name": "selector",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        }
                    ],
                    "isConstructor": true,
                    "href": "package-boolean_selector_boolean_selector\/BooleanSelector\/BooleanSelector.parse.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory BooleanSelector.parse(String selector) = BooleanSelectorImpl.parse;<\/code><\/pre>\n    ",
                    "isDeprecated": false
                },
                {
                    "name": "union",
                    "type": "boolean_selector.BooleanSelector",
                    "desc": "<p>Returns a new <a href=\"package-boolean_selector_boolean_selector\/BooleanSelector-class.html\">BooleanSelector<\/a> that matches all inputs matched by either\n<a href=\"package-boolean_selector_boolean_selector\/BooleanSelector-class.html\">this<\/a> or <code>other<\/code>.<\/p>\n    ",
                    "static": false,
                    "memberOf": "boolean_selector.BooleanSelector",
                    "sig": "",
                    "params": [
                        {
                            "name": "other",
                            "type": "boolean_selector.BooleanSelector",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        }
                    ],
                    "isConstructor": false,
                    "href": "package-boolean_selector_boolean_selector\/BooleanSelector\/union.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">BooleanSelector union(BooleanSelector other);<\/code><\/pre>\n    ",
                    "isDeprecated": false
                },
                {
                    "name": "validate",
                    "type": "",
                    "desc": "<p>Throws a <a href=\"dart-core\/FormatException-class.html\">FormatException<\/a> if any variables are undefined.<\/p>\n<p>The <code>isDefined<\/code> function should return <code>true<\/code> for any variables that are\nconsidered valid, and <code>false<\/code> for any invalid or undefined variables.<\/p>\n    ",
                    "static": false,
                    "memberOf": "boolean_selector.BooleanSelector",
                    "sig": "",
                    "params": [
                        {
                            "name": "variable",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "variable",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        }
                    ],
                    "isConstructor": false,
                    "href": "package-boolean_selector_boolean_selector\/BooleanSelector\/validate.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void validate(bool isDefined(String variable));<\/code><\/pre>\n    ",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "props": [
                {
                    "type": "",
                    "href": "package-boolean_selector_boolean_selector\/BooleanSelector\/all-constant.html",
                    "desc": "<p>A selector that accepts all inputs.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const all = const All()\n\n<\/code><\/pre>\n    ",
                    "isDeprecated": false,
                    "name": "all",
                    "memberOf": "boolean_selector.BooleanSelector"
                },
                {
                    "type": "",
                    "href": "package-boolean_selector_boolean_selector\/BooleanSelector\/none-constant.html",
                    "desc": "<p>A selector that accepts no inputs.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const none = const None()\n\n<\/code><\/pre>\n    ",
                    "isDeprecated": false,
                    "name": "none",
                    "memberOf": "boolean_selector.BooleanSelector"
                },
                {
                    "name": "variables",
                    "type": "dart:core.Iterable<dart:core.String>",
                    "types": [
                        "dart:core.Iterable",
                        "dart:core.String"
                    ],
                    "desc": "<p>All the variables in this selector, in the order they appear.<\/p>\n        ",
                    "memberOf": "boolean_selector.BooleanSelector",
                    "isConstant": false,
                    "href": "package-boolean_selector_boolean_selector\/BooleanSelector\/variables.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Iterable&lt;String&gt; get variables;<\/code><\/pre>\n        ",
                    "isDeprecated": false
                }
            ],
            "isMixin": false,
            "isEnum": false,
            "isTypedef": false,
            "isConstant": false,
            "isAbstract": true,
            "implementors": [],
            "realImplementors": [],
            "cn": [],
            "href": "package-boolean_selector_boolean_selector\/BooleanSelector-class.html",
            "desc": "<p>A boolean expression that evaluates to <code>true<\/code> or <code>false<\/code> based on certain\ninputs.<\/p>\n<p>The syntax is mostly Dart's expression syntax restricted to boolean\noperations. See <a href=\"https:\/\/github.com\/dart-lang\/boolean_selector\/blob\/master\/README.md\">the README<\/a> for full details.<\/p>\n<p>Boolean selectors support structural equality. Two selectors that have the\nsame parsed structure are considered equal.<\/p>\n    ",
            "example": "",
            "isDeprecated": false,
            "dtype": "class",
            "shortname": "BooleanSelector"
        }
    ],
    "isFakeNamespace": false,
    "desc": "",
    "example": "",
    "isDeprecated": false
}