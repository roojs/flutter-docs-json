{
    "class": [
        {
            "desc": "<p>A useful utility class for implementing other matchers through inheritance.\nDerived classes should call the base constructor with a feature name and\ndescription, and an instance matcher, and should implement the\n<a href=\"package-matcher_matcher\/CustomMatcher\/featureValueOf.html\">featureValueOf<\/a> abstract method.<\/p>\n<p>The feature description will typically describe the item and the feature,\nwhile the feature name will just name the feature. For example, we may\nhave a Widget class where each Widget has a price; we could make a\n<a href=\"package-matcher_matcher\/CustomMatcher-class.html\">CustomMatcher<\/a> that can make assertions about prices with:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">class HasPrice extends CustomMatcher {\n  HasPrice(matcher) : super(\"Widget with price that is\", \"price\", matcher);\n  featureValueOf(actual) =&gt; actual.price;\n}\n<\/code><\/pre>\n<p>and then use this for example like:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">expect(inventoryItem, new HasPrice(greaterThan(0)));\n<\/code><\/pre>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-matcher_matcher\/CustomMatcher-class.html",
            "isAbstract": false,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "matcher",
            "name": "matcher.CustomMatcher",
            "shortname": "CustomMatcher",
            "extends": [
                "matcher.Matcher",
                "dart:core.Object"
            ],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [],
            "events": [],
            "methods": [
                {
                    "desc": "",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">CustomMatcher(this._featureDescription, this._featureName, matcher)\n    : this._matcher = wrapMatcher(matcher);<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/CustomMatcher\/CustomMatcher.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "CustomMatcher",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "matcher.CustomMatcher",
                    "params": [
                        {
                            "name": "_featureDescription",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "_featureName",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "matcher",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "<dynamic>"
                        }
                    ]
                },
                {
                    "desc": "<p>Builds a textual description of the matcher.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description describe(Description description) =&gt;\n    description.add(_featureDescription).add(' ').addDescriptionOf(_matcher);<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/CustomMatcher\/describe.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "describe",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.CustomMatcher",
                    "params": [
                        {
                            "name": "description",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "matcher.Description"
                        }
                    ]
                },
                {
                    "desc": "<p>Builds a textual description of a specific mismatch.<\/p>\n<p><code>item<\/code> is the value that was tested by <a href=\"package-matcher_matcher\/CustomMatcher\/matches.html\">matches<\/a>; <code>matchState<\/code> is\nthe <a href=\"dart-core\/Map-class.html\">Map<\/a> that was passed to and supplemented by <a href=\"package-matcher_matcher\/CustomMatcher\/matches.html\">matches<\/a>\nwith additional information about the mismatch, and <code>mismatchDescription<\/code>\nis the <a href=\"package-matcher_matcher\/Description-class.html\">Description<\/a> that is being built to describe the mismatch.<\/p>\n<p>A few matchers make use of the <code>verbose<\/code> flag to provide detailed\ninformation that is not typically included but can be of help in\ndiagnosing failures, such as stack traces.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description describeMismatch(\n    item, Description mismatchDescription, Map matchState, bool verbose) {\n  if (matchState['custom.exception'] != null) {\n    mismatchDescription\n        .add('threw ')\n        .addDescriptionOf(matchState['custom.exception'])\n        .add('\\n')\n        .add(matchState['custom.stack'].toString());\n    return mismatchDescription;\n  }\n\n  mismatchDescription\n      .add('has ')\n      .add(_featureName)\n      .add(' with value ')\n      .addDescriptionOf(matchState['custom.feature']);\n  var innerDescription = new StringDescription();\n\n  _matcher.describeMismatch(matchState['custom.feature'], innerDescription,\n      matchState['state'] as Map, verbose);\n\n  if (innerDescription.length &gt; 0) {\n    mismatchDescription.add(' which ').add(innerDescription.toString());\n  }\n  return mismatchDescription;\n}<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/CustomMatcher\/describeMismatch.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "describeMismatch",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.CustomMatcher",
                    "params": [
                        {
                            "name": "item",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        },
                        {
                            "name": "matchState",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Map"
                        },
                        {
                            "name": "mismatchDescription",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "matcher.Description"
                        },
                        {
                            "name": "verbose",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.bool"
                        }
                    ]
                },
                {
                    "desc": "<p>Override this to extract the interesting feature.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Object featureValueOf(actual) =&gt; actual;<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/CustomMatcher\/featureValueOf.html",
                    "isDeprecated": false,
                    "type": "dart:core.Object",
                    "name": "featureValueOf",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.CustomMatcher",
                    "params": [
                        {
                            "name": "actual",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                },
                {
                    "desc": "<p>Does the matching of the actual vs expected values.<\/p>\n<p><code>item<\/code> is the actual value. <code>matchState<\/code> can be supplied\nand may be used to add details about the mismatch that are too\ncostly to determine in <a href=\"package-matcher_matcher\/CustomMatcher\/describeMismatch.html\">describeMismatch<\/a>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool matches(item, Map matchState) {\n  try {\n    var f = featureValueOf(item);\n    if (_matcher.matches(f, matchState)) return true;\n    addStateInfo(matchState, {'custom.feature': f});\n  } catch (exception, stack) {\n    addStateInfo(matchState, {\n      'custom.exception': exception.toString(),\n      'custom.stack': new Chain.forTrace(stack)\n          .foldFrames(\n              (frame) =&gt;\n                  frame.package == 'test' ||\n                  frame.package == 'stream_channel' ||\n                  frame.package == 'matcher',\n              terse: true)\n          .toString()\n    });\n  }\n  return false;\n}<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/CustomMatcher\/matches.html",
                    "isDeprecated": false,
                    "type": "dart:core.bool",
                    "name": "matches",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.CustomMatcher",
                    "params": [
                        {
                            "name": "item",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        },
                        {
                            "name": "matchState",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Map"
                        }
                    ]
                }
            ],
            "props": []
        },
        {
            "desc": "<p>Matchers build up their error messages by appending to Description objects.<\/p>\n<p>This interface is implemented by StringDescription.<\/p>\n<p>This interface is unlikely to need other implementations, but could be\nuseful to replace in some cases - e.g. language conversion.<\/p>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-matcher_matcher\/Description-class.html",
            "isAbstract": true,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "matcher",
            "name": "matcher.Description",
            "shortname": "Description",
            "extends": [],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [],
            "events": [],
            "methods": [
                {
                    "desc": "",
                    "example": "",
                    "href": "package-matcher_matcher\/Description\/Description.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "Description",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "matcher.Description",
                    "params": []
                },
                {
                    "desc": "<p>This is used to add arbitrary text to the description.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description add(String text);<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/Description\/add.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "add",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.Description",
                    "params": [
                        {
                            "name": "text",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        }
                    ]
                },
                {
                    "desc": "<p>This is used to add a description of an <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a> <code>list<\/code>,\nwith appropriate <code>start<\/code> and <code>end<\/code> markers and inter-element <code>separator<\/code>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description addAll(String start, String separator, String end, Iterable list);<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/Description\/addAll.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "addAll",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.Description",
                    "params": [
                        {
                            "name": "end",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "list",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Iterable"
                        },
                        {
                            "name": "separator",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "start",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        }
                    ]
                },
                {
                    "desc": "<p>This is used to add a meaningful description of a value.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description addDescriptionOf(value);<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/Description\/addDescriptionOf.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "addDescriptionOf",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.Description",
                    "params": [
                        {
                            "name": "value",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                },
                {
                    "desc": "<p>Change the value of the description.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description replace(String text);<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/Description\/replace.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "replace",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.Description",
                    "params": [
                        {
                            "name": "text",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        }
                    ]
                }
            ],
            "props": [
                {
                    "desc": "",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get length;<\/code><\/pre>\n        ",
                    "href": "package-matcher_matcher\/Description\/length.html",
                    "name": "length",
                    "isDeprecated": false,
                    "type": "dart:core.int",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "matcher.Description",
                    "params": []
                }
            ]
        },
        {
            "desc": "<p>The base class for all matchers.<\/p>\n<p><a href=\"package-matcher_matcher\/Matcher\/matches.html\">matches<\/a> and <a href=\"package-matcher_matcher\/Matcher\/describe.html\">describe<\/a> must be implemented by subclasses.<\/p>\n<p>Subclasses can override <a href=\"package-matcher_matcher\/Matcher\/describeMismatch.html\">describeMismatch<\/a> if a more specific description is\nrequired when the matcher fails.<\/p>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-matcher_matcher\/Matcher-class.html",
            "isAbstract": true,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "matcher",
            "name": "matcher.Matcher",
            "shortname": "Matcher",
            "extends": [],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [
                "matcher.CustomMatcher",
                "matcher.TypeMatcher",
                "matcher.isInstanceOf",
                "test_api.Throws"
            ],
            "events": [],
            "methods": [
                {
                    "desc": "",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Matcher();<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/Matcher\/Matcher.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "Matcher",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "matcher.Matcher",
                    "params": []
                },
                {
                    "desc": "<p>Builds a textual description of the matcher.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description describe(Description description);<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/Matcher\/describe.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "describe",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.Matcher",
                    "params": [
                        {
                            "name": "description",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "matcher.Description"
                        }
                    ]
                },
                {
                    "desc": "<p>Builds a textual description of a specific mismatch.<\/p>\n<p><code>item<\/code> is the value that was tested by <a href=\"package-matcher_matcher\/Matcher\/matches.html\">matches<\/a>; <code>matchState<\/code> is\nthe <a href=\"dart-core\/Map-class.html\">Map<\/a> that was passed to and supplemented by <a href=\"package-matcher_matcher\/Matcher\/matches.html\">matches<\/a>\nwith additional information about the mismatch, and <code>mismatchDescription<\/code>\nis the <a href=\"package-matcher_matcher\/Description-class.html\">Description<\/a> that is being built to describe the mismatch.<\/p>\n<p>A few matchers make use of the <code>verbose<\/code> flag to provide detailed\ninformation that is not typically included but can be of help in\ndiagnosing failures, such as stack traces.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description describeMismatch(item, Description mismatchDescription,\n        Map matchState, bool verbose) =&gt;\n    mismatchDescription;<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/Matcher\/describeMismatch.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "describeMismatch",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.Matcher",
                    "params": [
                        {
                            "name": "item",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        },
                        {
                            "name": "matchState",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Map"
                        },
                        {
                            "name": "mismatchDescription",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "matcher.Description"
                        },
                        {
                            "name": "verbose",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.bool"
                        }
                    ]
                },
                {
                    "desc": "<p>Does the matching of the actual vs expected values.<\/p>\n<p><code>item<\/code> is the actual value. <code>matchState<\/code> can be supplied\nand may be used to add details about the mismatch that are too\ncostly to determine in <a href=\"package-matcher_matcher\/Matcher\/describeMismatch.html\">describeMismatch<\/a>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool matches(item, Map matchState);<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/Matcher\/matches.html",
                    "isDeprecated": false,
                    "type": "dart:core.bool",
                    "name": "matches",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.Matcher",
                    "params": [
                        {
                            "name": "item",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        },
                        {
                            "name": "matchState",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Map"
                        }
                    ]
                }
            ],
            "props": []
        },
        {
            "desc": "<p>The default implementation of <a href=\"package-matcher_matcher\/Description-class.html\">Description<\/a>. This should rarely need\nsubstitution, although conceivably it is a place where other languages\ncould be supported.<\/p>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-matcher_matcher\/StringDescription-class.html",
            "isAbstract": false,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "matcher",
            "name": "matcher.StringDescription",
            "shortname": "StringDescription",
            "extends": [],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [],
            "events": [],
            "methods": [
                {
                    "desc": "<p>Initialize the description with initial contents <code>init<\/code>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">StringDescription([String init = '']) {\n  _out.write(init);\n}<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/StringDescription\/StringDescription.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "StringDescription",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "matcher.StringDescription",
                    "params": [
                        {
                            "name": "init",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "dart:core.String"
                        }
                    ]
                },
                {
                    "desc": "<p>Append <code>text<\/code> to the description.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description add(String text) {\n  _out.write(text);\n  return this;\n}<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/StringDescription\/add.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "add",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.StringDescription",
                    "params": [
                        {
                            "name": "text",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        }
                    ]
                },
                {
                    "desc": "<p>Append an <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a> <code>list<\/code> of objects to the description, using the\nspecified <code>separator<\/code> and framing the list with <code>start<\/code>\nand <code>end<\/code>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description addAll(\n    String start, String separator, String end, Iterable list) {\n  var separate = false;\n  add(start);\n  for (var item in list) {\n    if (separate) {\n      add(separator);\n    }\n    addDescriptionOf(item);\n    separate = true;\n  }\n  add(end);\n  return this;\n}<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/StringDescription\/addAll.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "addAll",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.StringDescription",
                    "params": [
                        {
                            "name": "end",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "list",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Iterable"
                        },
                        {
                            "name": "separator",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "start",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        }
                    ]
                },
                {
                    "desc": "<p>Appends a description of <code>value<\/code>. If it is an IMatcher use its\ndescribe method; if it is a string use its literal value after\nescaping any embedded control characters; otherwise use its\ntoString() value and wrap it in angular \"quotes\".<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description addDescriptionOf(value) {\n  if (value is Matcher) {\n    value.describe(this);\n  } else {\n    add(prettyPrint(value, maxLineLength: 80, maxItems: 25));\n  }\n  return this;\n}<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/StringDescription\/addDescriptionOf.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "addDescriptionOf",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.StringDescription",
                    "params": [
                        {
                            "name": "value",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<dynamic>"
                        }
                    ]
                },
                {
                    "desc": "<p>Change the value of the description.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description replace(String text) {\n  _out.clear();\n  return add(text);\n}<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/StringDescription\/replace.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "replace",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.StringDescription",
                    "params": [
                        {
                            "name": "text",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        }
                    ]
                },
                {
                    "desc": "<p>Get the description as a string.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() =&gt; _out.toString();<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/StringDescription\/toString.html",
                    "isDeprecated": false,
                    "type": "dart:core.String",
                    "name": "toString",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.StringDescription",
                    "params": []
                }
            ],
            "props": [
                {
                    "desc": "",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get length =&gt; _out.length;<\/code><\/pre>\n        ",
                    "href": "package-matcher_matcher\/StringDescription\/length.html",
                    "name": "length",
                    "isDeprecated": false,
                    "type": "dart:core.int",
                    "dtype": "property",
                    "isStatic": false,
                    "isConstant": false,
                    "memberOf": "matcher.StringDescription",
                    "params": []
                }
            ]
        },
        {
            "desc": "<p>A <a href=\"package-matcher_matcher\/Matcher-class.html\">Matcher<\/a> subclass that supports validating the <a href=\"dart-core\/Type-class.html\">Type<\/a> of the target\nobject.<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">expect(shouldBeDuration, new TypeMatcher&lt;Duration&gt;());\n<\/code><\/pre>\n<p>If you want to further validate attributes of the specified <a href=\"dart-core\/Type-class.html\">Type<\/a>, use the\n<a href=\"package-matcher_matcher\/TypeMatcher\/having.html\">having<\/a> function.<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">void shouldThrowRangeError(int value) {\n  throw new RangeError.range(value, 10, 20);\n}\n\nexpect(\n    () =&gt; shouldThrowRangeError(5),\n    throwsA(const TypeMatcher&lt;RangeError&gt;()\n        .having((e) =&gt; e.start, 'start', greaterThanOrEqualTo(10))\n        .having((e) =&gt; e.end, 'end', lessThanOrEqualTo(20))));\n<\/code><\/pre>\n<p>Notice that you can chain multiple calls to <a href=\"package-matcher_matcher\/TypeMatcher\/having.html\">having<\/a> to verify multiple\naspects of an object.<\/p>\n<p>Note: All of the top-level <code>isType<\/code> matchers exposed by this package are\ninstances of <a href=\"package-matcher_matcher\/TypeMatcher-class.html\">TypeMatcher<\/a>, so you can use the <a href=\"package-matcher_matcher\/TypeMatcher\/having.html\">having<\/a> function without\ncreating your own instance.<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">expect(\n    () =&gt; shouldThrowRangeError(5),\n    throwsA(isRangeError\n        .having((e) =&gt; e.start, 'start', greaterThanOrEqualTo(10))\n        .having((e) =&gt; e.end, 'end', lessThanOrEqualTo(20))));\n<\/code><\/pre>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-matcher_matcher\/TypeMatcher-class.html",
            "isAbstract": false,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "matcher",
            "name": "matcher.TypeMatcher",
            "shortname": "TypeMatcher",
            "extends": [
                "matcher.Matcher",
                "dart:core.Object"
            ],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [
                "matcher.isInstanceOf"
            ],
            "events": [],
            "methods": [
                {
                    "desc": "",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const TypeMatcher(\n    [@Deprecated('Provide a type argument to TypeMatcher and omit the name. '\n        'This argument will be removed in the next release.')\n        String name])\n    : this._name =\n          \/\/ ignore: deprecated_member_use\n          name;<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/TypeMatcher\/TypeMatcher.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "TypeMatcher",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "matcher.TypeMatcher",
                    "params": [
                        {
                            "name": "name",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": true,
                            "type": "dart:core.String"
                        }
                    ]
                },
                {
                    "desc": "<p>Builds a textual description of the matcher.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description describe(Description description) {\n  var name = _name ?? _stripDynamic(T);\n  return description.add(\"&lt;Instance of '$name'&gt;\");\n}<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/TypeMatcher\/describe.html",
                    "isDeprecated": false,
                    "type": "matcher.Description",
                    "name": "describe",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.TypeMatcher",
                    "params": [
                        {
                            "name": "description",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "matcher.Description"
                        }
                    ]
                },
                {
                    "desc": "<p>Returns a new <a href=\"package-matcher_matcher\/TypeMatcher-class.html\">TypeMatcher<\/a> that validates the existing type as well as\na specific <code>feature<\/code> of the object with the provided <code>matcher<\/code>.<\/p>\n<p>Provides a human-readable <code>description<\/code> of the <code>feature<\/code> to make debugging\nfailures easier.<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">\/\/\/ Validates that the object is a [RangeError] with a message containing\n\/\/\/ the string 'details' and `start` and `end` properties that are `null`.\nfinal _rangeMatcher = isRangeError\n   .having((e) =&gt; e.message, 'message', contains('details'))\n   .having((e) =&gt; e.start, 'start', isNull)\n   .having((e) =&gt; e.end, 'end', isNull);\n<\/code><\/pre>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">TypeMatcher&lt;T&gt; having(\n        Object feature(T source), String description, Object matcher) =&gt;\n    new HavingMatcher(this, description, feature, matcher);<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/TypeMatcher\/having.html",
                    "isDeprecated": false,
                    "type": "matcher.TypeMatcher",
                    "name": "having",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.TypeMatcher",
                    "params": [
                        {
                            "name": "description",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.String"
                        },
                        {
                            "name": "matcher",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Object"
                        },
                        {
                            "name": "source",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "<T>"
                        }
                    ]
                },
                {
                    "desc": "<p>Does the matching of the actual vs expected values.<\/p>\n<p><code>item<\/code> is the actual value. <code>matchState<\/code> can be supplied\nand may be used to add details about the mismatch that are too\ncostly to determine in <a href=\"package-matcher_matcher\/Matcher\/describeMismatch.html\">describeMismatch<\/a>.<\/p>\n    ",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool matches(Object item, Map matchState) =&gt; item is T;<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/TypeMatcher\/matches.html",
                    "isDeprecated": false,
                    "type": "dart:core.bool",
                    "name": "matches",
                    "dtype": "method",
                    "isConstructor": false,
                    "static": false,
                    "memberOf": "matcher.TypeMatcher",
                    "params": [
                        {
                            "name": "item",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Object"
                        },
                        {
                            "name": "matchState",
                            "desc": "",
                            "example": "",
                            "href": "",
                            "isDeprecated": false,
                            "isOptional": false,
                            "type": "dart:core.Map"
                        }
                    ]
                }
            ],
            "props": []
        },
        {
            "desc": "<p><strong>DEPRECATED<\/strong> Use <a href=\"package-matcher_matcher\/TypeMatcher-class.html\">TypeMatcher<\/a> instead.<\/p>\n<p>Returns a matcher that matches if an object is an instance\nof <code>T<\/code> (or a subtype).<\/p>\n    ",
            "dtype": "class",
            "example": "",
            "href": "package-matcher_matcher\/isInstanceOf-class.html",
            "isAbstract": false,
            "isConstant": false,
            "isDeprecated": false,
            "memberOf": "matcher",
            "name": "matcher.isInstanceOf",
            "shortname": "isInstanceOf",
            "extends": [
                "matcher.TypeMatcher",
                "matcher.Matcher",
                "dart:core.Object"
            ],
            "is_enum": false,
            "is_mixin": false,
            "realImplementors": [],
            "events": [],
            "methods": [
                {
                    "desc": "",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const isInstanceOf();<\/code><\/pre>\n    ",
                    "href": "package-matcher_matcher\/isInstanceOf\/isInstanceOf.html",
                    "isDeprecated": false,
                    "type": "",
                    "name": "isInstanceOf",
                    "dtype": "constructor",
                    "isConstructor": true,
                    "static": false,
                    "memberOf": "matcher.isInstanceOf",
                    "params": []
                }
            ],
            "props": []
        }
    ],
    "mixin": [],
    "enum": [],
    "typedef": []
}