{
    "name": "error_code",
    "href": "package-json_rpc_2_error_code\/package-json_rpc_2_error_code-library.html",
    "cn": [
        {
            "type": "",
            "href": "package-json_rpc_2_error_code\/INTERNAL_ERROR-constant.html",
            "desc": "",
            "example": "",
            "isDeprecated": false,
            "name": "INTERNAL_ERROR",
            "memberOf": "error_code"
        },
        {
            "type": "",
            "href": "package-json_rpc_2_error_code\/INVALID_PARAMS-constant.html",
            "desc": "",
            "example": "",
            "isDeprecated": false,
            "name": "INVALID_PARAMS",
            "memberOf": "error_code"
        },
        {
            "type": "",
            "href": "package-json_rpc_2_error_code\/INVALID_REQUEST-constant.html",
            "desc": "",
            "example": "",
            "isDeprecated": false,
            "name": "INVALID_REQUEST",
            "memberOf": "error_code"
        },
        {
            "type": "",
            "href": "package-json_rpc_2_error_code\/METHOD_NOT_FOUND-constant.html",
            "desc": "",
            "example": "",
            "isDeprecated": false,
            "name": "METHOD_NOT_FOUND",
            "memberOf": "error_code"
        },
        {
            "type": "",
            "href": "package-json_rpc_2_error_code\/PARSE_ERROR-constant.html",
            "desc": "",
            "example": "",
            "isDeprecated": false,
            "name": "PARSE_ERROR",
            "memberOf": "error_code"
        },
        {
            "type": "",
            "href": "package-json_rpc_2_error_code\/SERVER_ERROR-constant.html",
            "desc": "",
            "example": "",
            "isDeprecated": false,
            "name": "SERVER_ERROR",
            "memberOf": "error_code"
        },
        {
            "name": "name",
            "type": "dart:core.String",
            "desc": "<p>Returns a human-readable name for <code>errorCode<\/code> if it's one specified by the\nJSON-RPC 2.0 spec.<\/p>\n<p>If <code>errorCode<\/code> isn't defined in the JSON-RPC 2.0 spec, returns null.<\/p>\n    ",
            "static": false,
            "memberOf": "error_code",
            "sig": "",
            "params": [
                {
                    "name": "errorCode",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "errorCode",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-json_rpc_2_error_code\/name.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String name(int errorCode) {\n  switch (errorCode) {\n    case PARSE_ERROR:\n      return \"parse error\";\n    case INVALID_REQUEST:\n      return \"invalid request\";\n    case METHOD_NOT_FOUND:\n      return \"method not found\";\n    case INVALID_PARAMS:\n      return \"invalid parameters\";\n    case INTERNAL_ERROR:\n      return \"internal error\";\n    default:\n      return null;\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "isFakeNamespace": false,
    "desc": "",
    "example": "",
    "isDeprecated": false
}