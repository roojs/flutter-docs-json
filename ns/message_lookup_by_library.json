{
    "name": "message_lookup_by_library",
    "href": "message_lookup_by_library\/message_lookup_by_library-library.html",
    "cn": [
        {
            "name": "message_lookup_by_library.CompositeMessageLookup",
            "extends": [],
            "memberOf": "message_lookup_by_library",
            "events": [],
            "methods": [
                {
                    "name": "CompositeMessageLookup",
                    "type": "",
                    "desc": "",
                    "static": false,
                    "memberOf": "message_lookup_by_library.CompositeMessageLookup",
                    "sig": "",
                    "params": [],
                    "isConstructor": true,
                    "href": "message_lookup_by_library\/CompositeMessageLookup\/CompositeMessageLookup.html",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "addLocale",
                    "type": "",
                    "desc": "<p>If we do not already have a locale for <code>localeName<\/code> then\n<code>findLocale<\/code> will be called and the result stored as the lookup\nmechanism for that locale.<\/p>\n    ",
                    "static": false,
                    "memberOf": "message_lookup_by_library.CompositeMessageLookup",
                    "sig": "",
                    "params": [
                        {
                            "name": "localeName",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "findLocale",
                            "type": "dart:core.Function",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        }
                    ],
                    "isConstructor": false,
                    "href": "message_lookup_by_library\/CompositeMessageLookup\/addLocale.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addLocale(String localeName, Function findLocale) {\n  if (localeExists(localeName)) return;\n  var canonical = Intl.canonicalizedLocale(localeName);\n  var newLocale = findLocale(canonical);\n  if (newLocale != null) {\n    availableMessages[localeName] = newLocale;\n    availableMessages[canonical] = newLocale;\n    \/\/ If there was already a failed lookup for [newLocale], null the cache.\n    if (_lastLocale == newLocale) {\n      _lastLocale = null;\n      _lastLookup = null;\n    }\n  }\n}<\/code><\/pre>\n    ",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "localeExists",
                    "type": "dart:core.bool",
                    "desc": "<p>Return true if we have a message lookup for <code>localeName<\/code>.<\/p>\n    ",
                    "static": false,
                    "memberOf": "message_lookup_by_library.CompositeMessageLookup",
                    "sig": "",
                    "params": [
                        {
                            "name": "localeName",
                            "type": "",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false,
                            "types": []
                        }
                    ],
                    "isConstructor": false,
                    "href": "message_lookup_by_library\/CompositeMessageLookup\/localeExists.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool localeExists(localeName) =&gt; availableMessages.containsKey(localeName);<\/code><\/pre>\n    ",
                    "isDeprecated": false
                },
                {
                    "name": "lookupMessage",
                    "type": "dart:core.String",
                    "desc": "<p>Look up the message with the given <code>name<\/code> and <code>locale<\/code> and return the\ntranslated version with the values in <code>args<\/code> interpolated.  If nothing is\nfound, return the result of <code>ifAbsent<\/code> or <code>message_str<\/code>. The\n<code>desc<\/code> and <code>examples<\/code> parameters are ignored<\/p>\n    ",
                    "static": false,
                    "memberOf": "message_lookup_by_library.CompositeMessageLookup",
                    "sig": "",
                    "params": [
                        {
                            "name": "message_str",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "locale",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "name",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "args",
                            "type": "dart:core.List",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "meaning",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "ifAbsent",
                            "type": "",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false,
                            "types": []
                        }
                    ],
                    "isConstructor": false,
                    "href": "message_lookup_by_library\/CompositeMessageLookup\/lookupMessage.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String lookupMessage(\n    String message_str, String locale, String name, List args, String meaning,\n    {MessageIfAbsent ifAbsent}) {\n  \/\/ If passed null, use the default.\n  var knownLocale = locale ?? Intl.getCurrentLocale();\n  var messages = (knownLocale == _lastLocale)\n      ? _lastLookup\n      : _lookupMessageCatalog(knownLocale);\n  \/\/ If we didn't find any messages for this locale, use the original string,\n  \/\/ faking interpolations if necessary.\n  if (messages == null) {\n    return ifAbsent == null ? message_str : ifAbsent(message_str, args);\n  }\n  return messages.lookupMessage(message_str, locale, name, args, meaning,\n      ifAbsent: ifAbsent);\n}<\/code><\/pre>\n    ",
                    "isDeprecated": false
                }
            ],
            "props": [
                {
                    "name": "availableMessages",
                    "type": "dart:core.Map<dart:core.String<message_lookup_by_library.MessageLookupByLibrary>>",
                    "types": [
                        "dart:core.Map",
                        "dart:core.String",
                        "message_lookup_by_library.MessageLookupByLibrary"
                    ],
                    "desc": "<p>A map from locale names to the corresponding lookups.<\/p>\n        ",
                    "memberOf": "message_lookup_by_library.CompositeMessageLookup",
                    "isConstant": false,
                    "href": "message_lookup_by_library\/CompositeMessageLookup\/availableMessages.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Map&lt;String, MessageLookupByLibrary&gt; availableMessages = new Map()\n\n<\/code><\/pre>\n        ",
                    "isDeprecated": false
                }
            ],
            "isMixin": false,
            "isEnum": false,
            "isTypedef": false,
            "isConstant": false,
            "isAbstract": false,
            "implementors": [],
            "realImplementors": [],
            "cn": [],
            "href": "message_lookup_by_library\/CompositeMessageLookup-class.html",
            "desc": "<p>This is a message lookup mechanism that delegates to one of a collection\nof individual <a href=\"message_lookup_by_library\/MessageLookupByLibrary-class.html\">MessageLookupByLibrary<\/a> instances.<\/p>\n    ",
            "example": "",
            "isDeprecated": false,
            "dtype": "class",
            "shortname": "CompositeMessageLookup"
        },
        {
            "name": "message_lookup_by_library.MessageLookupByLibrary",
            "extends": [],
            "memberOf": "message_lookup_by_library",
            "events": [],
            "methods": [
                {
                    "name": "MessageLookupByLibrary",
                    "type": "",
                    "desc": "",
                    "static": false,
                    "memberOf": "message_lookup_by_library.MessageLookupByLibrary",
                    "sig": "",
                    "params": [],
                    "isConstructor": true,
                    "href": "message_lookup_by_library\/MessageLookupByLibrary\/MessageLookupByLibrary.html",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "operator []",
                    "type": "",
                    "desc": "<p>Return our message with the given name<\/p>\n    ",
                    "static": false,
                    "memberOf": "message_lookup_by_library.MessageLookupByLibrary",
                    "sig": "",
                    "params": [
                        {
                            "name": "messageName",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        }
                    ],
                    "isConstructor": false,
                    "href": "message_lookup_by_library\/MessageLookupByLibrary\/operator_get.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">operator [](String messageName) =&gt; messages[messageName];<\/code><\/pre>\n    ",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "evaluateMessage",
                    "type": "dart:core.String",
                    "desc": "<p>Evaluate the translated message and return the translated string.<\/p>\n    ",
                    "static": false,
                    "memberOf": "message_lookup_by_library.MessageLookupByLibrary",
                    "sig": "",
                    "params": [
                        {
                            "name": "translation",
                            "type": "",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false,
                            "types": []
                        },
                        {
                            "name": "args",
                            "type": "dart:core.List",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        }
                    ],
                    "isConstructor": false,
                    "href": "message_lookup_by_library\/MessageLookupByLibrary\/evaluateMessage.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String evaluateMessage(translation, List args) {\n  return Function.apply(translation, args);\n}<\/code><\/pre>\n    ",
                    "isDeprecated": false
                },
                {
                    "name": "lookupMessage",
                    "type": "dart:core.String",
                    "desc": "<p>Return the localized version of a message. We are passed the original\nversion of the message, which consists of a\n<code>message_str<\/code> that will be translated, and which may be interpolated\nbased on one or more variables, a <code>desc<\/code> providing a description of usage\nfor the <code>message_str<\/code>, and a map of <code>examples<\/code> for each data element to be\nsubstituted into the message.<\/p>\n<p>For example, if message=\"Hello, $name\", then\nexamples = {'name': 'Sparky'}. If not using the user's default locale, or\nif the locale is not easily detectable, explicitly pass <code>locale<\/code>.<\/p>\n<p>The values of <code>desc<\/code> and <code>examples<\/code> are not used at run-time but are only\nmade available to the translators, so they MUST be simple Strings\navailable at compile time: no String interpolation or concatenation.  The\nexpected usage of this is inside a function that takes as parameters the\nvariables used in the interpolated string.<\/p>\n<p>Ultimately, the information about the enclosing function and its arguments\nwill be extracted automatically but for the time being it must be passed\nexplicitly in the <code>name<\/code> and <code>args<\/code> arguments.<\/p>\n    ",
                    "static": false,
                    "memberOf": "message_lookup_by_library.MessageLookupByLibrary",
                    "sig": "",
                    "params": [
                        {
                            "name": "message_str",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "locale",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "name",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "args",
                            "type": "dart:core.List",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "meaning",
                            "type": "dart:core.String",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false
                        },
                        {
                            "name": "ifAbsent",
                            "type": "",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false,
                            "types": []
                        }
                    ],
                    "isConstructor": false,
                    "href": "message_lookup_by_library\/MessageLookupByLibrary\/lookupMessage.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String lookupMessage(\n    String message_str, String locale, String name, List args, String meaning,\n    {MessageIfAbsent ifAbsent}) {\n  var notFound = false;\n  var actualName = computeMessageName(name, message_str, meaning);\n  if (actualName == null) notFound = true;\n  var translation = this[actualName];\n  notFound = notFound || (translation == null);\n  if (notFound) {\n    return ifAbsent == null ? message_str : ifAbsent(message_str, args);\n  } else {\n    args = args ?? const [];\n    return evaluateMessage(translation, args);\n  }\n}<\/code><\/pre>\n    ",
                    "isDeprecated": false
                },
                {
                    "name": "simpleMessage",
                    "type": "",
                    "desc": "<p>Return a function that returns the given string.\nAn optimization for dart2js, used from the generated code.<\/p>\n    ",
                    "static": false,
                    "memberOf": "message_lookup_by_library.MessageLookupByLibrary",
                    "sig": "",
                    "params": [
                        {
                            "name": "translatedString",
                            "type": "",
                            "desc": "",
                            "isOptional": true,
                            "href": "",
                            "example": "",
                            "isDeprecated": false,
                            "types": []
                        }
                    ],
                    "isConstructor": false,
                    "href": "message_lookup_by_library\/MessageLookupByLibrary\/simpleMessage.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static simpleMessage(translatedString) =&gt; () =&gt; translatedString;<\/code><\/pre>\n    ",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "toString",
                    "type": "dart:core.String",
                    "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
                    "static": false,
                    "memberOf": "message_lookup_by_library.MessageLookupByLibrary",
                    "sig": "",
                    "params": [],
                    "isConstructor": false,
                    "href": "message_lookup_by_library\/MessageLookupByLibrary\/toString.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">toString() =&gt; localeName;<\/code><\/pre>\n    ",
                    "isDeprecated": false
                }
            ],
            "props": [
                {
                    "name": "localeName",
                    "type": "dart:core.String",
                    "types": [],
                    "desc": "<p>Subclasses should override this to return their locale, e.g. 'en_US'<\/p>\n        ",
                    "memberOf": "message_lookup_by_library.MessageLookupByLibrary",
                    "isConstant": false,
                    "href": "message_lookup_by_library\/MessageLookupByLibrary\/localeName.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get localeName;<\/code><\/pre>\n        ",
                    "isDeprecated": false
                },
                {
                    "name": "messages",
                    "type": "dart:core.Map<dart:core.String>",
                    "types": [
                        "dart:core.Map",
                        "dart:core.String"
                    ],
                    "desc": "<p>Subclasses should override this to return a list of their message\nimplementations. In this class these are functions, but subclasses may\nimplement them differently.<\/p>\n        ",
                    "memberOf": "message_lookup_by_library.MessageLookupByLibrary",
                    "isConstant": false,
                    "href": "message_lookup_by_library\/MessageLookupByLibrary\/messages.html",
                    "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Map&lt;String, dynamic&gt; get messages;<\/code><\/pre>\n        ",
                    "isDeprecated": false
                }
            ],
            "isMixin": false,
            "isEnum": false,
            "isTypedef": false,
            "isConstant": false,
            "isAbstract": true,
            "implementors": [],
            "realImplementors": [],
            "cn": [],
            "href": "message_lookup_by_library\/MessageLookupByLibrary-class.html",
            "desc": "<p>This provides an abstract class for messages looked up in generated code.\nEach locale will have a separate subclass of this class with its set of\nmessages. See generate_localized.dart.<\/p>\n    ",
            "example": "",
            "isDeprecated": false,
            "dtype": "class",
            "shortname": "MessageLookupByLibrary"
        }
    ],
    "isFakeNamespace": false,
    "desc": "",
    "example": "",
    "isDeprecated": false
}