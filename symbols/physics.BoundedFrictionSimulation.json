{
    "desc": "<p>A <a href=\"physics\/FrictionSimulation-class.html\">FrictionSimulation<\/a> that clamps the modeled particle to a specific range\nof values.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "physics\/BoundedFrictionSimulation-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "physics",
    "name": "physics.BoundedFrictionSimulation",
    "shortname": "BoundedFrictionSimulation",
    "extends": [
        "physics.FrictionSimulation",
        "physics.Simulation",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a <a href=\"physics\/BoundedFrictionSimulation-class.html\">BoundedFrictionSimulation<\/a> with the given arguments, namely:\nthe fluid drag coefficient, a unitless value; the initial position, in the\nsame length units as used for <a href=\"physics\/BoundedFrictionSimulation\/x.html\">x<\/a>; the initial velocity, in the same\nvelocity units as used for <a href=\"physics\/FrictionSimulation\/dx.html\">dx<\/a>, the minimum value for the position, and\nthe maximum value for the position. The minimum and maximum values must be\nin the same units as the initial position, and the initial position must\nbe within the given range.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">BoundedFrictionSimulation(\n  double drag,\n  double position,\n  double velocity,\n  this._minX,\n  this._maxX,\n) : assert(position.clamp(_minX, _maxX) == position),\n    super(drag, position, velocity);<\/code><\/pre>\n    ",
            "href": "physics\/BoundedFrictionSimulation\/BoundedFrictionSimulation.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "physics.BoundedFrictionSimulation",
            "params": [
                {
                    "name": "_maxX",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "_minX",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "drag",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "position",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "velocity",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Whether the simulation is \"done\" at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool isDone(double time) {\n  return super.isDone(time) ||\n    (x(time) - _minX).abs() &lt; tolerance.distance ||\n    (x(time) - _maxX).abs() &lt; tolerance.distance;\n}<\/code><\/pre>\n    ",
            "href": "physics\/BoundedFrictionSimulation\/isDone.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "physics.BoundedFrictionSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>The position of the object in the simulation at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble x(double time) {\n  return super.x(time).clamp(_minX, _maxX);\n}<\/code><\/pre>\n    ",
            "href": "physics\/BoundedFrictionSimulation\/x.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "physics.BoundedFrictionSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": []
}