{
    "desc": "<p>An enum describing the type of modifier key that is being pressed.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"services\/RawKeyEventData\/isModifierPressed.html\">RawKeyEventData.isModifierPressed<\/a>, which accepts this enum as an\nargument.<\/li><\/ul>",
    "dtype": "enum",
    "example": "",
    "href": "services\/ModifierKey-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "services",
    "name": "services.ModifierKey",
    "shortname": "ModifierKey",
    "extends": [],
    "is_enum": true,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [],
    "props": [
        {
            "desc": "\n          <p>The ALT modifier key.<\/p>\n<p>Typically, there are two of these.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const ModifierKey(2)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "altModifier",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.ModifierKey",
            "params": []
        },
        {
            "desc": "\n          <p>The CAPS LOCK modifier key.<\/p>\n<p>Typically, there is one of these. Only shown as \"pressed\" when the caps\nlock is on, so on a key up when the mode is turned on, on each key press\nwhen it's enabled, and on a key down when it is turned off.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const ModifierKey(4)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "capsLockModifier",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.ModifierKey",
            "params": []
        },
        {
            "desc": "\n          <p>The CTRL modifier key.<\/p>\n<p>Typically, there are two of these.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const ModifierKey(0)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "controlModifier",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.ModifierKey",
            "params": []
        },
        {
            "desc": "\n          <p>The FUNCTION (Fn) modifier key.<\/p>\n<p>Typically, there is one of these.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const ModifierKey(7)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "functionModifier",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.ModifierKey",
            "params": []
        },
        {
            "desc": "\n          <p>The META modifier key.<\/p>\n<p>Typically, there are two of these. This is, for example, the Windows key\non Windows (\u229e), the Command (\u2318) key on macOS and iOS, and the Search (\ud83d\udd0d)\nkey on Android.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const ModifierKey(3)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "metaModifier",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.ModifierKey",
            "params": []
        },
        {
            "desc": "\n          <p>The NUM LOCK modifier key.<\/p>\n<p>Typically, there is one of these. Only shown as \"pressed\" when the num\nlock is on, so on a key up when the mode is turned on, on each key press\nwhen it's enabled, and on a key down when it is turned off.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const ModifierKey(5)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "numLockModifier",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.ModifierKey",
            "params": []
        },
        {
            "desc": "\n          <p>The SCROLL LOCK modifier key.<\/p>\n<p>Typically, there is one of these.  Only shown as \"pressed\" when the scroll\nlock is on, so on a key up when the mode is turned on, on each key press\nwhen it's enabled, and on a key down when it is turned off.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const ModifierKey(6)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "scrollLockModifier",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.ModifierKey",
            "params": []
        },
        {
            "desc": "\n          <p>The SHIFT modifier key.<\/p>\n<p>Typically, there are two of these.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const ModifierKey(1)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "shiftModifier",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.ModifierKey",
            "params": []
        },
        {
            "desc": "\n          <p>The SYMBOL modifier key.<\/p>\n<p>Typically, there is one of these.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const ModifierKey(8)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "symbolModifier",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.ModifierKey",
            "params": []
        },
        {
            "desc": "\n          <p>A constant List of the values in this enum, in order of their declaration.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const List&lt;<wbr><span class=\"type-parameter\">ModifierKey<\/span>&gt;<\/wbr><\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "values",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.ModifierKey",
            "params": []
        }
    ]
}