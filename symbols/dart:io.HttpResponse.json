{
    "desc": "<p>An HTTP response, which returns the headers and data\nfrom the server to the client in response to an HTTP request.<\/p>\n<p>Every HttpRequest object provides access to the associated <a href=\"dart-io\/HttpResponse-class.html\">HttpResponse<\/a>\nobject through the <code>response<\/code> property.\nThe server sends its response to the client by writing to the\nHttpResponse object.<\/p>\n<h2 id=\"writing-the-response\">Writing the response<\/h2>\n<p>This class implements <a href=\"dart-io\/IOSink-class.html\">IOSink<\/a>.\nAfter the header has been set up, the methods\nfrom IOSink, such as <code>writeln()<\/code>, can be used to write\nthe body of the HTTP response.\nUse the <code>close()<\/code> method to close the response and send it to the client.<\/p>\n<pre class=\"language-dart\"><code>server.listen((HttpRequest request) {\n  request.response.write('Hello, world!');\n  request.response.close();\n});\n<\/code><\/pre>\n<p>When one of the IOSink methods is used for the\nfirst time, the request header is sent. Calling any methods that\nchange the header after it is sent throws an exception.<\/p>\n<h2 id=\"setting-the-headers\">Setting the headers<\/h2>\n<p>The HttpResponse object has a number of properties for setting up\nthe HTTP headers of the response.\nWhen writing string data through the IOSink, the encoding used\nis determined from the \"charset\" parameter of the\n\"Content-Type\" header.<\/p>\n<pre class=\"language-dart\"><code>HttpResponse response = ...\nresponse.headers.contentType\n    = new ContentType(\"application\", \"json\", charset: \"utf-8\");\nresponse.write(...);  \/\/ Strings written will be UTF-8 encoded.\n<\/code><\/pre>\n<p>If no charset is provided the default of ISO-8859-1 (Latin 1) will\nbe used.<\/p>\n<pre class=\"language-dart\"><code>HttpResponse response = ...\nresponse.headers.add(HttpHeaders.contentTypeHeader, \"text\/plain\");\nresponse.write(...);  \/\/ Strings written will be ISO-8859-1 encoded.\n<\/code><\/pre>\n<p>An exception is thrown if you use the <code>write()<\/code> method\nwhile an unsupported content-type is set.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "dart-io\/HttpResponse-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:io",
    "name": "dart:io.HttpResponse",
    "shortname": "HttpResponse",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": null,
            "href": "dart-io\/HttpResponse\/HttpResponse.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:io.HttpResponse",
            "params": []
        },
        {
            "desc": "<p>Detaches the underlying socket from the HTTP server. When the\nsocket is detached the HTTP server will no longer perform any\noperations on it.<\/p>\n<p>This is normally used when a HTTP upgrade request is received\nand the communication should continue with a different protocol.<\/p>\n<p>If <code>writeHeaders<\/code> is <code>true<\/code>, the status line and <a href=\"dart-io\/HttpResponse\/headers.html\">headers<\/a> will be written\nto the socket before it's detached. If <code>false<\/code>, the socket is detached\nimmediately, without any data written to the socket. Default is <code>true<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;Socket&gt; detachSocket({bool writeHeaders: true});<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpResponse\/detachSocket.html",
            "isDeprecated": "0",
            "type": "dart:async.Future<dart:io.Socket>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpResponse",
            "params": [
                {
                    "name": "writeHeaders",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.bool"
                }
            ]
        },
        {
            "desc": "<p>Respond with a redirect to <code>location<\/code>.<\/p>\n<p>The URI in <code>location<\/code> should be absolute, but there are no checks\nto enforce that.<\/p>\n<p>By default the HTTP status code <code>HttpStatus.movedTemporarily<\/code>\n(<code>302<\/code>) is used for the redirect, but an alternative one can be\nspecified using the <code>status<\/code> argument.<\/p>\n<p>This method will also call <code>close<\/code>, and the returned future is\nthe future returned by <code>close<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future redirect(Uri location, {int status: HttpStatus.movedTemporarily});<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpResponse\/redirect.html",
            "isDeprecated": "0",
            "type": "dart:async.Future",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpResponse",
            "params": [
                {
                    "name": "location",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Uri"
                },
                {
                    "name": "status",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Gets or sets if the <a href=\"dart-io\/HttpResponse-class.html\">HttpResponse<\/a> should buffer output.<\/p>\n<p>Default value is <code>true<\/code>.<\/p>\n<p><strong>Note<\/strong>: Disabling buffering of the output can result in very poor\nperformance, when writing many small chunks.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool bufferOutput\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpResponse\/bufferOutput.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "dart:io.HttpResponse",
            "params": []
        },
        {
            "desc": "<p>Gets information about the client connection. Returns <code>null<\/code> if the\nsocket is not available.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HttpConnectionInfo get connectionInfo;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpResponse\/connectionInfo.html",
            "isDeprecated": "0",
            "type": "dart:io.HttpConnectionInfo",
            "memberOf": "dart:io.HttpResponse",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the content length of the response. If the size of\nthe response is not known in advance set the content length to\n-1, which is also the default if not set.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int contentLength\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpResponse\/contentLength.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.HttpResponse",
            "params": []
        },
        {
            "desc": "<p>Cookies to set in the client (in the 'set-cookie' header).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;Cookie&gt; get cookies;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpResponse\/cookies.html",
            "isDeprecated": "0",
            "type": "dart:core.List<dart:io.Cookie>",
            "memberOf": "dart:io.HttpResponse",
            "params": []
        },
        {
            "desc": "<p>Set and get the <a href=\"dart-io\/HttpResponse\/deadline.html\">deadline<\/a> for the response. The deadline is timed from the\ntime it's set. Setting a new deadline will override any previous deadline.\nWhen a deadline is exceeded, the response will be closed and any further\ndata ignored.<\/p>\n<p>To disable a deadline, set the <a href=\"dart-io\/HttpResponse\/deadline.html\">deadline<\/a> to <code>null<\/code>.<\/p>\n<p>The <a href=\"dart-io\/HttpResponse\/deadline.html\">deadline<\/a> is <code>null<\/code> by default.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Duration deadline\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpResponse\/deadline.html",
            "isDeprecated": "0",
            "type": "dart:core.Duration",
            "memberOf": "dart:io.HttpResponse",
            "params": []
        },
        {
            "desc": "<p>Returns the response headers.<\/p>\n<p>The response headers can be modified until the response body is\nwritten to or closed. After that they become immutable.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HttpHeaders get headers;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpResponse\/headers.html",
            "isDeprecated": "0",
            "type": "dart:io.HttpHeaders",
            "memberOf": "dart:io.HttpResponse",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the persistent connection state. The initial value\nof this property is the persistent connection state from the\nrequest.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool persistentConnection\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpResponse\/persistentConnection.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "dart:io.HttpResponse",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the reason phrase. If no reason phrase is explicitly\nset a default reason phrase is provided.<\/p>\n<p>The reason phrase must be set before the body is written\nto. Setting the reason phrase after writing to the response body\nor closing the response will throw a <code>StateError<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String reasonPhrase\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpResponse\/reasonPhrase.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "dart:io.HttpResponse",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the status code. Any integer value is accepted. For\nthe official HTTP status codes use the fields from\n<a href=\"dart-io\/HttpStatus-class.html\">HttpStatus<\/a>. If no status code is explicitly set the default\nvalue <a href=\"dart-io\/HttpStatus\/ok-constant.html\">HttpStatus.ok<\/a> is used.<\/p>\n<p>The status code must be set before the body is written\nto. Setting the status code after writing to the response body or\nclosing the response will throw a <code>StateError<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int statusCode\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpResponse\/statusCode.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.HttpResponse",
            "params": []
        }
    ]
}