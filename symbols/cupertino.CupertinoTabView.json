{
    "desc": "<p>A single tab view with its own <a href=\"widgets\/Navigator-class.html\">Navigator<\/a> state and history.<\/p>\n<p>A typical tab view used as the content of each tab in a <a href=\"cupertino\/CupertinoTabScaffold-class.html\">CupertinoTabScaffold<\/a>\nwhere multiple tabs with parallel navigation states and history can\nco-exist.<\/p>\n<p><a href=\"cupertino\/CupertinoTabView-class.html\">CupertinoTabView<\/a> configures the top-level <a href=\"widgets\/Navigator-class.html\">Navigator<\/a> to search for routes\nin the following order:<\/p>\n<ol>\n<li>\n<p>For the <code>\/<\/code> route, the <a href=\"cupertino\/CupertinoTabView\/builder.html\">builder<\/a> property, if non-null, is used.<\/p>\n<\/li>\n<li>\n<p>Otherwise, the <a href=\"cupertino\/CupertinoTabView\/routes.html\">routes<\/a> table is used, if it has an entry for the route,\nincluding <code>\/<\/code> if <a href=\"cupertino\/CupertinoTabView\/builder.html\">builder<\/a> is not specified.<\/p>\n<\/li>\n<li>\n<p>Otherwise, <a href=\"cupertino\/CupertinoTabView\/onGenerateRoute.html\">onGenerateRoute<\/a> is called, if provided. It should return a\nnon-null value for any <em>valid<\/em> route not handled by <a href=\"cupertino\/CupertinoTabView\/builder.html\">builder<\/a> and <a href=\"cupertino\/CupertinoTabView\/routes.html\">routes<\/a>.<\/p>\n<\/li>\n<li>\n<p>Finally if all else fails <a href=\"cupertino\/CupertinoTabView\/onUnknownRoute.html\">onUnknownRoute<\/a> is called.<\/p>\n<\/li>\n<\/ol>\n<p>These navigation properties are not shared with any sibling <a href=\"cupertino\/CupertinoTabView-class.html\">CupertinoTabView<\/a>\nnor any ancestor or descendant <a href=\"widgets\/Navigator-class.html\">Navigator<\/a> instances.<\/p>\n<p>To push a route above this <a href=\"cupertino\/CupertinoTabView-class.html\">CupertinoTabView<\/a> instead of inside it (such\nas when showing a dialog on top of all tabs), use\n<code>Navigator.of(rootNavigator: true)<\/code>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"cupertino\/CupertinoTabScaffold-class.html\">CupertinoTabScaffold<\/a>, a typical host that supports switching between tabs.<\/li>\n<li>\n<a href=\"cupertino\/CupertinoPageRoute-class.html\">CupertinoPageRoute<\/a>, a typical modal page route pushed onto the\n<a href=\"cupertino\/CupertinoTabView-class.html\">CupertinoTabView<\/a>'s <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": null,
    "href": "cupertino\/CupertinoTabView-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "cupertino",
    "name": "cupertino.CupertinoTabView",
    "shortname": "CupertinoTabView",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [
        {
            "desc": "<p>The widget builder for the default route of the tab view\n(<a href=\"widgets\/Navigator\/defaultRouteName-constant.html\">Navigator.defaultRouteName<\/a>, which is <code>\/<\/code>).<\/p>\n<p>If a <a href=\"cupertino\/CupertinoTabView\/builder.html\">builder<\/a> is specified, then <a href=\"cupertino\/CupertinoTabView\/routes.html\">routes<\/a> must not include an entry for <code>\/<\/code>,\nas <a href=\"cupertino\/CupertinoTabView\/builder.html\">builder<\/a> takes its place.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final WidgetBuilder builder\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabView\/builder.html",
            "isDeprecated": "0",
            "type": "widgets.WidgetBuilder",
            "memberOf": "cupertino.CupertinoTabView",
            "params": []
        },
        {
            "desc": "<p>The route generator callback used when the tab view is navigated to a named route.<\/p>\n<p>This is used if <a href=\"cupertino\/CupertinoTabView\/routes.html\">routes<\/a> does not contain the requested route.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final RouteFactory onGenerateRoute\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabView\/onGenerateRoute.html",
            "isDeprecated": "0",
            "type": "widgets.RouteFactory",
            "memberOf": "cupertino.CupertinoTabView",
            "params": []
        },
        {
            "desc": "<p>Called when <a href=\"cupertino\/CupertinoTabView\/onGenerateRoute.html\">onGenerateRoute<\/a> also fails to generate a route.<\/p>\n<p>This callback is typically used for error handling. For example, this\ncallback might always generate a \"not found\" page that describes the route\nthat wasn't found.<\/p>\n<p>The default implementation pushes a route that displays an ugly error\nmessage.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final RouteFactory onUnknownRoute\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabView\/onUnknownRoute.html",
            "isDeprecated": "0",
            "type": "widgets.RouteFactory",
            "memberOf": "cupertino.CupertinoTabView",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates the content area for a tab in a <a href=\"cupertino\/CupertinoTabScaffold-class.html\">CupertinoTabScaffold<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const CupertinoTabView({\n  Key key,\n  this.builder,\n  this.navigatorKey,\n  this.defaultTitle,\n  this.routes,\n  this.onGenerateRoute,\n  this.onUnknownRoute,\n  this.navigatorObservers = const &lt;NavigatorObserver&gt;[],\n}) : assert(navigatorObservers != null),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoTabView\/CupertinoTabView.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "cupertino.CupertinoTabView",
            "params": [
                {
                    "name": "builder",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.WidgetBuilder"
                },
                {
                    "name": "defaultTitle",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "navigatorKey",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.GlobalKey<widgets.NavigatorState>"
                },
                {
                    "name": "navigatorObservers",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<widgets.NavigatorObserver>"
                },
                {
                    "name": "onGenerateRoute",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.RouteFactory"
                },
                {
                    "name": "onUnknownRoute",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.RouteFactory"
                },
                {
                    "name": "routes",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.Map<dart:core.String<widgets.WidgetBuilder>>"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"cupertino\/CupertinoTabView\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_CupertinoTabViewState createState() {\n  return _CupertinoTabViewState();\n}<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoTabView\/createState.html",
            "isDeprecated": "0",
            "type": "<_CupertinoTabViewState>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoTabView",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The title of the default route.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String defaultTitle\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabView\/defaultTitle.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "cupertino.CupertinoTabView",
            "params": []
        },
        {
            "desc": "<p>A key to use when building this widget's <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>.<\/p>\n<p>If a <a href=\"cupertino\/CupertinoTabView\/navigatorKey.html\">navigatorKey<\/a> is specified, the <a href=\"widgets\/Navigator-class.html\">Navigator<\/a> can be directly\nmanipulated without first obtaining it from a <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> via\n<a href=\"widgets\/Navigator\/of.html\">Navigator.of<\/a>: from the <a href=\"cupertino\/CupertinoTabView\/navigatorKey.html\">navigatorKey<\/a>, use the <a href=\"widgets\/GlobalKey\/currentState.html\">GlobalKey.currentState<\/a>\ngetter.<\/p>\n<p>If this is changed, a new <a href=\"widgets\/Navigator-class.html\">Navigator<\/a> will be created, losing all the\ntab's state in the process; in that case, the <a href=\"cupertino\/CupertinoTabView\/navigatorObservers.html\">navigatorObservers<\/a>\nmust also be changed, since the previous observers will be attached to the\nprevious navigator.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final GlobalKey&lt;NavigatorState&gt; navigatorKey\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabView\/navigatorKey.html",
            "isDeprecated": "0",
            "type": "widgets.GlobalKey<widgets.NavigatorState>",
            "memberOf": "cupertino.CupertinoTabView",
            "params": []
        },
        {
            "desc": "<p>The list of observers for the <a href=\"widgets\/Navigator-class.html\">Navigator<\/a> created in this tab view.<\/p>\n<p>This list of observers is not shared with ancestor or descendant <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>s.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;NavigatorObserver&gt; navigatorObservers\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabView\/navigatorObservers.html",
            "isDeprecated": "0",
            "type": "dart:core.List<widgets.NavigatorObserver>",
            "memberOf": "cupertino.CupertinoTabView",
            "params": []
        },
        {
            "desc": "<p>This tab view's routing table.<\/p>\n<p>When a named route is pushed with <a href=\"widgets\/Navigator\/pushNamed.html\">Navigator.pushNamed<\/a> inside this tab view,\nthe route name is looked up in this map. If the name is present,\nthe associated <a href=\"widgets\/WidgetBuilder.html\">WidgetBuilder<\/a> is used to construct a <a href=\"cupertino\/CupertinoPageRoute-class.html\">CupertinoPageRoute<\/a>\nthat performs an appropriate transition to the new route.<\/p>\n<p>If the tab view only has one page, then you can specify it using <a href=\"cupertino\/CupertinoTabView\/builder.html\">builder<\/a> instead.<\/p>\n<p>If <a href=\"cupertino\/CupertinoTabView\/builder.html\">builder<\/a> is specified, then it implies an entry in this table for the\n<a href=\"widgets\/Navigator\/defaultRouteName-constant.html\">Navigator.defaultRouteName<\/a> route (<code>\/<\/code>), and it is an error to\nredundantly provide such a route in the <a href=\"cupertino\/CupertinoTabView\/routes.html\">routes<\/a> table.<\/p>\n<p>If a route is requested that is not specified in this table (or by\n<a href=\"cupertino\/CupertinoTabView\/builder.html\">builder<\/a>), then the <a href=\"cupertino\/CupertinoTabView\/onGenerateRoute.html\">onGenerateRoute<\/a> callback is called to build the page\ninstead.<\/p>\n<p>This routing table is not shared with any routing tables of ancestor or\ndescendant <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>s.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Map&lt;String, WidgetBuilder&gt; routes\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabView\/routes.html",
            "isDeprecated": "0",
            "type": "dart:core.Map<dart:core.String<widgets.WidgetBuilder>>",
            "memberOf": "cupertino.CupertinoTabView",
            "params": []
        }
    ]
}