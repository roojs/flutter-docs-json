{
    "desc": "<p>An interface for cryptographic hash functions.<\/p>\n<p>Every hash is a converter that takes a list of ints and returns a single\ndigest. When used in chunked mode, it will only ever add one digest to the\ninner <a href=\"dart-core\/Sink-class.html\">Sink<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "package-crypto_crypto\/Hash-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "crypto",
    "name": "crypto.Hash",
    "shortname": "Hash",
    "extends": [
        "crypto.Digest",
        "dart:core.int",
        "dart:core.List",
        "dart:convert.Converter",
        "crypto.Digest",
        "dart:core.int",
        "dart:core.List",
        "dart:async.StreamTransformerBase",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Hash();<\/code><\/pre>\n    ",
            "href": "package-crypto_crypto\/Hash\/Hash.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "crypto.Hash",
            "params": []
        },
        {
            "desc": "<p>Converts <code>input<\/code> and returns the result of the conversion.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nDigest convert(List&lt;int&gt; data) {\n  var innerSink = new DigestSink();\n  var outerSink = startChunkedConversion(innerSink);\n  outerSink.add(data);\n  outerSink.close();\n  return innerSink.value;\n}<\/code><\/pre>\n    ",
            "href": "package-crypto_crypto\/Hash\/convert.html",
            "isDeprecated": "0",
            "type": "crypto.Digest",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "crypto.Hash",
            "params": [
                {
                    "name": "data",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.int>"
                }
            ]
        },
        {
            "desc": "<p>Starts a chunked conversion.<\/p>\n<p>The returned sink serves as input for the long-running conversion. The\ngiven <code>sink<\/code> serves as output.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nByteConversionSink startChunkedConversion(Sink&lt;Digest&gt; sink);<\/code><\/pre>\n    ",
            "href": "package-crypto_crypto\/Hash\/startChunkedConversion.html",
            "isDeprecated": "0",
            "type": "dart:convert.ByteConversionSink",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "crypto.Hash",
            "params": [
                {
                    "name": "sink",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Sink<crypto.Digest>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The internal block size of the hash in bytes.<\/p>\n<p>This is exposed for use by the <code>Hmac<\/code> class, which needs to know the block\nsize for the <a href=\"package-crypto_crypto\/Hash-class.html\">Hash<\/a> it uses.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get blockSize;<\/code><\/pre>\n        ",
            "href": "package-crypto_crypto\/Hash\/blockSize.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "crypto.Hash",
            "params": []
        }
    ]
}