{
    "desc": "<p><a href=\"widgets\/NavigationToolbar-class.html\">NavigationToolbar<\/a> is a layout helper to position 3 widgets or groups of\nwidgets along a horizontal axis that's sensible for an application's\nnavigation bar such as in Material Design and in iOS.<\/p>\n<p>The <a href=\"widgets\/NavigationToolbar\/leading.html\">leading<\/a> and <a href=\"widgets\/NavigationToolbar\/trailing.html\">trailing<\/a> widgets occupy the edges of the widget with\nreasonable size constraints while the <a href=\"widgets\/NavigationToolbar\/middle.html\">middle<\/a> widget occupies the remaining\nspace in either a center aligned or start aligned fashion.<\/p>\n<p>Either directly use the themed app bars such as the Material <a href=\"material\/AppBar-class.html\">AppBar<\/a> or\nthe iOS <a href=\"cupertino\/CupertinoNavigationBar-class.html\">CupertinoNavigationBar<\/a> or wrap this widget with more theming\nspecifications for your own custom app bar.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "widgets\/NavigationToolbar-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.NavigationToolbar",
    "shortname": "NavigationToolbar",
    "extends": [
        "widgets.StatelessWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a widget that lays out its children in a manner suitable for a\ntoolbar.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const NavigationToolbar({\n  Key key,\n  this.leading,\n  this.middle,\n  this.trailing,\n  this.centerMiddle = true,\n  this.middleSpacing = kMiddleSpacing,\n}) : assert(centerMiddle != null),\n     assert(middleSpacing != null),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "widgets\/NavigationToolbar\/NavigationToolbar.html",
            "isDeprecated": false,
            "type": "",
            "name": "NavigationToolbar",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.NavigationToolbar",
            "params": [
                {
                    "name": "centerMiddle",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "key",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "leading",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "middle",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "middleSpacing",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "trailing",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                }
            ]
        },
        {
            "desc": "<p>Describes the part of the user interface represented by this widget.<\/p>\n<p>The framework calls this method when this widget is inserted into the\ntree in a given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> and when the dependencies of this widget\nchange (e.g., an <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> referenced by this widget changes).<\/p>\n<p>The framework replaces the subtree below this widget with the widget\nreturned by this method, either by updating the existing subtree or by\nremoving the subtree and inflating a new subtree, depending on whether the\nwidget returned by this method can update the root of the existing\nsubtree, as determined by calling <a href=\"widgets\/Widget\/canUpdate.html\">Widget.canUpdate<\/a>.<\/p>\n<p>Typically implementations return a newly created constellation of widgets\nthat are configured with information from this widget's constructor and\nfrom the given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>.<\/p>\n<p>The given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> contains information about the location in the\ntree at which this widget is being built. For example, the context\nprovides the set of inherited widgets for this location in the tree. A\ngiven widget might be built with multiple different <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>\narguments over time if the widget is moved around the tree or if the\nwidget is inserted into the tree in multiple places at once.<\/p>\n<p>The implementation of this method must only depend on:<\/p>\n<ul>\n<li>the fields of the widget, which themselves must not change over time,\nand<\/li>\n<li>any ambient state obtained from the <code>context<\/code> using\n<a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a>.<\/li>\n<\/ul>\n<p>If a widget's <a href=\"widgets\/NavigationToolbar\/build.html\">build<\/a> method is to depend on anything else, use a\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> instead.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, which contains the discussion on performance considerations.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  assert(debugCheckHasDirectionality(context));\n  final List&lt;Widget&gt; children = &lt;Widget&gt;[];\n\n  if (leading != null)\n    children.add(LayoutId(id: _ToolbarSlot.leading, child: leading));\n\n  if (middle != null)\n    children.add(LayoutId(id: _ToolbarSlot.middle, child: middle));\n\n  if (trailing != null)\n    children.add(LayoutId(id: _ToolbarSlot.trailing, child: trailing));\n\n  final TextDirection textDirection = Directionality.of(context);\n  return CustomMultiChildLayout(\n    delegate: _ToolbarLayout(\n      centerMiddle: centerMiddle,\n      middleSpacing: middleSpacing,\n      textDirection: textDirection,\n    ),\n    children: children,\n  );\n}<\/code><\/pre>\n    ",
            "href": "widgets\/NavigationToolbar\/build.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "build",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.NavigationToolbar",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Whether to align the <a href=\"widgets\/NavigationToolbar\/middle.html\">middle<\/a> widget to the center of this widget or\nnext to the <a href=\"widgets\/NavigationToolbar\/leading.html\">leading<\/a> widget when false.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool centerMiddle\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/NavigationToolbar\/centerMiddle.html",
            "name": "centerMiddle",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.NavigationToolbar",
            "params": []
        },
        {
            "desc": "<p>Widget to place at the start of the horizontal toolbar.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget leading\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/NavigationToolbar\/leading.html",
            "name": "leading",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.NavigationToolbar",
            "params": []
        },
        {
            "desc": "<p>Widget to place in the middle of the horizontal toolbar, occupying\nas much remaining space as possible.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget middle\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/NavigationToolbar\/middle.html",
            "name": "middle",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.NavigationToolbar",
            "params": []
        },
        {
            "desc": "<p>The spacing around the <a href=\"widgets\/NavigationToolbar\/middle.html\">middle<\/a> widget on horizontal axis.<\/p>\n<p>Defaults to <a href=\"widgets\/NavigationToolbar\/kMiddleSpacing-constant.html\">kMiddleSpacing<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double middleSpacing\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/NavigationToolbar\/middleSpacing.html",
            "name": "middleSpacing",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.NavigationToolbar",
            "params": []
        },
        {
            "desc": "<p>Widget to place at the end of the horizontal toolbar.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget trailing\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/NavigationToolbar\/trailing.html",
            "name": "trailing",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.NavigationToolbar",
            "params": []
        }
    ]
}