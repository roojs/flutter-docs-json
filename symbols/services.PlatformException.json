{
    "name": "services.PlatformException",
    "extends": [],
    "memberOf": "services",
    "events": [],
    "methods": [
        {
            "name": "PlatformException",
            "type": "",
            "desc": "<p>Creates a <a href=\"services\/PlatformException-class.html\">PlatformException<\/a> with the specified error <code>code<\/code> and optional\n<code>message<\/code>, and with the optional error <code>details<\/code> which must be a valid\nvalue for the <a href=\"services\/MethodCodec-class.html\">MethodCodec<\/a> involved in the interaction.<\/p>\n    ",
            "static": false,
            "memberOf": "services.PlatformException",
            "sig": "",
            "params": [
                {
                    "name": "code",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "message",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "details",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": true,
            "href": "services\/PlatformException\/PlatformException.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">PlatformException({\n  @required this.code,\n  this.message,\n  this.details,\n}) : assert(code != null);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "services.PlatformException",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "services\/PlatformException\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; 'PlatformException($code, $message, $details)';<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "code",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>An error code.<\/p>\n        ",
            "memberOf": "services.PlatformException",
            "isConstant": false,
            "href": "services\/PlatformException\/code.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String code\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "details",
            "type": "",
            "types": [],
            "desc": "<p>Error details, possibly null.<\/p>\n        ",
            "memberOf": "services.PlatformException",
            "isConstant": false,
            "href": "services\/PlatformException\/details.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final dynamic details\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "message",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>A human-readable error message, possibly null.<\/p>\n        ",
            "memberOf": "services.PlatformException",
            "isConstant": false,
            "href": "services\/PlatformException\/message.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String message\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "services\/PlatformException-class.html",
    "desc": "<p>Thrown to indicate that a platform interaction failed in the platform\nplugin.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"services\/MethodCodec-class.html\">MethodCodec<\/a>, which throws a <a href=\"services\/PlatformException-class.html\">PlatformException<\/a>, if a received result\nenvelope represents an error.<\/li>\n<li>\n<a href=\"services\/MethodChannel\/invokeMethod.html\">MethodChannel.invokeMethod<\/a>, which completes the returned future\nwith a <a href=\"services\/PlatformException-class.html\">PlatformException<\/a>, if invoking the platform plugin method\nresults in an error envelope.<\/li>\n<li>\n<a href=\"services\/EventChannel\/receiveBroadcastStream.html\">EventChannel.receiveBroadcastStream<\/a>, which emits\n<a href=\"services\/PlatformException-class.html\">PlatformException<\/a>s as error events, whenever an event received from the\nplatform plugin is wrapped in an error envelope.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "PlatformException"
}