{
    "desc": "<p>A mixin that implements the instance methods of <a href=\"package-stream_channel_stream_channel\/StreamChannel-class.html\">StreamChannel<\/a> in terms of\n<a href=\"package-stream_channel_stream_channel\/StreamChannel\/stream.html\">stream<\/a> and <a href=\"package-stream_channel_stream_channel\/StreamChannel\/sink.html\">sink<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "package-stream_channel_stream_channel\/StreamChannelMixin-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "stream_channel",
    "name": "stream_channel.StreamChannelMixin",
    "shortname": "StreamChannelMixin",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": null,
            "href": "package-stream_channel_stream_channel\/StreamChannelMixin\/StreamChannelMixin.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "stream_channel.StreamChannelMixin",
            "params": []
        },
        {
            "desc": "<p>Returns a copy of this with the generic type coerced to <code>S<\/code>.<\/p>\n<p>If any events emitted by <a href=\"package-stream_channel_stream_channel\/StreamChannel\/stream.html\">stream<\/a> aren't of type <code>S<\/code>, they're converted\ninto <a href=\"dart-core\/CastError-class.html\">CastError<\/a> events. Similarly, if any events are added to <a href=\"package-stream_channel_stream_channel\/StreamChannel\/sink.html\">sink<\/a> that\naren't of type <code>S<\/code>, a <a href=\"dart-core\/CastError-class.html\">CastError<\/a> is thrown.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">StreamChannel&lt;S&gt; cast&lt;S&gt;() =&gt; new StreamChannel(\n    DelegatingStream.typed(stream), DelegatingStreamSink.typed(sink));<\/code><\/pre>\n    ",
            "href": "package-stream_channel_stream_channel\/StreamChannelMixin\/cast.html",
            "isDeprecated": "0",
            "type": "stream_channel.StreamChannel",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "stream_channel.StreamChannelMixin",
            "params": []
        },
        {
            "desc": "<p>Returns a copy of this with <code>sink<\/code> replaced by <code>change<\/code>'s return\nvalue.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">StreamChannel&lt;T&gt; changeSink(StreamSink&lt;T&gt; change(StreamSink&lt;T&gt; sink)) =&gt;\n    new StreamChannel.withCloseGuarantee(stream, change(sink));<\/code><\/pre>\n    ",
            "href": "package-stream_channel_stream_channel\/StreamChannelMixin\/changeSink.html",
            "isDeprecated": "0",
            "type": "stream_channel.StreamChannel",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "stream_channel.StreamChannelMixin",
            "params": [
                {
                    "name": "sink",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:async.StreamSink"
                }
            ]
        },
        {
            "desc": "<p>Returns a copy of this with <code>stream<\/code> replaced by <code>change<\/code>'s return\nvalue.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">StreamChannel&lt;T&gt; changeStream(Stream&lt;T&gt; change(Stream&lt;T&gt; stream)) =&gt;\n    new StreamChannel.withCloseGuarantee(change(stream), sink);<\/code><\/pre>\n    ",
            "href": "package-stream_channel_stream_channel\/StreamChannelMixin\/changeStream.html",
            "isDeprecated": "0",
            "type": "stream_channel.StreamChannel",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "stream_channel.StreamChannelMixin",
            "params": [
                {
                    "name": "stream",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:async.Stream"
                }
            ]
        },
        {
            "desc": "<p>Connects this to <code>other<\/code>, so that any values emitted by either are sent\ndirectly to the other.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void pipe(StreamChannel&lt;T&gt; other) {\n  stream.pipe(other.sink);\n  other.stream.pipe(sink);\n}<\/code><\/pre>\n    ",
            "href": "package-stream_channel_stream_channel\/StreamChannelMixin\/pipe.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "stream_channel.StreamChannelMixin",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "stream_channel.StreamChannel"
                }
            ]
        },
        {
            "desc": "<p>Transforms this using <code>transformer<\/code>.<\/p>\n<p>This is identical to calling <code>transformer.bind(channel)<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">StreamChannel&lt;S&gt; transform&lt;S&gt;(StreamChannelTransformer&lt;S, T&gt; transformer) =&gt;\n    transformer.bind(this);<\/code><\/pre>\n    ",
            "href": "package-stream_channel_stream_channel\/StreamChannelMixin\/transform.html",
            "isDeprecated": "0",
            "type": "stream_channel.StreamChannel",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "stream_channel.StreamChannelMixin",
            "params": [
                {
                    "name": "transformer",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "stream_channel.StreamChannelTransformer"
                }
            ]
        },
        {
            "desc": "<p>Transforms only the <a href=\"package-stream_channel_stream_channel\/StreamChannel\/sink.html\">sink<\/a> component of this using <code>transformer<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">StreamChannel&lt;T&gt; transformSink(StreamSinkTransformer&lt;T, T&gt; transformer) =&gt;\n    changeSink(transformer.bind);<\/code><\/pre>\n    ",
            "href": "package-stream_channel_stream_channel\/StreamChannelMixin\/transformSink.html",
            "isDeprecated": "0",
            "type": "stream_channel.StreamChannel",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "stream_channel.StreamChannelMixin",
            "params": [
                {
                    "name": "transformer",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "async.StreamSinkTransformer"
                }
            ]
        },
        {
            "desc": "<p>Transforms only the <a href=\"package-stream_channel_stream_channel\/StreamChannel\/stream.html\">stream<\/a> component of this using <code>transformer<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">StreamChannel&lt;T&gt; transformStream(StreamTransformer&lt;T, T&gt; transformer) =&gt;\n    changeStream(transformer.bind);<\/code><\/pre>\n    ",
            "href": "package-stream_channel_stream_channel\/StreamChannelMixin\/transformStream.html",
            "isDeprecated": "0",
            "type": "stream_channel.StreamChannel",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "stream_channel.StreamChannelMixin",
            "params": [
                {
                    "name": "transformer",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:async.StreamTransformer"
                }
            ]
        }
    ],
    "props": []
}