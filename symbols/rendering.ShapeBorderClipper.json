{
    "desc": "<p>A <a href=\"rendering\/CustomClipper-class.html\">CustomClipper<\/a> that clips to the outer path of a <a href=\"painting\/ShapeBorder-class.html\">ShapeBorder<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "rendering\/ShapeBorderClipper-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "rendering",
    "name": "rendering.ShapeBorderClipper",
    "shortname": "ShapeBorderClipper",
    "extends": [
        "dart:ui.Path",
        "rendering.CustomClipper",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a <a href=\"painting\/ShapeBorder-class.html\">ShapeBorder<\/a> clipper.<\/p>\n<p>The <code>shape<\/code> argument must not be null.<\/p>\n<p>The <code>textDirection<\/code> argument must be provided non-null if <code>shape<\/code>\nhas a text direction dependency (for example if it is expressed in terms\nof \"start\" and \"end\" instead of \"left\" and \"right\"). It may be null if\nthe border will not need the text direction to paint itself.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const ShapeBorderClipper({\n  @required this.shape,\n  this.textDirection,\n}) : assert(shape != null);<\/code><\/pre>\n    ",
            "href": "rendering\/ShapeBorderClipper\/ShapeBorderClipper.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "rendering.ShapeBorderClipper",
            "params": [
                {
                    "name": "shape",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "painting.ShapeBorder"
                },
                {
                    "name": "textDirection",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.TextDirection"
                }
            ]
        },
        {
            "desc": "<p>Returns the outer path of <a href=\"rendering\/ShapeBorderClipper\/shape.html\">shape<\/a> as the clip.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nPath getClip(Size size) {\n  return shape.getOuterPath(Offset.zero &amp; size, textDirection: textDirection);\n}<\/code><\/pre>\n    ",
            "href": "rendering\/ShapeBorderClipper\/getClip.html",
            "isDeprecated": "0",
            "type": "dart:ui.Path",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.ShapeBorderClipper",
            "params": [
                {
                    "name": "size",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Size"
                }
            ]
        },
        {
            "desc": "<p>Called whenever a new instance of the custom clipper delegate class is\nprovided to the clip object, or any time that a new clip object is created\nwith a new instance of the custom painter delegate class (which amounts to\nthe same thing, because the latter is implemented in terms of the former).<\/p>\n<p>If the new instance represents different information than the old\ninstance, then the method should return true, otherwise it should return\nfalse.<\/p>\n<p>If the method returns false, then the <a href=\"rendering\/ShapeBorderClipper\/getClip.html\">getClip<\/a> call might be optimized\naway.<\/p>\n<p>It's possible that the <a href=\"rendering\/ShapeBorderClipper\/getClip.html\">getClip<\/a> method will get called even if\n<a href=\"rendering\/ShapeBorderClipper\/shouldReclip.html\">shouldReclip<\/a> returns false or if the <a href=\"rendering\/ShapeBorderClipper\/shouldReclip.html\">shouldReclip<\/a> method is never\ncalled at all (e.g. if the box changes size).<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool shouldReclip(CustomClipper&lt;Path&gt; oldClipper) {\n  if (oldClipper.runtimeType != ShapeBorderClipper)\n    return true;\n  final ShapeBorderClipper typedOldClipper = oldClipper;\n  return typedOldClipper.shape != shape\n      || typedOldClipper.textDirection != textDirection;\n}<\/code><\/pre>\n    ",
            "href": "rendering\/ShapeBorderClipper\/shouldReclip.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.ShapeBorderClipper",
            "params": [
                {
                    "name": "oldClipper",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "rendering.CustomClipper<dart:ui.Path>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The shape border whose outer path this clipper clips to.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ShapeBorder shape\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/ShapeBorderClipper\/shape.html",
            "isDeprecated": "0",
            "type": "painting.ShapeBorder",
            "memberOf": "rendering.ShapeBorderClipper",
            "params": []
        },
        {
            "desc": "<p>The text direction to use for getting the outer path for <a href=\"rendering\/ShapeBorderClipper\/shape.html\">shape<\/a>.<\/p>\n<p><a href=\"painting\/ShapeBorder-class.html\">ShapeBorder<\/a>s can depend on the text direction (e.g having a \"dent\"\ntowards the start of the shape).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextDirection textDirection\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/ShapeBorderClipper\/textDirection.html",
            "isDeprecated": "0",
            "type": "dart:ui.TextDirection",
            "memberOf": "rendering.ShapeBorderClipper",
            "params": []
        }
    ]
}