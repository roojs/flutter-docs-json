{
    "desc": "<p>A material stepper widget that displays progress through a sequence of\nsteps. Steppers are particularly useful in the case of forms where one step\nrequires the completion of another one, or where multiple steps need to be\ncompleted in order to submit the whole form.<\/p>\n<p>The widget is a flexible wrapper. A parent class should pass <a href=\"material\/Stepper\/currentStep.html\">currentStep<\/a>\nto this widget based on some logic triggered by the three callbacks that it\nprovides.<\/p>\n<p>See also:<\/p>\n<ul>\n<li><a href=\"material\/Step-class.html\">Step<\/a><\/li>\n<li><a href=\"https:\/\/material.io\/archive\/guidelines\/components\/steppers.html\">material.io\/archive\/guidelines\/components\/steppers.html<\/a><\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/Stepper-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "material",
    "name": "material.Stepper",
    "shortname": "Stepper",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>The callback for creating custom controls.<\/p>\n<p>If null, the default controls from the current theme will be used.<\/p>\n<p>This callback which takes in a context and two functions,<a href=\"material\/Stepper\/onStepContinue.html\">onStepContinue<\/a>\nand <a href=\"material\/Stepper\/onStepCancel.html\">onStepCancel<\/a>. These can be used to control the stepper.<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <script>var visibleSnippet1 = \"shortSnippet1\";<\/script><button id=\"shortSnippet1Button\" onclick=\"visibleSnippet1 = showSnippet('shortSnippet1', visibleSnippet1);\" selected>Sample<\/button>\n  <button id=\"longSnippet1Button\" onclick=\"visibleSnippet1 = showSnippet('longSnippet1', visibleSnippet1);\">Sample in an App<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\" id=\"shortSnippet1\">\n    <div class=\"snippet-description\">\nCreates a stepper control with custom buttons.\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(visibleSnippet1);\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Widget build(BuildContext context) {\n  return Stepper(\n    controlsBuilder:\n      (BuildContext context, {VoidCallback onStepContinue, VoidCallback onStepCancel}) {\n         return Row(\n           children: &lt;Widget&gt;[\n             FlatButton(\n               onPressed: onStepContinue,\n               child: const Text('CONTINUE'),\n             ),\n             FlatButton(\n               onPressed: onStepCancel,\n               child: const Text('CANCEL'),\n             ),\n           ],\n         );\n      },\n    steps: const &lt;Step&gt;[\n      Step(\n        title: Text('A'),\n        content: SizedBox(\n          width: 100.0,\n          height: 100.0,\n        ),\n      ),\n      Step(\n        title: Text('B'),\n        content: SizedBox(\n          width: 100.0,\n          height: 100.0,\n        ),\n      ),\n    ],\n  );\n}<\/code><\/pre>\n    <\/div>\n  <\/div>\n  <div class=\"snippet\" id=\"longSnippet1\" hidden>\n    <div class=\"snippet-description\">To create a sample project with this code snippet, run:<br><span class=\"snippet-create-command\">flutter create --sample=material.Stepper.controlsBuilder.1 mysample<\/span>\n    <\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(visibleSnippet1);\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\"><code class=\"language-dart\">\/\/ Flutter code sample for material.Stepper.controlsBuilder.1\n\n\/\/ Creates a stepper control with custom buttons.\n\nimport 'package:flutter\/material.dart';\n\nvoid main() =&gt; runApp(MyApp());\n\n\/\/\/ This Widget is the main application widget.\nclass MyApp extends StatelessWidget {\n  static const String _title = 'Flutter Code Sample';\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: _title,\n      home: Scaffold(\n        appBar: AppBar(title: Text(_title)),\n        body: MyStatelessWidget(),\n      ),\n    );\n  }\n}\n\n\/\/\/ This is the stateless widget that the main application instantiates.\nclass MyStatelessWidget extends StatelessWidget {\n  MyStatelessWidget({Key key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Stepper(\n      controlsBuilder: (BuildContext context,\n          {VoidCallback onStepContinue, VoidCallback onStepCancel}) {\n        return Row(\n          children: &lt;Widget&gt;[\n            FlatButton(\n              onPressed: onStepContinue,\n              child: const Text('CONTINUE'),\n            ),\n            FlatButton(\n              onPressed: onStepCancel,\n              child: const Text('CANCEL'),\n            ),\n          ],\n        );\n      },\n      steps: const &lt;Step&gt;[\n        Step(\n          title: Text('A'),\n          content: SizedBox(\n            width: 100.0,\n            height: 100.0,\n          ),\n        ),\n        Step(\n          title: Text('B'),\n          content: SizedBox(\n            width: 100.0,\n            height: 100.0,\n          ),\n        ),\n      ],\n    );\n  }\n}<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ControlsWidgetBuilder controlsBuilder\n\n<\/code><\/pre>\n        ",
            "href": "material\/Stepper\/controlsBuilder.html",
            "isDeprecated": false,
            "type": "widgets.ControlsWidgetBuilder",
            "name": "controlsBuilder",
            "memberOf": "material.Stepper",
            "params": []
        },
        {
            "desc": "<p>The callback called when the 'cancel' button is tapped.<\/p>\n<p>If null, the 'cancel' button will be disabled.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final VoidCallback onStepCancel\n\n<\/code><\/pre>\n        ",
            "href": "material\/Stepper\/onStepCancel.html",
            "isDeprecated": false,
            "type": "dart:ui.VoidCallback",
            "name": "onStepCancel",
            "memberOf": "material.Stepper",
            "params": []
        },
        {
            "desc": "<p>The callback called when the 'continue' button is tapped.<\/p>\n<p>If null, the 'continue' button will be disabled.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final VoidCallback onStepContinue\n\n<\/code><\/pre>\n        ",
            "href": "material\/Stepper\/onStepContinue.html",
            "isDeprecated": false,
            "type": "dart:ui.VoidCallback",
            "name": "onStepContinue",
            "memberOf": "material.Stepper",
            "params": []
        },
        {
            "desc": "<p>The callback called when a step is tapped, with its index passed as\nan argument.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueChanged&lt;int&gt; onStepTapped\n\n<\/code><\/pre>\n        ",
            "href": "material\/Stepper\/onStepTapped.html",
            "isDeprecated": false,
            "type": "foundation.ValueChanged<dart:core.int>",
            "name": "onStepTapped",
            "memberOf": "material.Stepper",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a stepper from a list of steps.<\/p>\n<p>This widget is not meant to be rebuilt with a different list of steps\nunless a key is provided in order to distinguish the old stepper from the\nnew one.<\/p>\n<p>The <code>steps<\/code>, <code>type<\/code>, and <code>currentStep<\/code> arguments must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Stepper({\n  Key key,\n  @required this.steps,\n  this.physics,\n  this.type = StepperType.vertical,\n  this.currentStep = 0,\n  this.onStepTapped,\n  this.onStepContinue,\n  this.onStepCancel,\n  this.controlsBuilder,\n}) : assert(steps != null),\n     assert(type != null),\n     assert(currentStep != null),\n     assert(0 &lt;= currentStep &amp;&amp; currentStep &lt; steps.length),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/Stepper\/Stepper.html",
            "isDeprecated": false,
            "type": "",
            "name": "Stepper",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.Stepper",
            "params": [
                {
                    "name": "controlsBuilder",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.ControlsWidgetBuilder"
                },
                {
                    "name": "currentStep",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "key",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "onStepCancel",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.VoidCallback"
                },
                {
                    "name": "onStepContinue",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.VoidCallback"
                },
                {
                    "name": "onStepTapped",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.ValueChanged<dart:core.int>"
                },
                {
                    "name": "physics",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.ScrollPhysics"
                },
                {
                    "name": "steps",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.List<material.Step>"
                },
                {
                    "name": "type",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "material.StepperType"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/Stepper\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_StepperState createState() =&gt; _StepperState();<\/code><\/pre>\n    ",
            "href": "material\/Stepper\/createState.html",
            "isDeprecated": false,
            "type": "<_StepperState>",
            "name": "createState",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.Stepper",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The index into <a href=\"material\/Stepper\/steps.html\">steps<\/a> of the current step whose content is displayed.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int currentStep\n\n<\/code><\/pre>\n        ",
            "href": "material\/Stepper\/currentStep.html",
            "name": "currentStep",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.Stepper",
            "params": []
        },
        {
            "desc": "<p>How the stepper's scroll view should respond to user input.<\/p>\n<p>For example, determines how the scroll view continues to\nanimate after the user stops dragging the scroll view.<\/p>\n<p>If the stepper is contained within another scrollable it\ncan be helpful to set this property to <a href=\"widgets\/ClampingScrollPhysics-class.html\">ClampingScrollPhysics<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ScrollPhysics physics\n\n<\/code><\/pre>\n        ",
            "href": "material\/Stepper\/physics.html",
            "name": "physics",
            "isDeprecated": false,
            "type": "widgets.ScrollPhysics",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.Stepper",
            "params": []
        },
        {
            "desc": "<p>The steps of the stepper whose titles, subtitles, icons always get shown.<\/p>\n<p>The length of <a href=\"material\/Stepper\/steps.html\">steps<\/a> must not change.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;Step&gt; steps\n\n<\/code><\/pre>\n        ",
            "href": "material\/Stepper\/steps.html",
            "name": "steps",
            "isDeprecated": false,
            "type": "dart:core.List<material.Step>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.Stepper",
            "params": []
        },
        {
            "desc": "<p>The type of stepper that determines the layout. In the case of\n<a href=\"material\/StepperType-class.html\">StepperType.horizontal<\/a>, the content of the current step is displayed\nunderneath as opposed to the <a href=\"material\/StepperType-class.html\">StepperType.vertical<\/a> case where it is\ndisplayed in-between.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final StepperType type\n\n<\/code><\/pre>\n        ",
            "href": "material\/Stepper\/type.html",
            "name": "type",
            "isDeprecated": false,
            "type": "material.StepperType",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.Stepper",
            "params": []
        }
    ]
}