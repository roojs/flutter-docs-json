{
    "desc": "<p>Iterable that iterates over lists of values from other iterables.<\/p>\n<p>When <a href=\"package-collection_collection\/IterableZip\/iterator.html\">iterator<\/a> is read, an <a href=\"dart-core\/Iterator-class.html\">Iterator<\/a> is created for each <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a> in\nthe <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a> passed to the constructor.<\/p>\n<p>As long as all these iterators have a next value, those next values are\ncombined into a single list, which becomes the next value of this\n<a href=\"dart-core\/Iterable-class.html\">Iterable<\/a>'s <a href=\"dart-core\/Iterator-class.html\">Iterator<\/a>. As soon as any of the iterators run out,\nthe zipped iterator also stops.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-collection_collection\/IterableZip-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "collection",
    "name": "collection.IterableZip",
    "shortname": "IterableZip",
    "extends": [
        "dart:core.List",
        "dart:collection.IterableBase",
        "dart:core.List",
        "dart:core.Iterable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">IterableZip(Iterable&lt;Iterable&lt;T&gt;&gt; iterables) : this._iterables = iterables;<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/IterableZip\/IterableZip.html",
            "isDeprecated": false,
            "type": "",
            "name": "IterableZip",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "collection.IterableZip",
            "params": [
                {
                    "name": "iterables",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.Iterable<dart:core.Iterable>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns an iterator that combines values of the iterables' iterators\nas long as they all have values.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Iterator&lt;List&lt;T&gt;&gt; get iterator {\n  var iterators = _iterables.map((x) =&gt; x.iterator).toList(growable: false);\n  \/\/ TODO(lrn): Return an empty iterator directly if iterators is empty?\n  return new _IteratorZip&lt;T&gt;(iterators);\n}<\/code><\/pre>\n        ",
            "href": "package-collection_collection\/IterableZip\/iterator.html",
            "name": "iterator",
            "isDeprecated": false,
            "type": "dart:core.Iterator<dart:core.List>",
            "memberOf": "collection.IterableZip",
            "params": []
        }
    ]
}