{
    "desc": "<p>A subclass of <a href=\"painting\/ImageProvider-class.html\">ImageProvider<\/a> that knows about <a href=\"services\/AssetBundle-class.html\">AssetBundle<\/a>s.<\/p>\n<p>This factors out the common logic of <a href=\"services\/AssetBundle-class.html\">AssetBundle<\/a>-based <a href=\"painting\/ImageProvider-class.html\">ImageProvider<\/a>\nclasses, simplifying what subclasses must implement to just <a href=\"painting\/ImageProvider\/obtainKey.html\">obtainKey<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "painting\/AssetBundleImageProvider-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "painting",
    "name": "painting.AssetBundleImageProvider",
    "shortname": "AssetBundleImageProvider",
    "extends": [
        "painting.AssetBundleImageKey",
        "painting.ImageProvider",
        "dart:core.Object"
    ],
    "realImplementors": [
        "painting.AssetImage",
        "painting.ExactAssetImage"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const AssetBundleImageProvider();<\/code><\/pre>\n    ",
            "href": "painting\/AssetBundleImageProvider\/AssetBundleImageProvider.html",
            "isDeprecated": false,
            "type": "",
            "name": "AssetBundleImageProvider",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "painting.AssetBundleImageProvider",
            "params": []
        },
        {
            "desc": "<p>Converts a key into an <a href=\"painting\/ImageStreamCompleter-class.html\">ImageStreamCompleter<\/a>, and begins fetching the\nimage using <code>loadAsync<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nImageStreamCompleter load(AssetBundleImageKey key) {\n  return MultiFrameImageStreamCompleter(\n    codec: _loadAsync(key),\n    scale: key.scale,\n    informationCollector: (StringBuffer information) {\n      information.writeln('Image provider: $this');\n      information.write('Image key: $key');\n    },\n  );\n}<\/code><\/pre>\n    ",
            "href": "painting\/AssetBundleImageProvider\/load.html",
            "isDeprecated": false,
            "type": "painting.ImageStreamCompleter",
            "name": "load",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "painting.AssetBundleImageProvider",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "painting.AssetBundleImageKey"
                }
            ]
        }
    ],
    "props": []
}