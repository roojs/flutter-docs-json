{
    "name": "gestures.PointerCancelEvent",
    "extends": [
        "gestures.PointerEvent",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "gestures",
    "events": [],
    "methods": [
        {
            "name": "PointerCancelEvent",
            "type": "",
            "desc": "<p>Creates a pointer cancel event.<\/p>\n<p>All of the arguments must be non-null.<\/p>\n    ",
            "static": false,
            "memberOf": "gestures.PointerCancelEvent",
            "sig": "",
            "params": [
                {
                    "name": "timeStamp",
                    "type": "dart:core.Duration",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "pointer",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "kind",
                    "type": "dart:ui.PointerDeviceKind",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "device",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "position",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "buttons",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "obscured",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "pressure",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "pressureMin",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "pressureMax",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "distance",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "distanceMax",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "size",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "radiusMajor",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "radiusMinor",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "radiusMin",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "radiusMax",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "orientation",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "tilt",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "gestures\/PointerCancelEvent\/PointerCancelEvent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const PointerCancelEvent({\n  Duration timeStamp = Duration.zero,\n  int pointer = 0,\n  PointerDeviceKind kind = PointerDeviceKind.touch,\n  int device = 0,\n  Offset position = Offset.zero,\n  int buttons = 0,\n  bool obscured = false,\n  double pressure = 0.0,\n  double pressureMin = 1.0,\n  double pressureMax = 1.0,\n  double distance = 0.0,\n  double distanceMax = 0.0,\n  double size = 0.0,\n  double radiusMajor = 0.0,\n  double radiusMinor = 0.0,\n  double radiusMin = 0.0,\n  double radiusMax = 0.0,\n  double orientation = 0.0,\n  double tilt = 0.0,\n}) : super(\n  timeStamp: timeStamp,\n  pointer: pointer,\n  kind: kind,\n  device: device,\n  position: position,\n  buttons: buttons,\n  down: false,\n  obscured: obscured,\n  pressure: pressure,\n  pressureMin: pressureMin,\n  pressureMax: pressureMax,\n  distance: distance,\n  distanceMax: distanceMax,\n  size: size,\n  radiusMajor: radiusMajor,\n  radiusMinor: radiusMinor,\n  radiusMin: radiusMin,\n  radiusMax: radiusMax,\n  orientation: orientation,\n  tilt: tilt\n);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "gestures\/PointerCancelEvent-class.html",
    "desc": "<p>The input from the pointer is no longer directed towards this receiver.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "PointerCancelEvent"
}