{
    "desc": "<p>A button for a <a href=\"material\/SnackBar-class.html\">SnackBar<\/a>, known as an \"action\".<\/p>\n<p>Snack bar actions are always enabled. If you want to disable a snack bar\naction, simply don't include it in the snack bar.<\/p>\n<p>Snack bar actions can only be pressed once. Subsequent presses are ignored.<\/p>\n<p>See also:<\/p>\n<ul>\n<li><a href=\"material\/SnackBar-class.html\">SnackBar<\/a><\/li>\n<li><a href=\"https:\/\/material.io\/design\/components\/snackbars.html\">material.io\/design\/components\/snackbars.html<\/a><\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/SnackBarAction-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.SnackBarAction",
    "shortname": "SnackBarAction",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [
        {
            "desc": "<p>The callback to be called when the button is pressed. Must not be null.<\/p>\n<p>This callback will be called at most once each time this action is\ndisplayed in a <a href=\"material\/SnackBar-class.html\">SnackBar<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final VoidCallback onPressed\n\n<\/code><\/pre>\n        ",
            "href": "material\/SnackBarAction\/onPressed.html",
            "isDeprecated": "0",
            "type": "dart:ui.VoidCallback",
            "memberOf": "material.SnackBarAction",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates an action for a <a href=\"material\/SnackBar-class.html\">SnackBar<\/a>.<\/p>\n<p>The <code>label<\/code> and <code>onPressed<\/code> arguments must be non-null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SnackBarAction({\n  Key key,\n  this.textColor,\n  this.disabledTextColor,\n  @required this.label,\n  @required this.onPressed,\n}) : assert(label != null),\n     assert(onPressed != null),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/SnackBarAction\/SnackBarAction.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.SnackBarAction",
            "params": [
                {
                    "name": "disabledTextColor",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "label",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "onPressed",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.VoidCallback"
                },
                {
                    "name": "textColor",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.Color"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/SnackBarAction\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_SnackBarActionState createState() =&gt; _SnackBarActionState();<\/code><\/pre>\n    ",
            "href": "material\/SnackBarAction\/createState.html",
            "isDeprecated": "0",
            "type": "<_SnackBarActionState>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SnackBarAction",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The button disabled label color. This color is shown after the\n<code>snackBarAction<\/code> is dismissed.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color disabledTextColor\n\n<\/code><\/pre>\n        ",
            "href": "material\/SnackBarAction\/disabledTextColor.html",
            "isDeprecated": "0",
            "type": "dart:ui.Color",
            "memberOf": "material.SnackBarAction",
            "params": []
        },
        {
            "desc": "<p>The button label.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String label\n\n<\/code><\/pre>\n        ",
            "href": "material\/SnackBarAction\/label.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "material.SnackBarAction",
            "params": []
        },
        {
            "desc": "<p>The button label color. If not provided, defaults to <code>accentColor<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color textColor\n\n<\/code><\/pre>\n        ",
            "href": "material\/SnackBarAction\/textColor.html",
            "isDeprecated": "0",
            "type": "dart:ui.Color",
            "memberOf": "material.SnackBarAction",
            "params": []
        }
    ]
}