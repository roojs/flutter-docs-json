{
    "name": "widgets.NavigatorObserver",
    "extends": [],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "NavigatorObserver",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "widgets.NavigatorObserver",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "widgets\/NavigatorObserver\/NavigatorObserver.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "didPop",
            "type": "",
            "desc": "<p>The <a href=\"widgets\/Navigator-class.html\">Navigator<\/a> popped <code>route<\/code>.<\/p>\n<p>The route immediately below that one, and thus the newly active\nroute, is <code>previousRoute<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.NavigatorObserver",
            "sig": "",
            "params": [
                {
                    "name": "route",
                    "type": "widgets.Route",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "previousRoute",
                    "type": "widgets.Route",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/NavigatorObserver\/didPop.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void didPop(Route&lt;dynamic&gt; route, Route&lt;dynamic&gt; previousRoute) { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "didPush",
            "type": "",
            "desc": "<p>The <a href=\"widgets\/Navigator-class.html\">Navigator<\/a> pushed <code>route<\/code>.<\/p>\n<p>The route immediately below that one, and thus the previously active\nroute, is <code>previousRoute<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.NavigatorObserver",
            "sig": "",
            "params": [
                {
                    "name": "route",
                    "type": "widgets.Route",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "previousRoute",
                    "type": "widgets.Route",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/NavigatorObserver\/didPush.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void didPush(Route&lt;dynamic&gt; route, Route&lt;dynamic&gt; previousRoute) { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "didRemove",
            "type": "",
            "desc": "<p>The <a href=\"widgets\/Navigator-class.html\">Navigator<\/a> removed <code>route<\/code>.<\/p>\n<p>If only one route is being removed, then the route immediately below\nthat one, if any, is <code>previousRoute<\/code>.<\/p>\n<p>If multiple routes are being removed, then the route below the\nbottommost route being removed, if any, is <code>previousRoute<\/code>, and this\nmethod will be called once for each removed route, from the topmost route\nto the bottommost route.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.NavigatorObserver",
            "sig": "",
            "params": [
                {
                    "name": "route",
                    "type": "widgets.Route",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "previousRoute",
                    "type": "widgets.Route",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/NavigatorObserver\/didRemove.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void didRemove(Route&lt;dynamic&gt; route, Route&lt;dynamic&gt; previousRoute) { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "didReplace",
            "type": "",
            "desc": "<p>The <a href=\"widgets\/Navigator-class.html\">Navigator<\/a> replaced <code>oldRoute<\/code> with <code>newRoute<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.NavigatorObserver",
            "sig": "",
            "params": [
                {
                    "name": "newRoute",
                    "type": "widgets.Route",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "oldRoute",
                    "type": "widgets.Route",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/NavigatorObserver\/didReplace.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void didReplace({ Route&lt;dynamic&gt; newRoute, Route&lt;dynamic&gt; oldRoute }) { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "didStartUserGesture",
            "type": "",
            "desc": "<p>The <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>'s route <code>route<\/code> is being moved by a user gesture.<\/p>\n<p>For example, this is called when an iOS back gesture starts.<\/p>\n<p>Paired with a call to <a href=\"widgets\/NavigatorObserver\/didStopUserGesture.html\">didStopUserGesture<\/a> when the route is no longer\nbeing manipulated via user gesture.<\/p>\n<p>If present, the route immediately below <code>route<\/code> is <code>previousRoute<\/code>.\nThough the gesture may not necessarily conclude at <code>previousRoute<\/code> if\nthe gesture is canceled. In that case, <a href=\"widgets\/NavigatorObserver\/didStopUserGesture.html\">didStopUserGesture<\/a> is still\ncalled but a follow-up <a href=\"widgets\/NavigatorObserver\/didPop.html\">didPop<\/a> is not.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.NavigatorObserver",
            "sig": "",
            "params": [
                {
                    "name": "route",
                    "type": "widgets.Route",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "previousRoute",
                    "type": "widgets.Route",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/NavigatorObserver\/didStartUserGesture.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void didStartUserGesture(Route&lt;dynamic&gt; route, Route&lt;dynamic&gt; previousRoute) { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "didStopUserGesture",
            "type": "",
            "desc": "<p>User gesture is no longer controlling the <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>.<\/p>\n<p>Paired with an earlier call to <a href=\"widgets\/NavigatorObserver\/didStartUserGesture.html\">didStartUserGesture<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.NavigatorObserver",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "widgets\/NavigatorObserver\/didStopUserGesture.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void didStopUserGesture() { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "navigator",
            "type": "widgets.NavigatorState",
            "types": [],
            "desc": "<p>The navigator that the observer is observing, if any.<\/p>\n        ",
            "memberOf": "widgets.NavigatorObserver",
            "isConstant": false,
            "href": "widgets\/NavigatorObserver\/navigator.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">NavigatorState get navigator =&gt; _navigator;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [
        "widgets.HeroController",
        "widgets.RouteObserver"
    ],
    "realImplementors": [
        "widgets.HeroController",
        "widgets.RouteObserver"
    ],
    "cn": [],
    "href": "widgets\/NavigatorObserver-class.html",
    "desc": "<p>An interface for observing the behavior of a <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "NavigatorObserver"
}