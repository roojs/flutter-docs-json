{
    "desc": "<p>An iOS-styled navigation bar.<\/p>\n<p>The navigation bar is a toolbar that minimally consists of a widget, normally\na page title, in the <a href=\"cupertino\/CupertinoNavigationBar\/middle.html\">middle<\/a> of the toolbar.<\/p>\n<p>It also supports a <a href=\"cupertino\/CupertinoNavigationBar\/leading.html\">leading<\/a> and <a href=\"cupertino\/CupertinoNavigationBar\/trailing.html\">trailing<\/a> widget before and after the\n<a href=\"cupertino\/CupertinoNavigationBar\/middle.html\">middle<\/a> widget while keeping the <a href=\"cupertino\/CupertinoNavigationBar\/middle.html\">middle<\/a> widget centered.<\/p>\n<p>The <a href=\"cupertino\/CupertinoNavigationBar\/leading.html\">leading<\/a> widget will automatically be a back chevron icon button (or a\nclose button in case of a fullscreen dialog) to pop the current route if none\nis provided and <a href=\"cupertino\/CupertinoNavigationBar\/automaticallyImplyLeading.html\">automaticallyImplyLeading<\/a> is true (true by default).<\/p>\n<p>The <a href=\"cupertino\/CupertinoNavigationBar\/middle.html\">middle<\/a> widget will automatically be a title text from the current\n<a href=\"cupertino\/CupertinoPageRoute-class.html\">CupertinoPageRoute<\/a> if none is provided and <a href=\"cupertino\/CupertinoNavigationBar\/automaticallyImplyMiddle.html\">automaticallyImplyMiddle<\/a> is\ntrue (true by default).<\/p>\n<p>It should be placed at top of the screen and automatically accounts for\nthe OS's status bar.<\/p>\n<p>If the given <a href=\"cupertino\/CupertinoNavigationBar\/backgroundColor.html\">backgroundColor<\/a>'s opacity is not 1.0 (which is the case by\ndefault), it will produce a blurring effect to the content behind it.<\/p>\n<p>When <a href=\"cupertino\/CupertinoNavigationBar\/transitionBetweenRoutes.html\">transitionBetweenRoutes<\/a> is true, this navigation bar will transition\non top of the routes instead of inside them if the route being transitioned\nto also has a <a href=\"cupertino\/CupertinoNavigationBar-class.html\">CupertinoNavigationBar<\/a> or a <a href=\"cupertino\/CupertinoSliverNavigationBar-class.html\">CupertinoSliverNavigationBar<\/a>\nwith <a href=\"cupertino\/CupertinoNavigationBar\/transitionBetweenRoutes.html\">transitionBetweenRoutes<\/a> set to true. If <a href=\"cupertino\/CupertinoNavigationBar\/transitionBetweenRoutes.html\">transitionBetweenRoutes<\/a> is\ntrue, none of the <a href=\"widgets\/Widget-class.html\">Widget<\/a> parameters can contain a key in its subtree since\nthat widget will exist in multiple places in the tree simultaneously.<\/p>\n<p>By default, only one <a href=\"cupertino\/CupertinoNavigationBar-class.html\">CupertinoNavigationBar<\/a> or <a href=\"cupertino\/CupertinoSliverNavigationBar-class.html\">CupertinoSliverNavigationBar<\/a>\nshould be present in each <a href=\"widgets\/PageRoute-class.html\">PageRoute<\/a> to support the default transitions.\nUse <a href=\"cupertino\/CupertinoNavigationBar\/transitionBetweenRoutes.html\">transitionBetweenRoutes<\/a> or <a href=\"cupertino\/CupertinoNavigationBar\/heroTag.html\">heroTag<\/a> to customize the transition\nbehavior for multiple navigation bars per route.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"cupertino\/CupertinoPageScaffold-class.html\">CupertinoPageScaffold<\/a>, a page layout helper typically hosting the\n<a href=\"cupertino\/CupertinoNavigationBar-class.html\">CupertinoNavigationBar<\/a>.<\/li>\n<li>\n<a href=\"cupertino\/CupertinoSliverNavigationBar-class.html\">CupertinoSliverNavigationBar<\/a> for a navigation bar to be placed in a\nscrolling list and that supports iOS-11-style large titles.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": null,
    "href": "cupertino\/CupertinoNavigationBar-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "cupertino",
    "name": "cupertino.CupertinoNavigationBar",
    "shortname": "CupertinoNavigationBar",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a navigation bar in the iOS style.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const CupertinoNavigationBar({\n  Key key,\n  this.leading,\n  this.automaticallyImplyLeading = true,\n  this.automaticallyImplyMiddle = true,\n  this.previousPageTitle,\n  this.middle,\n  this.trailing,\n  this.border = _kDefaultNavBarBorder,\n  this.backgroundColor,\n  this.padding,\n  this.actionsForegroundColor,\n  this.transitionBetweenRoutes = true,\n  this.heroTag = _defaultHeroTag,\n}) : assert(automaticallyImplyLeading != null),\n     assert(automaticallyImplyMiddle != null),\n     assert(transitionBetweenRoutes != null),\n     assert(\n       heroTag != null,\n       'heroTag cannot be null. Use transitionBetweenRoutes = false to '\n       'disable Hero transition on this navigation bar.'\n     ),\n     assert(\n       !transitionBetweenRoutes || identical(heroTag, _defaultHeroTag),\n       'Cannot specify a heroTag override if this navigation bar does not '\n       'transition due to transitionBetweenRoutes = false.'\n     ),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoNavigationBar\/CupertinoNavigationBar.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": [
                {
                    "name": "actionsForegroundColor",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "automaticallyImplyLeading",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "automaticallyImplyMiddle",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "backgroundColor",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "border",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "painting.Border"
                },
                {
                    "name": "heroTag",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.Object"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "leading",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "middle",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "padding",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "painting.EdgeInsetsDirectional"
                },
                {
                    "name": "previousPageTitle",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "trailing",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "transitionBetweenRoutes",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"cupertino\/CupertinoNavigationBar\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_CupertinoNavigationBarState createState() {\n  return _CupertinoNavigationBarState();\n}<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoNavigationBar\/createState.html",
            "isDeprecated": "0",
            "type": "<_CupertinoNavigationBarState>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Default color used for text and icons of the <a href=\"cupertino\/CupertinoNavigationBar\/leading.html\">leading<\/a> and <a href=\"cupertino\/CupertinoNavigationBar\/trailing.html\">trailing<\/a>\nwidgets in the navigation bar.<\/p>\n<p>Defaults to the <code>primaryColor<\/code> of the <a href=\"cupertino\/CupertinoTheme-class.html\">CupertinoTheme<\/a> when null.\nThe default color for text in the <a href=\"cupertino\/CupertinoNavigationBar\/middle.html\">middle<\/a> slot is always black, as per\niOS standard design.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color actionsForegroundColor\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/actionsForegroundColor.html",
            "isDeprecated": "0",
            "type": "dart:ui.Color",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>Controls whether we should try to imply the leading widget if null.<\/p>\n<p>If true and <a href=\"cupertino\/CupertinoNavigationBar\/leading.html\">leading<\/a> is null, automatically try to deduce what the <a href=\"cupertino\/CupertinoNavigationBar\/leading.html\">leading<\/a>\nwidget should be. If <a href=\"cupertino\/CupertinoNavigationBar\/leading.html\">leading<\/a> widget is not null, this parameter has no effect.<\/p>\n<p>Specifically this navigation bar will:<\/p>\n<ol>\n<li>Show a 'Close' button if the current route is a <code>fullscreenDialog<\/code>.<\/li>\n<li>Show a back chevron with <a href=\"cupertino\/CupertinoNavigationBar\/previousPageTitle.html\">previousPageTitle<\/a> if <a href=\"cupertino\/CupertinoNavigationBar\/previousPageTitle.html\">previousPageTitle<\/a> is\nnot null.<\/li>\n<li>Show a back chevron with the previous route's <code>title<\/code> if the current\nroute is a <a href=\"cupertino\/CupertinoPageRoute-class.html\">CupertinoPageRoute<\/a> and the previous route is also a\n<a href=\"cupertino\/CupertinoPageRoute-class.html\">CupertinoPageRoute<\/a>.<\/li>\n<\/ol>\n<p>This value cannot be null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool automaticallyImplyLeading\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/automaticallyImplyLeading.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>Controls whether we should try to imply the middle widget if null.<\/p>\n<p>If true and <a href=\"cupertino\/CupertinoNavigationBar\/middle.html\">middle<\/a> is null, automatically fill in a <a href=\"widgets\/Text-class.html\">Text<\/a> widget with\nthe current route's <code>title<\/code> if the route is a <a href=\"cupertino\/CupertinoPageRoute-class.html\">CupertinoPageRoute<\/a>.\nIf <a href=\"cupertino\/CupertinoNavigationBar\/middle.html\">middle<\/a> widget is not null, this parameter has no effect.<\/p>\n<p>This value cannot be null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool automaticallyImplyMiddle\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/automaticallyImplyMiddle.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>The background color of the navigation bar. If it contains transparency, the\ntab bar will automatically produce a blurring effect to the content\nbehind it.<\/p>\n<p>Defaults to <a href=\"cupertino\/CupertinoTheme-class.html\">CupertinoTheme<\/a>'s <code>barBackgroundColor<\/code> if null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color backgroundColor\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/backgroundColor.html",
            "isDeprecated": "0",
            "type": "dart:ui.Color",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>The border of the navigation bar. By default renders a single pixel bottom border side.<\/p>\n<p>If a border is null, the navigation bar will not display a border.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Border border\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/border.html",
            "isDeprecated": "0",
            "type": "painting.Border",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>True if the navigation bar's background color has no transparency.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get fullObstruction =&gt; backgroundColor == null ? null : backgroundColor.alpha == 0xFF;<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/fullObstruction.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>Tag for the navigation bar's Hero widget if <a href=\"cupertino\/CupertinoNavigationBar\/transitionBetweenRoutes.html\">transitionBetweenRoutes<\/a> is true.<\/p>\n<p>Defaults to a common tag between all <a href=\"cupertino\/CupertinoNavigationBar-class.html\">CupertinoNavigationBar<\/a> and\n<a href=\"cupertino\/CupertinoSliverNavigationBar-class.html\">CupertinoSliverNavigationBar<\/a> instances of the same <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>. With the\ndefault tag, all navigation bars of the same navigator can transition\nbetween each other as long as there's only one navigation bar per route.<\/p>\n<p>This <a href=\"cupertino\/CupertinoNavigationBar\/heroTag.html\">heroTag<\/a> can be overridden to manually handle having multiple\nnavigation bars per route or to transition between multiple\n<a href=\"widgets\/Navigator-class.html\">Navigator<\/a>s.<\/p>\n<p>Cannot be null. To disable Hero transitions for this navigation bar,\nset <a href=\"cupertino\/CupertinoNavigationBar\/transitionBetweenRoutes.html\">transitionBetweenRoutes<\/a> to false.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Object heroTag\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/heroTag.html",
            "isDeprecated": "0",
            "type": "dart:core.Object",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>Widget to place at the start of the navigation bar. Normally a back button\nfor a normal page or a cancel button for full page dialogs.<\/p>\n<p>If null and <a href=\"cupertino\/CupertinoNavigationBar\/automaticallyImplyLeading.html\">automaticallyImplyLeading<\/a> is true, an appropriate button\nwill be automatically created.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget leading\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/leading.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>Widget to place in the middle of the navigation bar. Normally a title or\na segmented control.<\/p>\n<p>If null and <a href=\"cupertino\/CupertinoNavigationBar\/automaticallyImplyMiddle.html\">automaticallyImplyMiddle<\/a> is true, an appropriate <a href=\"widgets\/Text-class.html\">Text<\/a>\ntitle will be created if the current route is a <a href=\"cupertino\/CupertinoPageRoute-class.html\">CupertinoPageRoute<\/a> and\nhas a <code>title<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget middle\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/middle.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>Padding for the contents of the navigation bar.<\/p>\n<p>If null, the navigation bar will adopt the following defaults:<\/p>\n<ul>\n<li>Vertically, contents will be sized to the same height as the navigation\nbar itself minus the status bar.<\/li>\n<li>Horizontally, padding will be 16 pixels according to iOS specifications\nunless the leading widget is an automatically inserted back button, in\nwhich case the padding will be 0.<\/li>\n<\/ul>\n<p>Vertical padding won't change the height of the nav bar.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final EdgeInsetsDirectional padding\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/padding.html",
            "isDeprecated": "0",
            "type": "painting.EdgeInsetsDirectional",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>The size this widget would prefer if it were otherwise unconstrained.<\/p>\n<p>In many cases it's only necessary to define one preferred dimension.\nFor example the <a href=\"material\/Scaffold-class.html\">Scaffold<\/a> only depends on its app bar's preferred\nheight. In that case implementations of this method can just return\n<code>new Size.fromHeight(myAppBarHeight)<\/code>;<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nSize get preferredSize {\n  return const Size.fromHeight(_kNavBarPersistentHeight);\n}<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/preferredSize.html",
            "isDeprecated": "0",
            "type": "dart:ui.Size",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>Manually specify the previous route's title when automatically implying\nthe leading back button.<\/p>\n<p>Overrides the text shown with the back chevron instead of automatically\nshowing the previous <a href=\"cupertino\/CupertinoPageRoute-class.html\">CupertinoPageRoute<\/a>'s <code>title<\/code> when\n<a href=\"cupertino\/CupertinoNavigationBar\/automaticallyImplyLeading.html\">automaticallyImplyLeading<\/a> is true.<\/p>\n<p>Has no effect when <a href=\"cupertino\/CupertinoNavigationBar\/leading.html\">leading<\/a> is not null or if <a href=\"cupertino\/CupertinoNavigationBar\/automaticallyImplyLeading.html\">automaticallyImplyLeading<\/a>\nis false.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String previousPageTitle\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/previousPageTitle.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>Widget to place at the end of the navigation bar. Normally additional actions\ntaken on the page such as a search or edit function.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget trailing\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/trailing.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        },
        {
            "desc": "<p>Whether to transition between navigation bars.<\/p>\n<p>When <a href=\"cupertino\/CupertinoNavigationBar\/transitionBetweenRoutes.html\">transitionBetweenRoutes<\/a> is true, this navigation bar will transition\non top of the routes instead of inside it if the route being transitioned\nto also has a <a href=\"cupertino\/CupertinoNavigationBar-class.html\">CupertinoNavigationBar<\/a> or a <a href=\"cupertino\/CupertinoSliverNavigationBar-class.html\">CupertinoSliverNavigationBar<\/a>\nwith <a href=\"cupertino\/CupertinoNavigationBar\/transitionBetweenRoutes.html\">transitionBetweenRoutes<\/a> set to true.<\/p>\n<p>This transition will also occur on edge back swipe gestures like on iOS\nbut only if the previous page below has <code>maintainState<\/code> set to true on the\n<a href=\"widgets\/PageRoute-class.html\">PageRoute<\/a>.<\/p>\n<p>When set to true, only one navigation bar can be present per route unless\n<a href=\"cupertino\/CupertinoNavigationBar\/heroTag.html\">heroTag<\/a> is also set.<\/p>\n<p>This value defaults to true and cannot be null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool transitionBetweenRoutes\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoNavigationBar\/transitionBetweenRoutes.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "cupertino.CupertinoNavigationBar",
            "params": []
        }
    ]
}