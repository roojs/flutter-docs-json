{
    "desc": "<p>An object that maintains a list of listeners.<\/p>\n<p>The listeners are typically used to notify clients that the object has been\nupdated.<\/p>\n<p>There are two variants of this interface:<\/p>\n<ul>\n<li>\n<p><a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a>, an interface that augments the <a href=\"foundation\/Listenable-class.html\">Listenable<\/a> interface\nwith the concept of a <em>current value<\/em>.<\/p>\n<\/li>\n<li>\n<p><a href=\"animation\/Animation-class.html\">Animation<\/a>, an interface that augments the <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a> interface\nto add the concept of direction (forward or reverse).<\/p>\n<\/li>\n<\/ul>\n<p>Many classes in the Flutter API use or implement these interfaces. The\nfollowing subclasses are especially relevant:<\/p>\n<ul>\n<li>\n<p><a href=\"foundation\/ChangeNotifier-class.html\">ChangeNotifier<\/a>, which can be subclassed or mixed in to create objects\nthat implement the <a href=\"foundation\/Listenable-class.html\">Listenable<\/a> interface.<\/p>\n<\/li>\n<li>\n<p><a href=\"foundation\/ValueNotifier-class.html\">ValueNotifier<\/a>, which implements the <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a> interface with\na mutable value that triggers the notifications when modified.<\/p>\n<\/li>\n<\/ul>\n<p>The terms \"notify clients\", \"send notifications\", \"trigger notifications\",\nand \"fire notifications\" are used interchangeably.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/AnimatedBuilder-class.html\">AnimatedBuilder<\/a>, a widget that uses a builder callback to rebuild\nwhenever a given <a href=\"foundation\/Listenable-class.html\">Listenable<\/a> triggers its notifications. This widget is\ncommonly used with <a href=\"animation\/Animation-class.html\">Animation<\/a> subclasses, wherein its name. It is a\nsubclass of <a href=\"widgets\/AnimatedWidget-class.html\">AnimatedWidget<\/a>, which can be used to create widgets that\nare driven from a <a href=\"foundation\/Listenable-class.html\">Listenable<\/a>.<\/li>\n<li>\n<a href=\"widgets\/ValueListenableBuilder-class.html\">ValueListenableBuilder<\/a>, a widget that uses a builder callback to\nrebuild whenever a <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a> object triggers its notifications,\nproviding the builder with the value of the object.<\/li>\n<li>\n<a href=\"widgets\/InheritedNotifier-class.html\">InheritedNotifier<\/a>, an abstract superclass for widgets that use a\n<a href=\"foundation\/Listenable-class.html\">Listenable<\/a>'s notifications to trigger rebuilds in descendant widgets\nthat declare a dependency on them, using the <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> mechanism.<\/li>\n<li>\n<a href=\"foundation\/Listenable\/Listenable.merge.html\">new Listenable.merge<\/a>, which creates a <a href=\"foundation\/Listenable-class.html\">Listenable<\/a> that triggers\nnotifications whenever any of a list of other <a href=\"foundation\/Listenable-class.html\">Listenable<\/a>s trigger their\nnotifications.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "foundation\/Listenable-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "foundation",
    "name": "foundation.Listenable",
    "shortname": "Listenable",
    "extends": [],
    "realImplementors": [
        "animation.AlwaysStoppedAnimation",
        "animation.AnimationController",
        "animation.AnimationMax",
        "animation.AnimationMean",
        "animation.AnimationMin",
        "animation.CurvedAnimation",
        "animation.ProxyAnimation",
        "animation.ReverseAnimation",
        "animation.TrainHoppingAnimation",
        "widgets.BannerPainter"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Listenable();<\/code><\/pre>\n    ",
            "href": "foundation\/Listenable\/Listenable.html",
            "isDeprecated": false,
            "type": "",
            "name": "Listenable",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "foundation.Listenable",
            "params": []
        },
        {
            "desc": "<p>Register a closure to be called when the object notifies its listeners.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addListener(VoidCallback listener);<\/code><\/pre>\n    ",
            "href": "foundation\/Listenable\/addListener.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "addListener",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "foundation.Listenable",
            "params": [
                {
                    "name": "listener",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.VoidCallback"
                }
            ]
        },
        {
            "desc": "<p>Remove a previously registered closure from the list of closures that the\nobject notifies.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void removeListener(VoidCallback listener);<\/code><\/pre>\n    ",
            "href": "foundation\/Listenable\/removeListener.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "removeListener",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "foundation.Listenable",
            "params": [
                {
                    "name": "listener",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.VoidCallback"
                }
            ]
        }
    ],
    "props": []
}