{
    "name": "services.TextInput",
    "extends": [],
    "memberOf": "services",
    "events": [],
    "methods": [
        {
            "name": "attach",
            "type": "services.TextInputConnection",
            "desc": "<p>Begin interacting with the text input control.<\/p>\n<p>Calling this function helps multiple clients coordinate about which one is\ncurrently interacting with the text input control. The returned\n<a href=\"services\/TextInputConnection-class.html\">TextInputConnection<\/a> provides an interface for actually interacting with\nthe text input control.<\/p>\n<p>A client that no longer wishes to interact with the text input control\nshould call <a href=\"services\/TextInputConnection\/close.html\">TextInputConnection.close<\/a> on the returned\n<a href=\"services\/TextInputConnection-class.html\">TextInputConnection<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "services.TextInput",
            "sig": "",
            "params": [
                {
                    "name": "client",
                    "type": "services.TextInputClient",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "configuration",
                    "type": "services.TextInputConfiguration",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "services\/TextInput\/attach.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static TextInputConnection attach(TextInputClient client, TextInputConfiguration configuration) {\n  assert(client != null);\n  assert(configuration != null);\n  assert(_debugEnsureInputActionWorksOnPlatform(configuration.inputAction));\n  final TextInputConnection connection = TextInputConnection._(client);\n  _clientHandler._currentConnection = connection;\n  SystemChannels.textInput.invokeMethod&lt;void&gt;(\n    'TextInput.setClient',\n    &lt;dynamic&gt;[ connection._id, configuration.toJson() ],\n  );\n  return connection;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "services\/TextInput-class.html",
    "desc": "<p>An interface to the system's text input control.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "TextInput"
}