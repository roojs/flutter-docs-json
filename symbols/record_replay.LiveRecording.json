{
    "name": "record_replay.LiveRecording",
    "extends": [
        "record_replay.Recording",
        "dart:core.Object"
    ],
    "memberOf": "record_replay",
    "events": [],
    "methods": [
        {
            "name": "LiveRecording",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "record_replay.LiveRecording",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "package-file_record_replay\/LiveRecording\/LiveRecording.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "flush",
            "type": "dart:async.Future<dart:core.Null>",
            "desc": "<p>Writes this recording to disk.<\/p>\n<p>Live recordings will <em>not<\/em> call <code>flush<\/code> on themselves, so it is up to\ncallers to call this method when they wish to write the recording to\ndisk.<\/p>\n<p>If <code>pendingResultTimeout<\/code> is specified, this will wait the specified\nduration for any results that are <code>Future<\/code>s or <code>Stream<\/code>s to complete\nbefore serializing the recording to disk. Futures that don't complete\nwithin the specified duration will have their results recorded as <code>null<\/code>,\nand streams that don't send a \"done\" event within the specified duration\nwill have their results recorded as the list of events the stream has\nfired thus far.<\/p>\n<p>If <code>pendingResultTimeout<\/code> is not specified (or is <code>null<\/code>), this will wait\nindefinitely for for any results that are <code>Future<\/code>s or <code>Stream<\/code>s to\ncomplete before serializing the recording to disk.<\/p>\n<p>Throws a <a href=\"dart-core\/StateError-class.html\">StateError<\/a> if a flush is already in progress.<\/p>\n<p>Returns a future that completes once the recording has been fully written\nto disk.<\/p>\n    ",
            "static": false,
            "memberOf": "record_replay.LiveRecording",
            "sig": "",
            "params": [
                {
                    "name": "pendingResultTimeout",
                    "type": "dart:core.Duration",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-file_record_replay\/LiveRecording\/flush.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;Null&gt; flush({Duration pendingResultTimeout});<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "dart:async.Future",
                "dart:core.Null"
            ]
        }
    ],
    "props": [
        {
            "name": "destination",
            "type": "file.Directory",
            "types": [],
            "desc": "<p>The directory in which recording files will be stored.<\/p>\n<p>These contents of these files, while human readable, do not constitute an\nAPI or contract. Their makeup and structure is subject to change from\none version of <code>package:file<\/code> to the next.<\/p>\n        ",
            "memberOf": "record_replay.LiveRecording",
            "isConstant": false,
            "href": "package-file_record_replay\/LiveRecording\/destination.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Directory get destination;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "package-file_record_replay\/LiveRecording-class.html",
    "desc": "<p>An <a href=\"package-file_record_replay\/Recording-class.html\">Recording<\/a> in progress that can be serialized to disk for later use\nin <a href=\"package-file_record_replay\/ReplayFileSystem-class.html\">ReplayFileSystem<\/a>.<\/p>\n<p>Live recordings exist only in memory until <a href=\"package-file_record_replay\/LiveRecording\/flush.html\">flush<\/a> is called.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "LiveRecording"
}