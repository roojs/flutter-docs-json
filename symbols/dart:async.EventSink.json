{
    "desc": "<p>A <a href=\"dart-core\/Sink-class.html\">Sink<\/a> that supports adding errors.<\/p>\n<p>This makes it suitable for capturing the results of asynchronous\ncomputations, which can complete with a value or an error.<\/p>\n<p>The <a href=\"dart-async\/EventSink-class.html\">EventSink<\/a> has been designed to handle asynchronous events from\n<a href=\"dart-async\/Stream-class.html\">Stream<\/a>s. See, for example, <a href=\"dart-async\/Stream\/Stream.eventTransformed.html\">Stream.eventTransformed<\/a> which uses\n<code>EventSink<\/code>s to transform events.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-async\/EventSink-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:async",
    "name": "dart:async.EventSink",
    "shortname": "EventSink",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "dart-async\/EventSink\/EventSink.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:async.EventSink",
            "params": []
        },
        {
            "desc": "<p>Adds a data <code>event<\/code> to the sink.<\/p>\n<p>Must not be called on a closed sink.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(T event);<\/code><\/pre>\n    ",
            "href": "dart-async\/EventSink\/add.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:async.EventSink",
            "params": [
                {
                    "name": "event",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<T>"
                }
            ]
        },
        {
            "desc": "<p>Adds an <code>error<\/code> to the sink.<\/p>\n<p>Must not be called on a closed sink.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addError(Object error, [StackTrace stackTrace]);<\/code><\/pre>\n    ",
            "href": "dart-async\/EventSink\/addError.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:async.EventSink",
            "params": [
                {
                    "name": "error",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Object"
                },
                {
                    "name": "stackTrace",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.StackTrace"
                }
            ]
        },
        {
            "desc": "<p>Closes the sink.<\/p>\n<p>Calling this method more than once is allowed, but does nothing.<\/p>\n<p>Neither <a href=\"dart-async\/EventSink\/add.html\">add<\/a> nor <a href=\"dart-async\/EventSink\/addError.html\">addError<\/a> must be called after this method.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void close();<\/code><\/pre>\n    ",
            "href": "dart-async\/EventSink\/close.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:async.EventSink",
            "params": []
        }
    ],
    "props": []
}