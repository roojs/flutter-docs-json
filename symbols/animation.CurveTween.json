{
    "name": "animation.CurveTween",
    "extends": [
        "dart:core.double",
        "animation.Animatable",
        "dart:core.Object"
    ],
    "memberOf": "animation",
    "events": [],
    "methods": [
        {
            "name": "CurveTween",
            "type": "",
            "desc": "<p>Creates a curve tween.<\/p>\n<p>The <code>curve<\/code> argument must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "animation.CurveTween",
            "sig": "",
            "params": [
                {
                    "name": "curve",
                    "type": "animation.Curve",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "animation\/CurveTween\/CurveTween.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">CurveTween({ @required this.curve })\n  : assert(curve != null);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "animation.CurveTween",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "animation\/CurveTween\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; '$runtimeType(curve: $curve)';<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "transform",
            "type": "dart:core.double",
            "desc": "<p>Returns the value of the object at point <code>t<\/code>.<\/p>\n<p>The value of <code>t<\/code> is nominally a fraction in the range 0.0 to 1.0, though\nin practice it may extend outside this range.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"animation\/Animatable\/evaluate.html\">evaluate<\/a>, which is a shorthand for applying <a href=\"animation\/CurveTween\/transform.html\">transform<\/a> to the value\nof an <a href=\"animation\/Animation-class.html\">Animation<\/a>.<\/li>\n<li>\n<a href=\"animation\/CurveTween\/transform.html\">Curve.transform<\/a>, a similar method for easing curves.<\/li>\n<\/ul>",
            "static": false,
            "memberOf": "animation.CurveTween",
            "sig": "",
            "params": [
                {
                    "name": "t",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "animation\/CurveTween\/transform.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble transform(double t) {\n  if (t == 0.0 || t == 1.0) {\n    assert(curve.transform(t).round() == t);\n    return t;\n  }\n  return curve.transform(t);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "curve",
            "type": "animation.Curve",
            "types": [],
            "desc": "<p>The curve to use when transforming the value of the animation.<\/p>\n        ",
            "memberOf": "animation.CurveTween",
            "isConstant": false,
            "href": "animation\/CurveTween\/curve.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Curve curve\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "animation\/CurveTween-class.html",
    "desc": "<p>Transforms the value of the given animation by the given curve.<\/p>\n<p>This class differs from <a href=\"animation\/CurvedAnimation-class.html\">CurvedAnimation<\/a> in that <a href=\"animation\/CurvedAnimation-class.html\">CurvedAnimation<\/a> applies\na curve to an existing <a href=\"animation\/Animation-class.html\">Animation<\/a> object whereas <a href=\"animation\/CurveTween-class.html\">CurveTween<\/a> can be\nchained with another <a href=\"animation\/Tween-class.html\">Tween<\/a> prior to receiving the underlying <a href=\"animation\/Animation-class.html\">Animation<\/a>.\n(<a href=\"animation\/CurvedAnimation-class.html\">CurvedAnimation<\/a> also has the additional ability of having different\ncurves when the animation is going forward vs when it is going backward,\nwhich can be useful in some scenarios.)<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n<div class=\"snippet-description\">\nThe following code snippet shows how you can apply a curve to a linear\nanimation produced by an <a href=\"animation\/AnimationController-class.html\">AnimationController<\/a> <code>controller<\/code>:\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">final Animation&lt;double&gt; animation = _controller.drive(\n  CurveTween(curve: Curves.ease),\n);<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"animation\/CurvedAnimation-class.html\">CurvedAnimation<\/a>, for an alternative way of expressing the sample above.<\/li>\n<li>\n<a href=\"animation\/AnimationController-class.html\">AnimationController<\/a>, for examples of creating and disposing of an\n<a href=\"animation\/AnimationController-class.html\">AnimationController<\/a>.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "CurveTween"
}