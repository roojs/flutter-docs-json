{
    "desc": "<p>A sliver with a <a href=\"rendering\/RenderBox-class.html\">RenderBox<\/a> child which shrinks and then remains pinned to\nthe start of the viewport like a <a href=\"rendering\/RenderSliverPinnedPersistentHeader-class.html\">RenderSliverPinnedPersistentHeader<\/a>, but\nimmediately grows when the user scrolls in the reverse direction.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"rendering\/RenderSliverFloatingPersistentHeader-class.html\">RenderSliverFloatingPersistentHeader<\/a>, which is similar but scrolls off\nthe top rather than sticking to it.<\/li><\/ul>",
    "dtype": "class",
    "example": "",
    "href": "rendering\/RenderSliverFloatingPinnedPersistentHeader-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "rendering",
    "name": "rendering.RenderSliverFloatingPinnedPersistentHeader",
    "shortname": "RenderSliverFloatingPinnedPersistentHeader",
    "extends": [
        "rendering.RenderSliverFloatingPersistentHeader",
        "rendering.RenderSliverPersistentHeader",
        "rendering.RenderSliver",
        "rendering.RenderObject",
        "foundation.AbstractNode",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a sliver that shrinks when it hits the start of the viewport, then\nstays pinned there, and grows immediately when the user reverses the\nscroll direction.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RenderSliverFloatingPinnedPersistentHeader({\n  RenderBox child,\n  FloatingHeaderSnapConfiguration snapConfiguration,\n}) : super(child: child, snapConfiguration: snapConfiguration);<\/code><\/pre>\n    ",
            "href": "rendering\/RenderSliverFloatingPinnedPersistentHeader\/RenderSliverFloatingPinnedPersistentHeader.html",
            "isDeprecated": false,
            "type": "",
            "name": "RenderSliverFloatingPinnedPersistentHeader",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "rendering.RenderSliverFloatingPinnedPersistentHeader",
            "params": [
                {
                    "name": "child",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "rendering.RenderBox"
                },
                {
                    "name": "snapConfiguration",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "rendering.FloatingHeaderSnapConfiguration"
                }
            ]
        },
        {
            "desc": "<p>Updates <a href=\"rendering\/RenderSliver\/geometry.html\">geometry<\/a>, and returns the new value for <a href=\"rendering\/RenderSliverFloatingPersistentHeader\/childMainAxisPosition.html\">childMainAxisPosition<\/a>.<\/p>\n<p>This is used by <a href=\"rendering\/RenderSliverFloatingPersistentHeader\/performLayout.html\">performLayout<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble updateGeometry() {\n  final double minExtent = this.minExtent;\n  final double minAllowedExtent = constraints.remainingPaintExtent &gt; minExtent ? minExtent : constraints.remainingPaintExtent;\n  final double maxExtent = this.maxExtent;\n  final double paintExtent = maxExtent - _effectiveScrollOffset;\n  final double clampedPaintExtent = paintExtent.clamp(minAllowedExtent, constraints.remainingPaintExtent);\n  final double layoutExtent = maxExtent - constraints.scrollOffset;\n  geometry = SliverGeometry(\n    scrollExtent: maxExtent,\n    paintOrigin: math.min(constraints.overlap, 0.0),\n    paintExtent: clampedPaintExtent,\n    layoutExtent: layoutExtent.clamp(0.0, clampedPaintExtent),\n    maxPaintExtent: maxExtent,\n    maxScrollObstructionExtent: maxExtent,\n    hasVisualOverflow: true, \/\/ Conservatively say we do have overflow to avoid complexity.\n  );\n  return 0.0;\n}<\/code><\/pre>\n    ",
            "href": "rendering\/RenderSliverFloatingPinnedPersistentHeader\/updateGeometry.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "updateGeometry",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.RenderSliverFloatingPinnedPersistentHeader",
            "params": []
        }
    ],
    "props": []
}