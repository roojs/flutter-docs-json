{
    "desc": "<p>3D Matrix.\nValues are stored in column major order.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "vector_math_64\/Matrix3-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "vector_math_64",
    "name": "vector_math_64.Matrix3",
    "shortname": "Matrix3",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>New matrix with specified values.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory Matrix3(double arg0, double arg1, double arg2, double arg3,\n        double arg4, double arg5, double arg6, double arg7, double arg8) =&gt;\n    new Matrix3.zero()\n      ..setValues(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/Matrix3.html",
            "isDeprecated": false,
            "type": "",
            "name": "Matrix3",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg0",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg1",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg2",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg3",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg4",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg5",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg6",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg7",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg8",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Returns the component wise absolute value of this.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix3 absolute() {\n  final Matrix3 r = new Matrix3.zero();\n  final Float64List rStorage = r._m3storage;\n  rStorage[0] = _m3storage[0].abs();\n  rStorage[1] = _m3storage[1].abs();\n  rStorage[2] = _m3storage[2].abs();\n  rStorage[3] = _m3storage[3].abs();\n  rStorage[4] = _m3storage[4].abs();\n  rStorage[5] = _m3storage[5].abs();\n  rStorage[6] = _m3storage[6].abs();\n  rStorage[7] = _m3storage[7].abs();\n  rStorage[8] = _m3storage[8].abs();\n  return r;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/absolute.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix3",
            "name": "absolute",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Returns absolute error between <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> and <code>correct<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double absoluteError(Matrix3 correct) {\n  final double this_norm = infinityNorm();\n  final double correct_norm = correct.infinityNorm();\n  final double diff_norm = (this_norm - correct_norm).abs();\n  return diff_norm;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/absoluteError.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "absoluteError",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "correct",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Rotates <code>arg<\/code> by the absolute rotation of <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>\nReturns <code>arg<\/code>.\nPrimarily used by AABB transformation code.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 absoluteRotate(Vector3 arg) {\n  final double m00 = _m3storage[0].abs();\n  final double m01 = _m3storage[3].abs();\n  final double m02 = _m3storage[6].abs();\n  final double m10 = _m3storage[1].abs();\n  final double m11 = _m3storage[4].abs();\n  final double m12 = _m3storage[7].abs();\n  final double m20 = _m3storage[2].abs();\n  final double m21 = _m3storage[5].abs();\n  final double m22 = _m3storage[8].abs();\n  final Float64List argStorage = arg._v3storage;\n  final double x = argStorage[0];\n  final double y = argStorage[1];\n  final double z = argStorage[2];\n  argStorage[0] = x * m00 + y * m01 + z * m02;\n  argStorage[1] = x * m10 + y * m11 + z * m12;\n  argStorage[2] = x * m20 + y * m21 + z * m22;\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/absoluteRotate.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "absoluteRotate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Rotates <code>arg<\/code> by the absolute rotation of <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>\nReturns <code>arg<\/code>.\nPrimarily used by AABB transformation code.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector2 absoluteRotate2(Vector2 arg) {\n  final double m00 = _m3storage[0].abs();\n  final double m01 = _m3storage[3].abs();\n  final double m10 = _m3storage[1].abs();\n  final double m11 = _m3storage[4].abs();\n  final Float64List argStorage = arg._v2storage;\n  final double x = argStorage[0];\n  final double y = argStorage[1];\n  argStorage[0] = x * m00 + y * m01;\n  argStorage[1] = x * m10 + y * m11;\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/absoluteRotate2.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector2",
            "name": "absoluteRotate2",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector2"
                }
            ]
        },
        {
            "desc": "<p>Add <code>o<\/code> to <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(Matrix3 o) {\n  final Float64List oStorage = o._m3storage;\n  _m3storage[0] = _m3storage[0] + oStorage[0];\n  _m3storage[1] = _m3storage[1] + oStorage[1];\n  _m3storage[2] = _m3storage[2] + oStorage[2];\n  _m3storage[3] = _m3storage[3] + oStorage[3];\n  _m3storage[4] = _m3storage[4] + oStorage[4];\n  _m3storage[5] = _m3storage[5] + oStorage[5];\n  _m3storage[6] = _m3storage[6] + oStorage[6];\n  _m3storage[7] = _m3storage[7] + oStorage[7];\n  _m3storage[8] = _m3storage[8] + oStorage[8];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/add.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "add",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "o",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Multiply <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> to each set of xyz values in <code>array<\/code> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;double&gt; applyToVector3Array(List&lt;double&gt; array, [int offset = 0]) {\n  for (int i = 0, j = offset; i &lt; array.length; i += 3, j += 3) {\n    final Vector3 v = new Vector3.array(array, j)..applyMatrix3(this);\n    array[j] = v.storage[0];\n    array[j + 1] = v.storage[1];\n    array[j + 2] = v.storage[2];\n  }\n\n  return array;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/applyToVector3Array.html",
            "isDeprecated": false,
            "type": "dart:core.List<dart:core.double>",
            "name": "applyToVector3Array",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "array",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.double>"
                },
                {
                    "name": "offset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Clone of <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix3 clone() =&gt; new Matrix3.copy(this);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/clone.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix3",
            "name": "clone",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Copies elements from <code>array<\/code> into <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void copyFromArray(List&lt;double&gt; array, [int offset = 0]) {\n  final int i = offset;\n  _m3storage[8] = array[i + 8];\n  _m3storage[7] = array[i + 7];\n  _m3storage[6] = array[i + 6];\n  _m3storage[5] = array[i + 5];\n  _m3storage[4] = array[i + 4];\n  _m3storage[3] = array[i + 3];\n  _m3storage[2] = array[i + 2];\n  _m3storage[1] = array[i + 1];\n  _m3storage[0] = array[i + 0];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/copyFromArray.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "copyFromArray",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "array",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.double>"
                },
                {
                    "name": "offset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Copy <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> into <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix3 copyInto(Matrix3 arg) {\n  final Float64List argStorage = arg._m3storage;\n  argStorage[0] = _m3storage[0];\n  argStorage[1] = _m3storage[1];\n  argStorage[2] = _m3storage[2];\n  argStorage[3] = _m3storage[3];\n  argStorage[4] = _m3storage[4];\n  argStorage[5] = _m3storage[5];\n  argStorage[6] = _m3storage[6];\n  argStorage[7] = _m3storage[7];\n  argStorage[8] = _m3storage[8];\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/copyInto.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix3",
            "name": "copyInto",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Copies <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> into <code>array<\/code> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void copyIntoArray(List&lt;num&gt; array, [int offset = 0]) {\n  final int i = offset;\n  array[i + 8] = _m3storage[8];\n  array[i + 7] = _m3storage[7];\n  array[i + 6] = _m3storage[6];\n  array[i + 5] = _m3storage[5];\n  array[i + 4] = _m3storage[4];\n  array[i + 3] = _m3storage[3];\n  array[i + 2] = _m3storage[2];\n  array[i + 1] = _m3storage[1];\n  array[i + 0] = _m3storage[0];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/copyIntoArray.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "copyIntoArray",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "array",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.num>"
                },
                {
                    "name": "offset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Set this matrix to be the inverse of <code>arg<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double copyInverse(Matrix3 arg) {\n  final double det = arg.determinant();\n  if (det == 0.0) {\n    setFrom(arg);\n    return 0.0;\n  }\n  final double invDet = 1.0 \/ det;\n  final Float64List argStorage = arg._m3storage;\n  final double ix = invDet *\n      (argStorage[4] * argStorage[8] - argStorage[5] * argStorage[7]);\n  final double iy = invDet *\n      (argStorage[2] * argStorage[7] - argStorage[1] * argStorage[8]);\n  final double iz = invDet *\n      (argStorage[1] * argStorage[5] - argStorage[2] * argStorage[4]);\n  final double jx = invDet *\n      (argStorage[5] * argStorage[6] - argStorage[3] * argStorage[8]);\n  final double jy = invDet *\n      (argStorage[0] * argStorage[8] - argStorage[2] * argStorage[6]);\n  final double jz = invDet *\n      (argStorage[2] * argStorage[3] - argStorage[0] * argStorage[5]);\n  final double kx = invDet *\n      (argStorage[3] * argStorage[7] - argStorage[4] * argStorage[6]);\n  final double ky = invDet *\n      (argStorage[1] * argStorage[6] - argStorage[0] * argStorage[7]);\n  final double kz = invDet *\n      (argStorage[0] * argStorage[4] - argStorage[1] * argStorage[3]);\n  _m3storage[0] = ix;\n  _m3storage[1] = iy;\n  _m3storage[2] = iz;\n  _m3storage[3] = jx;\n  _m3storage[4] = jy;\n  _m3storage[5] = jz;\n  _m3storage[6] = kx;\n  _m3storage[7] = ky;\n  _m3storage[8] = kz;\n  return det;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/copyInverse.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "copyInverse",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Set this matrix to be the normal matrix of <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void copyNormalMatrix(Matrix4 arg) {\n  copyInverse(arg.getRotation());\n  transpose();\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/copyNormalMatrix.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "copyNormalMatrix",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Returns the determinant of this matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double determinant() {\n  final double x = _m3storage[0] *\n      ((storage[4] * _m3storage[8]) - (storage[5] * _m3storage[7]));\n  final double y = _m3storage[1] *\n      ((storage[3] * _m3storage[8]) - (storage[5] * _m3storage[6]));\n  final double z = _m3storage[2] *\n      ((storage[3] * _m3storage[7]) - (storage[4] * _m3storage[6]));\n  return x - y + z;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/determinant.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "determinant",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Returns the dot product of column <code>j<\/code> and <code>v<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double dotColumn(int j, Vector3 v) {\n  final Float64List vStorage = v._v3storage;\n  return _m3storage[j * 3] * vStorage[0] +\n      _m3storage[j * 3 + 1] * vStorage[1] +\n      _m3storage[j * 3 + 2] * vStorage[2];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/dotColumn.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "dotColumn",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "j",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "v",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Returns the dot product of row <code>i<\/code> and <code>v<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double dotRow(int i, Vector3 v) {\n  final Float64List vStorage = v._v3storage;\n  return _m3storage[i] * vStorage[0] +\n      _m3storage[3 + i] * vStorage[1] +\n      _m3storage[6 + i] * vStorage[2];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/dotRow.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "dotRow",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "i",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "v",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Value at <code>row<\/code>, <code>col<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double entry(int row, int col) {\n  assert((row &gt;= 0) &amp;&amp; (row &lt; dimension));\n  assert((col &gt;= 0) &amp;&amp; (col &lt; dimension));\n\n  return _m3storage[index(row, col)];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/entry.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "entry",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "col",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "row",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Gets the <code>column<\/code> of the matrix<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 getColumn(int column) {\n  final Vector3 r = new Vector3.zero();\n  final Float64List rStorage = r._v3storage;\n  final int entry = column * 3;\n  rStorage[2] = _m3storage[entry + 2];\n  rStorage[1] = _m3storage[entry + 1];\n  rStorage[0] = _m3storage[entry + 0];\n  return r;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/getColumn.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "getColumn",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "column",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Gets the <code>row<\/code> of the matrix<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 getRow(int row) {\n  final Vector3 r = new Vector3.zero();\n  final Float64List rStorage = r._v3storage;\n  rStorage[0] = _m3storage[index(row, 0)];\n  rStorage[1] = _m3storage[index(row, 1)];\n  rStorage[2] = _m3storage[index(row, 2)];\n  return r;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/getRow.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "getRow",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "row",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Return index in storage for <code>row<\/code>, <code>col<\/code> value.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">int index(int row, int col) =&gt; (col * 3) + row;<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/index.html",
            "isDeprecated": false,
            "type": "dart:core.int",
            "name": "index",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "col",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "row",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Returns infinity norm of the matrix. Used for numerical analysis.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double infinityNorm() {\n  double norm = 0.0;\n  {\n    double row_norm = 0.0;\n    row_norm += _m3storage[0].abs();\n    row_norm += _m3storage[1].abs();\n    row_norm += _m3storage[2].abs();\n    norm = row_norm &gt; norm ? row_norm : norm;\n  }\n  {\n    double row_norm = 0.0;\n    row_norm += _m3storage[3].abs();\n    row_norm += _m3storage[4].abs();\n    row_norm += _m3storage[5].abs();\n    norm = row_norm &gt; norm ? row_norm : norm;\n  }\n  {\n    double row_norm = 0.0;\n    row_norm += _m3storage[6].abs();\n    row_norm += _m3storage[7].abs();\n    row_norm += _m3storage[8].abs();\n    norm = row_norm &gt; norm ? row_norm : norm;\n  }\n  return norm;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/infinityNorm.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "infinityNorm",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Invert the matrix. Returns the determinant.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double invert() =&gt; copyInverse(this);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/invert.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "invert",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Is <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> the identity matrix?<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool isIdentity() =&gt;\n    _m3storage[0] == 1.0 \/\/ col 1\n    &amp;&amp;\n    _m3storage[1] == 0.0 &amp;&amp;\n    _m3storage[2] == 0.0 &amp;&amp;\n    _m3storage[3] == 0.0 \/\/ col 2\n    &amp;&amp;\n    _m3storage[4] == 1.0 &amp;&amp;\n    _m3storage[5] == 0.0 &amp;&amp;\n    _m3storage[6] == 0.0 \/\/ col 3\n    &amp;&amp;\n    _m3storage[7] == 0.0 &amp;&amp;\n    _m3storage[8] == 1.0;<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/isIdentity.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "isIdentity",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Is <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> the zero matrix?<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool isZero() =&gt;\n    _m3storage[0] == 0.0 \/\/ col 1\n    &amp;&amp;\n    _m3storage[1] == 0.0 &amp;&amp;\n    _m3storage[2] == 0.0 &amp;&amp;\n    _m3storage[3] == 0.0 \/\/ col 2\n    &amp;&amp;\n    _m3storage[4] == 0.0 &amp;&amp;\n    _m3storage[5] == 0.0 &amp;&amp;\n    _m3storage[6] == 0.0 \/\/ col 3\n    &amp;&amp;\n    _m3storage[7] == 0.0 &amp;&amp;\n    _m3storage[8] == 0.0;<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/isZero.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "isZero",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Create a copy of <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> and multiply it by <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix3 multiplied(Matrix3 arg) =&gt; clone()..multiply(arg);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/multiplied.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix3",
            "name": "multiplied",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Multiply <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> by <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void multiply(Matrix3 arg) {\n  final double m00 = _m3storage[0];\n  final double m01 = _m3storage[3];\n  final double m02 = _m3storage[6];\n  final double m10 = _m3storage[1];\n  final double m11 = _m3storage[4];\n  final double m12 = _m3storage[7];\n  final double m20 = _m3storage[2];\n  final double m21 = _m3storage[5];\n  final double m22 = _m3storage[8];\n  final Float64List argStorage = arg._m3storage;\n  final double n00 = argStorage[0];\n  final double n01 = argStorage[3];\n  final double n02 = argStorage[6];\n  final double n10 = argStorage[1];\n  final double n11 = argStorage[4];\n  final double n12 = argStorage[7];\n  final double n20 = argStorage[2];\n  final double n21 = argStorage[5];\n  final double n22 = argStorage[8];\n  _m3storage[0] = (m00 * n00) + (m01 * n10) + (m02 * n20);\n  _m3storage[3] = (m00 * n01) + (m01 * n11) + (m02 * n21);\n  _m3storage[6] = (m00 * n02) + (m01 * n12) + (m02 * n22);\n  _m3storage[1] = (m10 * n00) + (m11 * n10) + (m12 * n20);\n  _m3storage[4] = (m10 * n01) + (m11 * n11) + (m12 * n21);\n  _m3storage[7] = (m10 * n02) + (m11 * n12) + (m12 * n22);\n  _m3storage[2] = (m20 * n00) + (m21 * n10) + (m22 * n20);\n  _m3storage[5] = (m20 * n01) + (m21 * n11) + (m22 * n21);\n  _m3storage[8] = (m20 * n02) + (m21 * n12) + (m22 * n22);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/multiply.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "multiply",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void multiplyTranspose(Matrix3 arg) {\n  final double m00 = _m3storage[0];\n  final double m01 = _m3storage[3];\n  final double m02 = _m3storage[6];\n  final double m10 = _m3storage[1];\n  final double m11 = _m3storage[4];\n  final double m12 = _m3storage[7];\n  final double m20 = _m3storage[2];\n  final double m21 = _m3storage[5];\n  final double m22 = _m3storage[8];\n  final Float64List argStorage = arg._m3storage;\n  _m3storage[0] =\n      (m00 * argStorage[0]) + (m01 * argStorage[3]) + (m02 * argStorage[6]);\n  _m3storage[3] =\n      (m00 * argStorage[1]) + (m01 * argStorage[4]) + (m02 * argStorage[7]);\n  _m3storage[6] =\n      (m00 * argStorage[2]) + (m01 * argStorage[5]) + (m02 * argStorage[8]);\n  _m3storage[1] =\n      (m10 * argStorage[0]) + (m11 * argStorage[3]) + (m12 * argStorage[6]);\n  _m3storage[4] =\n      (m10 * argStorage[1]) + (m11 * argStorage[4]) + (m12 * argStorage[7]);\n  _m3storage[7] =\n      (m10 * argStorage[2]) + (m11 * argStorage[5]) + (m12 * argStorage[8]);\n  _m3storage[2] =\n      (m20 * argStorage[0]) + (m21 * argStorage[3]) + (m22 * argStorage[6]);\n  _m3storage[5] =\n      (m20 * argStorage[1]) + (m21 * argStorage[4]) + (m22 * argStorage[7]);\n  _m3storage[8] =\n      (m20 * argStorage[2]) + (m21 * argStorage[5]) + (m22 * argStorage[8]);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/multiplyTranspose.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "multiplyTranspose",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Negate <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void negate() {\n  _m3storage[0] = -_m3storage[0];\n  _m3storage[1] = -_m3storage[1];\n  _m3storage[2] = -_m3storage[2];\n  _m3storage[3] = -_m3storage[3];\n  _m3storage[4] = -_m3storage[4];\n  _m3storage[5] = -_m3storage[5];\n  _m3storage[6] = -_m3storage[6];\n  _m3storage[7] = -_m3storage[7];\n  _m3storage[8] = -_m3storage[8];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/negate.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "negate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Returns relative error between <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> and <code>correct<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double relativeError(Matrix3 correct) {\n  final Matrix3 diff = correct - this;\n  final double correct_norm = correct.infinityNorm();\n  final double diff_norm = diff.infinityNorm();\n  return diff_norm \/ correct_norm;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/relativeError.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "relativeError",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "correct",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Scales <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> by <code>scale<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void scale(double scale) {\n  _m3storage[0] = _m3storage[0] * scale;\n  _m3storage[1] = _m3storage[1] * scale;\n  _m3storage[2] = _m3storage[2] * scale;\n  _m3storage[3] = _m3storage[3] * scale;\n  _m3storage[4] = _m3storage[4] * scale;\n  _m3storage[5] = _m3storage[5] * scale;\n  _m3storage[6] = _m3storage[6] * scale;\n  _m3storage[7] = _m3storage[7] * scale;\n  _m3storage[8] = _m3storage[8] * scale;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/scale.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "scale",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "scale",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Converts into Adjugate matrix and scales by <code>scale<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void scaleAdjoint(double scale) {\n  final double m00 = _m3storage[0];\n  final double m01 = _m3storage[3];\n  final double m02 = _m3storage[6];\n  final double m10 = _m3storage[1];\n  final double m11 = _m3storage[4];\n  final double m12 = _m3storage[7];\n  final double m20 = _m3storage[2];\n  final double m21 = _m3storage[5];\n  final double m22 = _m3storage[8];\n  _m3storage[0] = (m11 * m22 - m12 * m21) * scale;\n  _m3storage[1] = (m12 * m20 - m10 * m22) * scale;\n  _m3storage[2] = (m10 * m21 - m11 * m20) * scale;\n  _m3storage[3] = (m02 * m21 - m01 * m22) * scale;\n  _m3storage[4] = (m00 * m22 - m02 * m20) * scale;\n  _m3storage[5] = (m01 * m20 - m00 * m21) * scale;\n  _m3storage[6] = (m01 * m12 - m02 * m11) * scale;\n  _m3storage[7] = (m02 * m10 - m00 * m12) * scale;\n  _m3storage[8] = (m00 * m11 - m01 * m10) * scale;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/scaleAdjoint.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "scaleAdjoint",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "scale",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Create a copy of <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> and scale it by <code>scale<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix3 scaled(double scale) =&gt; clone()..scale(scale);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/scaled.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix3",
            "name": "scaled",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "scale",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Assigns the <code>column<\/code> of the matrix <code>arg<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setColumn(int column, Vector3 arg) {\n  final Float64List argStorage = arg._v3storage;\n  final int entry = column * 3;\n  _m3storage[entry + 2] = argStorage[2];\n  _m3storage[entry + 1] = argStorage[1];\n  _m3storage[entry + 0] = argStorage[0];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setColumn.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setColumn",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "column",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Sets the entire matrix to the column values.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setColumns(Vector3 arg0, Vector3 arg1, Vector3 arg2) {\n  final Float64List arg0Storage = arg0._v3storage;\n  final Float64List arg1Storage = arg1._v3storage;\n  final Float64List arg2Storage = arg2._v3storage;\n  _m3storage[0] = arg0Storage[0];\n  _m3storage[1] = arg0Storage[1];\n  _m3storage[2] = arg0Storage[2];\n  _m3storage[3] = arg1Storage[0];\n  _m3storage[4] = arg1Storage[1];\n  _m3storage[5] = arg1Storage[2];\n  _m3storage[6] = arg2Storage[0];\n  _m3storage[7] = arg2Storage[1];\n  _m3storage[8] = arg2Storage[2];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setColumns.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setColumns",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg0",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "arg1",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "arg2",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Set the diagonal of the matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setDiagonal(Vector3 arg) {\n  _m3storage[0] = arg.storage[0];\n  _m3storage[4] = arg.storage[1];\n  _m3storage[8] = arg.storage[2];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setDiagonal.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setDiagonal",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Set value at <code>row<\/code>, <code>col<\/code> to be <code>v<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setEntry(int row, int col, double v) {\n  assert((row &gt;= 0) &amp;&amp; (row &lt; dimension));\n  assert((col &gt;= 0) &amp;&amp; (col &lt; dimension));\n\n  _m3storage[index(row, col)] = v;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setEntry.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setEntry",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "col",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "row",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "v",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Sets the entire matrix to the matrix in <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setFrom(Matrix3 arg) {\n  final Float64List argStorage = arg._m3storage;\n  _m3storage[8] = argStorage[8];\n  _m3storage[7] = argStorage[7];\n  _m3storage[6] = argStorage[6];\n  _m3storage[5] = argStorage[5];\n  _m3storage[4] = argStorage[4];\n  _m3storage[3] = argStorage[3];\n  _m3storage[2] = argStorage[2];\n  _m3storage[1] = argStorage[1];\n  _m3storage[0] = argStorage[0];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setFrom.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setFrom",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Makes <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> into the identity matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setIdentity() {\n  _m3storage[0] = 1.0;\n  _m3storage[1] = 0.0;\n  _m3storage[2] = 0.0;\n  _m3storage[3] = 0.0;\n  _m3storage[4] = 1.0;\n  _m3storage[5] = 0.0;\n  _m3storage[6] = 0.0;\n  _m3storage[7] = 0.0;\n  _m3storage[8] = 1.0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setIdentity.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setIdentity",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Set <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a> to the outer product of <code>u<\/code> and <code>v<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setOuter(Vector3 u, Vector3 v) {\n  final Float64List uStorage = u._v3storage;\n  final Float64List vStorage = v._v3storage;\n  _m3storage[0] = uStorage[0] * vStorage[0];\n  _m3storage[1] = uStorage[0] * vStorage[1];\n  _m3storage[2] = uStorage[0] * vStorage[2];\n  _m3storage[3] = uStorage[1] * vStorage[0];\n  _m3storage[4] = uStorage[1] * vStorage[1];\n  _m3storage[5] = uStorage[1] * vStorage[2];\n  _m3storage[6] = uStorage[2] * vStorage[0];\n  _m3storage[7] = uStorage[2] * vStorage[1];\n  _m3storage[8] = uStorage[2] * vStorage[2];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setOuter.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setOuter",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "u",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "v",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Turns the matrix into a rotation of <code>radians<\/code> around X<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setRotationX(double radians) {\n  final double c = math.cos(radians);\n  final double s = math.sin(radians);\n  _m3storage[0] = 1.0;\n  _m3storage[1] = 0.0;\n  _m3storage[2] = 0.0;\n  _m3storage[3] = 0.0;\n  _m3storage[4] = c;\n  _m3storage[5] = s;\n  _m3storage[6] = 0.0;\n  _m3storage[7] = -s;\n  _m3storage[8] = c;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setRotationX.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setRotationX",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "radians",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Turns the matrix into a rotation of <code>radians<\/code> around Y<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setRotationY(double radians) {\n  final double c = math.cos(radians);\n  final double s = math.sin(radians);\n  _m3storage[0] = c;\n  _m3storage[1] = 0.0;\n  _m3storage[2] = s;\n  _m3storage[3] = 0.0;\n  _m3storage[4] = 1.0;\n  _m3storage[5] = 0.0;\n  _m3storage[6] = -s;\n  _m3storage[7] = 0.0;\n  _m3storage[8] = c;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setRotationY.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setRotationY",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "radians",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Turns the matrix into a rotation of <code>radians<\/code> around Z<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setRotationZ(double radians) {\n  final double c = math.cos(radians);\n  final double s = math.sin(radians);\n  _m3storage[0] = c;\n  _m3storage[1] = s;\n  _m3storage[2] = 0.0;\n  _m3storage[3] = -s;\n  _m3storage[4] = c;\n  _m3storage[5] = 0.0;\n  _m3storage[6] = 0.0;\n  _m3storage[7] = 0.0;\n  _m3storage[8] = 1.0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setRotationZ.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setRotationZ",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "radians",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Assigns the <code>row<\/code> of to <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setRow(int row, Vector3 arg) {\n  final Float64List argStorage = arg._v3storage;\n  _m3storage[index(row, 0)] = argStorage[0];\n  _m3storage[index(row, 1)] = argStorage[1];\n  _m3storage[index(row, 2)] = argStorage[2];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setRow.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setRow",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "row",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Sets the upper 2x2 of the matrix to be <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setUpper2x2(Matrix2 arg) {\n  final Float64List argStorage = arg._m2storage;\n  _m3storage[0] = argStorage[0];\n  _m3storage[1] = argStorage[1];\n  _m3storage[3] = argStorage[2];\n  _m3storage[4] = argStorage[3];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setUpper2x2.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setUpper2x2",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix2"
                }
            ]
        },
        {
            "desc": "<p>Sets the matrix with specified values.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setValues(double arg0, double arg1, double arg2, double arg3,\n    double arg4, double arg5, double arg6, double arg7, double arg8) {\n  _m3storage[8] = arg8;\n  _m3storage[7] = arg7;\n  _m3storage[6] = arg6;\n  _m3storage[5] = arg5;\n  _m3storage[4] = arg4;\n  _m3storage[3] = arg3;\n  _m3storage[2] = arg2;\n  _m3storage[1] = arg1;\n  _m3storage[0] = arg0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setValues.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setValues",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg0",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg1",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg2",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg3",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg4",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg5",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg6",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg7",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg8",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Zeros <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setZero() {\n  _m3storage[0] = 0.0;\n  _m3storage[1] = 0.0;\n  _m3storage[2] = 0.0;\n  _m3storage[3] = 0.0;\n  _m3storage[4] = 0.0;\n  _m3storage[5] = 0.0;\n  _m3storage[6] = 0.0;\n  _m3storage[7] = 0.0;\n  _m3storage[8] = 0.0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/setZero.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setZero",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Solve <code>A<\/code> * <code>x<\/code> = <code>b<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void solve(Matrix3 A, Vector3 x, Vector3 b) {\n  final double A0x = A.entry(0, 0);\n  final double A0y = A.entry(1, 0);\n  final double A0z = A.entry(2, 0);\n  final double A1x = A.entry(0, 1);\n  final double A1y = A.entry(1, 1);\n  final double A1z = A.entry(2, 1);\n  final double A2x = A.entry(0, 2);\n  final double A2y = A.entry(1, 2);\n  final double A2z = A.entry(2, 2);\n  double rx, ry, rz;\n  double det;\n\n  \/\/ Column1 cross Column 2\n  rx = A1y * A2z - A1z * A2y;\n  ry = A1z * A2x - A1x * A2z;\n  rz = A1x * A2y - A1y * A2x;\n\n  \/\/ A.getColumn(0).dot(x)\n  det = A0x * rx + A0y * ry + A0z * rz;\n  if (det != 0.0) {\n    det = 1.0 \/ det;\n  }\n\n  \/\/ b dot [Column1 cross Column 2]\n  final double x_ = det * (b.x * rx + b.y * ry + b.z * rz);\n\n  \/\/ Column2 cross b\n  rx = -(A2y * b.z - A2z * b.y);\n  ry = -(A2z * b.x - A2x * b.z);\n  rz = -(A2x * b.y - A2y * b.x);\n  \/\/ Column0 dot -[Column2 cross b (Column3)]\n  final double y_ = det * (A0x * rx + A0y * ry + A0z * rz);\n\n  \/\/ b cross Column 1\n  rx = -(b.y * A1z - b.z * A1y);\n  ry = -(b.z * A1x - b.x * A1z);\n  rz = -(b.x * A1y - b.y * A1x);\n  \/\/ Column0 dot -[b cross Column 1]\n  final double z_ = det * (A0x * rx + A0y * ry + A0z * rz);\n\n  x\n    ..x = x_\n    ..y = y_\n    ..z = z_;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/solve.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "solve",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "A",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                },
                {
                    "name": "b",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "x",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Solve <code>A<\/code> * <code>x<\/code> = <code>b<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void solve2(Matrix3 A, Vector2 x, Vector2 b) {\n  final double a11 = A.entry(0, 0);\n  final double a12 = A.entry(0, 1);\n  final double a21 = A.entry(1, 0);\n  final double a22 = A.entry(1, 1);\n  final double bx = b.x - A.storage[6];\n  final double by = b.y - A.storage[7];\n  double det = a11 * a22 - a12 * a21;\n\n  if (det != 0.0) {\n    det = 1.0 \/ det;\n  }\n\n  x\n    ..x = det * (a22 * bx - a12 * by)\n    ..y = det * (a11 * by - a21 * bx);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/solve2.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "solve2",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "A",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                },
                {
                    "name": "b",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector2"
                },
                {
                    "name": "x",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector2"
                }
            ]
        },
        {
            "desc": "<p>Set the diagonal of the matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void splatDiagonal(double arg) {\n  _m3storage[0] = arg;\n  _m3storage[4] = arg;\n  _m3storage[8] = arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/splatDiagonal.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "splatDiagonal",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Subtract <code>o<\/code> from <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void sub(Matrix3 o) {\n  final Float64List oStorage = o._m3storage;\n  _m3storage[0] = _m3storage[0] - oStorage[0];\n  _m3storage[1] = _m3storage[1] - oStorage[1];\n  _m3storage[2] = _m3storage[2] - oStorage[2];\n  _m3storage[3] = _m3storage[3] - oStorage[3];\n  _m3storage[4] = _m3storage[4] - oStorage[4];\n  _m3storage[5] = _m3storage[5] - oStorage[5];\n  _m3storage[6] = _m3storage[6] - oStorage[6];\n  _m3storage[7] = _m3storage[7] - oStorage[7];\n  _m3storage[8] = _m3storage[8] - oStorage[8];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/sub.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "sub",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "o",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Returns a printable string<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; '[0] ${getRow(0)}\\n[1] ${getRow(1)}\\n[2] ${getRow(2)}\\n';<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Returns the trace of the matrix. The trace of a matrix is the sum of\nthe diagonal entries.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double trace() {\n  double t = 0.0;\n  t += _m3storage[0];\n  t += _m3storage[4];\n  t += _m3storage[8];\n  return t;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/trace.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "trace",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Transform <code>arg<\/code> of type <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a> using the transformation defined by\n<a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 transform(Vector3 arg) {\n  final Float64List argStorage = arg._v3storage;\n  final double x_ = (storage[0] * argStorage[0]) +\n      (storage[3] * argStorage[1]) +\n      (storage[6] * argStorage[2]);\n  final double y_ = (storage[1] * argStorage[0]) +\n      (storage[4] * argStorage[1]) +\n      (storage[7] * argStorage[2]);\n  final double z_ = (storage[2] * argStorage[0]) +\n      (storage[5] * argStorage[1]) +\n      (storage[8] * argStorage[2]);\n  arg\n    ..x = x_\n    ..y = y_\n    ..z = z_;\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/transform.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "transform",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Transforms <code>arg<\/code> with <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector2 transform2(Vector2 arg) {\n  final Float64List argStorage = arg._v2storage;\n  final double x_ = (storage[0] * arg.storage[0]) +\n      (storage[3] * arg.storage[1]) +\n      _m3storage[6];\n  final double y_ = (storage[1] * arg.storage[0]) +\n      (storage[4] * arg.storage[1]) +\n      _m3storage[7];\n  argStorage[0] = x_;\n  argStorage[1] = y_;\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/transform2.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector2",
            "name": "transform2",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector2"
                }
            ]
        },
        {
            "desc": "<p>Transform a copy of <code>arg<\/code> of type <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a> using the transformation\ndefined by <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>. If a <code>out<\/code> parameter is supplied, the copy is stored in\n<code>out<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 transformed(Vector3 arg, [Vector3 out]) {\n  if (out == null) {\n    out = new Vector3.copy(arg);\n  } else {\n    out.setFrom(arg);\n  }\n  return transform(out);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/transformed.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "transformed",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "out",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Transpose <a href=\"vector_math_64\/Matrix3-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void transpose() {\n  double temp;\n  temp = _m3storage[3];\n  _m3storage[3] = _m3storage[1];\n  _m3storage[1] = temp;\n  temp = _m3storage[6];\n  _m3storage[6] = _m3storage[2];\n  _m3storage[2] = temp;\n  temp = _m3storage[7];\n  _m3storage[7] = _m3storage[5];\n  _m3storage[5] = temp;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/transpose.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "transpose",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void transposeMultiply(Matrix3 arg) {\n  final double m00 = _m3storage[0];\n  final double m01 = _m3storage[1];\n  final double m02 = _m3storage[2];\n  final double m10 = _m3storage[3];\n  final double m11 = _m3storage[4];\n  final double m12 = _m3storage[5];\n  final double m20 = _m3storage[6];\n  final double m21 = _m3storage[7];\n  final double m22 = _m3storage[8];\n  final Float64List argStorage = arg._m3storage;\n  _m3storage[0] =\n      (m00 * argStorage[0]) + (m01 * arg.storage[1]) + (m02 * arg.storage[2]);\n  _m3storage[3] =\n      (m00 * argStorage[3]) + (m01 * arg.storage[4]) + (m02 * arg.storage[5]);\n  _m3storage[6] =\n      (m00 * argStorage[6]) + (m01 * arg.storage[7]) + (m02 * arg.storage[8]);\n  _m3storage[1] =\n      (m10 * argStorage[0]) + (m11 * arg.storage[1]) + (m12 * arg.storage[2]);\n  _m3storage[4] =\n      (m10 * argStorage[3]) + (m11 * arg.storage[4]) + (m12 * arg.storage[5]);\n  _m3storage[7] =\n      (m10 * argStorage[6]) + (m11 * arg.storage[7]) + (m12 * arg.storage[8]);\n  _m3storage[2] =\n      (m20 * argStorage[0]) + (m21 * arg.storage[1]) + (m22 * arg.storage[2]);\n  _m3storage[5] =\n      (m20 * argStorage[3]) + (m21 * arg.storage[4]) + (m22 * arg.storage[5]);\n  _m3storage[8] =\n      (m20 * argStorage[6]) + (m21 * arg.storage[7]) + (m22 * arg.storage[8]);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/transposeMultiply.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "transposeMultiply",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": [
                {
                    "name": "arg",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Returns the tranpose of this.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix3 transposed() =&gt; clone()..transpose();<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix3\/transposed.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix3",
            "name": "transposed",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Dimension of the matrix.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get dimension =&gt; 3;<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix3\/dimension.html",
            "name": "dimension",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get forward {\n  final double x = _m3storage[6];\n  final double y = _m3storage[7];\n  final double z = _m3storage[8];\n  return new Vector3(x, y, z);\n}<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix3\/forward.html",
            "name": "forward",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"vector_math_64\/Matrix3\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"vector_math_64\/Matrix3\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"vector_math_64\/Matrix3\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"vector_math_64\/Matrix3\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"vector_math_64\/Matrix3\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"vector_math_64\/Matrix3\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get hashCode =&gt; quiver.hashObjects(_m3storage);<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix3\/hashCode.html",
            "name": "hashCode",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get right {\n  final double x = _m3storage[0];\n  final double y = _m3storage[1];\n  final double z = _m3storage[2];\n  return new Vector3(x, y, z);\n}<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix3\/right.html",
            "name": "right",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Returns row 0<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get row0 =&gt; getRow(0);<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix3\/row0.html",
            "name": "row0",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Returns row 1<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get row1 =&gt; getRow(1);<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix3\/row1.html",
            "name": "row1",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>Returns row 2<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get row2 =&gt; getRow(2);<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix3\/row2.html",
            "name": "row2",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "<p>The components of the matrix.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Float64List get storage =&gt; _m3storage;<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix3\/storage.html",
            "name": "storage",
            "isDeprecated": false,
            "type": "dart:typed_data.Float64List",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        },
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get up {\n  final double x = _m3storage[3];\n  final double y = _m3storage[4];\n  final double z = _m3storage[5];\n  return new Vector3(x, y, z);\n}<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix3\/up.html",
            "name": "up",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_64.Matrix3",
            "params": []
        }
    ]
}