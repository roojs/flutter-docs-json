{
    "name": "source_span.SourceSpanBase",
    "extends": [
        "source_span.SourceSpanMixin",
        "dart:core.Object"
    ],
    "memberOf": "source_span",
    "events": [],
    "methods": [
        {
            "name": "SourceSpanBase",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "source_span.SourceSpanBase",
            "sig": "",
            "params": [
                {
                    "name": "start",
                    "type": "source_span.SourceLocation",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "end",
                    "type": "source_span.SourceLocation",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "text",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-source_span_source_span\/SourceSpanBase\/SourceSpanBase.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">SourceSpanBase(this.start, this.end, this.text) {\n  if (end.sourceUrl != start.sourceUrl) {\n    throw new ArgumentError(\"Source URLs \\\"${start.sourceUrl}\\\" and \"\n        \" \\\"${end.sourceUrl}\\\" don't match.\");\n  } else if (end.offset &lt; start.offset) {\n    throw new ArgumentError('End $end must come after start $start.');\n  } else if (text.length != start.distance(end)) {\n    throw new ArgumentError('Text \"$text\" must be ${start.distance(end)} '\n        'characters long.');\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "end",
            "type": "source_span.SourceLocation",
            "types": [],
            "desc": "<p>The end location of this span, exclusive.<\/p>\n        ",
            "memberOf": "source_span.SourceSpanBase",
            "isConstant": false,
            "href": "package-source_span_source_span\/SourceSpanBase\/end.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final SourceLocation end\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "start",
            "type": "source_span.SourceLocation",
            "types": [],
            "desc": "<p>The start location of this span.<\/p>\n        ",
            "memberOf": "source_span.SourceSpanBase",
            "isConstant": false,
            "href": "package-source_span_source_span\/SourceSpanBase\/start.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final SourceLocation start\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "text",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The source text for this span.<\/p>\n        ",
            "memberOf": "source_span.SourceSpanBase",
            "isConstant": false,
            "href": "package-source_span_source_span\/SourceSpanBase\/text.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String text\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [
        "source_span.SourceSpanWithContext"
    ],
    "realImplementors": [
        "source_span.SourceSpanWithContext"
    ],
    "cn": [],
    "href": "package-source_span_source_span\/SourceSpanBase-class.html",
    "desc": "<p>A base class for source spans with <a href=\"package-source_span_source_span\/SourceSpanBase\/start.html\">start<\/a>, <a href=\"package-source_span_source_span\/SourceSpanBase\/end.html\">end<\/a>, and <a href=\"package-source_span_source_span\/SourceSpanBase\/text.html\">text<\/a> known at\nconstruction time.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "SourceSpanBase"
}