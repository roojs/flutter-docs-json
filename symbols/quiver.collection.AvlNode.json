{
    "name": "quiver.collection.AvlNode",
    "extends": [],
    "memberOf": "quiver.collection",
    "events": [],
    "methods": [
        {
            "name": "AvlNode",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "quiver.collection.AvlNode",
            "sig": "",
            "params": [
                {
                    "name": "object",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": true,
            "href": "quiver.collection\/AvlNode\/AvlNode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">AvlNode({V object}) : super(object: object);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.collection.AvlNode",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "quiver.collection\/AvlNode\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() =&gt;\n    \"(b:$balance o: $object l:${left != null} r:${right != null})\";<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "balance",
            "type": "dart:core.int",
            "types": [],
            "desc": "",
            "memberOf": "quiver.collection.AvlNode",
            "isConstant": false,
            "href": "quiver.collection\/AvlNode\/balance.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get balance =&gt; _balanceFactor;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "left",
            "type": "quiver.collection.AvlNode",
            "types": [],
            "desc": "",
            "memberOf": "quiver.collection.AvlNode",
            "isConstant": false,
            "href": "quiver.collection\/AvlNode\/left.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">AvlNode&lt;V&gt; get left =&gt; _left;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "maximumNode",
            "type": "",
            "types": [],
            "desc": "<p>Return the maximum node for the subtree<\/p>\n        ",
            "memberOf": "quiver.collection.AvlNode",
            "isConstant": false,
            "href": "quiver.collection\/AvlNode\/maximumNode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">_TreeNode&lt;V&gt; get maximumNode {\n  var node = this;\n  while (node.right != null) {\n    node = node.right;\n  }\n  return node;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "minimumNode",
            "type": "",
            "types": [],
            "desc": "<p>Return the minimum node for the subtree<\/p>\n        ",
            "memberOf": "quiver.collection.AvlNode",
            "isConstant": false,
            "href": "quiver.collection\/AvlNode\/minimumNode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">_TreeNode&lt;V&gt; get minimumNode {\n  var node = this;\n  while (node.left != null) {\n    node = node.left;\n  }\n  return node;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "object",
            "type": "",
            "types": [],
            "desc": "",
            "memberOf": "quiver.collection.AvlNode",
            "isConstant": false,
            "href": "quiver.collection\/AvlNode\/object.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">V object\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "parent",
            "type": "quiver.collection.AvlNode",
            "types": [],
            "desc": "",
            "memberOf": "quiver.collection.AvlNode",
            "isConstant": false,
            "href": "quiver.collection\/AvlNode\/parent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">AvlNode&lt;V&gt; get parent =&gt; _parent;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "predecessor",
            "type": "",
            "types": [],
            "desc": "<p>Return the next smaller element (or null)<\/p>\n        ",
            "memberOf": "quiver.collection.AvlNode",
            "isConstant": false,
            "href": "quiver.collection\/AvlNode\/predecessor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">_TreeNode&lt;V&gt; get predecessor {\n  var node = this;\n  if (node.left != null) {\n    return node.left.maximumNode;\n  }\n  while (node.parent != null &amp;&amp; node.parent.left == node) {\n    node = node.parent;\n  }\n  return node.parent;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "right",
            "type": "quiver.collection.AvlNode",
            "types": [],
            "desc": "",
            "memberOf": "quiver.collection.AvlNode",
            "isConstant": false,
            "href": "quiver.collection\/AvlNode\/right.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">AvlNode&lt;V&gt; get right =&gt; _right;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "successor",
            "type": "",
            "types": [],
            "desc": "<p>Return the next greatest element (or null)<\/p>\n        ",
            "memberOf": "quiver.collection.AvlNode",
            "isConstant": false,
            "href": "quiver.collection\/AvlNode\/successor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">_TreeNode&lt;V&gt; get successor {\n  var node = this;\n  if (node.right != null) {\n    return node.right.minimumNode;\n  }\n  while (node.parent != null &amp;&amp; node == node.parent.right) {\n    node = node.parent;\n  }\n  return node.parent;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "quiver.collection\/AvlNode-class.html",
    "desc": "<p>Private class used to track element insertions in the <a href=\"quiver.collection\/TreeSet-class.html\">TreeSet<\/a>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "AvlNode"
}