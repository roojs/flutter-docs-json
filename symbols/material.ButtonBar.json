{
    "desc": "<p>An end-aligned row of buttons.<\/p>\n<p>Places the buttons horizontally according to the padding in the current\n<a href=\"material\/ButtonTheme-class.html\">ButtonTheme<\/a>. The children are laid out in a <a href=\"widgets\/Row-class.html\">Row<\/a> with\n<a href=\"rendering\/MainAxisAlignment-class.html\">MainAxisAlignment.end<\/a>. When the <a href=\"widgets\/Directionality-class.html\">Directionality<\/a> is <a href=\"dart-ui\/TextDirection-class.html\">TextDirection.ltr<\/a>,\nthe button bar's children are right justified and the last child becomes\nthe rightmost child. When the <a href=\"widgets\/Directionality-class.html\">Directionality<\/a> <a href=\"dart-ui\/TextDirection-class.html\">TextDirection.rtl<\/a> the\nchildren are left justified and the last child becomes the leftmost child.<\/p>\n<p>Used by <a href=\"material\/Dialog-class.html\">Dialog<\/a> to arrange the actions at the bottom of the dialog.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/RaisedButton-class.html\">RaisedButton<\/a>, a kind of button.<\/li>\n<li>\n<a href=\"material\/FlatButton-class.html\">FlatButton<\/a>, another kind of button.<\/li>\n<li>\n<a href=\"material\/Card-class.html\">Card<\/a>, at the bottom of which it is common to place a <a href=\"material\/ButtonBar-class.html\">ButtonBar<\/a>.<\/li>\n<li>\n<a href=\"material\/Dialog-class.html\">Dialog<\/a>, which uses a <a href=\"material\/ButtonBar-class.html\">ButtonBar<\/a> for its actions.<\/li>\n<li>\n<a href=\"material\/ButtonTheme-class.html\">ButtonTheme<\/a>, which configures the <a href=\"material\/ButtonBar-class.html\">ButtonBar<\/a>.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/ButtonBar-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "material",
    "name": "material.ButtonBar",
    "shortname": "ButtonBar",
    "extends": [
        "widgets.StatelessWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a button bar.<\/p>\n<p>The alignment argument defaults to <a href=\"rendering\/MainAxisAlignment-class.html\">MainAxisAlignment.end<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const ButtonBar({\n  Key key,\n  this.alignment = MainAxisAlignment.end,\n  this.mainAxisSize = MainAxisSize.max,\n  this.children = const &lt;Widget&gt;[],\n}) : super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/ButtonBar\/ButtonBar.html",
            "isDeprecated": false,
            "type": "",
            "name": "ButtonBar",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.ButtonBar",
            "params": [
                {
                    "name": "alignment",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "rendering.MainAxisAlignment"
                },
                {
                    "name": "children",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.List<widgets.Widget>"
                },
                {
                    "name": "key",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "mainAxisSize",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "rendering.MainAxisSize"
                }
            ]
        },
        {
            "desc": "<p>Describes the part of the user interface represented by this widget.<\/p>\n<p>The framework calls this method when this widget is inserted into the\ntree in a given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> and when the dependencies of this widget\nchange (e.g., an <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> referenced by this widget changes).<\/p>\n<p>The framework replaces the subtree below this widget with the widget\nreturned by this method, either by updating the existing subtree or by\nremoving the subtree and inflating a new subtree, depending on whether the\nwidget returned by this method can update the root of the existing\nsubtree, as determined by calling <a href=\"widgets\/Widget\/canUpdate.html\">Widget.canUpdate<\/a>.<\/p>\n<p>Typically implementations return a newly created constellation of widgets\nthat are configured with information from this widget's constructor and\nfrom the given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>.<\/p>\n<p>The given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> contains information about the location in the\ntree at which this widget is being built. For example, the context\nprovides the set of inherited widgets for this location in the tree. A\ngiven widget might be built with multiple different <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>\narguments over time if the widget is moved around the tree or if the\nwidget is inserted into the tree in multiple places at once.<\/p>\n<p>The implementation of this method must only depend on:<\/p>\n<ul>\n<li>the fields of the widget, which themselves must not change over time,\nand<\/li>\n<li>any ambient state obtained from the <code>context<\/code> using\n<a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a>.<\/li>\n<\/ul>\n<p>If a widget's <a href=\"material\/ButtonBar\/build.html\">build<\/a> method is to depend on anything else, use a\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> instead.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, which contains the discussion on performance considerations.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  final ButtonThemeData buttonTheme = ButtonTheme.of(context);\n  \/\/ We divide by 4.0 because we want half of the average of the left and right padding.\n  final double paddingUnit = buttonTheme.padding.horizontal \/ 4.0;\n  final Widget child = Row(\n    mainAxisAlignment: alignment,\n    mainAxisSize: mainAxisSize,\n    children: children.map&lt;Widget&gt;((Widget child) {\n      return Padding(\n        padding: EdgeInsets.symmetric(horizontal: paddingUnit),\n        child: child,\n      );\n    }).toList(),\n  );\n  switch (buttonTheme.layoutBehavior) {\n    case ButtonBarLayoutBehavior.padded:\n      return Padding(\n        padding: EdgeInsets.symmetric(\n          vertical: 2.0 * paddingUnit,\n          horizontal: paddingUnit,\n        ),\n        child: child,\n      );\n    case ButtonBarLayoutBehavior.constrained:\n      return Container(\n        padding: EdgeInsets.symmetric(horizontal: paddingUnit),\n        constraints: const BoxConstraints(minHeight: 52.0),\n        alignment: Alignment.center,\n        child: child,\n      );\n  }\n  assert(false);\n  return null;\n}<\/code><\/pre>\n    ",
            "href": "material\/ButtonBar\/build.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "build",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.ButtonBar",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>How the children should be placed along the horizontal axis.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final MainAxisAlignment alignment\n\n<\/code><\/pre>\n        ",
            "href": "material\/ButtonBar\/alignment.html",
            "name": "alignment",
            "isDeprecated": false,
            "type": "rendering.MainAxisAlignment",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ButtonBar",
            "params": []
        },
        {
            "desc": "<p>The buttons to arrange horizontally.<\/p>\n<p>Typically <a href=\"material\/RaisedButton-class.html\">RaisedButton<\/a> or <a href=\"material\/FlatButton-class.html\">FlatButton<\/a> widgets.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;Widget&gt; children\n\n<\/code><\/pre>\n        ",
            "href": "material\/ButtonBar\/children.html",
            "name": "children",
            "isDeprecated": false,
            "type": "dart:core.List<widgets.Widget>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ButtonBar",
            "params": []
        },
        {
            "desc": "<p>How much horizontal space is available. See <a href=\"material\/ButtonBar\/mainAxisSize.html\">Row.mainAxisSize<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final MainAxisSize mainAxisSize\n\n<\/code><\/pre>\n        ",
            "href": "material\/ButtonBar\/mainAxisSize.html",
            "name": "mainAxisSize",
            "isDeprecated": false,
            "type": "rendering.MainAxisSize",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ButtonBar",
            "params": []
        }
    ]
}