{
    "desc": "<p>Property which encloses its string <a href=\"foundation\/DiagnosticsProperty\/value.html\">value<\/a> in quotes.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"foundation\/MessageProperty-class.html\">MessageProperty<\/a>, which is a better fit for showing a message\ninstead of describing a property with a string value.<\/li><\/ul>",
    "dtype": "class",
    "example": null,
    "href": "foundation\/StringProperty-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "foundation",
    "name": "foundation.StringProperty",
    "shortname": "StringProperty",
    "extends": [
        "dart:core.String",
        "foundation.DiagnosticsProperty",
        "foundation.DiagnosticsNode",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Create a diagnostics property for strings.<\/p>\n<p>The <code>showName<\/code>, <code>quoted<\/code>, and <code>level<\/code> arguments must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">StringProperty(\n  String name,\n  String value, {\n  String description,\n  String tooltip,\n  bool showName = true,\n  Object defaultValue = kNoDefaultValue,\n  this.quoted = true,\n  String ifEmpty,\n  DiagnosticLevel level = DiagnosticLevel.info,\n}) : assert(showName != null),\n     assert(quoted != null),\n     assert(level != null),\n     super(\n  name,\n  value,\n  description: description,\n  defaultValue: defaultValue,\n  tooltip: tooltip,\n  showName: showName,\n  ifEmpty: ifEmpty,\n  level: level,\n);<\/code><\/pre>\n    ",
            "href": "foundation\/StringProperty\/StringProperty.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "foundation.StringProperty",
            "params": [
                {
                    "name": "defaultValue",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.Object"
                },
                {
                    "name": "description",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "ifEmpty",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "level",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.DiagnosticLevel"
                },
                {
                    "name": "name",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "quoted",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "showName",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "tooltip",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Serialize the node excluding its descendants to a JSON map.<\/p>\n<p>Subclasses should override if they have additional properties that are\nuseful for the GUI tools that consume this JSON.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/WidgetInspectorService-mixin.html\">WidgetInspectorService<\/a>, which forms the bridge between JSON returned\nby this method and interactive tree views in the Flutter IntelliJ\nplugin.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nMap&lt;String, Object&gt; toJsonMap() {\n  final Map&lt;String, Object&gt; json = super.toJsonMap();\n  json['quoted'] = quoted;\n  return json;\n}<\/code><\/pre>\n    ",
            "href": "foundation\/StringProperty\/toJsonMap.html",
            "isDeprecated": "0",
            "type": "dart:core.Map<dart:core.String<dart:core.Object>>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "foundation.StringProperty",
            "params": []
        },
        {
            "desc": "<p>Returns a string representation of the property value.<\/p>\n<p>Subclasses should override this method instead of <a href=\"foundation\/DiagnosticsProperty\/toDescription.html\">toDescription<\/a> to\ncustomize how property values are converted to strings.<\/p>\n<p>Overriding this method ensures that behavior controlling how property\nvalues are decorated to generate a nice <a href=\"foundation\/DiagnosticsProperty\/toDescription.html\">toDescription<\/a> are consistent\nacross all implementations. Debugging tools may also choose to use\n<a href=\"foundation\/StringProperty\/valueToString.html\">valueToString<\/a> directly instead of <a href=\"foundation\/DiagnosticsProperty\/toDescription.html\">toDescription<\/a>.<\/p>\n<p><code>parentConfiguration<\/code> specifies how the parent is rendered as text art.\nFor example, if the parent places all properties on one line, the value\nof the property should be displayed without line breaks if possible.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString valueToString({ TextTreeConfiguration parentConfiguration }) {\n  String text = _description ?? value;\n  if (parentConfiguration != null &amp;&amp;\n      !parentConfiguration.lineBreakProperties &amp;&amp;\n      text != null) {\n    \/\/ Escape linebreaks in multiline strings to avoid confusing output when\n    \/\/ the parent of this node is trying to display all properties on the same\n    \/\/ line.\n    text = text.replaceAll('\\n', '\\\\n');\n  }\n\n  if (quoted &amp;&amp; text != null) {\n    \/\/ An empty value would not appear empty after being surrounded with\n    \/\/ quotes so we have to handle this case separately.\n    if (ifEmpty != null &amp;&amp; text.isEmpty)\n      return ifEmpty;\n    return '\"$text\"';\n  }\n  return text.toString();\n}<\/code><\/pre>\n    ",
            "href": "foundation\/StringProperty\/valueToString.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "foundation.StringProperty",
            "params": [
                {
                    "name": "parentConfiguration",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "foundation.TextTreeConfiguration"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Whether the value is enclosed in double quotes.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool quoted\n\n<\/code><\/pre>\n        ",
            "href": "foundation\/StringProperty\/quoted.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "foundation.StringProperty",
            "params": []
        }
    ]
}