{
    "desc": "<p>An event sent by the application to notify interested listeners that\nsomething happened to the user interface (e.g. a view scrolled).<\/p>\n<p>These events are usually interpreted by assistive technologies to give the\nuser additional clues about the current state of the UI.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "semantics\/SemanticsEvent-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "semantics",
    "name": "semantics.SemanticsEvent",
    "shortname": "SemanticsEvent",
    "extends": [],
    "realImplementors": [
        "semantics.AnnounceSemanticsEvent",
        "semantics.LongPressSemanticsEvent",
        "semantics.TapSemanticEvent",
        "semantics.TooltipSemanticsEvent",
        "semantics.UpdateLiveRegionEvent"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Initializes internal fields.<\/p>\n<p><code>type<\/code> is a string that identifies this class of <a href=\"semantics\/SemanticsEvent-class.html\">SemanticsEvent<\/a>s.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SemanticsEvent(this.type);<\/code><\/pre>\n    ",
            "href": "semantics\/SemanticsEvent\/SemanticsEvent.html",
            "isDeprecated": false,
            "type": "",
            "name": "SemanticsEvent",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "semantics.SemanticsEvent",
            "params": [
                {
                    "name": "type",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Returns the event's data object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Map&lt;String, dynamic&gt; getDataMap();<\/code><\/pre>\n    ",
            "href": "semantics\/SemanticsEvent\/getDataMap.html",
            "isDeprecated": false,
            "type": "dart:core.Map<dart:core.String>",
            "name": "getDataMap",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "semantics.SemanticsEvent",
            "params": []
        },
        {
            "desc": "<p>Converts this event to a Map that can be encoded with\n<a href=\"services\/StandardMessageCodec-class.html\">StandardMessageCodec<\/a>.<\/p>\n<p><code>nodeId<\/code> is the unique identifier of the semantics node associated with\nthe event, or null if the event is not associated with a semantics node.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Map&lt;String, dynamic&gt; toMap({ int nodeId }) {\n  final Map&lt;String, dynamic&gt; event = &lt;String, dynamic&gt;{\n    'type': type,\n    'data': getDataMap(),\n  };\n  if (nodeId != null)\n    event['nodeId'] = nodeId;\n\n  return event;\n}<\/code><\/pre>\n    ",
            "href": "semantics\/SemanticsEvent\/toMap.html",
            "isDeprecated": false,
            "type": "dart:core.Map<dart:core.String>",
            "name": "toMap",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "semantics.SemanticsEvent",
            "params": [
                {
                    "name": "nodeId",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  final List&lt;String&gt; pairs = &lt;String&gt;[];\n  final Map&lt;String, dynamic&gt; dataMap = getDataMap();\n  final List&lt;String&gt; sortedKeys = dataMap.keys.toList()..sort();\n  for (String key in sortedKeys)\n    pairs.add('$key: ${dataMap[key]}');\n  return '$runtimeType(${pairs.join(', ')})';\n}<\/code><\/pre>\n    ",
            "href": "semantics\/SemanticsEvent\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "semantics.SemanticsEvent",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The type of this event.<\/p>\n<p>The type is used by the engine to translate this event into the\nappropriate native event (<code>UIAccessibility*Notification<\/code> on iOS and\n<code>AccessibilityEvent<\/code> on Android).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String type\n\n<\/code><\/pre>\n        ",
            "href": "semantics\/SemanticsEvent\/type.html",
            "name": "type",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "semantics.SemanticsEvent",
            "params": []
        }
    ]
}