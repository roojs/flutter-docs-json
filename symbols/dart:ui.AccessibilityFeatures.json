{
    "name": "dart:ui.AccessibilityFeatures",
    "extends": [],
    "memberOf": "dart:ui",
    "events": [],
    "methods": [
        {
            "name": "operator ==",
            "type": "dart:core.bool",
            "desc": "<p>The equality operator.<\/p>\n<p>The default behavior for all <a href=\"dart-core\/Object-class.html\">Object<\/a>s is to return true if and\nonly if <code>this<\/code> and <code>other<\/code> are the same object.<\/p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:<\/p>\n<ul>\n<li>\n<p>Total: It must return a boolean for all arguments. It should never throw\nor return <code>null<\/code>.<\/p>\n<\/li>\n<li>\n<p>Reflexive: For all objects <code>o<\/code>, <code>o == o<\/code> must be true.<\/p>\n<\/li>\n<li>\n<p>Symmetric: For all objects <code>o1<\/code> and <code>o2<\/code>, <code>o1 == o2<\/code> and <code>o2 == o1<\/code> must\neither both be true, or both be false.<\/p>\n<\/li>\n<li>\n<p>Transitive: For all objects <code>o1<\/code>, <code>o2<\/code>, and <code>o3<\/code>, if <code>o1 == o2<\/code> and\n<code>o2 == o3<\/code> are true, then <code>o1 == o3<\/code> must be true.<\/p>\n<\/li>\n<\/ul>\n<p>The method should also be consistent over time,\nso whether two objects are equal should only change\nif at least one of the objects was modified.<\/p>\n<p>If a subclass overrides the equality operator it should override\nthe <a href=\"dart-ui\/AccessibilityFeatures\/hashCode.html\">hashCode<\/a> method as well to maintain consistency.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.AccessibilityFeatures",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/AccessibilityFeatures\/operator_equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool operator ==(dynamic other) {\n  if (other.runtimeType != runtimeType)\n    return false;\n  final AccessibilityFeatures typedOther = other;\n  return _index == typedOther._index;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.AccessibilityFeatures",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-ui\/AccessibilityFeatures\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  final List&lt;String&gt; features = &lt;String&gt;[];\n  if (accessibleNavigation)\n    features.add('accessibleNavigation');\n  if (invertColors)\n    features.add('invertColors');\n  if (disableAnimations)\n    features.add('disableAnimations');\n  if (boldText)\n    features.add('boldText');\n  if (reduceMotion)\n    features.add('reduceMotion');\n  return 'AccessibilityFeatures$features';\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "accessibleNavigation",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether there is a running accessibility service which is changing the\ninteraction model of the device.<\/p>\n<p>For example, TalkBack on Android and VoiceOver on iOS enable this flag.<\/p>\n        ",
            "memberOf": "dart:ui.AccessibilityFeatures",
            "isConstant": false,
            "href": "dart-ui\/AccessibilityFeatures\/accessibleNavigation.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get accessibleNavigation =&gt; _kAccessibleNavigation &amp; _index != 0;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "boldText",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>The platform is requesting that text be rendered at a bold font weight.<\/p>\n<p>Only supported on iOS.<\/p>\n        ",
            "memberOf": "dart:ui.AccessibilityFeatures",
            "isConstant": false,
            "href": "dart-ui\/AccessibilityFeatures\/boldText.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get boldText =&gt; _kBoldTextIndex &amp; _index != 0;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "disableAnimations",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>The platform is requesting that animations be disabled or simplified.<\/p>\n        ",
            "memberOf": "dart:ui.AccessibilityFeatures",
            "isConstant": false,
            "href": "dart-ui\/AccessibilityFeatures\/disableAnimations.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get disableAnimations =&gt; _kDisableAnimationsIndex &amp; _index != 0;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "hashCode",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"dart-ui\/AccessibilityFeatures\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"dart-ui\/AccessibilityFeatures\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"dart-ui\/AccessibilityFeatures\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"dart-ui\/AccessibilityFeatures\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"dart-ui\/AccessibilityFeatures\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"dart-ui\/AccessibilityFeatures\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "memberOf": "dart:ui.AccessibilityFeatures",
            "isConstant": false,
            "href": "dart-ui\/AccessibilityFeatures\/hashCode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get hashCode =&gt; _index.hashCode;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "invertColors",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>The platform is inverting the colors of the application.<\/p>\n        ",
            "memberOf": "dart:ui.AccessibilityFeatures",
            "isConstant": false,
            "href": "dart-ui\/AccessibilityFeatures\/invertColors.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get invertColors =&gt; _kInvertColorsIndex &amp; _index != 0;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "reduceMotion",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>The platform is requesting that certain animations be simplified and\nparallax effects removed.<\/p>\n<p>Only supported on iOS.<\/p>\n        ",
            "memberOf": "dart:ui.AccessibilityFeatures",
            "isConstant": false,
            "href": "dart-ui\/AccessibilityFeatures\/reduceMotion.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get reduceMotion =&gt; _kReduceMotionIndex &amp; _index != 0;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-ui\/AccessibilityFeatures-class.html",
    "desc": "<p>Additional accessibility features that may be enabled by the platform.<\/p>\n<p>It is not possible to enable these settings from Flutter, instead they are\nused by the platform to indicate that additional accessibility features are\nenabled.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "AccessibilityFeatures"
}