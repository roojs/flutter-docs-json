{
    "name": "json_rpc_2.RpcException",
    "extends": [],
    "memberOf": "json_rpc_2",
    "events": [],
    "methods": [
        {
            "name": "RpcException",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "json_rpc_2.RpcException",
            "sig": "",
            "params": [
                {
                    "name": "code",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "message",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "data",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": true,
            "href": "package-json_rpc_2_json_rpc_2\/RpcException\/RpcException.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RpcException(this.code, this.message, {this.data});<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "RpcException.invalidParams",
            "type": "",
            "desc": "<p>An exception indicating that the parameters for the requested method were\ninvalid.<\/p>\n<p>Methods can use this to reject requests with invalid parameters.<\/p>\n    ",
            "static": false,
            "memberOf": "json_rpc_2.RpcException",
            "sig": "",
            "params": [
                {
                    "name": "message",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-json_rpc_2_json_rpc_2\/RpcException\/RpcException.invalidParams.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RpcException.invalidParams(String message)\n    : this(error_code.INVALID_PARAMS, message);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "RpcException.methodNotFound",
            "type": "",
            "desc": "<p>An exception indicating that the method named <code>methodName<\/code> was not found.<\/p>\n<p>This should usually be used only by fallback handlers.<\/p>\n    ",
            "static": false,
            "memberOf": "json_rpc_2.RpcException",
            "sig": "",
            "params": [
                {
                    "name": "methodName",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-json_rpc_2_json_rpc_2\/RpcException\/RpcException.methodNotFound.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RpcException.methodNotFound(String methodName)\n    : this(error_code.METHOD_NOT_FOUND, 'Unknown method \"$methodName\".');<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "serialize",
            "type": "",
            "desc": "<p>Converts this exception into a JSON-serializable object that's a valid\nJSON-RPC 2.0 error response.<\/p>\n    ",
            "static": false,
            "memberOf": "json_rpc_2.RpcException",
            "sig": "",
            "params": [
                {
                    "name": "request",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "package-json_rpc_2_json_rpc_2\/RpcException\/serialize.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">serialize(request) {\n  var modifiedData;\n  if (data is Map &amp;&amp; !data.containsKey('request')) {\n    modifiedData = new Map.from(data);\n    modifiedData['request'] = request;\n  } else if (data == null) {\n    modifiedData = {'request': request};\n  } else {\n    modifiedData = data;\n  }\n\n  var id = request is Map ? request['id'] : null;\n  if (id is! String &amp;&amp; id is! num) id = null;\n  return {\n    'jsonrpc': '2.0',\n    'error': {'code': code, 'message': message, 'data': modifiedData},\n    'id': id\n  };\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "json_rpc_2.RpcException",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "package-json_rpc_2_json_rpc_2\/RpcException\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() {\n  var prefix = \"JSON-RPC error $code\";\n  var errorName = error_code.name(code);\n  if (errorName != null) prefix += \" ($errorName)\";\n  return \"$prefix: $message\";\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "code",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The error code.<\/p>\n<p>All non-negative error codes are available for use by application\ndevelopers.<\/p>\n        ",
            "memberOf": "json_rpc_2.RpcException",
            "isConstant": false,
            "href": "package-json_rpc_2_json_rpc_2\/RpcException\/code.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int code\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "data",
            "type": "",
            "types": [],
            "desc": "<p>Extra application-defined information about the error.<\/p>\n<p>This must be a JSON-serializable object. If it's a <a href=\"dart-core\/Map-class.html\">Map<\/a> without a\n<code>\"request\"<\/code> key, a copy of the request that caused the error will\nautomatically be injected.<\/p>\n        ",
            "memberOf": "json_rpc_2.RpcException",
            "isConstant": false,
            "href": "package-json_rpc_2_json_rpc_2\/RpcException\/data.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final data\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "message",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The error message.<\/p>\n<p>This should be limited to a concise single sentence. Further information\nshould be supplied via <a href=\"package-json_rpc_2_json_rpc_2\/RpcException\/data.html\">data<\/a>.<\/p>\n        ",
            "memberOf": "json_rpc_2.RpcException",
            "isConstant": false,
            "href": "package-json_rpc_2_json_rpc_2\/RpcException\/message.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String message\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "package-json_rpc_2_json_rpc_2\/RpcException-class.html",
    "desc": "<p>An exception from a JSON-RPC server that can be translated into an error\nresponse.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "RpcException"
}