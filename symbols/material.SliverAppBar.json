{
    "name": "material.SliverAppBar",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "material",
    "events": [],
    "methods": [
        {
            "name": "SliverAppBar",
            "type": "",
            "desc": "<p>Creates a material design app bar that can be placed in a <a href=\"widgets\/CustomScrollView-class.html\">CustomScrollView<\/a>.<\/p>\n<p>The arguments <code>forceElevated<\/code>, <code>primary<\/code>, <code>floating<\/code>, <code>pinned<\/code>, <code>snap<\/code>\nand <code>automaticallyImplyLeading<\/code> must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "material.SliverAppBar",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "leading",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "automaticallyImplyLeading",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "title",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "actions",
                    "type": "dart:core.List<widgets.Widget>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "widgets.Widget"
                    ]
                },
                {
                    "name": "flexibleSpace",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "bottom",
                    "type": "widgets.PreferredSizeWidget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "elevation",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "forceElevated",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "backgroundColor",
                    "type": "dart:ui.Color",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "brightness",
                    "type": "dart:ui.Brightness",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "iconTheme",
                    "type": "widgets.IconThemeData",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "actionsIconTheme",
                    "type": "widgets.IconThemeData",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textTheme",
                    "type": "material.TextTheme",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "primary",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "centerTitle",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "titleSpacing",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "expandedHeight",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "floating",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "pinned",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "snap",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "material\/SliverAppBar\/SliverAppBar.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SliverAppBar({\n  Key key,\n  this.leading,\n  this.automaticallyImplyLeading = true,\n  this.title,\n  this.actions,\n  this.flexibleSpace,\n  this.bottom,\n  this.elevation,\n  this.forceElevated = false,\n  this.backgroundColor,\n  this.brightness,\n  this.iconTheme,\n  this.actionsIconTheme,\n  this.textTheme,\n  this.primary = true,\n  this.centerTitle,\n  this.titleSpacing = NavigationToolbar.kMiddleSpacing,\n  this.expandedHeight,\n  this.floating = false,\n  this.pinned = false,\n  this.snap = false,\n}) : assert(automaticallyImplyLeading != null),\n     assert(forceElevated != null),\n     assert(primary != null),\n     assert(titleSpacing != null),\n     assert(floating != null),\n     assert(pinned != null),\n     assert(snap != null),\n     assert(floating || !snap, 'The \"snap\" argument only makes sense for floating app bars.'),\n     super(key: key);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "createState",
            "type": "",
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/SliverAppBar\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "static": false,
            "memberOf": "material.SliverAppBar",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "material\/SliverAppBar\/createState.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_SliverAppBarState createState() =&gt; _SliverAppBarState();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "actions",
            "type": "dart:core.List<widgets.Widget>",
            "types": [
                "dart:core.List",
                "widgets.Widget"
            ],
            "desc": "<p>Widgets to display after the <a href=\"material\/SliverAppBar\/title.html\">title<\/a> widget.<\/p>\n<p>Typically these widgets are <a href=\"material\/IconButton-class.html\">IconButton<\/a>s representing common operations.\nFor less common operations, consider using a <a href=\"material\/PopupMenuButton-class.html\">PopupMenuButton<\/a> as the\nlast action.<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">Scaffold(\n  body: CustomScrollView(\n    primary: true,\n    slivers: &lt;Widget&gt;[\n      SliverAppBar(\n        title: Text('Hello World'),\n        actions: &lt;Widget&gt;[\n          IconButton(\n            icon: Icon(Icons.shopping_cart),\n            tooltip: 'Open shopping cart',\n            onPressed: () {\n              \/\/ handle the press\n            },\n          ),\n        ],\n      ),\n      \/\/ ...rest of body...\n    ],\n  ),\n)<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/actions.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;Widget&gt; actions\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "actionsIconTheme",
            "type": "widgets.IconThemeData",
            "types": [],
            "desc": "<p>The color, opacity, and size to use for trailing app bar icons. This\nshould only be used when the trailing icons should be themed differently\nthan the leading icons.<\/p>\n<p>If this property is null, then <a href=\"material\/SliverAppBar\/actionsIconTheme.html\">ThemeData.appBarTheme.actionsIconTheme<\/a> is\nused, if that is also null, then this falls back to <a href=\"material\/SliverAppBar\/iconTheme.html\">iconTheme<\/a>.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/actionsIconTheme.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final IconThemeData actionsIconTheme\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "automaticallyImplyLeading",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Controls whether we should try to imply the leading widget if null.<\/p>\n<p>If true and <a href=\"material\/SliverAppBar\/leading.html\">leading<\/a> is null, automatically try to deduce what the leading\nwidget should be. If false and <a href=\"material\/SliverAppBar\/leading.html\">leading<\/a> is null, leading space is given to <a href=\"material\/SliverAppBar\/title.html\">title<\/a>.\nIf leading widget is not null, this parameter has no effect.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/automaticallyImplyLeading.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool automaticallyImplyLeading\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "backgroundColor",
            "type": "dart:ui.Color",
            "types": [],
            "desc": "<p>The color to use for the app bar's material. Typically this should be set\nalong with <a href=\"material\/SliverAppBar\/brightness.html\">brightness<\/a>, <a href=\"material\/SliverAppBar\/iconTheme.html\">iconTheme<\/a>, <a href=\"material\/SliverAppBar\/textTheme.html\">textTheme<\/a>.<\/p>\n<p>If this property is null, then <code>ThemeData.appBarTheme.color<\/code> is used,\nif that is also null, then <a href=\"material\/ThemeData\/primaryColor.html\">ThemeData.primaryColor<\/a> is used.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/backgroundColor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color backgroundColor\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "bottom",
            "type": "widgets.PreferredSizeWidget",
            "types": [],
            "desc": "<p>This widget appears across the bottom of the appbar.<\/p>\n<p>Typically a <a href=\"material\/TabBar-class.html\">TabBar<\/a>. Only widgets that implement <a href=\"widgets\/PreferredSizeWidget-class.html\">PreferredSizeWidget<\/a> can\nbe used at the bottom of an app bar.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/PreferredSize-class.html\">PreferredSize<\/a>, which can be used to give an arbitrary widget a preferred size.<\/li><\/ul>",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/bottom.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final PreferredSizeWidget bottom\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "brightness",
            "type": "dart:ui.Brightness",
            "types": [],
            "desc": "<p>The brightness of the app bar's material. Typically this is set along\nwith <a href=\"material\/SliverAppBar\/backgroundColor.html\">backgroundColor<\/a>, <a href=\"material\/SliverAppBar\/iconTheme.html\">iconTheme<\/a>, <a href=\"material\/SliverAppBar\/textTheme.html\">textTheme<\/a>.<\/p>\n<p>If this property is null, then <a href=\"material\/SliverAppBar\/brightness.html\">ThemeData.appBarTheme.brightness<\/a> is used,\nif that is also null, then <a href=\"material\/ThemeData\/primaryColorBrightness.html\">ThemeData.primaryColorBrightness<\/a> is used.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/brightness.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Brightness brightness\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "centerTitle",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the title should be centered.<\/p>\n<p>Defaults to being adapted to the current <a href=\"foundation\/TargetPlatform-class.html\">TargetPlatform<\/a>.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/centerTitle.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool centerTitle\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "elevation",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The z-coordinate at which to place this app bar when it is above other\ncontent. This controls the size of the shadow below the app bar.<\/p>\n<p>If this property is null, then <a href=\"material\/SliverAppBar\/elevation.html\">ThemeData.appBarTheme.elevation<\/a> is used,\nif that is also null, the default value is 4, the appropriate elevation\nfor app bars.<\/p>\n<p>If <a href=\"material\/SliverAppBar\/forceElevated.html\">forceElevated<\/a> is false, the elevation is ignored when the app bar has\nno content underneath it. For example, if the app bar is <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a> but no\ncontent is scrolled under it, or if it scrolls with the content, then no\nshadow is drawn, regardless of the value of <a href=\"material\/SliverAppBar\/elevation.html\">elevation<\/a>.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/elevation.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double elevation\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "expandedHeight",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The size of the app bar when it is fully expanded.<\/p>\n<p>By default, the total height of the toolbar and the bottom widget (if\nany). If a <a href=\"material\/SliverAppBar\/flexibleSpace.html\">flexibleSpace<\/a> widget is specified this height should be big\nenough to accommodate whatever that widget contains.<\/p>\n<p>This does not include the status bar height (which will be automatically\nincluded if <a href=\"material\/SliverAppBar\/primary.html\">primary<\/a> is true).<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/expandedHeight.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double expandedHeight\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "flexibleSpace",
            "type": "widgets.Widget",
            "types": [],
            "desc": "<p>This widget is stacked behind the toolbar and the tab bar. It's height will\nbe the same as the app bar's overall height.<\/p>\n<p>Typically a <a href=\"material\/FlexibleSpaceBar-class.html\">FlexibleSpaceBar<\/a>. See <a href=\"material\/FlexibleSpaceBar-class.html\">FlexibleSpaceBar<\/a> for details.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/flexibleSpace.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget flexibleSpace\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "floating",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the app bar should become visible as soon as the user scrolls\ntowards the app bar.<\/p>\n<p>Otherwise, the user will need to scroll near the top of the scroll view to\nreveal the app bar.<\/p>\n<p>If <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a> is true then a scroll that exposes the app bar will trigger an\nanimation that slides the entire app bar into view. Similarly if a scroll\ndismisses the app bar, the animation will slide it completely out of view.<\/p>\n<h2 id=\"animated-examples\">Animated Examples<\/h2>\n<p>The following animations show how the app bar changes its scrolling\nbehavior based on the value of this property.<\/p>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a> set to false:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_1_play_button_\" onclick=\"if (animation_1.paused) {\n                  animation_1.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_1.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_1\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_1_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_1_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a> set to true:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_2_play_button_\" onclick=\"if (animation_2.paused) {\n                  animation_2.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_2.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_2\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_2_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_2_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar_floating.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/SliverAppBar-class.html\">SliverAppBar<\/a> for more animated examples of how this property changes the\nbehavior of the app bar in combination with <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a> and <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a>.<\/li><\/ul>",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/floating.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool floating\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "forceElevated",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether to show the shadow appropriate for the <a href=\"material\/SliverAppBar\/elevation.html\">elevation<\/a> even if the\ncontent is not scrolled under the <a href=\"material\/AppBar-class.html\">AppBar<\/a>.<\/p>\n<p>Defaults to false, meaning that the <a href=\"material\/SliverAppBar\/elevation.html\">elevation<\/a> is only applied when the\n<a href=\"material\/AppBar-class.html\">AppBar<\/a> is being displayed over content that is scrolled under it.<\/p>\n<p>When set to true, the <a href=\"material\/SliverAppBar\/elevation.html\">elevation<\/a> is applied regardless.<\/p>\n<p>Ignored when <a href=\"material\/SliverAppBar\/elevation.html\">elevation<\/a> is zero.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/forceElevated.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool forceElevated\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "iconTheme",
            "type": "widgets.IconThemeData",
            "types": [],
            "desc": "<p>The color, opacity, and size to use for app bar icons. Typically this\nis set along with <a href=\"material\/SliverAppBar\/backgroundColor.html\">backgroundColor<\/a>, <a href=\"material\/SliverAppBar\/brightness.html\">brightness<\/a>, <a href=\"material\/SliverAppBar\/textTheme.html\">textTheme<\/a>.<\/p>\n<p>If this property is null, then <a href=\"material\/SliverAppBar\/iconTheme.html\">ThemeData.appBarTheme.iconTheme<\/a> is used,\nif that is also null, then <a href=\"material\/ThemeData\/primaryIconTheme.html\">ThemeData.primaryIconTheme<\/a> is used.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/iconTheme.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final IconThemeData iconTheme\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "leading",
            "type": "widgets.Widget",
            "types": [],
            "desc": "<p>A widget to display before the <a href=\"material\/SliverAppBar\/title.html\">title<\/a>.<\/p>\n<p>If this is null and <a href=\"material\/SliverAppBar\/automaticallyImplyLeading.html\">automaticallyImplyLeading<\/a> is set to true, the <a href=\"material\/AppBar-class.html\">AppBar<\/a> will\nimply an appropriate widget. For example, if the <a href=\"material\/AppBar-class.html\">AppBar<\/a> is in a <a href=\"material\/Scaffold-class.html\">Scaffold<\/a>\nthat also has a <a href=\"material\/Drawer-class.html\">Drawer<\/a>, the <a href=\"material\/Scaffold-class.html\">Scaffold<\/a> will fill this widget with an\n<a href=\"material\/IconButton-class.html\">IconButton<\/a> that opens the drawer. If there's no <a href=\"material\/Drawer-class.html\">Drawer<\/a> and the parent\n<a href=\"widgets\/Navigator-class.html\">Navigator<\/a> can go back, the <a href=\"material\/AppBar-class.html\">AppBar<\/a> will use a <a href=\"material\/BackButton-class.html\">BackButton<\/a> that calls\n<a href=\"widgets\/Navigator\/maybePop.html\">Navigator.maybePop<\/a>.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/leading.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget leading\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "pinned",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the app bar should remain visible at the start of the scroll view.<\/p>\n<p>The app bar can still expand and contract as the user scrolls, but it will\nremain visible rather than being scrolled out of view.<\/p>\n<h2 id=\"animated-examples\">Animated Examples<\/h2>\n<p>The following animations show how the app bar changes its scrolling\nbehavior based on the value of this property.<\/p>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a> set to false:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_1_play_button_\" onclick=\"if (animation_1.paused) {\n                  animation_1.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_1.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_1\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_1_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_1_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a> set to true:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_2_play_button_\" onclick=\"if (animation_2.paused) {\n                  animation_2.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_2.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_2\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_2_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_2_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar_pinned.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/SliverAppBar-class.html\">SliverAppBar<\/a> for more animated examples of how this property changes the\nbehavior of the app bar in combination with <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a>.<\/li><\/ul>",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/pinned.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool pinned\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "primary",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether this app bar is being displayed at the top of the screen.<\/p>\n<p>If this is true, the top padding specified by the <a href=\"widgets\/MediaQuery-class.html\">MediaQuery<\/a> will be\nadded to the top of the toolbar.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/primary.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool primary\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "snap",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>If <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a> and <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a> are true then the floating app bar will \"snap\"\ninto view.<\/p>\n<p>If <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a> is true then a scroll that exposes the floating app bar will\ntrigger an animation that slides the entire app bar into view. Similarly if\na scroll dismisses the app bar, the animation will slide the app bar\ncompletely out of view.<\/p>\n<p>Snapping only applies when the app bar is floating, not when the appbar\nappears at the top of its scroll view.<\/p>\n<h2 id=\"animated-examples\">Animated Examples<\/h2>\n<p>The following animations show how the app bar changes its scrolling\nbehavior based on the value of this property.<\/p>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a> set to false:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_1_play_button_\" onclick=\"if (animation_1.paused) {\n                  animation_1.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_1.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_1\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_1_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_1_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar_floating.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a> set to true:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_2_play_button_\" onclick=\"if (animation_2.paused) {\n                  animation_2.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_2.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_2\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_2_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_2_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar_floating_snap.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/SliverAppBar-class.html\">SliverAppBar<\/a> for more animated examples of how this property changes the\nbehavior of the app bar in combination with <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a> and <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a>.<\/li><\/ul>",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/snap.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool snap\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "textTheme",
            "type": "material.TextTheme",
            "types": [],
            "desc": "<p>The typographic styles to use for text in the app bar. Typically this is\nset along with <a href=\"material\/SliverAppBar\/brightness.html\">brightness<\/a> <a href=\"material\/SliverAppBar\/backgroundColor.html\">backgroundColor<\/a>, <a href=\"material\/SliverAppBar\/iconTheme.html\">iconTheme<\/a>.<\/p>\n<p>If this property is null, then <a href=\"material\/SliverAppBar\/textTheme.html\">ThemeData.appBarTheme.textTheme<\/a> is used,\nif that is also null, then <a href=\"material\/ThemeData\/primaryTextTheme.html\">ThemeData.primaryTextTheme<\/a> is used.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/textTheme.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextTheme textTheme\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "title",
            "type": "widgets.Widget",
            "types": [],
            "desc": "<p>The primary widget displayed in the appbar.<\/p>\n<p>Typically a <a href=\"widgets\/Text-class.html\">Text<\/a> widget containing a description of the current contents\nof the app.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/title.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget title\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "titleSpacing",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The spacing around <a href=\"material\/SliverAppBar\/title.html\">title<\/a> content on the horizontal axis. This spacing is\napplied even if there is no <a href=\"material\/SliverAppBar\/leading.html\">leading<\/a> content or <a href=\"material\/SliverAppBar\/actions.html\">actions<\/a>. If you want\n<a href=\"material\/SliverAppBar\/title.html\">title<\/a> to take all the space available, set this value to 0.0.<\/p>\n<p>Defaults to <a href=\"widgets\/NavigationToolbar\/kMiddleSpacing-constant.html\">NavigationToolbar.kMiddleSpacing<\/a>.<\/p>\n        ",
            "memberOf": "material.SliverAppBar",
            "isConstant": false,
            "href": "material\/SliverAppBar\/titleSpacing.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double titleSpacing\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "material\/SliverAppBar-class.html",
    "desc": "<p>A material design app bar that integrates with a <a href=\"widgets\/CustomScrollView-class.html\">CustomScrollView<\/a>.<\/p>\n<p>An app bar consists of a toolbar and potentially other widgets, such as a\n<a href=\"material\/TabBar-class.html\">TabBar<\/a> and a <a href=\"material\/FlexibleSpaceBar-class.html\">FlexibleSpaceBar<\/a>. App bars typically expose one or more\ncommon actions with <a href=\"material\/IconButton-class.html\">IconButton<\/a>s which are optionally followed by a\n<a href=\"material\/PopupMenuButton-class.html\">PopupMenuButton<\/a> for less common operations.<\/p>\n<p>Sliver app bars are typically used as the first child of a\n<a href=\"widgets\/CustomScrollView-class.html\">CustomScrollView<\/a>, which lets the app bar integrate with the scroll view so\nthat it can vary in height according to the scroll offset or float above the\nother content in the scroll view. For a fixed-height app bar at the top of\nthe screen see <a href=\"material\/AppBar-class.html\">AppBar<\/a>, which is used in the <a href=\"material\/Scaffold\/appBar.html\">Scaffold.appBar<\/a> slot.<\/p>\n<p>The AppBar displays the toolbar widgets, <a href=\"material\/SliverAppBar\/leading.html\">leading<\/a>, <a href=\"material\/SliverAppBar\/title.html\">title<\/a>, and\n<a href=\"material\/SliverAppBar\/actions.html\">actions<\/a>, above the <a href=\"material\/SliverAppBar\/bottom.html\">bottom<\/a> (if any). If a <a href=\"material\/SliverAppBar\/flexibleSpace.html\">flexibleSpace<\/a> widget is\nspecified then it is stacked behind the toolbar and the bottom widget.<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n<div class=\"snippet-description\">\nThis is an example that could be included in a <a href=\"widgets\/CustomScrollView-class.html\">CustomScrollView<\/a>'s\n<a href=\"widgets\/CustomScrollView\/slivers.html\">CustomScrollView.slivers<\/a> list:\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">SliverAppBar(\n  expandedHeight: 150.0,\n  flexibleSpace: const FlexibleSpaceBar(\n    title: Text('Available seats'),\n  ),\n  actions: &lt;Widget&gt;[\n    IconButton(\n      icon: const Icon(Icons.add_circle),\n      tooltip: 'Add new entry',\n      onPressed: () { \/* ... *\/ },\n    ),\n  ]\n)<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<h2 id=\"animated-examples\">Animated Examples<\/h2>\n<p>The following animations show how app bars with different configurations\nbehave when a user scrolls up and then down again.<\/p>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a>: false, <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a>: false, <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a>: false:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_1_play_button_\" onclick=\"if (animation_1.paused) {\n                  animation_1.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_1.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_1\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_1_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_1_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a>: true, <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a>: false, <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a>: false:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_2_play_button_\" onclick=\"if (animation_2.paused) {\n                  animation_2.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_2.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_2\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_2_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_2_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar_floating.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a>: true, <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a>: false, <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a>: true:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_3_play_button_\" onclick=\"if (animation_3.paused) {\n                  animation_3.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_3.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_3\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_3_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_3_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar_floating_snap.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a>: true, <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a>: true, <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a>: false:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_4_play_button_\" onclick=\"if (animation_4.paused) {\n                  animation_4.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_4.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_4\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_4_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_4_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar_pinned_floating.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a>: true, <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a>: true, <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a>: true:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_5_play_button_\" onclick=\"if (animation_5.paused) {\n                  animation_5.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_5.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_5\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_5_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_5_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar_pinned_floating_snap.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<ul><li>App bar with <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a>: false, <a href=\"material\/SliverAppBar\/pinned.html\">pinned<\/a>: true, <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a>: false:<\/li><\/ul>\n<div style=\"position: relative;\">\n  <div id=\"animation_6_play_button_\" onclick=\"if (animation_6.paused) {\n                  animation_6.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_6.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:476px;\n              height:400px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_6\" style=\"width:476px; height:400px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_6_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_6_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/material\/app_bar_pinned.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<p>The property <a href=\"material\/SliverAppBar\/snap.html\">snap<\/a> can only be set to true if <a href=\"material\/SliverAppBar\/floating.html\">floating<\/a> is also true.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/CustomScrollView-class.html\">CustomScrollView<\/a>, which integrates the <a href=\"material\/SliverAppBar-class.html\">SliverAppBar<\/a> into its\nscrolling.<\/li>\n<li>\n<a href=\"material\/AppBar-class.html\">AppBar<\/a>, which is a fixed-height app bar for use in <a href=\"material\/Scaffold\/appBar.html\">Scaffold.appBar<\/a>.<\/li>\n<li>\n<a href=\"material\/TabBar-class.html\">TabBar<\/a>, which is typically placed in the <a href=\"material\/SliverAppBar\/bottom.html\">bottom<\/a> slot of the <a href=\"material\/AppBar-class.html\">AppBar<\/a>\nif the screen has multiple pages arranged in tabs.<\/li>\n<li>\n<a href=\"material\/IconButton-class.html\">IconButton<\/a>, which is used with <a href=\"material\/SliverAppBar\/actions.html\">actions<\/a> to show buttons on the app bar.<\/li>\n<li>\n<a href=\"material\/PopupMenuButton-class.html\">PopupMenuButton<\/a>, to show a popup menu on the app bar, via <a href=\"material\/SliverAppBar\/actions.html\">actions<\/a>.<\/li>\n<li>\n<a href=\"material\/FlexibleSpaceBar-class.html\">FlexibleSpaceBar<\/a>, which is used with <a href=\"material\/SliverAppBar\/flexibleSpace.html\">flexibleSpace<\/a> when the app bar\ncan expand and collapse.<\/li>\n<li><a href=\"https:\/\/material.io\/design\/components\/app-bars-top.html\">material.io\/design\/components\/app-bars-top.html<\/a><\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "SliverAppBar"
}