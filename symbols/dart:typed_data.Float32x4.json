{
    "desc": "<p>Float32x4 immutable value type and operations.<\/p>\n<p>Float32x4 stores 4 32-bit floating point values in \"lanes\".\nThe lanes are \"x\", \"y\", \"z\", and \"w\" respectively.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-typed_data\/Float32x4-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:typed_data",
    "name": "dart:typed_data.Float32x4",
    "shortname": "Float32x4",
    "extends": [],
    "realImplementors": [
        "dart:typed_data.UnmodifiableFloat32x4ListView",
        "typed_data.typed_buffers.Float32x4Buffer"
    ],
    "events": [],
    "methods": [
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">external factory Float32x4(double x, double y, double z, double w);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/Float32x4.html",
            "isDeprecated": false,
            "type": "",
            "name": "Float32x4",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "w",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "x",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "y",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "z",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Returns the lane-wise absolute value of this <a href=\"dart-typed_data\/Float32x4-class.html\">Float32x4<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 abs();<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/abs.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "abs",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": []
        },
        {
            "desc": "<p>Lane-wise clamp <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a> to be in the range <code>lowerLimit<\/code>-<code>upperLimit<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 clamp(Float32x4 lowerLimit, Float32x4 upperLimit);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/clamp.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "clamp",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "lowerLimit",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                },
                {
                    "name": "upperLimit",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                }
            ]
        },
        {
            "desc": "<p>Relational equal.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Int32x4 equal(Float32x4 other);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/equal.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Int32x4",
            "name": "equal",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "other",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                }
            ]
        },
        {
            "desc": "<p>Relational greater than.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Int32x4 greaterThan(Float32x4 other);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/greaterThan.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Int32x4",
            "name": "greaterThan",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "other",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                }
            ]
        },
        {
            "desc": "<p>Relational greater than or equal.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Int32x4 greaterThanOrEqual(Float32x4 other);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/greaterThanOrEqual.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Int32x4",
            "name": "greaterThanOrEqual",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "other",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                }
            ]
        },
        {
            "desc": "<p>Relational less than.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Int32x4 lessThan(Float32x4 other);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/lessThan.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Int32x4",
            "name": "lessThan",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "other",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                }
            ]
        },
        {
            "desc": "<p>Relational less than or equal.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Int32x4 lessThanOrEqual(Float32x4 other);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/lessThanOrEqual.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Int32x4",
            "name": "lessThanOrEqual",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "other",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                }
            ]
        },
        {
            "desc": "<p>Returns the lane-wise maximum value in <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a> or <code>other<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 max(Float32x4 other);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/max.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "max",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "other",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                }
            ]
        },
        {
            "desc": "<p>Returns the lane-wise minimum value in <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a> or <code>other<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 min(Float32x4 other);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/min.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "min",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "other",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                }
            ]
        },
        {
            "desc": "<p>Relational not-equal.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Int32x4 notEqual(Float32x4 other);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/notEqual.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Int32x4",
            "name": "notEqual",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "other",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                }
            ]
        },
        {
            "desc": "<p>Returns the reciprocal of <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 reciprocal();<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/reciprocal.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "reciprocal",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": []
        },
        {
            "desc": "<p>Returns the square root of the reciprocal of <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 reciprocalSqrt();<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/reciprocalSqrt.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "reciprocalSqrt",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": []
        },
        {
            "desc": "<p>Returns a copy of <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a> each lane being scaled by <code>s<\/code>.\nEquivalent to this * new Float32x4.splat(s)<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 scale(double s);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/scale.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "scale",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "s",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Shuffle the lane values. <code>mask<\/code> must be one of the 256 shuffle constants.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 shuffle(int mask);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/shuffle.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "shuffle",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "mask",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Shuffle the lane values in <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a> and <code>other<\/code>. The returned\nFloat32x4 will have XY lanes from <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a> and ZW lanes from <code>other<\/code>.\nUses the same <code>mask<\/code> as <a href=\"dart-typed_data\/Float32x4\/shuffle.html\">shuffle<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 shuffleMix(Float32x4 other, int mask);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/shuffleMix.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "shuffleMix",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "mask",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "other",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32x4"
                }
            ]
        },
        {
            "desc": "<p>Returns the square root of <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 sqrt();<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/sqrt.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "sqrt",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": []
        },
        {
            "desc": "<p>Returns a new <a href=\"dart-typed_data\/Float32x4-class.html\">Float32x4<\/a> copied from <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a> with a new w value.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 withW(double w);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/withW.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "withW",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "w",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Returns a new <a href=\"dart-typed_data\/Float32x4-class.html\">Float32x4<\/a> copied from <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a> with a new x value.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 withX(double x);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/withX.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "withX",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "x",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Returns a new <a href=\"dart-typed_data\/Float32x4-class.html\">Float32x4<\/a> copied from <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a> with a new y value.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 withY(double y);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/withY.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "withY",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "y",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Returns a new <a href=\"dart-typed_data\/Float32x4-class.html\">Float32x4<\/a> copied from <a href=\"dart-typed_data\/Float32x4-class.html\">this<\/a> with a new z value.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Float32x4 withZ(double z);<\/code><\/pre>\n    ",
            "href": "dart-typed_data\/Float32x4\/withZ.html",
            "isDeprecated": false,
            "type": "dart:typed_data.Float32x4",
            "name": "withZ",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": [
                {
                    "name": "z",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Extract the sign bits from each lane return them in the first 4 bits.\n\"x\" lane is bit 0.\n\"y\" lane is bit 1.\n\"z\" lane is bit 2.\n\"w\" lane is bit 3.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get signMask;<\/code><\/pre>\n        ",
            "href": "dart-typed_data\/Float32x4\/signMask.html",
            "name": "signMask",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": []
        },
        {
            "desc": "<p>Extracted w value.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get w;<\/code><\/pre>\n        ",
            "href": "dart-typed_data\/Float32x4\/w.html",
            "name": "w",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": []
        },
        {
            "desc": "<p>Extracted x value.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get x;<\/code><\/pre>\n        ",
            "href": "dart-typed_data\/Float32x4\/x.html",
            "name": "x",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": []
        },
        {
            "desc": "<p>Extracted y value.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get y;<\/code><\/pre>\n        ",
            "href": "dart-typed_data\/Float32x4\/y.html",
            "name": "y",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": []
        },
        {
            "desc": "<p>Extracted z value.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get z;<\/code><\/pre>\n        ",
            "href": "dart-typed_data\/Float32x4\/z.html",
            "name": "z",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:typed_data.Float32x4",
            "params": []
        }
    ]
}