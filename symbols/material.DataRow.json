{
    "name": "material.DataRow",
    "extends": [],
    "memberOf": "material",
    "events": [
        {
            "name": "onSelectChanged",
            "type": "foundation.ValueChanged<dart:core.bool>",
            "desc": "<p>Called when the user selects or unselects a selectable row.<\/p>\n<p>If this is not null, then the row is selectable. The current\nselection state of the row is given by <a href=\"material\/DataRow\/selected.html\">selected<\/a>.<\/p>\n<p>If any row is selectable, then the table's heading row will have\na checkbox that can be checked to select all selectable rows\n(and which is checked if all the rows are selected), and each\nsubsequent row will have a checkbox to toggle just that row.<\/p>\n<p>A row whose <a href=\"material\/DataRow\/onSelectChanged.html\">onSelectChanged<\/a> callback is null is ignored for\nthe purposes of determining the state of the \"all\" checkbox,\nand its checkbox is disabled.<\/p>\n        ",
            "static": false,
            "memberOf": "",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "material\/DataRow\/onSelectChanged.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueChanged&lt;bool&gt; onSelectChanged\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false,
            "isConstant": false,
            "types": [
                "foundation.ValueChanged",
                "dart:core.bool"
            ]
        }
    ],
    "methods": [
        {
            "name": "DataRow",
            "type": "",
            "desc": "<p>Creates the configuration for a row of a <a href=\"material\/DataTable-class.html\">DataTable<\/a>.<\/p>\n<p>The <code>cells<\/code> argument must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "material.DataRow",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.LocalKey",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "selected",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onSelectChanged",
                    "type": "foundation.ValueChanged<dart:core.bool>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "foundation.ValueChanged",
                        "dart:core.bool"
                    ]
                },
                {
                    "name": "cells",
                    "type": "dart:core.List<material.DataCell>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "material.DataCell"
                    ]
                }
            ],
            "isConstructor": true,
            "href": "material\/DataRow\/DataRow.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const DataRow({\n  this.key,\n  this.selected = false,\n  this.onSelectChanged,\n  @required this.cells,\n}) : assert(cells != null);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "DataRow.byIndex",
            "type": "",
            "desc": "<p>Creates the configuration for a row of a <a href=\"material\/DataTable-class.html\">DataTable<\/a>, deriving\nthe key from a row index.<\/p>\n<p>The <code>cells<\/code> argument must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "material.DataRow",
            "sig": "",
            "params": [
                {
                    "name": "index",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "selected",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onSelectChanged",
                    "type": "foundation.ValueChanged<dart:core.bool>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "foundation.ValueChanged",
                        "dart:core.bool"
                    ]
                },
                {
                    "name": "cells",
                    "type": "dart:core.List<material.DataCell>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "material.DataCell"
                    ]
                }
            ],
            "isConstructor": true,
            "href": "material\/DataRow\/DataRow.byIndex.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">DataRow.byIndex({\n  int index,\n  this.selected = false,\n  this.onSelectChanged,\n  @required this.cells,\n}) : assert(cells != null),\n     key = ValueKey&lt;int&gt;(index);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "cells",
            "type": "dart:core.List<material.DataCell>",
            "types": [
                "dart:core.List",
                "material.DataCell"
            ],
            "desc": "<p>The data for this row.<\/p>\n<p>There must be exactly as many cells as there are columns in the\ntable.<\/p>\n        ",
            "memberOf": "material.DataRow",
            "isConstant": false,
            "href": "material\/DataRow\/cells.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;DataCell&gt; cells\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "key",
            "type": "foundation.LocalKey",
            "types": [],
            "desc": "<p>A <a href=\"foundation\/Key-class.html\">Key<\/a> that uniquely identifies this row. This is used to\nensure that if a row is added or removed, any stateful widgets\nrelated to this row (e.g. an in-progress checkbox animation)\nremain on the right row visually.<\/p>\n<p>If the table never changes once created, no key is necessary.<\/p>\n        ",
            "memberOf": "material.DataRow",
            "isConstant": false,
            "href": "material\/DataRow\/key.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final LocalKey key\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "selected",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the row is selected.<\/p>\n<p>If <a href=\"material\/DataRow\/onSelectChanged.html\">onSelectChanged<\/a> is non-null for any row in the table, then\na checkbox is shown at the start of each row. If the row is\nselected (true), the checkbox will be checked and the row will\nbe highlighted.<\/p>\n<p>Otherwise, the checkbox, if present, will not be checked.<\/p>\n        ",
            "memberOf": "material.DataRow",
            "isConstant": false,
            "href": "material\/DataRow\/selected.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool selected\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "material\/DataRow-class.html",
    "desc": "<p>Row configuration and cell data for a <a href=\"material\/DataTable-class.html\">DataTable<\/a>.<\/p>\n<p>One row configuration must be provided for each row to\ndisplay in the table. The list of <a href=\"material\/DataRow-class.html\">DataRow<\/a> objects is passed\nas the <code>rows<\/code> argument to the <a href=\"material\/DataTable\/DataTable.html\">new DataTable<\/a> constructor.<\/p>\n<p>The data for this row of the table is provided in the <a href=\"material\/DataRow\/cells.html\">cells<\/a>\nproperty of the <a href=\"material\/DataRow-class.html\">DataRow<\/a> object.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "DataRow"
}