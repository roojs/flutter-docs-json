{
    "desc": "<p>Error thrown during replay when there is no matching invocation in the\nrecording.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-file_record_replay\/NoMatchingInvocationError-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "record_replay",
    "name": "record_replay.NoMatchingInvocationError",
    "shortname": "NoMatchingInvocationError",
    "extends": [
        "dart:core.Error",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a new <code>NoMatchingInvocationError<\/code> caused by the failure to replay\nthe specified <code>invocation<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">NoMatchingInvocationError(this.invocation);<\/code><\/pre>\n    ",
            "href": "package-file_record_replay\/NoMatchingInvocationError\/NoMatchingInvocationError.html",
            "isDeprecated": false,
            "type": "",
            "name": "NoMatchingInvocationError",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "record_replay.NoMatchingInvocationError",
            "params": [
                {
                    "name": "invocation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.Invocation"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  StringBuffer buf = new StringBuffer();\n  buf.write('No matching invocation found: ');\n  buf.write(getSymbolName(invocation.memberName));\n  if (invocation.isMethod) {\n    buf.write('(');\n    int i = 0;\n    for (dynamic arg in invocation.positionalArguments) {\n      buf.write(Error.safeToString(encode(arg)));\n      if (i++ &gt; 0) {\n        buf.write(', ');\n      }\n    }\n    invocation.namedArguments.forEach((Symbol name, dynamic value) {\n      if (i++ &gt; 0) {\n        buf.write(', ');\n      }\n      buf.write('${getSymbolName(name)}: ${encode(value)}');\n    });\n    buf.write(')');\n  } else if (invocation.isSetter) {\n    buf.write(Error.safeToString(encode(invocation.positionalArguments[0])));\n  }\n  return buf.toString();\n}<\/code><\/pre>\n    ",
            "href": "package-file_record_replay\/NoMatchingInvocationError\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "record_replay.NoMatchingInvocationError",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The invocation that was unable to be replayed.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Invocation invocation\n\n<\/code><\/pre>\n        ",
            "href": "package-file_record_replay\/NoMatchingInvocationError\/invocation.html",
            "name": "invocation",
            "isDeprecated": false,
            "type": "dart:core.Invocation",
            "memberOf": "record_replay.NoMatchingInvocationError",
            "params": []
        }
    ]
}