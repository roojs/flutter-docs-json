{
    "desc": "",
    "dtype": "class",
    "example": "",
    "href": "vector_math_geometry\/GeometryFilter-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "vector_math_geometry",
    "name": "vector_math_geometry.GeometryFilter",
    "shortname": "GeometryFilter",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [
        "vector_math_geometry.BarycentricFilter",
        "vector_math_geometry.ColorFilter",
        "vector_math_geometry.FlatShadeFilter",
        "vector_math_geometry.InvertFilter",
        "vector_math_geometry.TransformFilter"
    ],
    "events": [],
    "methods": [
        {
            "desc": "",
            "example": "",
            "href": "vector_math_geometry\/GeometryFilter\/GeometryFilter.html",
            "isDeprecated": false,
            "type": "",
            "name": "GeometryFilter",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "vector_math_geometry.GeometryFilter",
            "params": []
        },
        {
            "desc": "<p>Returns a copy of the mesh with any filter transforms applied.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">MeshGeometry filter(MeshGeometry mesh);<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/GeometryFilter\/filter.html",
            "isDeprecated": false,
            "type": "vector_math_geometry.MeshGeometry",
            "name": "filter",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.GeometryFilter",
            "params": [
                {
                    "name": "mesh",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_geometry.MeshGeometry"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;VertexAttrib&gt; get generates =&gt; &lt;VertexAttrib&gt;[];<\/code><\/pre>\n        ",
            "href": "vector_math_geometry\/GeometryFilter\/generates.html",
            "name": "generates",
            "isDeprecated": false,
            "type": "dart:core.List<vector_math_geometry.VertexAttrib>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_geometry.GeometryFilter",
            "params": []
        },
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get inplace =&gt; false;<\/code><\/pre>\n        ",
            "href": "vector_math_geometry\/GeometryFilter\/inplace.html",
            "name": "inplace",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_geometry.GeometryFilter",
            "params": []
        },
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;VertexAttrib&gt; get requires =&gt; &lt;VertexAttrib&gt;[];<\/code><\/pre>\n        ",
            "href": "vector_math_geometry\/GeometryFilter\/requires.html",
            "name": "requires",
            "isDeprecated": false,
            "type": "dart:core.List<vector_math_geometry.VertexAttrib>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "vector_math_geometry.GeometryFilter",
            "params": []
        }
    ]
}