{
    "name": "painting.BoxPainter",
    "extends": [],
    "memberOf": "painting",
    "events": [
        {
            "name": "onChanged",
            "type": "dart:ui.VoidCallback",
            "desc": "<p>Callback that is invoked if an asynchronously-loading resource used by the\ndecoration finishes loading. For example, an image. When this is invoked,\nthe <a href=\"painting\/BoxPainter\/paint.html\">paint<\/a> method should be called again.<\/p>\n<p>Resources might not start to load until after <a href=\"painting\/BoxPainter\/paint.html\">paint<\/a> has been called,\nbecause they might depend on the configuration.<\/p>\n        ",
            "static": false,
            "memberOf": "",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "painting\/BoxPainter\/onChanged.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final VoidCallback onChanged\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false,
            "isConstant": false
        }
    ],
    "methods": [
        {
            "name": "BoxPainter",
            "type": "",
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.BoxPainter",
            "sig": "",
            "params": [
                {
                    "name": "onChanged",
                    "type": "dart:ui.VoidCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "painting\/BoxPainter\/BoxPainter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const BoxPainter([this.onChanged]);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "dispose",
            "type": "",
            "desc": "<p>Discard any resources being held by the object.<\/p>\n<p>The <a href=\"painting\/BoxPainter\/onChanged.html\">onChanged<\/a> callback will not be invoked after this method has been\ncalled.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.BoxPainter",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "painting\/BoxPainter\/dispose.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@mustCallSuper\nvoid dispose() { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "paint",
            "type": "",
            "desc": "<p>Paints the <a href=\"painting\/Decoration-class.html\">Decoration<\/a> for which this object was created on the\ngiven canvas using the given configuration.<\/p>\n<p>The <a href=\"painting\/ImageConfiguration-class.html\">ImageConfiguration<\/a> object passed as the third argument must, at a\nminimum, have a non-null <a href=\"dart-ui\/Size-class.html\">Size<\/a>.<\/p>\n<p>If this object caches resources for painting (e.g. <a href=\"dart-ui\/Paint-class.html\">Paint<\/a> objects), the\ncache may be flushed when <a href=\"painting\/BoxPainter\/paint.html\">paint<\/a> is called with a new configuration. For\nthis reason, it may be more efficient to call\n<a href=\"painting\/Decoration\/createBoxPainter.html\">Decoration.createBoxPainter<\/a> for each different rectangle that is being\npainted in a particular frame.<\/p>\n<p>For example, if a decoration's owner wants to paint a particular\ndecoration once for its whole size, and once just in the bottom\nright, it might get two <a href=\"painting\/BoxPainter-class.html\">BoxPainter<\/a> instances, one for each.\nHowever, when its size changes, it could continue using those\nsame instances, since the previous resources would no longer be\nrelevant and thus losing them would not be an issue.<\/p>\n<p>Implementations should paint their decorations on the canvas in a\nrectangle whose top left corner is at the given <code>offset<\/code> and whose size is\ngiven by <code>configuration.size<\/code>.<\/p>\n<p>When a <a href=\"painting\/Decoration-class.html\">Decoration<\/a> is painted in a <a href=\"widgets\/Container-class.html\">Container<\/a> or <a href=\"widgets\/DecoratedBox-class.html\">DecoratedBox<\/a> (which\nis what <a href=\"widgets\/Container-class.html\">Container<\/a> uses), the <a href=\"painting\/ImageConfiguration\/textDirection.html\">ImageConfiguration.textDirection<\/a> property\nwill be populated based on the ambient <a href=\"widgets\/Directionality-class.html\">Directionality<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.BoxPainter",
            "sig": "",
            "params": [
                {
                    "name": "canvas",
                    "type": "dart:ui.Canvas",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "offset",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "configuration",
                    "type": "painting.ImageConfiguration",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "painting\/BoxPainter\/paint.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void paint(Canvas canvas, Offset offset, ImageConfiguration configuration);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "painting\/BoxPainter-class.html",
    "desc": "<p>A stateful class that can paint a particular <a href=\"painting\/Decoration-class.html\">Decoration<\/a>.<\/p>\n<p><a href=\"painting\/BoxPainter-class.html\">BoxPainter<\/a> objects can cache resources so that they can be used\nmultiple times.<\/p>\n<p>Some resources used by <a href=\"painting\/BoxPainter-class.html\">BoxPainter<\/a> may load asynchronously. When this\nhappens, the <a href=\"painting\/BoxPainter\/onChanged.html\">onChanged<\/a> callback will be invoked. To stop this callback\nfrom being called after the painter has been discarded, call <a href=\"painting\/BoxPainter\/dispose.html\">dispose<\/a>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "BoxPainter"
}