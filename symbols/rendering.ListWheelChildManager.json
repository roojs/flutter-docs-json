{
    "desc": "<p>A delegate used by <a href=\"rendering\/RenderListWheelViewport-class.html\">RenderListWheelViewport<\/a> to manage its children.<\/p>\n<p><a href=\"rendering\/RenderListWheelViewport-class.html\">RenderListWheelViewport<\/a> during layout will ask the delegate to create\nchildren that are visible in the viewport and remove those that are not.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "rendering\/ListWheelChildManager-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "rendering",
    "name": "rendering.ListWheelChildManager",
    "shortname": "ListWheelChildManager",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "rendering\/ListWheelChildManager\/ListWheelChildManager.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "rendering.ListWheelChildManager",
            "params": []
        },
        {
            "desc": "<p>Checks whether the delegate is able to provide a child widget at the given\nindex.<\/p>\n<p>This function is not about whether the child at the given index is\nattached to the <a href=\"rendering\/RenderListWheelViewport-class.html\">RenderListWheelViewport<\/a> or not.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool childExistsAt(int index);<\/code><\/pre>\n    ",
            "href": "rendering\/ListWheelChildManager\/childExistsAt.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.ListWheelChildManager",
            "params": [
                {
                    "name": "index",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Creates a new child at the given index and updates it to the child list\nof <a href=\"rendering\/RenderListWheelViewport-class.html\">RenderListWheelViewport<\/a>. If no child corresponds to <code>index<\/code>, then do\nnothing.<\/p>\n<p>It is possible to create children with negative indices.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void createChild(int index, { @required RenderBox after });<\/code><\/pre>\n    ",
            "href": "rendering\/ListWheelChildManager\/createChild.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.ListWheelChildManager",
            "params": [
                {
                    "name": "after",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "rendering.RenderBox"
                },
                {
                    "name": "index",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Removes the child element corresponding with the given RenderBox.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void removeChild(RenderBox child);<\/code><\/pre>\n    ",
            "href": "rendering\/ListWheelChildManager\/removeChild.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.ListWheelChildManager",
            "params": [
                {
                    "name": "child",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "rendering.RenderBox"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The maximum number of children that can be provided to\n<a href=\"rendering\/RenderListWheelViewport-class.html\">RenderListWheelViewport<\/a>.<\/p>\n<p>If non-null, the children will have index in the range <code>0, childCount - 1<\/code>.<\/p>\n<p>If null, then there's no explicit limits to the range of the children\nexcept that it has to be contiguous. If <a href=\"rendering\/ListWheelChildManager\/childExistsAt.html\">childExistsAt<\/a> for a certain\nindex returns false, that index is already past the limit.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get childCount;<\/code><\/pre>\n        ",
            "href": "rendering\/ListWheelChildManager\/childCount.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "rendering.ListWheelChildManager",
            "params": []
        }
    ]
}