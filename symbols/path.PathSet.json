{
    "desc": "<p>A set containing paths, compared using <a href=\"package-path_path\/equals.html\">equals<\/a> and <a href=\"package-path_path\/hash.html\">hash<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-path_path\/PathSet-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "path",
    "name": "path.PathSet",
    "shortname": "PathSet",
    "extends": [
        "dart:core.String",
        "dart:collection.IterableBase",
        "dart:core.String",
        "dart:core.Iterable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates an empty <a href=\"package-path_path\/PathSet-class.html\">PathSet<\/a> whose contents are compared using\n<code>context.equals<\/code> and <code>context.hash<\/code>.<\/p>\n<p>The <code>context<\/code> defaults to the current path context.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">PathSet({p.Context context}) : _inner = _create(context);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/PathSet.html",
            "isDeprecated": false,
            "type": "",
            "name": "PathSet",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "path.Context"
                }
            ]
        },
        {
            "desc": "<p>Adds <code>value<\/code> to the set.<\/p>\n<p>Returns <code>true<\/code> if <code>value<\/code> (or an equal value) was not yet in the set.\nOtherwise returns <code>false<\/code> and the set is not changed.<\/p>\n<p>Example:<\/p>\n<pre class=\"language-dart\"><code>var set = new Set();\nvar time1 = new DateTime.fromMillisecondsSinceEpoch(0);\nvar time2 = new DateTime.fromMillisecondsSinceEpoch(0);\n\/\/ time1 and time2 are equal, but not identical.\nExpect.isTrue(time1 == time2);\nExpect.isFalse(identical(time1, time2));\nset.add(time1);  \/\/ =&gt; true.\n\/\/ A value equal to time2 exists already in the set, and the call to\n\/\/ add doesn't change the set.\nset.add(time2);  \/\/ =&gt; false.\nExpect.isTrue(set.length == 1);\nExpect.isTrue(identical(time1, set.first));\n<\/code><\/pre>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool add(String value) =&gt; _inner.add(value);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/add.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "add",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Adds all <code>elements<\/code> to this Set.<\/p>\n<p>Equivalent to adding each element in <code>elements<\/code> using <a href=\"package-path_path\/PathSet\/add.html\">add<\/a>,\nbut some collections may be able to optimize it.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addAll(Iterable&lt;String&gt; elements) =&gt; _inner.addAll(elements);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/addAll.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "addAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "elements",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Iterable<dart:core.String>"
                }
            ]
        },
        {
            "desc": "<p>Provides a view of this set as a set of <code>R<\/code> instances.<\/p>\n<p>If this set contains only instances of <code>R<\/code>, all read operations\nwill work correctly. If any operation tries to access an element\nthat is not an instance of <code>R<\/code>, the access will throw instead.<\/p>\n<p>Elements added to the set (e.g., by using <a href=\"package-path_path\/PathSet\/add.html\">add<\/a> or <a href=\"package-path_path\/PathSet\/addAll.html\">addAll<\/a>)\nmust be instance of <code>R<\/code> to be valid arguments to the adding function,\nand they must be instances of <code>E<\/code> as well to be accepted by\nthis set as well.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Set&lt;T&gt; cast&lt;T&gt;() =&gt; _inner.cast&lt;T&gt;();<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/cast.html",
            "isDeprecated": false,
            "type": "dart:core.Set",
            "name": "cast",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": []
        },
        {
            "desc": "<p>Removes all elements in the set.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void clear() =&gt; _inner.clear();<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/clear.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "clear",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": []
        },
        {
            "desc": "<p>Returns true if <code>value<\/code> is in the set.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool contains(Object other) =&gt; _inner.contains(other);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/contains.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "contains",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        },
        {
            "desc": "<p>Returns whether this Set contains all the elements of <code>other<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool containsAll(Iterable&lt;Object&gt; other) =&gt; _inner.containsAll(other);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/containsAll.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "containsAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Iterable<dart:core.Object>"
                }
            ]
        },
        {
            "desc": "<p>Returns a new set with the elements of this that are not in <code>other<\/code>.<\/p>\n<p>That is, the returned set contains all the elements of this <a href=\"dart-core\/Set-class.html\">Set<\/a> that\nare not elements of <code>other<\/code> according to <code>other.contains<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Set&lt;String&gt; difference(Set&lt;Object&gt; other) =&gt; _inner.difference(other);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/difference.html",
            "isDeprecated": false,
            "type": "dart:core.Set<dart:core.String>",
            "name": "difference",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Set<dart:core.Object>"
                }
            ]
        },
        {
            "desc": "<p>Returns a new set which is the intersection between this set and <code>other<\/code>.<\/p>\n<p>That is, the returned set contains all the elements of this <a href=\"dart-core\/Set-class.html\">Set<\/a> that\nare also elements of <code>other<\/code> according to <code>other.contains<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Set&lt;String&gt; intersection(Set&lt;Object&gt; other) =&gt; _inner.intersection(other);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/intersection.html",
            "isDeprecated": false,
            "type": "dart:core.Set<dart:core.String>",
            "name": "intersection",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Set<dart:core.Object>"
                }
            ]
        },
        {
            "desc": "<p>If an object equal to <code>object<\/code> is in the set, return it.<\/p>\n<p>Checks whether <code>object<\/code> is in the set, like <a href=\"package-path_path\/PathSet\/contains.html\">contains<\/a>, and if so,\nreturns the object in the set, otherwise returns <code>null<\/code>.<\/p>\n<p>If the equality relation used by the set is not identity,\nthen the returned object may not be <em>identical<\/em> to <code>object<\/code>.\nSome set implementations may not be able to implement this method.\nIf the <a href=\"package-path_path\/PathSet\/contains.html\">contains<\/a> method is computed,\nrather than being based on an actual object instance,\nthen there may not be a specific object instance representing the\nset element.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String lookup(Object element) =&gt; _inner.lookup(element);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/lookup.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "lookup",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "element",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        },
        {
            "desc": "<p>Removes <code>value<\/code> from the set. Returns true if <code>value<\/code> was\nin the set. Returns false otherwise. The method has no effect\nif <code>value<\/code> value was not in the set.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool remove(Object value) =&gt; _inner.remove(value);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/remove.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "remove",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        },
        {
            "desc": "<p>Removes each element of <code>elements<\/code> from this set.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void removeAll(Iterable&lt;Object&gt; elements) =&gt; _inner.removeAll(elements);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/removeAll.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "removeAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "elements",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Iterable<dart:core.Object>"
                }
            ]
        },
        {
            "desc": "<p>Removes all elements of this set that satisfy <code>test<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void removeWhere(bool test(String element)) =&gt; _inner.removeWhere(test);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/removeWhere.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "removeWhere",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "element",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Removes all elements of this set that are not elements in <code>elements<\/code>.<\/p>\n<p>Checks for each element of <code>elements<\/code> whether there is an element in this\nset that is equal to it (according to <code>this.contains<\/code>), and if so, the\nequal element in this set is retained, and elements that are not equal\nto any element in <code>elements<\/code> are removed.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void retainAll(Iterable&lt;Object&gt; elements) =&gt; _inner.retainAll(elements);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/retainAll.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "retainAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "elements",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Iterable<dart:core.Object>"
                }
            ]
        },
        {
            "desc": "<p>Removes all elements of this set that fail to satisfy <code>test<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void retainWhere(bool test(String element)) =&gt; _inner.retainWhere(test);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/retainWhere.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "retainWhere",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "element",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Creates a <a href=\"dart-core\/Set-class.html\">Set<\/a> containing the same elements as this iterable.<\/p>\n<p>The set may contain fewer elements than the iterable,\nif the iterable contains an element more than once,\nor it contains one or more elements that are equal.\nThe order of the elements in the set is not guaranteed to be the same\nas for the iterable.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Set&lt;String&gt; toSet() =&gt; _inner.toSet();<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/toSet.html",
            "isDeprecated": false,
            "type": "dart:core.Set<dart:core.String>",
            "name": "toSet",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": []
        },
        {
            "desc": "<p>Returns a new set which contains all the elements of this set and <code>other<\/code>.<\/p>\n<p>That is, the returned set contains all the elements of this <a href=\"dart-core\/Set-class.html\">Set<\/a> and\nall the elements of <code>other<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Set&lt;String&gt; union(Set&lt;String&gt; other) =&gt; _inner.union(other);<\/code><\/pre>\n    ",
            "href": "package-path_path\/PathSet\/union.html",
            "isDeprecated": false,
            "type": "dart:core.Set<dart:core.String>",
            "name": "union",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "path.PathSet",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Set<dart:core.String>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Provides an iterator that iterates over the elements of this set.<\/p>\n<p>The order of iteration is defined by the individual <code>Set<\/code> implementation,\nbut must be consistent between changes to the set.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Iterator&lt;String&gt; get iterator =&gt; _inner.iterator;<\/code><\/pre>\n        ",
            "href": "package-path_path\/PathSet\/iterator.html",
            "name": "iterator",
            "isDeprecated": false,
            "type": "dart:core.Iterator<dart:core.String>",
            "memberOf": "path.PathSet",
            "params": []
        },
        {
            "desc": "<p>Returns the number of elements in <a href=\"package-path_path\/PathSet-class.html\">this<\/a>.<\/p>\n<p>Counting all elements may involve iterating through all elements and can\ntherefore be slow.\nSome iterables have a more efficient way to find the number of elements.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get length =&gt; _inner.length;<\/code><\/pre>\n        ",
            "href": "package-path_path\/PathSet\/length.html",
            "name": "length",
            "isDeprecated": false,
            "type": "dart:core.int",
            "memberOf": "path.PathSet",
            "params": []
        }
    ]
}