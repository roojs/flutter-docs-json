{
    "desc": "<p>Delegate for configuring a <a href=\"widgets\/SliverPersistentHeader-class.html\">SliverPersistentHeader<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "widgets\/SliverPersistentHeaderDelegate-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.SliverPersistentHeaderDelegate",
    "shortname": "SliverPersistentHeaderDelegate",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SliverPersistentHeaderDelegate();<\/code><\/pre>\n    ",
            "href": "widgets\/SliverPersistentHeaderDelegate\/SliverPersistentHeaderDelegate.html",
            "isDeprecated": false,
            "type": "",
            "name": "SliverPersistentHeaderDelegate",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.SliverPersistentHeaderDelegate",
            "params": []
        },
        {
            "desc": "<p>The widget to place inside the <a href=\"widgets\/SliverPersistentHeader-class.html\">SliverPersistentHeader<\/a>.<\/p>\n<p>The <code>context<\/code> is the <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> of the sliver.<\/p>\n<p>The <code>shrinkOffset<\/code> is a distance from <a href=\"widgets\/SliverPersistentHeaderDelegate\/maxExtent.html\">maxExtent<\/a> towards <a href=\"widgets\/SliverPersistentHeaderDelegate\/minExtent.html\">minExtent<\/a>\nrepresenting the current amount by which the sliver has been shrunk. When\nthe <code>shrinkOffset<\/code> is zero, the contents will be rendered with a dimension\nof <a href=\"widgets\/SliverPersistentHeaderDelegate\/maxExtent.html\">maxExtent<\/a> in the main axis. When <code>shrinkOffset<\/code> equals the difference\nbetween <a href=\"widgets\/SliverPersistentHeaderDelegate\/maxExtent.html\">maxExtent<\/a> and <a href=\"widgets\/SliverPersistentHeaderDelegate\/minExtent.html\">minExtent<\/a> (a positive number), the contents will\nbe rendered with a dimension of <a href=\"widgets\/SliverPersistentHeaderDelegate\/minExtent.html\">minExtent<\/a> in the main axis. The\n<code>shrinkOffset<\/code> will always be a positive number in that range.<\/p>\n<p>The <code>overlapsContent<\/code> argument is true if subsequent slivers (if any) will\nbe rendered beneath this one, and false if the sliver will not have any\ncontents below it. Typically this is used to decide whether to draw a\nshadow to simulate the sliver being above the contents below it. Typically\nthis is true when <code>shrinkOffset<\/code> is at its greatest value and false\notherwise, but that is not guaranteed. See <a href=\"widgets\/NestedScrollView-class.html\">NestedScrollView<\/a> for an\nexample of a case where <code>overlapsContent<\/code>'s value can be unrelated to\n<code>shrinkOffset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Widget build(BuildContext context, double shrinkOffset, bool overlapsContent);<\/code><\/pre>\n    ",
            "href": "widgets\/SliverPersistentHeaderDelegate\/build.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "build",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.SliverPersistentHeaderDelegate",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "overlapsContent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.bool"
                },
                {
                    "name": "shrinkOffset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Whether this delegate is meaningfully different from the old delegate.<\/p>\n<p>If this returns false, then the header might not be rebuilt, even though\nthe instance of the delegate changed.<\/p>\n<p>This must return true if <code>oldDelegate<\/code> and this object would return\ndifferent values for <a href=\"widgets\/SliverPersistentHeaderDelegate\/minExtent.html\">minExtent<\/a>, <a href=\"widgets\/SliverPersistentHeaderDelegate\/maxExtent.html\">maxExtent<\/a>, <a href=\"widgets\/SliverPersistentHeaderDelegate\/snapConfiguration.html\">snapConfiguration<\/a>, or\nwould return a meaningfully different widget tree from <a href=\"widgets\/SliverPersistentHeaderDelegate\/build.html\">build<\/a> for the\nsame arguments.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool shouldRebuild(covariant SliverPersistentHeaderDelegate oldDelegate);<\/code><\/pre>\n    ",
            "href": "widgets\/SliverPersistentHeaderDelegate\/shouldRebuild.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "shouldRebuild",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.SliverPersistentHeaderDelegate",
            "params": [
                {
                    "name": "oldDelegate",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.SliverPersistentHeaderDelegate"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The size of the header when it is not shrinking at the top of the\nviewport.<\/p>\n<p>This must return a value equal to or greater than <a href=\"widgets\/SliverPersistentHeaderDelegate\/minExtent.html\">minExtent<\/a>.<\/p>\n<p>This value should not change over the lifetime of the delegate. It should\nbe based entirely on the constructor arguments passed to the delegate. See\n<a href=\"widgets\/SliverPersistentHeaderDelegate\/shouldRebuild.html\">shouldRebuild<\/a>, which must return true if a new delegate would return a\ndifferent value.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get maxExtent;<\/code><\/pre>\n        ",
            "href": "widgets\/SliverPersistentHeaderDelegate\/maxExtent.html",
            "name": "maxExtent",
            "isDeprecated": false,
            "type": "dart:core.double",
            "memberOf": "widgets.SliverPersistentHeaderDelegate",
            "params": []
        },
        {
            "desc": "<p>The smallest size to allow the header to reach, when it shrinks at the\nstart of the viewport.<\/p>\n<p>This must return a value equal to or less than <a href=\"widgets\/SliverPersistentHeaderDelegate\/maxExtent.html\">maxExtent<\/a>.<\/p>\n<p>This value should not change over the lifetime of the delegate. It should\nbe based entirely on the constructor arguments passed to the delegate. See\n<a href=\"widgets\/SliverPersistentHeaderDelegate\/shouldRebuild.html\">shouldRebuild<\/a>, which must return true if a new delegate would return a\ndifferent value.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get minExtent;<\/code><\/pre>\n        ",
            "href": "widgets\/SliverPersistentHeaderDelegate\/minExtent.html",
            "name": "minExtent",
            "isDeprecated": false,
            "type": "dart:core.double",
            "memberOf": "widgets.SliverPersistentHeaderDelegate",
            "params": []
        },
        {
            "desc": "<p>Specifies how floating headers should animate in and out of view.<\/p>\n<p>If the value of this property is null, then floating headers will\nnot animate into place.<\/p>\n<p>This is only used for floating headers (those with\n<a href=\"widgets\/SliverPersistentHeader\/floating.html\">SliverPersistentHeader.floating<\/a> set to true).<\/p>\n<p>Defaults to null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">FloatingHeaderSnapConfiguration get snapConfiguration =&gt; null;<\/code><\/pre>\n        ",
            "href": "widgets\/SliverPersistentHeaderDelegate\/snapConfiguration.html",
            "name": "snapConfiguration",
            "isDeprecated": false,
            "type": "rendering.FloatingHeaderSnapConfiguration",
            "memberOf": "widgets.SliverPersistentHeaderDelegate",
            "params": []
        }
    ]
}