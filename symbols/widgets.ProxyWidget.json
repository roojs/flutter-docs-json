{
    "name": "widgets.ProxyWidget",
    "extends": [
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "ProxyWidget",
            "type": "",
            "desc": "<p>Creates a widget that has exactly one child widget.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.ProxyWidget",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "child",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/ProxyWidget\/ProxyWidget.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const ProxyWidget({ Key key, @required this.child }) : super(key: key);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "child",
            "type": "widgets.Widget",
            "types": [],
            "desc": "<p>The widget below this widget in the tree.<\/p>\n<p>This widget can only have one child. To lay out multiple children, let this\nwidget's child be a widget such as <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Stack-class.html\">Stack<\/a>, which have a\n<code>children<\/code> property, and then provide the children to that widget.<\/p>\n        ",
            "memberOf": "widgets.ProxyWidget",
            "isConstant": false,
            "href": "widgets\/ProxyWidget\/child.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "cupertino.CupertinoTheme",
        "material.ButtonTheme",
        "material.ChipTheme",
        "material.DropdownButtonHideUnderline",
        "material.FlexibleSpaceBarSettings",
        "material.ListTileTheme",
        "material.SliderTheme",
        "widgets.DefaultAssetBundle",
        "widgets.DefaultTextStyle",
        "widgets.Directionality",
        "widgets.Expanded",
        "widgets.Flexible",
        "widgets.IconTheme",
        "widgets.InheritedModel",
        "widgets.InheritedNotifier",
        "widgets.InheritedWidget",
        "widgets.KeepAlive",
        "widgets.LayoutId",
        "widgets.MediaQuery",
        "widgets.ParentDataWidget",
        "widgets.Positioned",
        "widgets.PrimaryScrollController",
        "widgets.ScrollConfiguration",
        "widgets.TableCell",
        "widgets.TickerMode"
    ],
    "realImplementors": [
        "cupertino.CupertinoTheme",
        "material.ButtonTheme",
        "material.ChipTheme",
        "material.DropdownButtonHideUnderline",
        "material.FlexibleSpaceBarSettings",
        "material.ListTileTheme",
        "material.SliderTheme",
        "widgets.DefaultAssetBundle",
        "widgets.DefaultTextStyle",
        "widgets.Directionality",
        "widgets.Expanded",
        "widgets.Flexible",
        "widgets.IconTheme"
    ],
    "cn": [],
    "href": "widgets\/ProxyWidget-class.html",
    "desc": "<p>A widget that has a child widget provided to it, instead of building a new\nwidget.<\/p>\n<p>Useful as a base class for other widgets, such as <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> and\n<a href=\"widgets\/ParentDataWidget-class.html\">ParentDataWidget<\/a>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a>, for widgets that introduce ambient state that can\nbe read by descendant widgets.<\/li>\n<li>\n<a href=\"widgets\/ParentDataWidget-class.html\">ParentDataWidget<\/a>, for widgets that populate the\n<a href=\"rendering\/RenderObject\/parentData.html\">RenderObject.parentData<\/a> slot of their child's <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> to\nconfigure the parent widget's layout.<\/li>\n<li>\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> and <a href=\"widgets\/State-class.html\">State<\/a>, for widgets that can build differently\nseveral times over their lifetime.<\/li>\n<li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, for widgets that always build the same way given a\nparticular configuration and ambient state.<\/li>\n<li>\n<a href=\"widgets\/Widget-class.html\">Widget<\/a>, for an overview of widgets in general.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "ProxyWidget"
}