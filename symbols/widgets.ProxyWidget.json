{
    "desc": "<p>A widget that has a child widget provided to it, instead of building a new\nwidget.<\/p>\n<p>Useful as a base class for other widgets, such as <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> and\n<a href=\"widgets\/ParentDataWidget-class.html\">ParentDataWidget<\/a>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a>, for widgets that introduce ambient state that can\nbe read by descendant widgets.<\/li>\n<li>\n<a href=\"widgets\/ParentDataWidget-class.html\">ParentDataWidget<\/a>, for widgets that populate the\n<a href=\"rendering\/RenderObject\/parentData.html\">RenderObject.parentData<\/a> slot of their child's <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> to\nconfigure the parent widget's layout.<\/li>\n<li>\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> and <a href=\"widgets\/State-class.html\">State<\/a>, for widgets that can build differently\nseveral times over their lifetime.<\/li>\n<li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, for widgets that always build the same way given a\nparticular configuration and ambient state.<\/li>\n<li>\n<a href=\"widgets\/Widget-class.html\">Widget<\/a>, for an overview of widgets in general.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": null,
    "href": "widgets\/ProxyWidget-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.ProxyWidget",
    "shortname": "ProxyWidget",
    "extends": [
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a widget that has exactly one child widget.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const ProxyWidget({ Key key, @required this.child }) : super(key: key);<\/code><\/pre>\n    ",
            "href": "widgets\/ProxyWidget\/ProxyWidget.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.ProxyWidget",
            "params": [
                {
                    "name": "child",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The widget below this widget in the tree.<\/p>\n<p>This widget can only have one child. To lay out multiple children, let this\nwidget's child be a widget such as <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Stack-class.html\">Stack<\/a>, which have a\n<code>children<\/code> property, and then provide the children to that widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ProxyWidget\/child.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "widgets.ProxyWidget",
            "params": []
        }
    ]
}