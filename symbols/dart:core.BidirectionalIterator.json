{
    "desc": "<p>An Iterator that allows moving backwards as well as forwards.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "dart-core\/BidirectionalIterator-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:core",
    "name": "dart:core.BidirectionalIterator",
    "shortname": "BidirectionalIterator",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": null,
            "href": "dart-core\/BidirectionalIterator\/BidirectionalIterator.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:core.BidirectionalIterator",
            "params": []
        },
        {
            "desc": "<p>Move back to the previous element.<\/p>\n<p>Returns true and updates <a href=\"dart-core\/Iterator\/current.html\">current<\/a> if successful. Returns false\nand sets <a href=\"dart-core\/Iterator\/current.html\">current<\/a> to null if there is no previous element.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool movePrevious();<\/code><\/pre>\n    ",
            "href": "dart-core\/BidirectionalIterator\/movePrevious.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:core.BidirectionalIterator",
            "params": []
        }
    ],
    "props": []
}