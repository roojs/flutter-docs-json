{
    "name": "vector_math_geometry.RingGenerator",
    "extends": [
        "vector_math_geometry.GeometryGenerator",
        "dart:core.Object"
    ],
    "memberOf": "vector_math_geometry",
    "events": [],
    "methods": [
        {
            "name": "RingGenerator",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.RingGenerator",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "vector_math_geometry\/RingGenerator\/RingGenerator.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "createRing",
            "type": "vector_math_geometry.MeshGeometry",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.RingGenerator",
            "sig": "",
            "params": [
                {
                    "name": "innerRadius",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "outerRadius",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "flags",
                    "type": "vector_math_geometry.GeometryGeneratorFlags",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "filters",
                    "type": "dart:core.List<vector_math_geometry.GeometryFilter>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "vector_math_geometry.GeometryFilter"
                    ]
                },
                {
                    "name": "segments",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "thetaStart",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "thetaLength",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "stripTextureCoordinates",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/RingGenerator\/createRing.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">MeshGeometry createRing(double innerRadius, double outerRadius,\n    {GeometryGeneratorFlags flags,\n    List&lt;GeometryFilter&gt; filters,\n    int segments: 64,\n    double thetaStart: 0.0,\n    double thetaLength: math.pi * 2.0,\n    bool stripTextureCoordinates: true}) {\n  _innerRadius = innerRadius;\n  _outerRadius = outerRadius;\n  _segments = segments;\n  _thetaStart = thetaStart;\n  _thetaLength = thetaLength;\n  _stripTextureCoordinates = stripTextureCoordinates;\n  return createGeometry(flags: flags, filters: filters);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "generateIndices",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.RingGenerator",
            "sig": "",
            "params": [
                {
                    "name": "indices",
                    "type": "dart:typed_data.Uint16List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/RingGenerator\/generateIndices.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateIndices(Uint16List indices) {\n  int index = 0;\n  final int length = _segments * 2;\n  for (int i = 0; i &lt; length; i += 2) {\n    indices[index + 0] = i + 0;\n    indices[index + 1] = i + 1;\n    indices[index + 2] = i + 3;\n    indices[index + 3] = i + 0;\n    indices[index + 4] = i + 3;\n    indices[index + 5] = i + 2;\n    index += 6;\n  }\n  assert(index == indexCount);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "generateVertexPositions",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.RingGenerator",
            "sig": "",
            "params": [
                {
                    "name": "positions",
                    "type": "vector_math_lists.Vector3List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "indices",
                    "type": "dart:typed_data.Uint16List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/RingGenerator\/generateVertexPositions.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateVertexPositions(Vector3List positions, Uint16List indices) {\n  final Vector3 v = new Vector3.zero();\n  int index = 0;\n  for (int i = 0; i &lt;= _segments; i++) {\n    final double percent = i \/ _segments;\n    v\n      ..x = _innerRadius * math.cos(_thetaStart + percent * _thetaLength)\n      ..z = _innerRadius * math.sin(_thetaStart + percent * _thetaLength);\n    positions[index] = v;\n    index++;\n    v\n      ..x = _outerRadius * math.cos(_thetaStart + percent * _thetaLength)\n      ..z = _outerRadius * math.sin(_thetaStart + percent * _thetaLength);\n    positions[index] = v;\n    index++;\n  }\n  assert(index == vertexCount);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "generateVertexTexCoords",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.RingGenerator",
            "sig": "",
            "params": [
                {
                    "name": "texCoords",
                    "type": "vector_math_lists.Vector2List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "positions",
                    "type": "vector_math_lists.Vector3List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "indices",
                    "type": "dart:typed_data.Uint16List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/RingGenerator\/generateVertexTexCoords.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateVertexTexCoords(\n    Vector2List texCoords, Vector3List positions, Uint16List indices) {\n  if (_stripTextureCoordinates) {\n    final Vector2 v = new Vector2.zero();\n    int index = 0;\n    for (int i = 0; i &lt;= _segments; i++) {\n      final double percent = i \/ _segments;\n      v\n        ..x = 0.0\n        ..y = percent;\n      texCoords[index] = v;\n      index++;\n      v\n        ..x = 1.0\n        ..y = percent;\n      texCoords[index] = v;\n      index++;\n    }\n  } else {\n    final Vector2 v = new Vector2.zero();\n    int index = 0;\n    for (int i = 0; i &lt;= _segments; i++) {\n      Vector3 position = positions[index];\n      double x = (position.x \/ (_outerRadius + 1.0)) * 0.5;\n      double y = (position.z \/ (_outerRadius + 1.0)) * 0.5;\n      v\n        ..x = x + 0.5\n        ..y = y + 0.5;\n      texCoords[index] = v;\n      index++;\n      position = positions[index];\n      x = (position.x \/ (_outerRadius + 1.0)) * 0.5;\n      y = (position.z \/ (_outerRadius + 1.0)) * 0.5;\n      v\n        ..x = x + 0.5\n        ..y = y + 0.5;\n      texCoords[index] = v;\n      index++;\n    }\n    assert(index == vertexCount);\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "indexCount",
            "type": "dart:core.int",
            "types": [],
            "desc": "",
            "memberOf": "vector_math_geometry.RingGenerator",
            "isConstant": false,
            "href": "vector_math_geometry\/RingGenerator\/indexCount.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get indexCount =&gt; (_segments) * 3 * 2;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "vertexCount",
            "type": "dart:core.int",
            "types": [],
            "desc": "",
            "memberOf": "vector_math_geometry.RingGenerator",
            "isConstant": false,
            "href": "vector_math_geometry\/RingGenerator\/vertexCount.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get vertexCount =&gt; (_segments + 1) * 2;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "vector_math_geometry\/RingGenerator-class.html",
    "desc": "",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "RingGenerator"
}