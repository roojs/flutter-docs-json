{
    "desc": "<p>Scheduler for running the following:<\/p>\n<ul>\n<li>\n<p><em>Transient callbacks<\/em>, triggered by the system's <a href=\"dart-ui\/Window\/onBeginFrame.html\">Window.onBeginFrame<\/a>\ncallback, for synchronizing the application's behavior to the system's\ndisplay. For example, <a href=\"scheduler\/Ticker-class.html\">Ticker<\/a>s and <a href=\"animation\/AnimationController-class.html\">AnimationController<\/a>s trigger from\nthese.<\/p>\n<\/li>\n<li>\n<p><em>Persistent callbacks<\/em>, triggered by the system's <a href=\"dart-ui\/Window\/onDrawFrame.html\">Window.onDrawFrame<\/a>\ncallback, for updating the system's display after transient callbacks have\nexecuted. For example, the rendering layer uses this to drive its\nrendering pipeline.<\/p>\n<\/li>\n<li>\n<p><em>Post-frame callbacks<\/em>, which are run after persistent callbacks, just\nbefore returning from the <a href=\"dart-ui\/Window\/onDrawFrame.html\">Window.onDrawFrame<\/a> callback.<\/p>\n<\/li>\n<li>\n<p>Non-rendering tasks, to be run between frames. These are given a\npriority and are executed in priority order according to a\n<a href=\"scheduler\/SchedulerBinding\/schedulingStrategy.html\">schedulingStrategy<\/a>.<\/p>\n<\/li>\n<\/ul>",
    "dtype": "mixin",
    "example": "",
    "href": "scheduler\/SchedulerBinding-mixin.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "scheduler",
    "name": "scheduler.SchedulerBinding",
    "shortname": "SchedulerBinding",
    "extends": [],
    "is_enum": false,
    "is_mixin": true,
    "realImplementors": [],
    "events": [],
    "methods": [],
    "props": []
}