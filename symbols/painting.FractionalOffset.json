{
    "name": "painting.FractionalOffset",
    "extends": [
        "painting.Alignment",
        "painting.AlignmentGeometry",
        "dart:core.Object"
    ],
    "memberOf": "painting",
    "events": [],
    "methods": [
        {
            "name": "operator %",
            "type": "painting.FractionalOffset",
            "desc": "<p>Computes the remainder in each dimension by the given factor.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "painting\/FractionalOffset\/operator_modulo.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nFractionalOffset operator %(double other) {\n  return FractionalOffset(dx % other, dy % other);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator *",
            "type": "painting.FractionalOffset",
            "desc": "<p>Scales the <a href=\"painting\/Alignment-class.html\">Alignment<\/a> in each dimension by the given factor.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "painting\/FractionalOffset\/operator_multiply.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nFractionalOffset operator *(double other) {\n  return FractionalOffset(dx * other, dy * other);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator +",
            "type": "painting.Alignment",
            "desc": "<p>Returns the sum of two <a href=\"painting\/Alignment-class.html\">Alignment<\/a>s.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "painting.Alignment",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "painting\/FractionalOffset\/operator_plus.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nAlignment operator +(Alignment other) {\n  if (other is! FractionalOffset)\n    return super + other;\n  final FractionalOffset typedOther = other;\n  return FractionalOffset(dx + typedOther.dx, dy + typedOther.dy);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator -",
            "type": "painting.Alignment",
            "desc": "<p>Returns the difference between two <a href=\"painting\/Alignment-class.html\">Alignment<\/a>s.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "painting.Alignment",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "painting\/FractionalOffset\/operator_minus.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nAlignment operator -(Alignment other) {\n  if (other is! FractionalOffset)\n    return super - other;\n  final FractionalOffset typedOther = other;\n  return FractionalOffset(dx - typedOther.dx, dy - typedOther.dy);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator \/",
            "type": "painting.FractionalOffset",
            "desc": "<p>Divides the <a href=\"painting\/Alignment-class.html\">Alignment<\/a> in each dimension by the given factor.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "painting\/FractionalOffset\/operator_divide.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nFractionalOffset operator \/(double other) {\n  return FractionalOffset(dx \/ other, dy \/ other);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "FractionalOffset",
            "type": "",
            "desc": "<p>Creates a fractional offset.<\/p>\n<p>The <code>dx<\/code> and <code>dy<\/code> arguments must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [
                {
                    "name": "dx",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "dy",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "painting\/FractionalOffset\/FractionalOffset.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const FractionalOffset(double dx, double dy)\n  : assert(dx != null),\n    assert(dy != null),\n    super(dx * 2.0 - 1.0, dy * 2.0 - 1.0);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "FractionalOffset.fromOffsetAndRect",
            "type": "",
            "desc": "<p>Creates a fractional offset from a specific offset and rectangle.<\/p>\n<p>The offset is assumed to be relative to the same origin as the rectangle.<\/p>\n<p>If the offset is relative to the top left of the rectangle, use <a href=\"painting\/FractionalOffset\/FractionalOffset.fromOffsetAndSize.html\">new\nFractionalOffset.fromOffsetAndSize<\/a> instead, passing <code>rect.size<\/code>.<\/p>\n<p>The returned <a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a> describes the position of the\n<a href=\"dart-ui\/Offset-class.html\">Offset<\/a> in the <a href=\"dart-ui\/Rect-class.html\">Rect<\/a>, as a fraction of the <a href=\"dart-ui\/Rect-class.html\">Rect<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [
                {
                    "name": "offset",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "rect",
                    "type": "dart:ui.Rect",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "painting\/FractionalOffset\/FractionalOffset.fromOffsetAndRect.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory FractionalOffset.fromOffsetAndRect(Offset offset, Rect rect) {\n  return FractionalOffset.fromOffsetAndSize(\n    offset - rect.topLeft,\n    rect.size,\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "FractionalOffset.fromOffsetAndSize",
            "type": "",
            "desc": "<p>Creates a fractional offset from a specific offset and size.<\/p>\n<p>The returned <a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a> describes the position of the\n<a href=\"dart-ui\/Offset-class.html\">Offset<\/a> in the <a href=\"dart-ui\/Size-class.html\">Size<\/a>, as a fraction of the <a href=\"dart-ui\/Size-class.html\">Size<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [
                {
                    "name": "offset",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "size",
                    "type": "dart:ui.Size",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "painting\/FractionalOffset\/FractionalOffset.fromOffsetAndSize.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory FractionalOffset.fromOffsetAndSize(Offset offset, Size size) {\n  assert(size != null);\n  assert(offset != null);\n  return FractionalOffset(\n    offset.dx \/ size.width,\n    offset.dy \/ size.height,\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "lerp",
            "type": "painting.FractionalOffset",
            "desc": "<p>Linearly interpolate between two <a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a>s.<\/p>\n<p>If either is null, this function interpolates from <a href=\"painting\/FractionalOffset\/center-constant.html\">FractionalOffset.center<\/a>.<\/p>\n<p>The <code>t<\/code> argument represents position on the timeline, with 0.0 meaning\nthat the interpolation has not started, returning <code>a<\/code> (or something\nequivalent to <code>a<\/code>), 1.0 meaning that the interpolation has finished,\nreturning <code>b<\/code> (or something equivalent to <code>b<\/code>), and values in between\nmeaning that the interpolation is at the relevant point on the timeline\nbetween <code>a<\/code> and <code>b<\/code>. The interpolation can be extrapolated beyond 0.0 and\n1.0, so negative values and values greater than 1.0 are valid (and can\neasily be generated by curves such as <a href=\"animation\/Curves\/elasticInOut-constant.html\">Curves.elasticInOut<\/a>).<\/p>\n<p>Values for <code>t<\/code> are usually obtained from an <a href=\"animation\/Animation-class.html\">Animation&lt;double&gt;<\/a>, such as\nan <a href=\"animation\/AnimationController-class.html\">AnimationController<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [
                {
                    "name": "a",
                    "type": "painting.FractionalOffset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "b",
                    "type": "painting.FractionalOffset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "t",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "painting\/FractionalOffset\/lerp.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static FractionalOffset lerp(FractionalOffset a, FractionalOffset b, double t) {\n  assert(t != null);\n  if (a == null &amp;&amp; b == null)\n    return null;\n  if (a == null)\n    return FractionalOffset(ui.lerpDouble(0.5, b.dx, t), ui.lerpDouble(0.5, b.dy, t));\n  if (b == null)\n    return FractionalOffset(ui.lerpDouble(a.dx, 0.5, t), ui.lerpDouble(a.dy, 0.5, t));\n  return FractionalOffset(ui.lerpDouble(a.dx, b.dx, t), ui.lerpDouble(a.dy, b.dy, t));\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "painting\/FractionalOffset\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  return 'FractionalOffset(${dx.toStringAsFixed(1)}, '\n                          '${dy.toStringAsFixed(1)})';\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator unary-",
            "type": "painting.FractionalOffset",
            "desc": "<p>Returns the negation of the given <a href=\"painting\/Alignment-class.html\">Alignment<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "painting\/FractionalOffset\/operator_unary_minus.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nFractionalOffset operator -() {\n  return FractionalOffset(-dx, -dy);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator ~\/",
            "type": "painting.FractionalOffset",
            "desc": "<p>Integer divides the <a href=\"painting\/Alignment-class.html\">Alignment<\/a> in each dimension by the given factor.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.FractionalOffset",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "painting\/FractionalOffset\/operator_truncate_divide.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nFractionalOffset operator ~\/(double other) {\n  return FractionalOffset((dx ~\/ other).toDouble(), (dy ~\/ other).toDouble());\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "type": "",
            "href": "painting\/FractionalOffset\/bottomCenter-constant.html",
            "desc": "<p>The center point along the bottom edge.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const FractionalOffset bottomCenter = FractionalOffset(0.5, 1.0)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "bottomCenter",
            "memberOf": "painting.FractionalOffset"
        },
        {
            "type": "",
            "href": "painting\/FractionalOffset\/bottomLeft-constant.html",
            "desc": "<p>The bottom left corner.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const FractionalOffset bottomLeft = FractionalOffset(0.0, 1.0)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "bottomLeft",
            "memberOf": "painting.FractionalOffset"
        },
        {
            "type": "",
            "href": "painting\/FractionalOffset\/bottomRight-constant.html",
            "desc": "<p>The bottom right corner.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const FractionalOffset bottomRight = FractionalOffset(1.0, 1.0)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "bottomRight",
            "memberOf": "painting.FractionalOffset"
        },
        {
            "type": "",
            "href": "painting\/FractionalOffset\/center-constant.html",
            "desc": "<p>The center point, both horizontally and vertically.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const FractionalOffset center = FractionalOffset(0.5, 0.5)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "center",
            "memberOf": "painting.FractionalOffset"
        },
        {
            "type": "",
            "href": "painting\/FractionalOffset\/centerLeft-constant.html",
            "desc": "<p>The center point along the left edge.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const FractionalOffset centerLeft = FractionalOffset(0.0, 0.5)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "centerLeft",
            "memberOf": "painting.FractionalOffset"
        },
        {
            "type": "",
            "href": "painting\/FractionalOffset\/centerRight-constant.html",
            "desc": "<p>The center point along the right edge.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const FractionalOffset centerRight = FractionalOffset(1.0, 0.5)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "centerRight",
            "memberOf": "painting.FractionalOffset"
        },
        {
            "name": "dx",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The distance fraction in the horizontal direction.<\/p>\n<p>A value of 0.0 corresponds to the leftmost edge. A value of 1.0\ncorresponds to the rightmost edge. Values are not limited to that range;\nnegative values represent positions to the left of the left edge, and\nvalues greater than 1.0 represent positions to the right of the right\nedge.<\/p>\n        ",
            "memberOf": "painting.FractionalOffset",
            "isConstant": false,
            "href": "painting\/FractionalOffset\/dx.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get dx =&gt; (x + 1.0) \/ 2.0;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "dy",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The distance fraction in the vertical direction.<\/p>\n<p>A value of 0.0 corresponds to the topmost edge. A value of 1.0 corresponds\nto the bottommost edge. Values are not limited to that range; negative\nvalues represent positions above the top, and values greater than 1.0\nrepresent positions below the bottom.<\/p>\n        ",
            "memberOf": "painting.FractionalOffset",
            "isConstant": false,
            "href": "painting\/FractionalOffset\/dy.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get dy =&gt; (y + 1.0) \/ 2.0;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "type": "",
            "href": "painting\/FractionalOffset\/topCenter-constant.html",
            "desc": "<p>The center point along the top edge.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const FractionalOffset topCenter = FractionalOffset(0.5, 0.0)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "topCenter",
            "memberOf": "painting.FractionalOffset"
        },
        {
            "type": "",
            "href": "painting\/FractionalOffset\/topLeft-constant.html",
            "desc": "<p>The top left corner.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const FractionalOffset topLeft = FractionalOffset(0.0, 0.0)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "topLeft",
            "memberOf": "painting.FractionalOffset"
        },
        {
            "type": "",
            "href": "painting\/FractionalOffset\/topRight-constant.html",
            "desc": "<p>The top right corner.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const FractionalOffset topRight = FractionalOffset(1.0, 0.0)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "topRight",
            "memberOf": "painting.FractionalOffset"
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [
        "rendering.FractionalOffsetTween"
    ],
    "realImplementors": [
        "rendering.FractionalOffsetTween"
    ],
    "cn": [],
    "href": "painting\/FractionalOffset-class.html",
    "desc": "<p>An offset that's expressed as a fraction of a <a href=\"dart-ui\/Size-class.html\">Size<\/a>.<\/p>\n<p><code>FractionalOffset(1.0, 0.0)<\/code> represents the top right of the <a href=\"dart-ui\/Size-class.html\">Size<\/a>.<\/p>\n<p><code>FractionalOffset(0.0, 1.0)<\/code> represents the bottom left of the <a href=\"dart-ui\/Size-class.html\">Size<\/a>.<\/p>\n<p><code>FractionalOffset(0.5, 2.0)<\/code> represents a point half way across the <a href=\"dart-ui\/Size-class.html\">Size<\/a>,\nbelow the bottom of the rectangle by the height of the <a href=\"dart-ui\/Size-class.html\">Size<\/a>.<\/p>\n<p>The <a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a> class specifies offsets in terms of a distance from\nthe top left, regardless of the <a href=\"dart-ui\/TextDirection-class.html\">TextDirection<\/a>.<\/p>\n<h2 id=\"design-discussion\">Design discussion<\/h2>\n<p><a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a> and <a href=\"painting\/Alignment-class.html\">Alignment<\/a> are two different representations of the\nsame information: the location within a rectangle relative to the size of\nthe rectangle. The difference between the two classes is in the coordinate\nsystem they use to represent the location.<\/p>\n<p><a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a> uses a coordinate system with an origin in the top-left\ncorner of the rectangle whereas <a href=\"painting\/Alignment-class.html\">Alignment<\/a> uses a coordinate system with an\norigin in the center of the rectangle.<\/p>\n<p>Historically, <a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a> predates <a href=\"painting\/Alignment-class.html\">Alignment<\/a>. When we attempted to\nmake a version of <a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a> that adapted to the <a href=\"dart-ui\/TextDirection-class.html\">TextDirection<\/a>, we\nran into difficulty because placing the origin in the top-left corner\nintroduced a left-to-right bias that was hard to remove.<\/p>\n<p>By placing the origin in the center, <a href=\"painting\/Alignment-class.html\">Alignment<\/a> and <a href=\"painting\/AlignmentDirectional-class.html\">AlignmentDirectional<\/a>\nare able to use the same origin, which means we can use a linear function to\nresolve an <a href=\"painting\/AlignmentDirectional-class.html\">AlignmentDirectional<\/a> into an <a href=\"painting\/Alignment-class.html\">Alignment<\/a> in both\n<a href=\"dart-ui\/TextDirection-class.html\">TextDirection.rtl<\/a> and <a href=\"dart-ui\/TextDirection-class.html\">TextDirection.ltr<\/a>.<\/p>\n<p><a href=\"painting\/Alignment-class.html\">Alignment<\/a> is better for most purposes than <a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a> and should\nbe used instead of <a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a>. We continue to implement\n<a href=\"painting\/FractionalOffset-class.html\">FractionalOffset<\/a> to support code that predates <a href=\"painting\/Alignment-class.html\">Alignment<\/a>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"painting\/Alignment-class.html\">Alignment<\/a>, which uses a coordinate system based on the center of the\nrectangle instead of the top left corner of the rectangle.<\/li><\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "FractionalOffset"
}