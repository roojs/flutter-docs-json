{
    "name": "rendering.RenderBackdropFilter",
    "extends": [
        "rendering.RenderProxyBox",
        "rendering.RenderBox",
        "rendering.RenderObject",
        "foundation.AbstractNode",
        "dart:core.Object"
    ],
    "memberOf": "rendering",
    "events": [],
    "methods": [
        {
            "name": "RenderBackdropFilter",
            "type": "",
            "desc": "<p>Creates a backdrop filter.<\/p>\n<p>The <code>filter<\/code> argument must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RenderBackdropFilter",
            "sig": "",
            "params": [
                {
                    "name": "child",
                    "type": "rendering.RenderBox",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "filter",
                    "type": "dart:ui.ImageFilter",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "rendering\/RenderBackdropFilter\/RenderBackdropFilter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RenderBackdropFilter({ RenderBox child, @required ui.ImageFilter filter })\n  : assert(filter != null),\n    _filter = filter,\n    super(child);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "paint",
            "type": "",
            "desc": "<p>Paint this render object into the given context at the given offset.<\/p>\n<p>Subclasses should override this method to provide a visual appearance\nfor themselves. The render object's local coordinate system is\naxis-aligned with the coordinate system of the context's canvas and the\nrender object's local origin (i.e, x=0 and y=0) is placed at the given\noffset in the context's canvas.<\/p>\n<p>Do not call this function directly. If you wish to paint yourself, call\n<a href=\"rendering\/RenderObject\/markNeedsPaint.html\">markNeedsPaint<\/a> instead to schedule a call to this function. If you wish\nto paint one of your children, call <a href=\"rendering\/PaintingContext\/paintChild.html\">PaintingContext.paintChild<\/a> on the\ngiven <code>context<\/code>.<\/p>\n<p>When painting one of your children (via a paint child function on the\ngiven context), the current canvas held by the context might change\nbecause draw operations before and after painting children might need to\nbe recorded on separate compositing layers.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RenderBackdropFilter",
            "sig": "",
            "params": [
                {
                    "name": "context",
                    "type": "rendering.PaintingContext",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "offset",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "rendering\/RenderBackdropFilter\/paint.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid paint(PaintingContext context, Offset offset) {\n  if (child != null) {\n    assert(needsCompositing);\n    context.pushLayer(BackdropFilterLayer(filter: _filter), super.paint, offset);\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "alwaysNeedsCompositing",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether this render object always needs compositing.<\/p>\n<p>Override this in subclasses to indicate that your paint function always\ncreates at least one composited layer. For example, videos should return\ntrue if they use hardware decoders.<\/p>\n<p>You must call <a href=\"rendering\/RenderObject\/markNeedsCompositingBitsUpdate.html\">markNeedsCompositingBitsUpdate<\/a> if the value of this getter\nchanges. (This is implied when <a href=\"rendering\/RenderObject\/adoptChild.html\">adoptChild<\/a> or <a href=\"rendering\/RenderObject\/dropChild.html\">dropChild<\/a> are called.)<\/p>\n        ",
            "memberOf": "rendering.RenderBackdropFilter",
            "isConstant": false,
            "href": "rendering\/RenderBackdropFilter\/alwaysNeedsCompositing.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get alwaysNeedsCompositing =&gt; child != null;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "filter",
            "type": "dart:ui.ImageFilter",
            "types": [],
            "desc": "<p>The image filter to apply to the existing painted content before painting\nthe child.<\/p>\n<p>For example, consider using <a href=\"dart-ui\/ImageFilter\/ImageFilter.blur.html\">new ui.ImageFilter.blur<\/a> to create a backdrop\nblur effect.<\/p>\n        ",
            "memberOf": "rendering.RenderBackdropFilter",
            "isConstant": false,
            "href": "rendering\/RenderBackdropFilter\/filter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ui.ImageFilter get filter =&gt; _filter;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "rendering\/RenderBackdropFilter-class.html",
    "desc": "<p>Applies a filter to the existing painted content and then paints <a href=\"rendering\/RenderObjectWithChildMixin\/child.html\">child<\/a>.<\/p>\n<p>This effect is relatively expensive, especially if the filter is non-local,\nsuch as a blur.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "RenderBackdropFilter"
}