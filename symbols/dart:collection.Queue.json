{
    "desc": "<p>A <a href=\"dart-collection\/Queue-class.html\">Queue<\/a> is a collection that can be manipulated at both ends. One\ncan iterate over the elements of a queue through <a href=\"dart-core\/Iterable\/forEach.html\">forEach<\/a> or with\nan <a href=\"dart-core\/Iterator-class.html\">Iterator<\/a>.<\/p>\n<p>It is generally not allowed to modify the queue (add or remove entries)\nwhile an operation on the queue is being performed, for example during a\ncall to <a href=\"dart-core\/Iterable\/forEach.html\">forEach<\/a>.\nModifying the queue while it is being iterated will most likely break the\niteration.\nThis goes both for using the <a href=\"dart-core\/Iterable\/iterator.html\">iterator<\/a> directly, or for iterating an\n<code>Iterable<\/code> returned by a method like <a href=\"dart-core\/Iterable\/map.html\">map<\/a> or <a href=\"dart-core\/Iterable\/where.html\">where<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-collection\/Queue-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:collection",
    "name": "dart:collection.Queue",
    "shortname": "Queue",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a queue.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory Queue() = ListQueue&lt;E&gt;;<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/Queue.html",
            "isDeprecated": "0",
            "type": "",
            "name": "Queue",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": []
        },
        {
            "desc": "<p>Adds <code>value<\/code> at the end of the queue.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(E value);<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/add.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "add",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": [
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<E>"
                }
            ]
        },
        {
            "desc": "<p>Adds all elements of <code>iterable<\/code> at the end of the queue. The\nlength of the queue is extended by the length of <code>iterable<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addAll(Iterable&lt;E&gt; iterable);<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/addAll.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "addAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": [
                {
                    "name": "iterable",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Iterable"
                }
            ]
        },
        {
            "desc": "<p>Adds <code>value<\/code> at the beginning of the queue.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addFirst(E value);<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/addFirst.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "addFirst",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": [
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<E>"
                }
            ]
        },
        {
            "desc": "<p>Adds <code>value<\/code> at the end of the queue.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addLast(E value);<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/addLast.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "addLast",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": [
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<E>"
                }
            ]
        },
        {
            "desc": "<p>Provides a view of this queue as a queue of <code>R<\/code> instances, if necessary.<\/p>\n<p>If this queue contains only instances of <code>R<\/code>, all read operations\nwill work correctly. If any operation tries to access an element\nthat is not an instance of <code>R<\/code>, the access will throw instead.<\/p>\n<p>Elements added to the queue (e.g., by using <a href=\"dart-collection\/Queue\/addFirst.html\">addFirst<\/a> or <a href=\"dart-collection\/Queue\/addAll.html\">addAll<\/a>)\nmust be instance of <code>R<\/code> to be valid arguments to the adding function,\nand they must be instances of <code>E<\/code> as well to be accepted by\nthis queue as well.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Queue&lt;R&gt; cast&lt;R&gt;();<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/cast.html",
            "isDeprecated": "0",
            "type": "dart:collection.Queue",
            "name": "cast",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": []
        },
        {
            "desc": "<p>Adapts <code>source<\/code> to be a <code>Queue&lt;T&gt;<\/code>.<\/p>\n<p>Any time the queue would produce an element that is not a <code>T<\/code>,\nthe element access will throw.<\/p>\n<p>Any time a <code>T<\/code> value is attempted stored into the adapted queue,\nthe store will throw unless the value is also an instance of <code>S<\/code>.<\/p>\n<p>If all accessed elements of <code>source<\/code> are actually instances of <code>T<\/code>,\nand if all elements stored into the returned queue are actually instance\nof <code>S<\/code>,\nthen the returned queue can be used as a <code>Queue&lt;T&gt;<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Queue&lt;T&gt; castFrom&lt;S, T&gt;(Queue&lt;S&gt; source) =&gt; CastQueue&lt;S, T&gt;(source);<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/castFrom.html",
            "isDeprecated": "0",
            "type": "dart:collection.Queue",
            "name": "castFrom",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": [
                {
                    "name": "source",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:collection.Queue"
                }
            ]
        },
        {
            "desc": "<p>Removes all elements in the queue. The size of the queue becomes zero.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void clear();<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/clear.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "clear",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": []
        },
        {
            "desc": "<p>Remove a single instance of <code>value<\/code> from the queue.<\/p>\n<p>Returns <code>true<\/code> if a value was removed, or <code>false<\/code> if the queue\ncontained no element equal to <code>value<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool remove(Object value);<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/remove.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "name": "remove",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": [
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        },
        {
            "desc": "<p>Removes and returns the first element of this queue.<\/p>\n<p>The queue must not be empty when this method is called.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">E removeFirst();<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/removeFirst.html",
            "isDeprecated": "0",
            "type": "<E>",
            "name": "removeFirst",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": []
        },
        {
            "desc": "<p>Removes and returns the last element of the queue.<\/p>\n<p>The queue must not be empty when this method is called.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">E removeLast();<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/removeLast.html",
            "isDeprecated": "0",
            "type": "<E>",
            "name": "removeLast",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": []
        },
        {
            "desc": "<p>Removes all elements matched by <code>test<\/code> from the queue.<\/p>\n<p>The <code>test<\/code> function must not throw or modify the queue.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void removeWhere(bool test(E element));<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/removeWhere.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "removeWhere",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": [
                {
                    "name": "element",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<E>"
                }
            ]
        },
        {
            "desc": "<p>Removes all elements not matched by <code>test<\/code> from the queue.<\/p>\n<p>The <code>test<\/code> function must not throw or modify the queue.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void retainWhere(bool test(E element));<\/code><\/pre>\n    ",
            "href": "dart-collection\/Queue\/retainWhere.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "retainWhere",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.Queue",
            "params": [
                {
                    "name": "element",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<E>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns the number of elements in the iterable.<\/p>\n<p>This is an efficient operation that doesn't require iterating through\nthe elements.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get length;<\/code><\/pre>\n        ",
            "href": "dart-collection\/Queue\/length.html",
            "name": "length",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:collection.Queue",
            "params": []
        }
    ]
}