{
    "desc": "<p>Provides API parity with the <code>Platform<\/code> class in <code>dart:io<\/code>, but using\ninstance properties rather than static properties. This difference enables\nthe use of these APIs in tests, where you can provide mock implementations.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-platform_platform\/Platform-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "platform",
    "name": "platform.Platform",
    "shortname": "Platform",
    "extends": [],
    "realImplementors": [
        "platform.FakePlatform",
        "platform.LocalPlatform"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a new <a href=\"package-platform_platform\/Platform-class.html\">Platform<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Platform();<\/code><\/pre>\n    ",
            "href": "package-platform_platform\/Platform\/Platform.html",
            "isDeprecated": "0",
            "type": "",
            "name": "Platform",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>Returns a JSON-encoded representation of this platform.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toJson() {\n  return const JsonEncoder.withIndent('  ').convert(&lt;String, dynamic&gt;{\n    'numberOfProcessors': numberOfProcessors,\n    'pathSeparator': pathSeparator,\n    'operatingSystem': operatingSystem,\n    'localHostname': localHostname,\n    'environment': environment,\n    'executable': executable,\n    'resolvedExecutable': resolvedExecutable,\n    'script': script.toString(),\n    'executableArguments': executableArguments,\n    'packageRoot': packageRoot,\n    'packageConfig': packageConfig,\n    'version': version,\n    'stdinSupportsAnsi': stdinSupportsAnsi,\n    'stdoutSupportsAnsi': stdoutSupportsAnsi,\n    'localeName': localeName,\n  });\n}<\/code><\/pre>\n    ",
            "href": "package-platform_platform\/Platform\/toJson.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "name": "toJson",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "platform.Platform",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The environment for this process.<\/p>\n<p>The returned environment is an unmodifiable map whose content is\nretrieved from the operating system on its first use.<\/p>\n<p>Environment variables on Windows are case-insensitive. The map\nreturned on Windows is therefore case-insensitive and will convert\nall keys to upper case. On other platforms the returned map is\na standard case-sensitive map.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Map&lt;String, String&gt; get environment;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/environment.html",
            "name": "environment",
            "isDeprecated": false,
            "type": "dart:core.Map<dart:core.String<dart:core.String>>",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>The path of the executable used to run the script in this isolate.<\/p>\n<p>The path returned is the literal path used to run the script. This\npath might be relative or just be a name from which the executable\nwas found by searching the <code>PATH<\/code>.<\/p>\n<p>To get the absolute path to the resolved executable use\n<a href=\"package-platform_platform\/Platform\/resolvedExecutable.html\">resolvedExecutable<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get executable;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/executable.html",
            "name": "executable",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>The flags passed to the executable used to run the script in this\nisolate. These are the command-line flags between the executable name\nand the script name. Each fetch of <code>executableArguments<\/code> returns a new\nlist containing the flags passed to the executable.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;String&gt; get executableArguments;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/executableArguments.html",
            "name": "executableArguments",
            "isDeprecated": false,
            "type": "dart:core.List<dart:core.String>",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>True if the operating system is Android.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isAndroid =&gt; (operatingSystem == \"android\");<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/isAndroid.html",
            "name": "isAndroid",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>True if the operating system is Fuchsia<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isFuchsia =&gt; (operatingSystem == \"fuchsia\");<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/isFuchsia.html",
            "name": "isFuchsia",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>True if the operating system is iOS.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isIOS =&gt; (operatingSystem == \"ios\");<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/isIOS.html",
            "name": "isIOS",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>True if the operating system is Linux.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isLinux =&gt; (operatingSystem == \"linux\");<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/isLinux.html",
            "name": "isLinux",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>True if the operating system is OS X.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isMacOS =&gt; (operatingSystem == \"macos\");<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/isMacOS.html",
            "name": "isMacOS",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>True if the operating system is Windows.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isWindows =&gt; (operatingSystem == \"windows\");<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/isWindows.html",
            "name": "isWindows",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>Get the local hostname for the system.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get localHostname;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/localHostname.html",
            "name": "localHostname",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>Get the name of the current locale.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get localeName;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/localeName.html",
            "name": "localeName",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>The number of processors of the machine.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get numberOfProcessors;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/numberOfProcessors.html",
            "name": "numberOfProcessors",
            "isDeprecated": false,
            "type": "dart:core.int",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>A string (<code>linux<\/code>, <code>macos<\/code>, <code>windows<\/code>, <code>android<\/code>, <code>ios<\/code>, or <code>fuchsia<\/code>)\nrepresenting the operating system.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get operatingSystem;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/operatingSystem.html",
            "name": "operatingSystem",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>The value of the <code>--packages<\/code> flag passed to the executable\nused to run the script in this isolate. This is the configuration which\nspecifies how Dart packages are looked up.<\/p>\n<p>If there is no <code>--packages<\/code> flag, <code>null<\/code> is returned.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get packageConfig;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/packageConfig.html",
            "name": "packageConfig",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>The value of the <code>--package-root<\/code> flag passed to the executable\nused to run the script in this isolate.  This is the directory in which\nDart packages are looked up.<\/p>\n<p>If there is no <code>--package-root<\/code> flag, <code>null<\/code> is returned.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get packageRoot;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/packageRoot.html",
            "name": "packageRoot",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>The path separator used by the operating system to separate\ncomponents in file paths.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get pathSeparator;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/pathSeparator.html",
            "name": "pathSeparator",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>The path of the executable used to run the script in this\nisolate after it has been resolved by the OS.<\/p>\n<p>This is the absolute path, with all symlinks resolved, to the\nexecutable used to run the script.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get resolvedExecutable;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/resolvedExecutable.html",
            "name": "resolvedExecutable",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>The absolute URI of the script being run in this\nisolate.<\/p>\n<p>If the script argument on the command line is relative,\nit is resolved to an absolute URI before fetching the script, and\nthis absolute URI is returned.<\/p>\n<p>URI resolution only does string manipulation on the script path, and this\nmay be different from the file system's path resolution behavior. For\nexample, a symbolic link immediately followed by '..' will not be\nlooked up.<\/p>\n<p>If the executable environment does not support <a href=\"package-platform_platform\/Platform\/script.html\">script<\/a> an empty\n<a href=\"dart-core\/Uri-class.html\">Uri<\/a> is returned.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Uri get script;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/script.html",
            "name": "script",
            "isDeprecated": false,
            "type": "dart:core.Uri",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>When stdin is connected to a terminal, whether ANSI codes are supported.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get stdinSupportsAnsi;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/stdinSupportsAnsi.html",
            "name": "stdinSupportsAnsi",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>When stdout is connected to a terminal, whether ANSI codes are supported.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get stdoutSupportsAnsi;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/stdoutSupportsAnsi.html",
            "name": "stdoutSupportsAnsi",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "platform.Platform",
            "params": []
        },
        {
            "desc": "<p>The version of the current Dart runtime.<\/p>\n<p>The returned <code>String<\/code> is formatted as the <a href=\"http:\/\/semver.org\">semver<\/a>\nversion string of the current dart runtime, possibly followed by\nwhitespace and other version and build details.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get version;<\/code><\/pre>\n        ",
            "href": "package-platform_platform\/Platform\/version.html",
            "name": "version",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "platform.Platform",
            "params": []
        }
    ]
}