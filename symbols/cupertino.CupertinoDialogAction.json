{
    "desc": "<p>A button typically used in a <a href=\"cupertino\/CupertinoAlertDialog-class.html\">CupertinoAlertDialog<\/a>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"cupertino\/CupertinoAlertDialog-class.html\">CupertinoAlertDialog<\/a>, a dialog that informs the user about situations\nthat require acknowledgement.<\/li><\/ul>",
    "dtype": "class",
    "example": null,
    "href": "cupertino\/CupertinoDialogAction-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "cupertino",
    "name": "cupertino.CupertinoDialogAction",
    "shortname": "CupertinoDialogAction",
    "extends": [
        "widgets.StatelessWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [
        {
            "desc": "<p>The callback that is called when the button is tapped or otherwise\nactivated.<\/p>\n<p>If this is set to null, the button will be disabled.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final VoidCallback onPressed\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDialogAction\/onPressed.html",
            "isDeprecated": "0",
            "type": "dart:ui.VoidCallback",
            "memberOf": "cupertino.CupertinoDialogAction",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates an action for an iOS-style dialog.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const CupertinoDialogAction({\n  this.onPressed,\n  this.isDefaultAction = false,\n  this.isDestructiveAction = false,\n  this.textStyle,\n  @required this.child,\n}) : assert(child != null);<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoDialogAction\/CupertinoDialogAction.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "cupertino.CupertinoDialogAction",
            "params": [
                {
                    "name": "child",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "isDefaultAction",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "isDestructiveAction",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "onPressed",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.VoidCallback"
                },
                {
                    "name": "textStyle",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "painting.TextStyle"
                }
            ]
        },
        {
            "desc": "<p>Describes the part of the user interface represented by this widget.<\/p>\n<p>The framework calls this method when this widget is inserted into the\ntree in a given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> and when the dependencies of this widget\nchange (e.g., an <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> referenced by this widget changes).<\/p>\n<p>The framework replaces the subtree below this widget with the widget\nreturned by this method, either by updating the existing subtree or by\nremoving the subtree and inflating a new subtree, depending on whether the\nwidget returned by this method can update the root of the existing\nsubtree, as determined by calling <a href=\"widgets\/Widget\/canUpdate.html\">Widget.canUpdate<\/a>.<\/p>\n<p>Typically implementations return a newly created constellation of widgets\nthat are configured with information from this widget's constructor and\nfrom the given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>.<\/p>\n<p>The given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> contains information about the location in the\ntree at which this widget is being built. For example, the context\nprovides the set of inherited widgets for this location in the tree. A\ngiven widget might be built with multiple different <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>\narguments over time if the widget is moved around the tree or if the\nwidget is inserted into the tree in multiple places at once.<\/p>\n<p>The implementation of this method must only depend on:<\/p>\n<ul>\n<li>the fields of the widget, which themselves must not change over time,\nand<\/li>\n<li>any ambient state obtained from the <code>context<\/code> using\n<a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a>.<\/li>\n<\/ul>\n<p>If a widget's <a href=\"cupertino\/CupertinoDialogAction\/build.html\">build<\/a> method is to depend on anything else, use a\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> instead.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, which contains the discussion on performance considerations.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  TextStyle style = _kCupertinoDialogActionStyle;\n  style = style.merge(textStyle);\n\n  if (isDestructiveAction) {\n    style = style.copyWith(color: CupertinoColors.destructiveRed);\n  }\n\n  if (!enabled) {\n    style = style.copyWith(color: style.color.withOpacity(0.5));\n  }\n\n  \/\/ Apply a sizing policy to the action button's content based on whether or\n  \/\/ not the device is in accessibility mode.\n  \/\/ TODO(mattcarroll): The following logic is not entirely correct. It is also\n  \/\/ the case that if content text does not contain a space, it should also\n  \/\/ wrap instead of ellipsizing. We are consciously not implementing that\n  \/\/ now due to complexity.\n  final Widget sizedContent = _isInAccessibilityMode(context)\n    ? _buildContentWithAccessibilitySizingPolicy(\n        textStyle: style,\n        content: child,\n      )\n    : _buildContentWithRegularSizingPolicy(\n        context: context,\n        textStyle: style,\n        content: child,\n      );\n\n  return GestureDetector(\n    excludeFromSemantics: true,\n    onTap: onPressed,\n    behavior: HitTestBehavior.opaque,\n    child: ConstrainedBox(\n      constraints: const BoxConstraints(\n        minHeight: _kMinButtonHeight,\n      ),\n      child: Container(\n        alignment: Alignment.center,\n        padding: EdgeInsets.all(_calculatePadding(context)),\n        child: sizedContent,\n      ),\n    ),\n  );\n}<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoDialogAction\/build.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoDialogAction",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The widget below this widget in the tree.<\/p>\n<p>Typically a <a href=\"widgets\/Text-class.html\">Text<\/a> widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDialogAction\/child.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "cupertino.CupertinoDialogAction",
            "params": []
        },
        {
            "desc": "<p>Whether the button is enabled or disabled. Buttons are disabled by\ndefault. To enable a button, set its <a href=\"cupertino\/CupertinoDialogAction\/onPressed.html\">onPressed<\/a> property to a non-null\nvalue.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get enabled =&gt; onPressed != null;<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDialogAction\/enabled.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "cupertino.CupertinoDialogAction",
            "params": []
        },
        {
            "desc": "<p>Set to true if button is the default choice in the dialog.<\/p>\n<p>Default buttons are bold.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool isDefaultAction\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDialogAction\/isDefaultAction.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "cupertino.CupertinoDialogAction",
            "params": []
        },
        {
            "desc": "<p>Whether this action destroys an object.<\/p>\n<p>For example, an action that deletes an email is destructive.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool isDestructiveAction\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDialogAction\/isDestructiveAction.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "cupertino.CupertinoDialogAction",
            "params": []
        },
        {
            "desc": "<p><a href=\"painting\/TextStyle-class.html\">TextStyle<\/a> to apply to any text that appears in this button.<\/p>\n<p>Dialog actions have a built-in text resizing policy for long text. To\nensure that this resizing policy always works as expected, <a href=\"cupertino\/CupertinoDialogAction\/textStyle.html\">textStyle<\/a>\nmust be used if a text size is desired other than that specified in\n<code>_kCupertinoDialogActionStyle<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextStyle textStyle\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDialogAction\/textStyle.html",
            "isDeprecated": "0",
            "type": "painting.TextStyle",
            "memberOf": "cupertino.CupertinoDialogAction",
            "params": []
        }
    ]
}