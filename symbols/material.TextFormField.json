{
    "name": "material.TextFormField",
    "extends": [
        "dart:core.String",
        "widgets.FormField",
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "material",
    "events": [],
    "methods": [
        {
            "name": "TextFormField",
            "type": "",
            "desc": "<p>Creates a <a href=\"widgets\/FormField-class.html\">FormField<\/a> that contains a <a href=\"material\/TextField-class.html\">TextField<\/a>.<\/p>\n<p>When a <code>controller<\/code> is specified, <code>initialValue<\/code> must be null (the\ndefault). If <code>controller<\/code> is null, then a <a href=\"widgets\/TextEditingController-class.html\">TextEditingController<\/a>\nwill be constructed automatically and its <code>text<\/code> will be initialized\nto <code>initalValue<\/code> or the empty string.<\/p>\n<p>For documentation about the various parameters, see the <a href=\"material\/TextField-class.html\">TextField<\/a> class\nand <a href=\"material\/TextField\/TextField.html\">new TextField<\/a>, the constructor.<\/p>\n    ",
            "static": false,
            "memberOf": "material.TextFormField",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "controller",
                    "type": "widgets.TextEditingController",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "initialValue",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "focusNode",
                    "type": "widgets.FocusNode",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "decoration",
                    "type": "material.InputDecoration",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "keyboardType",
                    "type": "services.TextInputType",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textCapitalization",
                    "type": "services.TextCapitalization",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textInputAction",
                    "type": "services.TextInputAction",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "style",
                    "type": "painting.TextStyle",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "strutStyle",
                    "type": "painting.StrutStyle",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textDirection",
                    "type": "dart:ui.TextDirection",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textAlign",
                    "type": "dart:ui.TextAlign",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "autofocus",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "obscureText",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "autocorrect",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "autovalidate",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "maxLengthEnforced",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "maxLines",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "minLines",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "expands",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "maxLength",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onEditingComplete",
                    "type": "dart:ui.VoidCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onFieldSubmitted",
                    "type": "foundation.ValueChanged<dart:core.String>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "foundation.ValueChanged",
                        "dart:core.String"
                    ]
                },
                {
                    "name": "onSaved",
                    "type": "widgets.FormFieldSetter<dart:core.String>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "widgets.FormFieldSetter",
                        "dart:core.String"
                    ]
                },
                {
                    "name": "validator",
                    "type": "widgets.FormFieldValidator<dart:core.String>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "widgets.FormFieldValidator",
                        "dart:core.String"
                    ]
                },
                {
                    "name": "inputFormatters",
                    "type": "dart:core.List<services.TextInputFormatter>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "services.TextInputFormatter"
                    ]
                },
                {
                    "name": "enabled",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "cursorWidth",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "cursorRadius",
                    "type": "dart:ui.Radius",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "cursorColor",
                    "type": "dart:ui.Color",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "keyboardAppearance",
                    "type": "dart:ui.Brightness",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "scrollPadding",
                    "type": "painting.EdgeInsets",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "enableInteractiveSelection",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "buildCounter",
                    "type": "material.InputCounterWidgetBuilder",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "material\/TextFormField\/TextFormField.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">TextFormField({\n  Key key,\n  this.controller,\n  String initialValue,\n  FocusNode focusNode,\n  InputDecoration decoration = const InputDecoration(),\n  TextInputType keyboardType,\n  TextCapitalization textCapitalization = TextCapitalization.none,\n  TextInputAction textInputAction,\n  TextStyle style,\n  StrutStyle strutStyle,\n  TextDirection textDirection,\n  TextAlign textAlign = TextAlign.start,\n  bool autofocus = false,\n  bool obscureText = false,\n  bool autocorrect = true,\n  bool autovalidate = false,\n  bool maxLengthEnforced = true,\n  int maxLines = 1,\n  int minLines,\n  bool expands = false,\n  int maxLength,\n  VoidCallback onEditingComplete,\n  ValueChanged&lt;String&gt; onFieldSubmitted,\n  FormFieldSetter&lt;String&gt; onSaved,\n  FormFieldValidator&lt;String&gt; validator,\n  List&lt;TextInputFormatter&gt; inputFormatters,\n  bool enabled = true,\n  double cursorWidth = 2.0,\n  Radius cursorRadius,\n  Color cursorColor,\n  Brightness keyboardAppearance,\n  EdgeInsets scrollPadding = const EdgeInsets.all(20.0),\n  bool enableInteractiveSelection = true,\n  InputCounterWidgetBuilder buildCounter,\n}) : assert(initialValue == null || controller == null),\n     assert(textAlign != null),\n     assert(autofocus != null),\n     assert(obscureText != null),\n     assert(autocorrect != null),\n     assert(autovalidate != null),\n     assert(maxLengthEnforced != null),\n     assert(scrollPadding != null),\n     assert(maxLines == null || maxLines &gt; 0),\n     assert(minLines == null || minLines &gt; 0),\n     assert(\n       (maxLines == null) || (minLines == null) || (maxLines &gt;= minLines),\n       'minLines can\\'t be greater than maxLines',\n     ),\n     assert(expands != null),\n     assert(\n       !expands || (maxLines == null &amp;&amp; minLines == null),\n       'minLines and maxLines must be null when expands is true.',\n     ),\n     assert(maxLength == null || maxLength &gt; 0),\n     assert(enableInteractiveSelection != null),\n     super(\n  key: key,\n  initialValue: controller != null ? controller.text : (initialValue ?? ''),\n  onSaved: onSaved,\n  validator: validator,\n  autovalidate: autovalidate,\n  enabled: enabled,\n  builder: (FormFieldState&lt;String&gt; field) {\n    final _TextFormFieldState state = field;\n    final InputDecoration effectiveDecoration = (decoration ?? const InputDecoration())\n      .applyDefaults(Theme.of(field.context).inputDecorationTheme);\n    return TextField(\n      controller: state._effectiveController,\n      focusNode: focusNode,\n      decoration: effectiveDecoration.copyWith(errorText: field.errorText),\n      keyboardType: keyboardType,\n      textInputAction: textInputAction,\n      style: style,\n      strutStyle: strutStyle,\n      textAlign: textAlign,\n      textDirection: textDirection,\n      textCapitalization: textCapitalization,\n      autofocus: autofocus,\n      obscureText: obscureText,\n      autocorrect: autocorrect,\n      maxLengthEnforced: maxLengthEnforced,\n      maxLines: maxLines,\n      minLines: minLines,\n      expands: expands,\n      maxLength: maxLength,\n      onChanged: field.didChange,\n      onEditingComplete: onEditingComplete,\n      onSubmitted: onFieldSubmitted,\n      inputFormatters: inputFormatters,\n      enabled: enabled,\n      cursorWidth: cursorWidth,\n      cursorRadius: cursorRadius,\n      cursorColor: cursorColor,\n      scrollPadding: scrollPadding,\n      keyboardAppearance: keyboardAppearance,\n      enableInteractiveSelection: enableInteractiveSelection,\n      buildCounter: buildCounter,\n    );\n  },\n);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "createState",
            "type": "",
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/TextFormField\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "static": false,
            "memberOf": "material.TextFormField",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "material\/TextFormField\/createState.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_TextFormFieldState createState() =&gt; _TextFormFieldState();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "controller",
            "type": "widgets.TextEditingController",
            "types": [],
            "desc": "<p>Controls the text being edited.<\/p>\n<p>If null, this widget will create its own <a href=\"widgets\/TextEditingController-class.html\">TextEditingController<\/a> and\ninitialize its <a href=\"widgets\/TextEditingController\/text.html\">TextEditingController.text<\/a> with <a href=\"widgets\/FormField\/initialValue.html\">initialValue<\/a>.<\/p>\n        ",
            "memberOf": "material.TextFormField",
            "isConstant": false,
            "href": "material\/TextFormField\/controller.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextEditingController controller\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "material\/TextFormField-class.html",
    "desc": "<p>A <a href=\"widgets\/FormField-class.html\">FormField<\/a> that contains a <a href=\"material\/TextField-class.html\">TextField<\/a>.<\/p>\n<p>This is a convenience widget that wraps a <a href=\"material\/TextField-class.html\">TextField<\/a> widget in a\n<a href=\"widgets\/FormField-class.html\">FormField<\/a>.<\/p>\n<p>A <a href=\"widgets\/Form-class.html\">Form<\/a> ancestor is not required. The <a href=\"widgets\/Form-class.html\">Form<\/a> simply makes it easier to\nsave, reset, or validate multiple fields at once. To use without a <a href=\"widgets\/Form-class.html\">Form<\/a>,\npass a <a href=\"widgets\/GlobalKey-class.html\">GlobalKey<\/a> to the constructor and use <a href=\"widgets\/GlobalKey\/currentState.html\">GlobalKey.currentState<\/a> to\nsave or reset the form field.<\/p>\n<p>When a <a href=\"material\/TextFormField\/controller.html\">controller<\/a> is specified, its <a href=\"widgets\/TextEditingController\/text.html\">TextEditingController.text<\/a>\ndefines the <a href=\"widgets\/FormField\/initialValue.html\">initialValue<\/a>. If this <a href=\"widgets\/FormField-class.html\">FormField<\/a> is part of a scrolling\ncontainer that lazily constructs its children, like a <a href=\"widgets\/ListView-class.html\">ListView<\/a> or a\n<a href=\"widgets\/CustomScrollView-class.html\">CustomScrollView<\/a>, then a <a href=\"material\/TextFormField\/controller.html\">controller<\/a> should be specified.\nThe controller's lifetime should be managed by a stateful widget ancestor\nof the scrolling container.<\/p>\n<p>If a <a href=\"material\/TextFormField\/controller.html\">controller<\/a> is not specified, <a href=\"widgets\/FormField\/initialValue.html\">initialValue<\/a> can be used to give\nthe automatically generated controller an initial value.<\/p>\n<p>For a documentation about the various parameters, see <a href=\"material\/TextField-class.html\">TextField<\/a>.<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n<div class=\"snippet-description\">\nCreates a <a href=\"material\/TextFormField-class.html\">TextFormField<\/a> with an <a href=\"material\/InputDecoration-class.html\">InputDecoration<\/a> and validator function.\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">TextFormField(\n  decoration: const InputDecoration(\n    icon: Icon(Icons.person),\n    hintText: 'What do people call you?',\n    labelText: 'Name *',\n  ),\n  onSaved: (String value) {\n    \/\/ This optional block of code can be used to run\n    \/\/ code when the user saves the form.\n  },\n  validator: (String value) {\n    return value.contains('@') ? 'Do not use the @ char.' : null;\n  },\n)<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<p>See also:<\/p>\n<ul>\n<li><a href=\"https:\/\/material.io\/design\/components\/text-fields.html\">material.io\/design\/components\/text-fields.html<\/a><\/li>\n<li>\n<a href=\"material\/TextField-class.html\">TextField<\/a>, which is the underlying text field without the <a href=\"widgets\/Form-class.html\">Form<\/a>\nintegration.<\/li>\n<li>\n<a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a>, which shows the labels and other visual elements that\nsurround the actual text editing widget.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "TextFormField"
}