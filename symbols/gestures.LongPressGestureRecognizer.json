{
    "desc": "<p>Recognizes when the user has pressed down at the same location for a long\nperiod of time.<\/p>\n<p>The gesture must not deviate in position from its touch down point for 500ms\nuntil it's recognized. Once the gesture is accepted, the finger can be\nmoved, triggering <a href=\"gestures\/LongPressGestureRecognizer\/onLongPressMoveUpdate.html\">onLongPressMoveUpdate<\/a> callbacks, unless the\n<a href=\"gestures\/PrimaryPointerGestureRecognizer\/postAcceptSlopTolerance.html\">postAcceptSlopTolerance<\/a> constructor argument is specified.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "gestures\/LongPressGestureRecognizer-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "gestures",
    "name": "gestures.LongPressGestureRecognizer",
    "shortname": "LongPressGestureRecognizer",
    "extends": [
        "gestures.PrimaryPointerGestureRecognizer",
        "gestures.OneSequenceGestureRecognizer",
        "gestures.GestureRecognizer",
        "gestures.GestureArenaMember",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>Called when a long press gesture has been recognized.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"gestures\/LongPressGestureRecognizer\/onLongPressStart.html\">onLongPressStart<\/a>, which has the same timing but has data for the\npress location.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">GestureLongPressCallback onLongPress\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/LongPressGestureRecognizer\/onLongPress.html",
            "isDeprecated": false,
            "type": "gestures.GestureLongPressCallback",
            "name": "onLongPress",
            "memberOf": "gestures.LongPressGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>Callback for long press end with gesture location.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"gestures\/LongPressGestureRecognizer\/onLongPressUp.html\">onLongPressUp<\/a>, which has the same timing but without the location data.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">GestureLongPressEndCallback onLongPressEnd\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/LongPressGestureRecognizer\/onLongPressEnd.html",
            "isDeprecated": false,
            "type": "gestures.GestureLongPressEndCallback",
            "name": "onLongPressEnd",
            "memberOf": "gestures.LongPressGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>Callback for moving the gesture after the lang press is recognized.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">GestureLongPressMoveUpdateCallback onLongPressMoveUpdate\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/LongPressGestureRecognizer\/onLongPressMoveUpdate.html",
            "isDeprecated": false,
            "type": "gestures.GestureLongPressMoveUpdateCallback",
            "name": "onLongPressMoveUpdate",
            "memberOf": "gestures.LongPressGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>Callback for long press start with gesture location.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"gestures\/LongPressGestureRecognizer\/onLongPress.html\">onLongPress<\/a>, which has the same timing but without the location data.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">GestureLongPressStartCallback onLongPressStart\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/LongPressGestureRecognizer\/onLongPressStart.html",
            "isDeprecated": false,
            "type": "gestures.GestureLongPressStartCallback",
            "name": "onLongPressStart",
            "memberOf": "gestures.LongPressGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>Called when the pointer stops contacting the screen after the long-press.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"gestures\/LongPressGestureRecognizer\/onLongPressEnd.html\">onLongPressEnd<\/a>, which has the same timing but has data for the up\ngesture location.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">GestureLongPressUpCallback onLongPressUp\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/LongPressGestureRecognizer\/onLongPressUp.html",
            "isDeprecated": false,
            "type": "gestures.GestureLongPressUpCallback",
            "name": "onLongPressUp",
            "memberOf": "gestures.LongPressGestureRecognizer",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a long-press gesture recognizer.<\/p>\n<p>Consider assigning the <a href=\"gestures\/LongPressGestureRecognizer\/onLongPressStart.html\">onLongPressStart<\/a> callback after creating this\nobject.<\/p>\n<p>The <code>postAcceptSlopTolerance<\/code> argument can be used to specify a maximum\nallowed distance for the gesture to deviate from the starting point once\nthe long press has triggered. If the gesture deviates past that point,\nsubsequent callbacks (<a href=\"gestures\/LongPressGestureRecognizer\/onLongPressMoveUpdate.html\">onLongPressMoveUpdate<\/a>, <a href=\"gestures\/LongPressGestureRecognizer\/onLongPressUp.html\">onLongPressUp<\/a>,\n<a href=\"gestures\/LongPressGestureRecognizer\/onLongPressEnd.html\">onLongPressEnd<\/a>) will stop. Defaults to null, which means the gesture\ncan be moved without limit once the long press is accepted.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">LongPressGestureRecognizer({\n  double postAcceptSlopTolerance,\n  PointerDeviceKind kind,\n  Object debugOwner,\n}) : super(\n  deadline: kLongPressTimeout,\n  postAcceptSlopTolerance: postAcceptSlopTolerance,\n  kind: kind,\n  debugOwner: debugOwner,\n);<\/code><\/pre>\n    ",
            "href": "gestures\/LongPressGestureRecognizer\/LongPressGestureRecognizer.html",
            "isDeprecated": false,
            "type": "",
            "name": "LongPressGestureRecognizer",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "gestures.LongPressGestureRecognizer",
            "params": [
                {
                    "name": "debugOwner",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.Object"
                },
                {
                    "name": "kind",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.PointerDeviceKind"
                },
                {
                    "name": "postAcceptSlopTolerance",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Called when this member wins the arena for the given pointer id.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid acceptGesture(int pointer) {\n  \/\/ Winning the arena isn't important here since it may happen from a sweep.\n  \/\/ Explicitly exceeding the deadline puts the gesture in accepted state.\n}<\/code><\/pre>\n    ",
            "href": "gestures\/LongPressGestureRecognizer\/acceptGesture.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "acceptGesture",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "gestures.LongPressGestureRecognizer",
            "params": [
                {
                    "name": "pointer",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Override to be notified when <a href=\"gestures\/PrimaryPointerGestureRecognizer\/deadline.html\">deadline<\/a> is exceeded.<\/p>\n<p>You must override this method if you supply a <a href=\"gestures\/PrimaryPointerGestureRecognizer\/deadline.html\">deadline<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid didExceedDeadline() {\n  resolve(GestureDisposition.accepted);\n  _longPressAccepted = true;\n  super.acceptGesture(primaryPointer);\n  if (onLongPress != null) {\n    invokeCallback&lt;void&gt;('onLongPress', onLongPress);\n  }\n  if (onLongPressStart != null) {\n    invokeCallback&lt;void&gt;('onLongPressStart', () {\n      onLongPressStart(LongPressStartDetails(\n        globalPosition: _longPressOrigin,\n      ));\n    });\n  }\n}<\/code><\/pre>\n    ",
            "href": "gestures\/LongPressGestureRecognizer\/didExceedDeadline.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "didExceedDeadline",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "gestures.LongPressGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>Override to provide behavior for the primary pointer when the gesture is still possible.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid handlePrimaryPointer(PointerEvent event) {\n  if (event is PointerUpEvent) {\n    if (_longPressAccepted == true) {\n      if (onLongPressUp != null) {\n        invokeCallback&lt;void&gt;('onLongPressUp', onLongPressUp);\n      }\n      if (onLongPressEnd != null) {\n        invokeCallback&lt;void&gt;('onLongPressEnd', () {\n          onLongPressEnd(LongPressEndDetails(\n            globalPosition: event.position,\n          ));\n        });\n      }\n      _longPressAccepted = false;\n    } else {\n      resolve(GestureDisposition.rejected);\n    }\n  } else if (event is PointerDownEvent || event is PointerCancelEvent) {\n    \/\/ The first touch.\n    _longPressAccepted = false;\n    _longPressOrigin = event.position;\n  } else if (event is PointerMoveEvent &amp;&amp; _longPressAccepted &amp;&amp; onLongPressMoveUpdate != null) {\n    invokeCallback&lt;void&gt;('onLongPressMoveUpdate', () {\n      onLongPressMoveUpdate(LongPressMoveUpdateDetails(\n        globalPosition: event.position,\n        offsetFromOrigin: event.position - _longPressOrigin,\n      ));\n    });\n  }\n}<\/code><\/pre>\n    ",
            "href": "gestures\/LongPressGestureRecognizer\/handlePrimaryPointer.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "handlePrimaryPointer",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "gestures.LongPressGestureRecognizer",
            "params": [
                {
                    "name": "event",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "gestures.PointerEvent"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns a very short pretty description of the gesture that the\nrecognizer looks for, like 'tap' or 'horizontal drag'.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString get debugDescription =&gt; 'long press';<\/code><\/pre>\n        ",
            "href": "gestures\/LongPressGestureRecognizer\/debugDescription.html",
            "name": "debugDescription",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "gestures.LongPressGestureRecognizer",
            "params": []
        }
    ]
}