{
    "desc": "<p>A base class for widgets with implicit animations that need to rebuild their\nwidget tree as the animation runs.<\/p>\n<p>This class calls <a href=\"widgets\/State\/build.html\">build<\/a> each frame that the animation tickets. For a\nvariant that does not rebuild each frame, consider subclassing\n<a href=\"widgets\/ImplicitlyAnimatedWidgetState-class.html\">ImplicitlyAnimatedWidgetState<\/a> directly.<\/p>\n<p>Subclasses must implement the <a href=\"widgets\/ImplicitlyAnimatedWidgetState\/forEachTween.html\">forEachTween<\/a> method to allow\n<a href=\"widgets\/AnimatedWidgetBaseState-class.html\">AnimatedWidgetBaseState<\/a> to iterate through the subclasses' widget's fields\nand animate them.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "widgets\/AnimatedWidgetBaseState-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "widgets",
    "name": "widgets.AnimatedWidgetBaseState",
    "shortname": "AnimatedWidgetBaseState",
    "extends": [
        "widgets.ImplicitlyAnimatedWidgetState",
        "widgets.State",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "",
            "example": "",
            "href": "widgets\/AnimatedWidgetBaseState\/AnimatedWidgetBaseState.html",
            "isDeprecated": false,
            "type": "",
            "name": "AnimatedWidgetBaseState",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.AnimatedWidgetBaseState",
            "params": []
        },
        {
            "desc": "<p>Called when this object is inserted into the tree.<\/p>\n<p>The framework will call this method exactly once for each <a href=\"widgets\/State-class.html\">State<\/a> object\nit creates.<\/p>\n<p>Override this method to perform initialization that depends on the\nlocation at which this object was inserted into the tree (i.e., <a href=\"widgets\/State\/context.html\">context<\/a>)\nor on the widget used to configure this object (i.e., <a href=\"widgets\/State\/widget.html\">widget<\/a>).<\/p>\n<p>If a <a href=\"widgets\/State-class.html\">State<\/a>'s <a href=\"widgets\/State\/build.html\">build<\/a> method depends on an object that can itself\nchange state, for example a <a href=\"foundation\/ChangeNotifier-class.html\">ChangeNotifier<\/a> or <a href=\"dart-async\/Stream-class.html\">Stream<\/a>, or some\nother object to which one can subscribe to receive notifications, then\nbe sure to subscribe and unsubscribe properly in <a href=\"widgets\/AnimatedWidgetBaseState\/initState.html\">initState<\/a>,\n<a href=\"widgets\/ImplicitlyAnimatedWidgetState\/didUpdateWidget.html\">didUpdateWidget<\/a>, and <a href=\"widgets\/ImplicitlyAnimatedWidgetState\/dispose.html\">dispose<\/a>:<\/p>\n<ul>\n<li>In <a href=\"widgets\/AnimatedWidgetBaseState\/initState.html\">initState<\/a>, subscribe to the object.<\/li>\n<li>In <a href=\"widgets\/ImplicitlyAnimatedWidgetState\/didUpdateWidget.html\">didUpdateWidget<\/a> unsubscribe from the old object and subscribe\nto the new one if the updated widget configuration requires\nreplacing the object.<\/li>\n<li>In <a href=\"widgets\/ImplicitlyAnimatedWidgetState\/dispose.html\">dispose<\/a>, unsubscribe from the object.\nYou cannot use <a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a> from this\nmethod. However, <a href=\"widgets\/SingleTickerProviderStateMixin\/didChangeDependencies.html\">didChangeDependencies<\/a> will be called immediately\nfollowing this method, and <a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a> can\nbe used there.<\/li>\n<\/ul>\n<p>If you override this, make sure your method starts with a call to\nsuper.initState().<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid initState() {\n  super.initState();\n  controller.addListener(_handleAnimationChanged);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/AnimatedWidgetBaseState\/initState.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "initState",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.AnimatedWidgetBaseState",
            "params": []
        }
    ],
    "props": []
}