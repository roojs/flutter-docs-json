{
    "desc": "<p>A useful utility class for implementing other matchers through inheritance.\nDerived classes should call the base constructor with a feature name and\ndescription, and an instance matcher, and should implement the\n<a href=\"package-matcher_matcher\/CustomMatcher\/featureValueOf.html\">featureValueOf<\/a> abstract method.<\/p>\n<p>The feature description will typically describe the item and the feature,\nwhile the feature name will just name the feature. For example, we may\nhave a Widget class where each Widget has a price; we could make a\n<a href=\"package-matcher_matcher\/CustomMatcher-class.html\">CustomMatcher<\/a> that can make assertions about prices with:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">class HasPrice extends CustomMatcher {\n  HasPrice(matcher) : super(\"Widget with price that is\", \"price\", matcher);\n  featureValueOf(actual) =&gt; actual.price;\n}\n<\/code><\/pre>\n<p>and then use this for example like:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">expect(inventoryItem, new HasPrice(greaterThan(0)));\n<\/code><\/pre>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-matcher_matcher\/CustomMatcher-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "matcher",
    "name": "matcher.CustomMatcher",
    "shortname": "CustomMatcher",
    "extends": [
        "matcher.Matcher",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">CustomMatcher(this._featureDescription, this._featureName, matcher)\n    : this._matcher = wrapMatcher(matcher);<\/code><\/pre>\n    ",
            "href": "package-matcher_matcher\/CustomMatcher\/CustomMatcher.html",
            "isDeprecated": "0",
            "type": "",
            "name": "CustomMatcher",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "matcher.CustomMatcher",
            "params": [
                {
                    "name": "_featureDescription",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "_featureName",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "matcher",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "<dynamic>"
                }
            ]
        },
        {
            "desc": "<p>Builds a textual description of the matcher.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description describe(Description description) =&gt;\n    description.add(_featureDescription).add(' ').addDescriptionOf(_matcher);<\/code><\/pre>\n    ",
            "href": "package-matcher_matcher\/CustomMatcher\/describe.html",
            "isDeprecated": "0",
            "type": "matcher.Description",
            "name": "describe",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "matcher.CustomMatcher",
            "params": [
                {
                    "name": "description",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "matcher.Description"
                }
            ]
        },
        {
            "desc": "<p>Builds a textual description of a specific mismatch.<\/p>\n<p><code>item<\/code> is the value that was tested by <a href=\"package-matcher_matcher\/CustomMatcher\/matches.html\">matches<\/a>; <code>matchState<\/code> is\nthe <a href=\"dart-core\/Map-class.html\">Map<\/a> that was passed to and supplemented by <a href=\"package-matcher_matcher\/CustomMatcher\/matches.html\">matches<\/a>\nwith additional information about the mismatch, and <code>mismatchDescription<\/code>\nis the <a href=\"package-matcher_matcher\/Description-class.html\">Description<\/a> that is being built to describe the mismatch.<\/p>\n<p>A few matchers make use of the <code>verbose<\/code> flag to provide detailed\ninformation that is not typically included but can be of help in\ndiagnosing failures, such as stack traces.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description describeMismatch(\n    item, Description mismatchDescription, Map matchState, bool verbose) {\n  if (matchState['custom.exception'] != null) {\n    mismatchDescription\n        .add('threw ')\n        .addDescriptionOf(matchState['custom.exception'])\n        .add('\\n')\n        .add(matchState['custom.stack'].toString());\n    return mismatchDescription;\n  }\n\n  mismatchDescription\n      .add('has ')\n      .add(_featureName)\n      .add(' with value ')\n      .addDescriptionOf(matchState['custom.feature']);\n  var innerDescription = new StringDescription();\n\n  _matcher.describeMismatch(matchState['custom.feature'], innerDescription,\n      matchState['state'] as Map, verbose);\n\n  if (innerDescription.length &gt; 0) {\n    mismatchDescription.add(' which ').add(innerDescription.toString());\n  }\n  return mismatchDescription;\n}<\/code><\/pre>\n    ",
            "href": "package-matcher_matcher\/CustomMatcher\/describeMismatch.html",
            "isDeprecated": "0",
            "type": "matcher.Description",
            "name": "describeMismatch",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "matcher.CustomMatcher",
            "params": [
                {
                    "name": "item",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<dynamic>"
                },
                {
                    "name": "matchState",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Map"
                },
                {
                    "name": "mismatchDescription",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "matcher.Description"
                },
                {
                    "name": "verbose",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.bool"
                }
            ]
        },
        {
            "desc": "<p>Override this to extract the interesting feature.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Object featureValueOf(actual) =&gt; actual;<\/code><\/pre>\n    ",
            "href": "package-matcher_matcher\/CustomMatcher\/featureValueOf.html",
            "isDeprecated": "0",
            "type": "dart:core.Object",
            "name": "featureValueOf",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "matcher.CustomMatcher",
            "params": [
                {
                    "name": "actual",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<dynamic>"
                }
            ]
        },
        {
            "desc": "<p>Does the matching of the actual vs expected values.<\/p>\n<p><code>item<\/code> is the actual value. <code>matchState<\/code> can be supplied\nand may be used to add details about the mismatch that are too\ncostly to determine in <a href=\"package-matcher_matcher\/CustomMatcher\/describeMismatch.html\">describeMismatch<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool matches(item, Map matchState) {\n  try {\n    var f = featureValueOf(item);\n    if (_matcher.matches(f, matchState)) return true;\n    addStateInfo(matchState, {'custom.feature': f});\n  } catch (exception, stack) {\n    addStateInfo(matchState, {\n      'custom.exception': exception.toString(),\n      'custom.stack': new Chain.forTrace(stack)\n          .foldFrames(\n              (frame) =&gt;\n                  frame.package == 'test' ||\n                  frame.package == 'stream_channel' ||\n                  frame.package == 'matcher',\n              terse: true)\n          .toString()\n    });\n  }\n  return false;\n}<\/code><\/pre>\n    ",
            "href": "package-matcher_matcher\/CustomMatcher\/matches.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "name": "matches",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "matcher.CustomMatcher",
            "params": [
                {
                    "name": "item",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<dynamic>"
                },
                {
                    "name": "matchState",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Map"
                }
            ]
        }
    ],
    "props": []
}