{
    "name": "quiver.core.Optional",
    "extends": [
        "dart:collection.IterableBase",
        "dart:core.Iterable",
        "dart:core.Object"
    ],
    "memberOf": "quiver.core",
    "events": [],
    "methods": [
        {
            "name": "operator ==",
            "type": "dart:core.bool",
            "desc": "<p>Delegates to the underlying <a href=\"quiver.core\/Optional\/value.html\">value<\/a> operator==.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.core.Optional",
            "sig": "",
            "params": [
                {
                    "name": "o",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.core\/Optional\/operator_equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool operator ==(o) =&gt; o is Optional&lt;T&gt; &amp;&amp; o._value == _value;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "Optional.absent",
            "type": "",
            "desc": "<p>Constructs an empty Optional.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.core.Optional",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "quiver.core\/Optional\/Optional.absent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Optional.absent() : _value = null;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "Optional.fromNullable",
            "type": "",
            "desc": "<p>Constructs an Optional of the given <code>value<\/code>.<\/p>\n<p>If <code>value<\/code> is null, returns <a href=\"quiver.core\/Optional\/Optional.absent.html\">absent()<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.core.Optional",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": true,
            "href": "quiver.core\/Optional\/Optional.fromNullable.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Optional.fromNullable(T value) : this._value = value;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "ifAbsent",
            "type": "",
            "desc": "<p>Execution a function if the Optional value is absent.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.core.Optional",
            "sig": "",
            "params": [
                {
                    "name": "ifAbsent",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.core\/Optional\/ifAbsent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void ifAbsent(void ifAbsent()) {\n  if (!isPresent) {\n    ifAbsent();\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "ifPresent",
            "type": "",
            "desc": "<p>Executes a function if the Optional value is present.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.core.Optional",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.core\/Optional\/ifPresent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void ifPresent(void ifPresent(T value)) {\n  if (isPresent) {\n    ifPresent(_value);\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "Optional.of",
            "type": "",
            "desc": "<p>Constructs an Optional of the given <code>value<\/code>.<\/p>\n<p>Throws <a href=\"dart-core\/ArgumentError-class.html\">ArgumentError<\/a> if <code>value<\/code> is null.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.core.Optional",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": true,
            "href": "quiver.core\/Optional\/Optional.of.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Optional.of(T value) : this._value = value {\n  if (this._value == null) throw new ArgumentError('Must not be null.');\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "or",
            "type": "",
            "desc": "<p>Gets the Optional value with a default.<\/p>\n<p>The default is returned if the Optional is <a href=\"quiver.core\/Optional\/Optional.absent.html\">absent()<\/a>.<\/p>\n<p>Throws <a href=\"dart-core\/ArgumentError-class.html\">ArgumentError<\/a> if <code>defaultValue<\/code> is null.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.core.Optional",
            "sig": "",
            "params": [
                {
                    "name": "defaultValue",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.core\/Optional\/or.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">T or(T defaultValue) {\n  if (defaultValue == null) {\n    throw new ArgumentError('defaultValue must not be null.');\n  }\n  return _value == null ? defaultValue : _value;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of (some of) the elements of <code>this<\/code>.<\/p>\n<p>Elements are represented by their own <code>toString<\/code> results.<\/p>\n<p>The default representation always contains the first three elements.\nIf there are less than a hundred elements in the iterable, it also\ncontains the last two elements.<\/p>\n<p>If the resulting string isn't above 80 characters, more elements are\nincluded from the start of the iterable.<\/p>\n<p>The conversion may omit calling <code>toString<\/code> on some elements if they\nare known to not occur in the output, and it may stop iterating after\na hundred elements.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.core.Optional",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "quiver.core\/Optional\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() {\n  return _value == null\n      ? 'Optional { absent }'\n      : 'Optional { value: ${_value} }';\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "transform",
            "type": "quiver.core.Optional",
            "desc": "<p>Transforms the Optional value.<\/p>\n<p>If the Optional is <a href=\"quiver.core\/Optional\/Optional.absent.html\">absent()<\/a>, returns <a href=\"quiver.core\/Optional\/Optional.absent.html\">absent()<\/a> without applying the transformer.<\/p>\n<p>The transformer must not return <code>null<\/code>. If it does, an <a href=\"dart-core\/ArgumentError-class.html\">ArgumentError<\/a> is thrown.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.core.Optional",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.core\/Optional\/transform.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Optional&lt;S&gt; transform&lt;S&gt;(S transformer(T value)) {\n  return _value == null\n      ? new Optional.absent()\n      : new Optional.of(transformer(_value));\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "transformNullable",
            "type": "quiver.core.Optional",
            "desc": "<p>Transforms the Optional value.<\/p>\n<p>If the Optional is <a href=\"quiver.core\/Optional\/Optional.absent.html\">absent()<\/a>, returns <a href=\"quiver.core\/Optional\/Optional.absent.html\">absent()<\/a> without applying the transformer.<\/p>\n<p>Returns <a href=\"quiver.core\/Optional\/Optional.absent.html\">absent()<\/a> if the transformer returns <code>null<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.core.Optional",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.core\/Optional\/transformNullable.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Optional&lt;S&gt; transformNullable&lt;S&gt;(S transformer(T value)) {\n  return _value == null\n      ? new Optional.absent()\n      : new Optional.fromNullable(transformer(_value));\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "hashCode",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>Delegates to the underlying <a href=\"quiver.core\/Optional\/value.html\">value<\/a> hashCode.<\/p>\n        ",
            "memberOf": "quiver.core.Optional",
            "isConstant": false,
            "href": "quiver.core\/Optional\/hashCode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get hashCode =&gt; _value.hashCode;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "isPresent",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the Optional contains a value.<\/p>\n        ",
            "memberOf": "quiver.core.Optional",
            "isConstant": false,
            "href": "quiver.core\/Optional\/isPresent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isPresent =&gt; _value != null;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "iterator",
            "type": "dart:core.Iterator",
            "types": [],
            "desc": "<p>Returns a new <code>Iterator<\/code> that allows iterating the elements of this\n<code>Iterable<\/code>.<\/p>\n<p>Iterable classes may specify the iteration order of their elements\n(for example <a href=\"dart-core\/List-class.html\">List<\/a> always iterate in index order),\nor they may leave it unspecified (for example a hash-based <a href=\"dart-core\/Set-class.html\">Set<\/a>\nmay iterate in any order).<\/p>\n<p>Each time <code>iterator<\/code> is read, it returns a new iterator,\nwhich can be used to iterate through all the elements again.\nThe iterators of the same iterable can be stepped through independently,\nbut should return the same elements in the same order,\nas long as the underlying collection isn't changed.<\/p>\n<p>Modifying the collection may cause new iterators to produce\ndifferent elements, and may change the order of existing elements.\nA <a href=\"dart-core\/List-class.html\">List<\/a> specifies its iteration order precisely,\nso modifying the list changes the iteration order predictably.\nA hash-based <a href=\"dart-core\/Set-class.html\">Set<\/a> may change its iteration order completely\nwhen adding a new element to the set.<\/p>\n<p>Modifying the underlying collection after creating the new iterator\nmay cause an error the next time <a href=\"dart-core\/Iterator\/moveNext.html\">Iterator.moveNext<\/a> is called\non that iterator.\nAny <em>modifiable<\/em> iterable class should specify which operations will\nbreak iteration.<\/p>\n        ",
            "memberOf": "quiver.core.Optional",
            "isConstant": false,
            "href": "quiver.core\/Optional\/iterator.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nIterator&lt;T&gt; get iterator =&gt;\n    isPresent ? &lt;T&gt;[_value].iterator : new Iterable&lt;T&gt;.empty().iterator;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "orNull",
            "type": "",
            "types": [],
            "desc": "<p>Gets the Optional value, or <code>null<\/code> if there is none.<\/p>\n        ",
            "memberOf": "quiver.core.Optional",
            "isConstant": false,
            "href": "quiver.core\/Optional\/orNull.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">T get orNull =&gt; _value;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "value",
            "type": "",
            "types": [],
            "desc": "<p>Gets the Optional value.<\/p>\n<p>Throws <a href=\"dart-core\/StateError-class.html\">StateError<\/a> if <a href=\"quiver.core\/Optional\/value.html\">value<\/a> is null.<\/p>\n        ",
            "memberOf": "quiver.core.Optional",
            "isConstant": false,
            "href": "quiver.core\/Optional\/value.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">T get value {\n  if (this._value == null) {\n    throw new StateError('value called on absent Optional.');\n  }\n  return _value;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "quiver.core\/Optional-class.html",
    "desc": "<p>A value that might be absent.<\/p>\n<p>Use Optional as an alternative to allowing fields, parameters or return\nvalues to be null. It signals that a value is not required and provides\nconvenience methods for dealing with the absent case.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Optional"
}