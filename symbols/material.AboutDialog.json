{
    "desc": "<p>An about box. This is a dialog box with the application's icon, name,\nversion number, and copyright, plus a button to show licenses for software\nused by the application.<\/p>\n<p>To show an <a href=\"material\/AboutDialog-class.html\">AboutDialog<\/a>, use <a href=\"material\/showAboutDialog.html\">showAboutDialog<\/a>.<\/p>\n<p>If the application has a <a href=\"material\/Drawer-class.html\">Drawer<\/a>, the <a href=\"material\/AboutListTile-class.html\">AboutListTile<\/a> widget can make the\nprocess of showing an about dialog simpler.<\/p>\n<p>The <a href=\"material\/AboutDialog-class.html\">AboutDialog<\/a> shown by <a href=\"material\/showAboutDialog.html\">showAboutDialog<\/a> includes a button that calls\n<a href=\"material\/showLicensePage.html\">showLicensePage<\/a>.<\/p>\n<p>The licenses shown on the <a href=\"material\/LicensePage-class.html\">LicensePage<\/a> are those returned by the\n<a href=\"foundation\/LicenseRegistry-class.html\">LicenseRegistry<\/a> API, which can be used to add more licenses to the list.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "material\/AboutDialog-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.AboutDialog",
    "shortname": "AboutDialog",
    "extends": [
        "widgets.StatelessWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates an about box.<\/p>\n<p>The arguments are all optional. The application name, if omitted, will be\nderived from the nearest <a href=\"widgets\/Title-class.html\">Title<\/a> widget. The version, icon, and legalese\nvalues default to the empty string.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const AboutDialog({\n  Key key,\n  this.applicationName,\n  this.applicationVersion,\n  this.applicationIcon,\n  this.applicationLegalese,\n  this.children,\n}) : super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/AboutDialog\/AboutDialog.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.AboutDialog",
            "params": [
                {
                    "name": "applicationIcon",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "applicationLegalese",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "applicationName",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "applicationVersion",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "children",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<widgets.Widget>"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                }
            ]
        },
        {
            "desc": "<p>Describes the part of the user interface represented by this widget.<\/p>\n<p>The framework calls this method when this widget is inserted into the\ntree in a given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> and when the dependencies of this widget\nchange (e.g., an <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> referenced by this widget changes).<\/p>\n<p>The framework replaces the subtree below this widget with the widget\nreturned by this method, either by updating the existing subtree or by\nremoving the subtree and inflating a new subtree, depending on whether the\nwidget returned by this method can update the root of the existing\nsubtree, as determined by calling <a href=\"widgets\/Widget\/canUpdate.html\">Widget.canUpdate<\/a>.<\/p>\n<p>Typically implementations return a newly created constellation of widgets\nthat are configured with information from this widget's constructor and\nfrom the given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>.<\/p>\n<p>The given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> contains information about the location in the\ntree at which this widget is being built. For example, the context\nprovides the set of inherited widgets for this location in the tree. A\ngiven widget might be built with multiple different <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>\narguments over time if the widget is moved around the tree or if the\nwidget is inserted into the tree in multiple places at once.<\/p>\n<p>The implementation of this method must only depend on:<\/p>\n<ul>\n<li>the fields of the widget, which themselves must not change over time,\nand<\/li>\n<li>any ambient state obtained from the <code>context<\/code> using\n<a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a>.<\/li>\n<\/ul>\n<p>If a widget's <a href=\"material\/AboutDialog\/build.html\">build<\/a> method is to depend on anything else, use a\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> instead.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, which contains the discussion on performance considerations.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  assert(debugCheckHasMaterialLocalizations(context));\n  final String name = applicationName ?? _defaultApplicationName(context);\n  final String version = applicationVersion ?? _defaultApplicationVersion(context);\n  final Widget icon = applicationIcon ?? _defaultApplicationIcon(context);\n  List&lt;Widget&gt; body = &lt;Widget&gt;[];\n  if (icon != null)\n    body.add(IconTheme(data: const IconThemeData(size: 48.0), child: icon));\n  body.add(Expanded(\n    child: Padding(\n      padding: const EdgeInsets.symmetric(horizontal: 24.0),\n      child: ListBody(\n        children: &lt;Widget&gt;[\n          Text(name, style: Theme.of(context).textTheme.headline),\n          Text(version, style: Theme.of(context).textTheme.body1),\n          Container(height: 18.0),\n          Text(applicationLegalese ?? '', style: Theme.of(context).textTheme.caption),\n        ],\n      ),\n    ),\n  ));\n  body = &lt;Widget&gt;[\n    Row(\n      crossAxisAlignment: CrossAxisAlignment.start,\n      children: body,\n    ),\n  ];\n  if (children != null)\n    body.addAll(children);\n  return AlertDialog(\n    content: SingleChildScrollView(\n      child: ListBody(children: body),\n    ),\n    actions: &lt;Widget&gt;[\n      FlatButton(\n        child: Text(MaterialLocalizations.of(context).viewLicensesButtonLabel),\n        onPressed: () {\n          showLicensePage(\n            context: context,\n            applicationName: applicationName,\n            applicationVersion: applicationVersion,\n            applicationIcon: applicationIcon,\n            applicationLegalese: applicationLegalese,\n          );\n        },\n      ),\n      FlatButton(\n        child: Text(MaterialLocalizations.of(context).closeButtonLabel),\n        onPressed: () {\n          Navigator.pop(context);\n        },\n      ),\n    ],\n  );\n}<\/code><\/pre>\n    ",
            "href": "material\/AboutDialog\/build.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.AboutDialog",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The icon to show next to the application name.<\/p>\n<p>By default no icon is shown.<\/p>\n<p>Typically this will be an <a href=\"widgets\/ImageIcon-class.html\">ImageIcon<\/a> widget. It should honor the\n<a href=\"widgets\/IconTheme-class.html\">IconTheme<\/a>'s <a href=\"widgets\/IconThemeData\/size.html\">IconThemeData.size<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget applicationIcon\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutDialog\/applicationIcon.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.AboutDialog",
            "params": []
        },
        {
            "desc": "<p>A string to show in small print.<\/p>\n<p>Typically this is a copyright notice.<\/p>\n<p>Defaults to the empty string.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String applicationLegalese\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutDialog\/applicationLegalese.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "material.AboutDialog",
            "params": []
        },
        {
            "desc": "<p>The name of the application.<\/p>\n<p>Defaults to the value of <a href=\"widgets\/Title\/title.html\">Title.title<\/a>, if a <a href=\"widgets\/Title-class.html\">Title<\/a> widget can be found.\nOtherwise, defaults to <a href=\"dart-io\/Platform\/resolvedExecutable.html\">Platform.resolvedExecutable<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String applicationName\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutDialog\/applicationName.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "material.AboutDialog",
            "params": []
        },
        {
            "desc": "<p>The version of this build of the application.<\/p>\n<p>This string is shown under the application name.<\/p>\n<p>Defaults to the empty string.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String applicationVersion\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutDialog\/applicationVersion.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "material.AboutDialog",
            "params": []
        },
        {
            "desc": "<p>Widgets to add to the dialog box after the name, version, and legalese.<\/p>\n<p>This could include a link to a Web site, some descriptive text, credits,\nor other information to show in the about box.<\/p>\n<p>Defaults to nothing.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;Widget&gt; children\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutDialog\/children.html",
            "isDeprecated": "0",
            "type": "dart:core.List<widgets.Widget>",
            "memberOf": "material.AboutDialog",
            "params": []
        }
    ]
}