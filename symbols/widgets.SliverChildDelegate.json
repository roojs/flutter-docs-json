{
    "desc": "<p>A delegate that supplies children for slivers.<\/p>\n<p>Many slivers lazily construct their box children to avoid creating more\nchildren than are visible through the <a href=\"widgets\/Viewport-class.html\">Viewport<\/a>. Rather than receiving\ntheir children as an explicit <a href=\"dart-core\/List-class.html\">List<\/a>, they receive their children using a\n<a href=\"widgets\/SliverChildDelegate-class.html\">SliverChildDelegate<\/a>.<\/p>\n<p>It's uncommon to subclass <a href=\"widgets\/SliverChildDelegate-class.html\">SliverChildDelegate<\/a>. Instead, consider using one\nof the existing subclasses that provide adaptors to builder callbacks or\nexplicit child lists.<\/p>\n<h2 id=\"child-elements-lifecycle\">Child elements' lifecycle<\/h2>\n<h3 id=\"creation\">Creation<\/h3>\n<p>While laying out the list, visible children's elements, states and render\nobjects will be created lazily based on existing widgets (such as in the\ncase of <a href=\"widgets\/SliverChildListDelegate-class.html\">SliverChildListDelegate<\/a>) or lazily provided ones (such as in the\ncase of <a href=\"widgets\/SliverChildBuilderDelegate-class.html\">SliverChildBuilderDelegate<\/a>).<\/p>\n<h3 id=\"destruction\">Destruction<\/h3>\n<p>When a child is scrolled out of view, the associated element subtree, states\nand render objects are destroyed. A new child at the same position in the\nsliver will be lazily recreated along with new elements, states and render\nobjects when it is scrolled back.<\/p>\n<h3 id=\"destruction-mitigation\">Destruction mitigation<\/h3>\n<p>In order to preserve state as child elements are scrolled in and out of\nview, the following options are possible:<\/p>\n<ul>\n<li>\n<p>Moving the ownership of non-trivial UI-state-driving business logic\nout of the sliver child subtree. For instance, if a list contains posts\nwith their number of upvotes coming from a cached network response, store\nthe list of posts and upvote number in a data model outside the list. Let\nthe sliver child UI subtree be easily recreate-able from the\nsource-of-truth model object. Use <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>s in the child widget\nsubtree to store instantaneous UI state only.<\/p>\n<\/li>\n<li>\n<p>Letting <a href=\"widgets\/KeepAlive-class.html\">KeepAlive<\/a> be the root widget of the sliver child widget subtree\nthat needs to be preserved. The <a href=\"widgets\/KeepAlive-class.html\">KeepAlive<\/a> widget marks the child\nsubtree's top render object child for keep-alive. When the associated top\nrender object is scrolled out of view, the sliver keeps the child's\nrender object (and by extension, its associated elements and states) in a\ncache list instead of destroying them. When scrolled back into view, the\nrender object is repainted as-is (if it wasn't marked dirty in the\ninterim).<\/p>\n<p>This only works if the <a href=\"widgets\/SliverChildDelegate-class.html\">SliverChildDelegate<\/a> subclasses don't wrap the\nchild widget subtree with other widgets such as <a href=\"widgets\/AutomaticKeepAlive-class.html\">AutomaticKeepAlive<\/a> and\n<a href=\"widgets\/RepaintBoundary-class.html\">RepaintBoundary<\/a> via <code>addAutomaticKeepAlives<\/code> and\n<code>addRepaintBoundaries<\/code>.<\/p>\n<\/li>\n<li>\n<p>Using <a href=\"widgets\/AutomaticKeepAlive-class.html\">AutomaticKeepAlive<\/a> widgets (inserted by default in\n<a href=\"widgets\/SliverChildListDelegate-class.html\">SliverChildListDelegate<\/a> or <a href=\"widgets\/SliverChildListDelegate-class.html\">SliverChildListDelegate<\/a>). Instead of\nunconditionally caching the child element subtree when scrolling\noff-screen like <a href=\"widgets\/KeepAlive-class.html\">KeepAlive<\/a>, <a href=\"widgets\/AutomaticKeepAlive-class.html\">AutomaticKeepAlive<\/a> can let whether to\ncache the subtree be determined by descendant logic in the subtree.<\/p>\n<p>As an example, the <a href=\"widgets\/EditableText-class.html\">EditableText<\/a> widget signals its sliver child element\nsubtree to stay alive while its text field has input focus. If it doesn't\nhave focus and no other descendants signaled for keep-alive via a\n<a href=\"widgets\/KeepAliveNotification-class.html\">KeepAliveNotification<\/a>, the sliver child element subtree will be\ndestroyed when scrolled away.<\/p>\n<p><a href=\"widgets\/AutomaticKeepAlive-class.html\">AutomaticKeepAlive<\/a> descendants typically signal it to be kept alive by\nusing the <a href=\"widgets\/AutomaticKeepAliveClientMixin-mixin.html\">AutomaticKeepAliveClientMixin<\/a>, then implementing the\n<code>wantKeepAlive<\/code> getter and calling <code>updateKeepAlive<\/code>.\nSee also:<\/p>\n<\/li>\n<li>\n<p><a href=\"widgets\/SliverChildBuilderDelegate-class.html\">SliverChildBuilderDelegate<\/a>, which is a delegate that uses a builder\ncallback to construct the children.<\/p>\n<\/li>\n<li>\n<p><a href=\"widgets\/SliverChildListDelegate-class.html\">SliverChildListDelegate<\/a>, which is a delegate that has an explicit list\nof children.<\/p>\n<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "widgets\/SliverChildDelegate-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "widgets",
    "name": "widgets.SliverChildDelegate",
    "shortname": "SliverChildDelegate",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [
        "widgets.SliverChildBuilderDelegate",
        "widgets.SliverChildListDelegate"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SliverChildDelegate();<\/code><\/pre>\n    ",
            "href": "widgets\/SliverChildDelegate\/SliverChildDelegate.html",
            "isDeprecated": false,
            "type": "",
            "name": "SliverChildDelegate",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.SliverChildDelegate",
            "params": []
        },
        {
            "desc": "<p>Returns the child with the given index.<\/p>\n<p>Should return null if asked to build a widget with a greater index than\nexists. If this returns null, <a href=\"widgets\/SliverChildDelegate\/estimatedChildCount.html\">estimatedChildCount<\/a> must subsequently\nreturn a precise non-null value.<\/p>\n<p>Subclasses typically override this function and wrap their children in\n<a href=\"widgets\/AutomaticKeepAlive-class.html\">AutomaticKeepAlive<\/a> and <a href=\"widgets\/RepaintBoundary-class.html\">RepaintBoundary<\/a> widgets.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Widget build(BuildContext context, int index);<\/code><\/pre>\n    ",
            "href": "widgets\/SliverChildDelegate\/build.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "build",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.SliverChildDelegate",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "index",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Add additional information to the given description for use by <a href=\"widgets\/SliverChildDelegate\/toString.html\">toString<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@protected\n@mustCallSuper\nvoid debugFillDescription(List&lt;String&gt; description) {\n  try {\n    final int children = estimatedChildCount;\n    if (children != null)\n      description.add('estimated child count: $children');\n  } catch (e) {\n    description.add('estimated child count: EXCEPTION (${e.runtimeType})');\n  }\n}<\/code><\/pre>\n    ",
            "href": "widgets\/SliverChildDelegate\/debugFillDescription.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "debugFillDescription",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.SliverChildDelegate",
            "params": [
                {
                    "name": "description",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.String>"
                }
            ]
        },
        {
            "desc": "<p>Called at the end of layout to indicate that layout is now complete.<\/p>\n<p>The <code>firstIndex<\/code> argument is the index of the first child that was\nincluded in the current layout. The <code>lastIndex<\/code> argument is the index of\nthe last child that was included in the current layout.<\/p>\n<p>Useful for subclasses that which to track which children are included in\nthe underlying render tree.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void didFinishLayout(int firstIndex, int lastIndex) { }<\/code><\/pre>\n    ",
            "href": "widgets\/SliverChildDelegate\/didFinishLayout.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "didFinishLayout",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.SliverChildDelegate",
            "params": [
                {
                    "name": "firstIndex",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "lastIndex",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Returns an estimate of the max scroll extent for all the children.<\/p>\n<p>Subclasses should override this function if they have additional\ninformation about their max scroll extent.<\/p>\n<p>The default implementation returns null, which causes the caller to\nextrapolate the max scroll offset from the given parameters.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double estimateMaxScrollOffset(\n  int firstIndex,\n  int lastIndex,\n  double leadingScrollOffset,\n  double trailingScrollOffset,\n) =&gt; null;<\/code><\/pre>\n    ",
            "href": "widgets\/SliverChildDelegate\/estimateMaxScrollOffset.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "estimateMaxScrollOffset",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.SliverChildDelegate",
            "params": [
                {
                    "name": "firstIndex",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "lastIndex",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "leadingScrollOffset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "trailingScrollOffset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Called whenever a new instance of the child delegate class is\nprovided to the sliver.<\/p>\n<p>If the new instance represents different information than the old\ninstance, then the method should return true, otherwise it should return\nfalse.<\/p>\n<p>If the method returns false, then the <a href=\"widgets\/SliverChildDelegate\/build.html\">build<\/a> call might be optimized\naway.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool shouldRebuild(covariant SliverChildDelegate oldDelegate);<\/code><\/pre>\n    ",
            "href": "widgets\/SliverChildDelegate\/shouldRebuild.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "shouldRebuild",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.SliverChildDelegate",
            "params": [
                {
                    "name": "oldDelegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.SliverChildDelegate"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  final List&lt;String&gt; description = &lt;String&gt;[];\n  debugFillDescription(description);\n  return '${describeIdentity(this)}(${description.join(\", \")})';\n}<\/code><\/pre>\n    ",
            "href": "widgets\/SliverChildDelegate\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.SliverChildDelegate",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Returns an estimate of the number of children this delegate will build.<\/p>\n<p>Used to estimate the maximum scroll offset if <a href=\"widgets\/SliverChildDelegate\/estimateMaxScrollOffset.html\">estimateMaxScrollOffset<\/a>\nreturns null.<\/p>\n<p>Return null if there are an unbounded number of children or if it would\nbe too difficult to estimate the number of children.<\/p>\n<p>This must return a precise number once <a href=\"widgets\/SliverChildDelegate\/build.html\">build<\/a> has returned null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get estimatedChildCount =&gt; null;<\/code><\/pre>\n        ",
            "href": "widgets\/SliverChildDelegate\/estimatedChildCount.html",
            "name": "estimatedChildCount",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.SliverChildDelegate",
            "params": []
        }
    ]
}