{
    "desc": "<p>Delegate for <a href=\"material\/showSearch.html\">showSearch<\/a> to define the content of the search page.<\/p>\n<p>The search page always shows an <a href=\"material\/AppBar-class.html\">AppBar<\/a> at the top where users can\nenter their search queries. The buttons shown before and after the search\nquery text field can be customized via <code>SearchDelegate.leading<\/code> and\n<code>SearchDelegate.actions<\/code>.<\/p>\n<p>The body below the <a href=\"material\/AppBar-class.html\">AppBar<\/a> can either show suggested queries (returned by\n<a href=\"material\/SearchDelegate\/buildSuggestions.html\">SearchDelegate.buildSuggestions<\/a>) or - once the user submits a search  - the\nresults of the search as returned by <a href=\"material\/SearchDelegate\/buildResults.html\">SearchDelegate.buildResults<\/a>.<\/p>\n<p><a href=\"material\/SearchDelegate\/query.html\">SearchDelegate.query<\/a> always contains the current query entered by the user\nand should be used to build the suggestions and results.<\/p>\n<p>The results can be brought on screen by calling <a href=\"material\/SearchDelegate\/showResults.html\">SearchDelegate.showResults<\/a>\nand you can go back to showing the suggestions by calling\n<a href=\"material\/SearchDelegate\/showSuggestions.html\">SearchDelegate.showSuggestions<\/a>.<\/p>\n<p>Once the user has selected a search result, <a href=\"material\/SearchDelegate\/close.html\">SearchDelegate.close<\/a> should be\ncalled to remove the search page from the top of the navigation stack and\nto notify the caller of <a href=\"material\/showSearch.html\">showSearch<\/a> about the selected search result.<\/p>\n<p>A given <a href=\"material\/SearchDelegate-class.html\">SearchDelegate<\/a> can only be associated with one active <a href=\"material\/showSearch.html\">showSearch<\/a>\ncall. Call <a href=\"material\/SearchDelegate\/close.html\">SearchDelegate.close<\/a> before re-using the same delegate instance\nfor another <a href=\"material\/showSearch.html\">showSearch<\/a> call.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "material\/SearchDelegate-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.SearchDelegate",
    "shortname": "SearchDelegate",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "material\/SearchDelegate\/SearchDelegate.html",
            "isDeprecated": false,
            "type": "",
            "name": "SearchDelegate",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.SearchDelegate",
            "params": []
        },
        {
            "desc": "<p>The theme used to style the <a href=\"material\/AppBar-class.html\">AppBar<\/a>.<\/p>\n<p>By default, a white theme is used.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/AppBar\/backgroundColor.html\">AppBar.backgroundColor<\/a>, which is set to <a href=\"material\/ThemeData\/primaryColor.html\">ThemeData.primaryColor<\/a>.<\/li>\n<li>\n<a href=\"material\/AppBar\/iconTheme.html\">AppBar.iconTheme<\/a>, which is set to <a href=\"material\/ThemeData\/primaryIconTheme.html\">ThemeData.primaryIconTheme<\/a>.<\/li>\n<li>\n<a href=\"material\/AppBar\/textTheme.html\">AppBar.textTheme<\/a>, which is set to <a href=\"material\/ThemeData\/primaryTextTheme.html\">ThemeData.primaryTextTheme<\/a>.<\/li>\n<li>\n<a href=\"material\/AppBar\/brightness.html\">AppBar.brightness<\/a>, which is set to <a href=\"material\/ThemeData\/primaryColorBrightness.html\">ThemeData.primaryColorBrightness<\/a>.<\/li>\n<\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ThemeData appBarTheme(BuildContext context) {\n  assert(context != null);\n  final ThemeData theme = Theme.of(context);\n  assert(theme != null);\n  return theme.copyWith(\n    primaryColor: Colors.white,\n    primaryIconTheme: theme.primaryIconTheme.copyWith(color: Colors.grey),\n    primaryColorBrightness: Brightness.light,\n    primaryTextTheme: theme.textTheme,\n  );\n}<\/code><\/pre>\n    ",
            "href": "material\/SearchDelegate\/appBarTheme.html",
            "isDeprecated": false,
            "type": "material.ThemeData",
            "name": "appBarTheme",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SearchDelegate",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>Widgets to display after the search query in the <a href=\"material\/AppBar-class.html\">AppBar<\/a>.<\/p>\n<p>If the <a href=\"material\/SearchDelegate\/query.html\">query<\/a> is not empty, this should typically contain a button to\nclear the query and show the suggestions again (via <a href=\"material\/SearchDelegate\/showSuggestions.html\">showSuggestions<\/a>) if\nthe results are currently shown.<\/p>\n<p>Returns null if no widget should be shown<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/AppBar\/actions.html\">AppBar.actions<\/a>, the intended use for the return value of this method.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;Widget&gt; buildActions(BuildContext context);<\/code><\/pre>\n    ",
            "href": "material\/SearchDelegate\/buildActions.html",
            "isDeprecated": false,
            "type": "dart:core.List<widgets.Widget>",
            "name": "buildActions",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SearchDelegate",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>A widget to display before the current query in the <a href=\"material\/AppBar-class.html\">AppBar<\/a>.<\/p>\n<p>Typically an <a href=\"material\/IconButton-class.html\">IconButton<\/a> configured with a <a href=\"material\/BackButtonIcon-class.html\">BackButtonIcon<\/a> that exits\nthe search with <a href=\"material\/SearchDelegate\/close.html\">close<\/a>. One can also use an <a href=\"material\/AnimatedIcon-class.html\">AnimatedIcon<\/a> driven by\n<a href=\"material\/SearchDelegate\/transitionAnimation.html\">transitionAnimation<\/a>, which animates from e.g. a hamburger menu to the\nback button as the search overlay fades in.<\/p>\n<p>Returns null if no widget should be shown.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/AppBar\/leading.html\">AppBar.leading<\/a>, the intended use for the return value of this method.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Widget buildLeading(BuildContext context);<\/code><\/pre>\n    ",
            "href": "material\/SearchDelegate\/buildLeading.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "buildLeading",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SearchDelegate",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>The results shown after the user submits a search from the search page.<\/p>\n<p>The current value of <a href=\"material\/SearchDelegate\/query.html\">query<\/a> can be used to determine what the user\nsearched for.<\/p>\n<p>This method might be applied more than once to the same query.\nIf your <a href=\"material\/SearchDelegate\/buildResults.html\">buildResults<\/a> method is computationally expensive, you may want\nto cache the search results for one or more queries.<\/p>\n<p>Typically, this method returns a <a href=\"widgets\/ListView-class.html\">ListView<\/a> with the search results.\nWhen the user taps on a particular search result, <a href=\"material\/SearchDelegate\/close.html\">close<\/a> should be called\nwith the selected result as argument. This will close the search page and\ncommunicate the result back to the initial caller of <a href=\"material\/showSearch.html\">showSearch<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Widget buildResults(BuildContext context);<\/code><\/pre>\n    ",
            "href": "material\/SearchDelegate\/buildResults.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "buildResults",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SearchDelegate",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>Suggestions shown in the body of the search page while the user types a\nquery into the search field.<\/p>\n<p>The delegate method is called whenever the content of <a href=\"material\/SearchDelegate\/query.html\">query<\/a> changes.\nThe suggestions should be based on the current <a href=\"material\/SearchDelegate\/query.html\">query<\/a> string. If the query\nstring is empty, it is good practice to show suggested queries based on\npast queries or the current context.<\/p>\n<p>Usually, this method will return a <a href=\"widgets\/ListView-class.html\">ListView<\/a> with one <a href=\"material\/ListTile-class.html\">ListTile<\/a> per\nsuggestion. When <a href=\"material\/ListTile\/onTap.html\">ListTile.onTap<\/a> is called, <a href=\"material\/SearchDelegate\/query.html\">query<\/a> should be updated\nwith the corresponding suggestion and the results page should be shown\nby calling <a href=\"material\/SearchDelegate\/showResults.html\">showResults<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Widget buildSuggestions(BuildContext context);<\/code><\/pre>\n    ",
            "href": "material\/SearchDelegate\/buildSuggestions.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "buildSuggestions",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SearchDelegate",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>Closes the search page and returns to the underlying route.<\/p>\n<p>The value provided for <code>result<\/code> is used as the return value of the call\nto <a href=\"material\/showSearch.html\">showSearch<\/a> that launched the search initially.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void close(BuildContext context, T result) {\n  _currentBody = null;\n  _focusNode.unfocus();\n  Navigator.of(context)\n    ..popUntil((Route&lt;dynamic&gt; route) =&gt; route == _route)\n    ..pop(result);\n}<\/code><\/pre>\n    ",
            "href": "material\/SearchDelegate\/close.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "close",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SearchDelegate",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "result",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<T>"
                }
            ]
        },
        {
            "desc": "<p>Transition from the suggestions returned by <a href=\"material\/SearchDelegate\/buildSuggestions.html\">buildSuggestions<\/a> to the\n<a href=\"material\/SearchDelegate\/query.html\">query<\/a> results returned by <a href=\"material\/SearchDelegate\/buildResults.html\">buildResults<\/a>.<\/p>\n<p>If the user taps on a suggestion provided by <a href=\"material\/SearchDelegate\/buildSuggestions.html\">buildSuggestions<\/a> the\nscreen should typically transition to the page showing the search\nresults for the suggested query. This transition can be triggered\nby calling this method.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/SearchDelegate\/showSuggestions.html\">showSuggestions<\/a> to show the search suggestions again.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void showResults(BuildContext context) {\n  _focusNode.unfocus();\n  _currentBody = _SearchBody.results;\n}<\/code><\/pre>\n    ",
            "href": "material\/SearchDelegate\/showResults.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "showResults",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SearchDelegate",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>Transition from showing the results returned by <a href=\"material\/SearchDelegate\/buildResults.html\">buildResults<\/a> to showing\nthe suggestions returned by <a href=\"material\/SearchDelegate\/buildSuggestions.html\">buildSuggestions<\/a>.<\/p>\n<p>Calling this method will also put the input focus back into the search\nfield of the <a href=\"material\/AppBar-class.html\">AppBar<\/a>.<\/p>\n<p>If the results are currently shown this method can be used to go back\nto showing the search suggestions.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/SearchDelegate\/showResults.html\">showResults<\/a> to show the search results.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void showSuggestions(BuildContext context) {\n  FocusScope.of(context).requestFocus(_focusNode);\n  _currentBody = _SearchBody.suggestions;\n}<\/code><\/pre>\n    ",
            "href": "material\/SearchDelegate\/showSuggestions.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "showSuggestions",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SearchDelegate",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The current query string shown in the <a href=\"material\/AppBar-class.html\">AppBar<\/a>.<\/p>\n<p>The user manipulates this string via the keyboard.<\/p>\n<p>If the user taps on a suggestion provided by <a href=\"material\/SearchDelegate\/buildSuggestions.html\">buildSuggestions<\/a> this\nstring should be updated to that suggestion via the setter.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get query =&gt; _queryTextController.text;<\/code><\/pre>\n        ",
            "href": "material\/SearchDelegate\/query.html",
            "name": "query",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "material.SearchDelegate",
            "params": []
        },
        {
            "desc": "<p><a href=\"animation\/Animation-class.html\">Animation<\/a> triggered when the search pages fades in or out.<\/p>\n<p>This animation is commonly used to animate <a href=\"material\/AnimatedIcon-class.html\">AnimatedIcon<\/a>s of\n<a href=\"material\/IconButton-class.html\">IconButton<\/a>s returned by <a href=\"material\/SearchDelegate\/buildLeading.html\">buildLeading<\/a> or <a href=\"material\/SearchDelegate\/buildActions.html\">buildActions<\/a>. It can also be\nused to animate <a href=\"material\/IconButton-class.html\">IconButton<\/a>s contained within the route below the search\npage.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Animation&lt;double&gt; get transitionAnimation =&gt; _proxyAnimation;<\/code><\/pre>\n        ",
            "href": "material\/SearchDelegate\/transitionAnimation.html",
            "name": "transitionAnimation",
            "isDeprecated": false,
            "type": "animation.Animation<dart:core.double>",
            "memberOf": "material.SearchDelegate",
            "params": []
        }
    ]
}