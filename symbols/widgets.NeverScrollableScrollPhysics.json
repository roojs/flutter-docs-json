{
    "name": "widgets.NeverScrollableScrollPhysics",
    "extends": [
        "widgets.ScrollPhysics",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "NeverScrollableScrollPhysics",
            "type": "",
            "desc": "<p>Creates scroll physics that does not let the user scroll.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.NeverScrollableScrollPhysics",
            "sig": "",
            "params": [
                {
                    "name": "parent",
                    "type": "widgets.ScrollPhysics",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/NeverScrollableScrollPhysics\/NeverScrollableScrollPhysics.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const NeverScrollableScrollPhysics({ ScrollPhysics parent }) : super(parent: parent);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "applyTo",
            "type": "widgets.NeverScrollableScrollPhysics",
            "desc": "<p>If <a href=\"widgets\/ScrollPhysics\/parent.html\">parent<\/a> is null then return a <a href=\"widgets\/ScrollPhysics-class.html\">ScrollPhysics<\/a> with the same\n<a href=\"dart-core\/Object\/runtimeType.html\">runtimeType<\/a> where the <a href=\"widgets\/ScrollPhysics\/parent.html\">parent<\/a> has been replaced with the <code>ancestor<\/code>.<\/p>\n<p>If this scroll physics object already has a parent, then this method\nis applied recursively and ancestor will appear at the end of the\nexisting chain of parents.<\/p>\n<p>The returned object will combine some of the behaviors from this\n<a href=\"widgets\/ScrollPhysics-class.html\">ScrollPhysics<\/a> instance and some of the behaviors from <code>ancestor<\/code>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/ScrollPhysics\/buildParent.html\">buildParent<\/a>, a utility method that's often used to define <a href=\"widgets\/NeverScrollableScrollPhysics\/applyTo.html\">applyTo<\/a>\nmethods for ScrollPhysics subclasses.<\/li><\/ul>",
            "static": false,
            "memberOf": "widgets.NeverScrollableScrollPhysics",
            "sig": "",
            "params": [
                {
                    "name": "ancestor",
                    "type": "widgets.ScrollPhysics",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/NeverScrollableScrollPhysics\/applyTo.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nNeverScrollableScrollPhysics applyTo(ScrollPhysics ancestor) {\n  return NeverScrollableScrollPhysics(parent: buildParent(ancestor));\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "shouldAcceptUserOffset",
            "type": "dart:core.bool",
            "desc": "<p>Whether the scrollable should let the user adjust the scroll offset, for\nexample by dragging.<\/p>\n<p>By default, the user can manipulate the scroll offset if, and only if,\nthere is actually content outside the viewport to reveal.<\/p>\n<p>The given <code>position<\/code> is only valid during this method call. Do not keep a\nreference to it to use later, as the values may update, may not update, or\nmay update to reflect an entirely unrelated scrollable.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.NeverScrollableScrollPhysics",
            "sig": "",
            "params": [
                {
                    "name": "position",
                    "type": "widgets.ScrollMetrics",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/NeverScrollableScrollPhysics\/shouldAcceptUserOffset.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool shouldAcceptUserOffset(ScrollMetrics position) =&gt; false;<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "allowImplicitScrolling",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether a viewport is allowed to change its scroll position implicitly in\nresponds to a call to <a href=\"rendering\/RenderObject\/showOnScreen.html\">RenderObject.showOnScreen<\/a>.<\/p>\n<p><a href=\"rendering\/RenderObject\/showOnScreen.html\">RenderObject.showOnScreen<\/a> is for example used to bring a text field\nfully on screen after it has received focus. This property controls\nwhether the viewport associated with this object is allowed to change the\nscroll position to fulfill such a request.<\/p>\n        ",
            "memberOf": "widgets.NeverScrollableScrollPhysics",
            "isConstant": false,
            "href": "widgets\/NeverScrollableScrollPhysics\/allowImplicitScrolling.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get allowImplicitScrolling =&gt; false;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "widgets\/NeverScrollableScrollPhysics-class.html",
    "desc": "<p>Scroll physics that does not allow the user to scroll.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/ScrollPhysics-class.html\">ScrollPhysics<\/a>, which can be used instead of this class when the default\nbehavior is desired instead.<\/li>\n<li>\n<a href=\"widgets\/BouncingScrollPhysics-class.html\">BouncingScrollPhysics<\/a>, which provides the bouncing overscroll behavior\nfound on iOS.<\/li>\n<li>\n<a href=\"widgets\/ClampingScrollPhysics-class.html\">ClampingScrollPhysics<\/a>, which provides the clamping overscroll behavior\nfound on Android.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "NeverScrollableScrollPhysics"
}