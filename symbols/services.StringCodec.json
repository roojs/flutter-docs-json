{
    "name": "services.StringCodec",
    "extends": [],
    "memberOf": "services",
    "events": [],
    "methods": [
        {
            "name": "StringCodec",
            "type": "",
            "desc": "<p>Creates a <a href=\"services\/MessageCodec-class.html\">MessageCodec<\/a> with UTF-8 encoded String messages.<\/p>\n    ",
            "static": false,
            "memberOf": "services.StringCodec",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "services\/StringCodec\/StringCodec.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const StringCodec();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "decodeMessage",
            "type": "dart:core.String",
            "desc": "<p>Decodes the specified <code>message<\/code> from binary.<\/p>\n<p>Returns null if the message is null.<\/p>\n    ",
            "static": false,
            "memberOf": "services.StringCodec",
            "sig": "",
            "params": [
                {
                    "name": "message",
                    "type": "dart:typed_data.ByteData",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "services\/StringCodec\/decodeMessage.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString decodeMessage(ByteData message) {\n  if (message == null)\n    return null;\n  return utf8.decoder.convert(message.buffer.asUint8List(message.offsetInBytes, message.lengthInBytes));\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "encodeMessage",
            "type": "dart:typed_data.ByteData",
            "desc": "<p>Encodes the specified <code>message<\/code> in binary.<\/p>\n<p>Returns null if the message is null.<\/p>\n    ",
            "static": false,
            "memberOf": "services.StringCodec",
            "sig": "",
            "params": [
                {
                    "name": "message",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "services\/StringCodec\/encodeMessage.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nByteData encodeMessage(String message) {\n  if (message == null)\n    return null;\n  final Uint8List encoded = utf8.encoder.convert(message);\n  return encoded.buffer.asByteData();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "services\/StringCodec-class.html",
    "desc": "<p><a href=\"services\/MessageCodec-class.html\">MessageCodec<\/a> with UTF-8 encoded String messages.<\/p>\n<p>On Android, messages will be represented using <code>java.util.String<\/code>.\nOn iOS, messages will be represented using <code>NSString<\/code>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "StringCodec"
}