{
    "name": "vector_math_geometry.MeshGeometry",
    "extends": [],
    "memberOf": "vector_math_geometry",
    "events": [],
    "methods": [
        {
            "name": "MeshGeometry",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.MeshGeometry",
            "sig": "",
            "params": [
                {
                    "name": "length",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "attributes",
                    "type": "dart:core.List<vector_math_geometry.VertexAttrib>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "vector_math_geometry.VertexAttrib"
                    ]
                }
            ],
            "isConstructor": true,
            "href": "vector_math_geometry\/MeshGeometry\/MeshGeometry.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory MeshGeometry(int length, List&lt;VertexAttrib&gt; attributes) {\n  int stride = 0;\n  for (VertexAttrib a in attributes) {\n    stride += a.elementSize * a.size;\n  }\n  int offset = 0;\n  final List&lt;VertexAttrib&gt; attribs = &lt;VertexAttrib&gt;[];\n  for (VertexAttrib a in attributes) {\n    attribs.add(new VertexAttrib._resetStrideOffset(a, stride, offset));\n    offset += a.elementSize * a.size;\n  }\n\n  return new MeshGeometry._internal(length, stride, attribs);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "attribFromJson",
            "type": "vector_math_geometry.VertexAttrib",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.MeshGeometry",
            "sig": "",
            "params": [
                {
                    "name": "name",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "json",
                    "type": "dart:core.Map<dart:core.String<dart:core.Object>>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Map",
                        "dart:core.String",
                        "dart:core.Object"
                    ]
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/MeshGeometry\/attribFromJson.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static VertexAttrib attribFromJson(String name, Map&lt;String, Object&gt; json) {\n  final Object jsonSize = json[\"size\"];\n  final Object jsonType = json[\"type\"];\n  final Object jsonStride = json[\"stride\"];\n  final Object jsonOffset = json[\"offset\"];\n  if (jsonSize is int &amp;&amp;\n      jsonType is String &amp;&amp;\n      jsonStride is int &amp;&amp;\n      jsonOffset is int) {\n    return new VertexAttrib._internal(\n        name, jsonSize, jsonType, jsonStride, jsonOffset);\n  } else {\n    return null;\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "attribsAreCompatible",
            "type": "dart:core.bool",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.MeshGeometry",
            "sig": "",
            "params": [
                {
                    "name": "mesh",
                    "type": "vector_math_geometry.MeshGeometry",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/MeshGeometry\/attribsAreCompatible.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool attribsAreCompatible(MeshGeometry mesh) {\n  if (mesh.attribs.length != attribs.length) {\n    return false;\n  }\n\n  for (VertexAttrib attrib in attribs) {\n    final VertexAttrib otherAttrib = mesh.getAttrib(attrib.name);\n    if (otherAttrib == null) {\n      return false;\n    }\n    if (attrib.type != otherAttrib.type ||\n        attrib.size != otherAttrib.size ||\n        attrib.stride != otherAttrib.stride ||\n        attrib.offset != otherAttrib.offset) {\n      return false;\n    }\n  }\n\n  if ((indices == null &amp;&amp; mesh.indices != null) ||\n      (indices != null &amp;&amp; mesh.indices == null)) {\n    return false;\n  }\n\n  return true;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "MeshGeometry.combine",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.MeshGeometry",
            "sig": "",
            "params": [
                {
                    "name": "meshes",
                    "type": "dart:core.List<vector_math_geometry.MeshGeometry>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "vector_math_geometry.MeshGeometry"
                    ]
                }
            ],
            "isConstructor": true,
            "href": "vector_math_geometry\/MeshGeometry\/MeshGeometry.combine.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory MeshGeometry.combine(List&lt;MeshGeometry&gt; meshes) {\n  if (meshes == null || meshes.length &lt; 2) {\n    throw new Exception(\n        \"Must provide at least two MeshGeometry instances to combine.\");\n  }\n\n  \/\/ When combining meshes they must all have a matching set of VertexAttribs\n  final MeshGeometry firstMesh = meshes[0];\n  int totalVerts = firstMesh.length;\n  int totalIndices = firstMesh.indices != null ? firstMesh.indices.length : 0;\n  for (int i = 1; i &lt; meshes.length; ++i) {\n    final MeshGeometry srcMesh = meshes[i];\n    if (!firstMesh.attribsAreCompatible(srcMesh)) {\n      throw new Exception(\n          \"All meshes must have identical attributes to combine.\");\n    }\n    totalVerts += srcMesh.length;\n    totalIndices += srcMesh.indices != null ? srcMesh.indices.length : 0;\n  }\n\n  final MeshGeometry mesh = new MeshGeometry._internal(\n      totalVerts, firstMesh.stride, firstMesh.attribs);\n\n  if (totalIndices &gt; 0) {\n    mesh.indices = new Uint16List(totalIndices);\n  }\n\n  \/\/ Copy over the buffer data:\n  int bufferOffset = 0;\n  int indexOffset = 0;\n  int vertexOffset = 0;\n  for (int i = 0; i &lt; meshes.length; ++i) {\n    final MeshGeometry srcMesh = meshes[i];\n    mesh.buffer.setAll(bufferOffset, srcMesh.buffer);\n\n    if (totalIndices &gt; 0) {\n      for (int j = 0; j &lt; srcMesh.indices.length; ++j) {\n        mesh.indices[j + indexOffset] = srcMesh.indices[j] + vertexOffset;\n      }\n      vertexOffset += srcMesh.length;\n      indexOffset += srcMesh.indices.length;\n    }\n\n    bufferOffset += srcMesh.buffer.length;\n  }\n\n  return mesh;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "MeshGeometry.copy",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.MeshGeometry",
            "sig": "",
            "params": [
                {
                    "name": "mesh",
                    "type": "vector_math_geometry.MeshGeometry",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "vector_math_geometry\/MeshGeometry\/MeshGeometry.copy.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">MeshGeometry.copy(MeshGeometry mesh)\n    : stride = mesh.stride,\n      length = mesh.length,\n      attribs = mesh.attribs {\n  \/\/ Copy the buffer\n  buffer = new Float32List(mesh.buffer.length);\n  buffer.setAll(0, mesh.buffer);\n\n  \/\/ Copy the indices\n  if (mesh.indices != null) {\n    indices = new Uint16List(mesh.indices.length);\n    indices.setAll(0, mesh.indices);\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "MeshGeometry.fromJson",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.MeshGeometry",
            "sig": "",
            "params": [
                {
                    "name": "json",
                    "type": "dart:core.Map<dart:core.String<dart:core.Object>>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Map",
                        "dart:core.String",
                        "dart:core.Object"
                    ]
                }
            ],
            "isConstructor": true,
            "href": "vector_math_geometry\/MeshGeometry\/MeshGeometry.fromJson.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory MeshGeometry.fromJson(Map&lt;String, Object&gt; json) {\n  Float32List buffer;\n  final Object jsonBuffer = json[\"buffer\"];\n  if (jsonBuffer is List&lt;double&gt;) {\n    buffer = new Float32List.fromList(jsonBuffer);\n  } else {\n    throw new ArgumentError.value(\n        jsonBuffer, 'json[\"buffer\"]', 'Value type must be List&lt;double&gt;');\n  }\n\n  final Object jsonAttribs = json[\"attribs\"];\n  Map&lt;String, Object&gt; jsonAttribsMap;\n  if (jsonAttribs is Map&lt;String, Object&gt;) {\n    jsonAttribsMap = jsonAttribs;\n  } else {\n    throw new ArgumentError.value(jsonBuffer, 'json[\"attribs\"]',\n        'Value type must be Map&lt;String, Object&gt;');\n  }\n  List&lt;VertexAttrib&gt; attribs;\n  int stride = 0;\n  for (String key in jsonAttribsMap.keys) {\n    VertexAttrib attrib;\n    final Object jsonAttrib = jsonAttribsMap[key];\n    if (jsonAttrib is Map&lt;String, Object&gt;) {\n      attrib = attribFromJson(key, jsonAttrib);\n      attribs.add(attrib);\n      if (stride == 0) {\n        stride = attrib.stride;\n      }\n    }\n  }\n\n  final MeshGeometry mesh = new MeshGeometry._internal(\n      buffer.lengthInBytes ~\/ stride, stride, attribs, buffer);\n\n  final Object jsonIndices = json[\"indices\"];\n  if (jsonIndices is List&lt;int&gt;) {\n    mesh.indices = new Uint16List.fromList(jsonIndices);\n  }\n\n  return mesh;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "getAttrib",
            "type": "vector_math_geometry.VertexAttrib",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.MeshGeometry",
            "sig": "",
            "params": [
                {
                    "name": "name",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/MeshGeometry\/getAttrib.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">VertexAttrib getAttrib(String name) {\n  for (VertexAttrib attrib in attribs) {\n    if (attrib.name == name) {\n      return attrib;\n    }\n  }\n  return null;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "getViewForAttrib",
            "type": "vector_math_lists.VectorList<vector_math.Vector>",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.MeshGeometry",
            "sig": "",
            "params": [
                {
                    "name": "name",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/MeshGeometry\/getViewForAttrib.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">VectorList&lt;Vector&gt; getViewForAttrib(String name) {\n  for (VertexAttrib attrib in attribs) {\n    if (attrib.name == name) {\n      return attrib.getView(buffer);\n    }\n  }\n  return null;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "vector_math_lists.VectorList",
                "vector_math.Vector"
            ]
        },
        {
            "name": "MeshGeometry.resetAttribs",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.MeshGeometry",
            "sig": "",
            "params": [
                {
                    "name": "inputMesh",
                    "type": "vector_math_geometry.MeshGeometry",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "attributes",
                    "type": "dart:core.List<vector_math_geometry.VertexAttrib>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "vector_math_geometry.VertexAttrib"
                    ]
                }
            ],
            "isConstructor": true,
            "href": "vector_math_geometry\/MeshGeometry\/MeshGeometry.resetAttribs.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory MeshGeometry.resetAttribs(\n    MeshGeometry inputMesh, List&lt;VertexAttrib&gt; attributes) {\n  final MeshGeometry mesh = new MeshGeometry(inputMesh.length, attributes)\n    ..indices = inputMesh.indices;\n\n  \/\/ Copy over the attributes that were specified\n  for (VertexAttrib attrib in mesh.attribs) {\n    final VertexAttrib inputAttrib = inputMesh.getAttrib(attrib.name);\n    if (inputAttrib != null) {\n      if (inputAttrib.size != attrib.size ||\n          inputAttrib.type != attrib.type) {\n        throw new Exception(\n            \"Attributes size or type is mismatched: ${attrib.name}\");\n      }\n\n      final VectorList&lt;Vector&gt; inputView =\n          inputAttrib.getView(inputMesh.buffer);\n\n      \/\/ Copy [inputView] to a view from attrib\n      attrib.getView(mesh.buffer).copy(inputView);\n    }\n  }\n\n  return mesh;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toJson",
            "type": "dart:core.Map<dart:core.String<dart:core.Object>>",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.MeshGeometry",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "vector_math_geometry\/MeshGeometry\/toJson.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Map&lt;String, Object&gt; toJson() {\n  final Map&lt;String, Object&gt; r = &lt;String, Object&gt;{};\n  r['attributes'] = attribs;\n  r['indices'] = indices;\n  r['vertices'] = buffer;\n  return r;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "dart:core.Map",
                "dart:core.String",
                "dart:core.Object"
            ]
        }
    ],
    "props": [
        {
            "name": "attribs",
            "type": "dart:core.List<vector_math_geometry.VertexAttrib>",
            "types": [
                "dart:core.List",
                "vector_math_geometry.VertexAttrib"
            ],
            "desc": "",
            "memberOf": "vector_math_geometry.MeshGeometry",
            "isConstant": false,
            "href": "vector_math_geometry\/MeshGeometry\/attribs.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;VertexAttrib&gt; attribs\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "buffer",
            "type": "dart:typed_data.Float32List",
            "types": [],
            "desc": "",
            "memberOf": "vector_math_geometry.MeshGeometry",
            "isConstant": false,
            "href": "vector_math_geometry\/MeshGeometry\/buffer.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Float32List buffer\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "indices",
            "type": "dart:typed_data.Uint16List",
            "types": [],
            "desc": "",
            "memberOf": "vector_math_geometry.MeshGeometry",
            "isConstant": false,
            "href": "vector_math_geometry\/MeshGeometry\/indices.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Uint16List indices\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "length",
            "type": "dart:core.int",
            "types": [],
            "desc": "",
            "memberOf": "vector_math_geometry.MeshGeometry",
            "isConstant": false,
            "href": "vector_math_geometry\/MeshGeometry\/length.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int length\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "stride",
            "type": "dart:core.int",
            "types": [],
            "desc": "",
            "memberOf": "vector_math_geometry.MeshGeometry",
            "isConstant": false,
            "href": "vector_math_geometry\/MeshGeometry\/stride.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int stride\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "triangleVertexCount",
            "type": "dart:core.int",
            "types": [],
            "desc": "",
            "memberOf": "vector_math_geometry.MeshGeometry",
            "isConstant": false,
            "href": "vector_math_geometry\/MeshGeometry\/triangleVertexCount.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get triangleVertexCount =&gt; indices != null ? indices.length : length;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "vector_math_geometry\/MeshGeometry-class.html",
    "desc": "",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "MeshGeometry"
}