{
    "desc": "<p>An interface for material design chips that can be enabled and disabled.<\/p>\n<p>The defaults mentioned in the documentation for each attribute are what\nthe implementing classes typically use for defaults (but this class doesn't\nprovide or enforce them).<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/InputChip-class.html\">InputChip<\/a>, a chip that represents a complex piece of information, such\nas an entity (person, place, or thing) or conversational text, in a\ncompact form.<\/li>\n<li>\n<a href=\"material\/ChoiceChip-class.html\">ChoiceChip<\/a>, allows a single selection from a set of options. Choice\nchips contain related descriptive text or categories.<\/li>\n<li>\n<a href=\"material\/FilterChip-class.html\">FilterChip<\/a>, uses tags or descriptive words as a way to filter content.<\/li>\n<li><a href=\"https:\/\/material.io\/design\/components\/chips.html\">material.io\/design\/components\/chips.html<\/a><\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/DisabledChipAttributes-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.DisabledChipAttributes",
    "shortname": "DisabledChipAttributes",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [],
    "props": [
        {
            "desc": "<p>Color to be used for the chip's background indicating that it is disabled.<\/p>\n<p>The chip is disabled when <a href=\"material\/DisabledChipAttributes\/isEnabled.html\">isEnabled<\/a> is false, or all three of\n<a href=\"material\/SelectableChipAttributes\/onSelected.html\">SelectableChipAttributes.onSelected<\/a>, <a href=\"material\/TappableChipAttributes\/onPressed.html\">TappableChipAttributes.onPressed<\/a>,\nand <code>DeletableChipAttributes.onDelete<\/code> are null.<\/p>\n<p>It defaults to <a href=\"material\/Colors\/black38-constant.html\">Colors.black38<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Color get disabledColor;<\/code><\/pre>\n        ",
            "href": "material\/DisabledChipAttributes\/disabledColor.html",
            "name": "disabledColor",
            "isDeprecated": false,
            "type": "dart:ui.Color",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.DisabledChipAttributes",
            "params": []
        },
        {
            "desc": "<p>Whether or not this chip is enabled for input.<\/p>\n<p>If this is true, but all of the user action callbacks are null (i.e.\n<a href=\"material\/SelectableChipAttributes\/onSelected.html\">SelectableChipAttributes.onSelected<\/a>, <a href=\"material\/TappableChipAttributes\/onPressed.html\">TappableChipAttributes.onPressed<\/a>,\nand <code>DeletableChipAttributes.onDelete<\/code>), then the\ncontrol will still be shown as disabled.<\/p>\n<p>This is typically used if you want the chip to be disabled, but also show\na delete button.<\/p>\n<p>For classes which don't have this as a constructor argument, <a href=\"material\/DisabledChipAttributes\/isEnabled.html\">isEnabled<\/a>\nreturns true if their user action callback is set.<\/p>\n<p>Defaults to true. Cannot be null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isEnabled;<\/code><\/pre>\n        ",
            "href": "material\/DisabledChipAttributes\/isEnabled.html",
            "name": "isEnabled",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.DisabledChipAttributes",
            "params": []
        }
    ]
}