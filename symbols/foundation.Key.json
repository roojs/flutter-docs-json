{
    "name": "foundation.Key",
    "extends": [],
    "memberOf": "foundation",
    "events": [],
    "methods": [
        {
            "name": "Key",
            "type": "",
            "desc": "<p>Construct a <a href=\"foundation\/ValueKey-class.html\">ValueKey&lt;String&gt;<\/a> with the given <a href=\"dart-core\/String-class.html\">String<\/a>.<\/p>\n<p>This is the simplest way to create keys.<\/p>\n    ",
            "static": false,
            "memberOf": "foundation.Key",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "foundation\/Key\/Key.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const factory Key(String value) = ValueKey&lt;String&gt;;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "Key.empty",
            "type": "",
            "desc": "<p>Default constructor, used by subclasses.<\/p>\n<p>Useful so that subclasses can call us, because the <a href=\"foundation\/Key\/Key.html\">new Key<\/a> factory\nconstructor shadows the implicit constructor.<\/p>\n    ",
            "static": false,
            "memberOf": "foundation.Key",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "foundation\/Key\/Key.empty.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@protected\nconst Key.empty();<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "foundation.LocalKey",
        "foundation.ValueKey",
        "widgets.GlobalKey",
        "widgets.GlobalObjectKey",
        "widgets.LabeledGlobalKey",
        "widgets.ObjectKey",
        "widgets.PageStorageKey",
        "widgets.UniqueKey"
    ],
    "realImplementors": [],
    "cn": [],
    "href": "foundation\/Key-class.html",
    "desc": "<p>A <a href=\"foundation\/Key-class.html\">Key<\/a> is an identifier for <a href=\"widgets\/Widget-class.html\">Widget<\/a>s, <a href=\"widgets\/Element-class.html\">Element<\/a>s and <a href=\"semantics\/SemanticsNode-class.html\">SemanticsNode<\/a>s.<\/p>\n<p>A new widget will only be used to update an existing element if its key is\nthe same as the key of the current widget associated with the element.<\/p>\n<p>Keys must be unique amongst the <a href=\"widgets\/Element-class.html\">Element<\/a>s with the same parent.<\/p>\n<p>Subclasses of <a href=\"foundation\/Key-class.html\">Key<\/a> should either subclass <a href=\"foundation\/LocalKey-class.html\">LocalKey<\/a> or <a href=\"widgets\/GlobalKey-class.html\">GlobalKey<\/a>.<\/p>\n<p>See also the discussion at <a href=\"widgets\/Widget\/key.html\">Widget.key<\/a>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Key"
}