{
    "desc": "<p><a href=\"services\/MethodCodec-class.html\">MethodCodec<\/a> using the Flutter standard binary encoding.<\/p>\n<p>The standard codec is guaranteed to be compatible with the corresponding\nstandard codec for FlutterMethodChannels on the host platform. These parts\nof the Flutter SDK are evolved synchronously.<\/p>\n<p>Values supported as method arguments and result payloads are those supported\nby <a href=\"services\/StandardMessageCodec-class.html\">StandardMessageCodec<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "services\/StandardMethodCodec-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "services",
    "name": "services.StandardMethodCodec",
    "shortname": "StandardMethodCodec",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a <a href=\"services\/MethodCodec-class.html\">MethodCodec<\/a> using the Flutter standard binary encoding.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const StandardMethodCodec([this.messageCodec = const StandardMessageCodec()]);<\/code><\/pre>\n    ",
            "href": "services\/StandardMethodCodec\/StandardMethodCodec.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "services.StandardMethodCodec",
            "params": [
                {
                    "name": "messageCodec",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "services.StandardMessageCodec"
                }
            ]
        },
        {
            "desc": "<p>Decodes the specified result <code>envelope<\/code> from binary.<\/p>\n<p>Throws <a href=\"services\/PlatformException-class.html\">PlatformException<\/a>, if <code>envelope<\/code> represents an error, otherwise\nreturns the enveloped result.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndynamic decodeEnvelope(ByteData envelope) {\n  \/\/ First byte is zero in success case, and non-zero otherwise.\n  if (envelope.lengthInBytes == 0)\n    throw const FormatException('Expected envelope, got nothing');\n  final ReadBuffer buffer = ReadBuffer(envelope);\n  if (buffer.getUint8() == 0)\n    return messageCodec.readValue(buffer);\n  final dynamic errorCode = messageCodec.readValue(buffer);\n  final dynamic errorMessage = messageCodec.readValue(buffer);\n  final dynamic errorDetails = messageCodec.readValue(buffer);\n  if (errorCode is String &amp;&amp; (errorMessage == null || errorMessage is String) &amp;&amp; !buffer.hasRemaining)\n    throw PlatformException(code: errorCode, message: errorMessage, details: errorDetails);\n  else\n    throw const FormatException('Invalid envelope');\n}<\/code><\/pre>\n    ",
            "href": "services\/StandardMethodCodec\/decodeEnvelope.html",
            "isDeprecated": "0",
            "type": "<dynamic>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "services.StandardMethodCodec",
            "params": [
                {
                    "name": "envelope",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:typed_data.ByteData"
                }
            ]
        },
        {
            "desc": "<p>Decodes the specified <code>methodCall<\/code> from binary.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nMethodCall decodeMethodCall(ByteData methodCall) {\n  final ReadBuffer buffer = ReadBuffer(methodCall);\n  final dynamic method = messageCodec.readValue(buffer);\n  final dynamic arguments = messageCodec.readValue(buffer);\n  if (method is String &amp;&amp; !buffer.hasRemaining)\n    return MethodCall(method, arguments);\n  else\n    throw const FormatException('Invalid method call');\n}<\/code><\/pre>\n    ",
            "href": "services\/StandardMethodCodec\/decodeMethodCall.html",
            "isDeprecated": "0",
            "type": "services.MethodCall",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "services.StandardMethodCodec",
            "params": [
                {
                    "name": "methodCall",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:typed_data.ByteData"
                }
            ]
        },
        {
            "desc": "<p>Encodes an error result into a binary envelope.<\/p>\n<p>The specified error <code>code<\/code>, human-readable error <code>message<\/code>, and error\n<code>details<\/code> correspond to the fields of <a href=\"services\/PlatformException-class.html\">PlatformException<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nByteData encodeErrorEnvelope({ @required String code, String message, dynamic details }) {\n  final WriteBuffer buffer = WriteBuffer();\n  buffer.putUint8(1);\n  messageCodec.writeValue(buffer, code);\n  messageCodec.writeValue(buffer, message);\n  messageCodec.writeValue(buffer, details);\n  return buffer.done();\n}<\/code><\/pre>\n    ",
            "href": "services\/StandardMethodCodec\/encodeErrorEnvelope.html",
            "isDeprecated": "0",
            "type": "dart:typed_data.ByteData",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "services.StandardMethodCodec",
            "params": [
                {
                    "name": "code",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                },
                {
                    "name": "details",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<dynamic>"
                },
                {
                    "name": "message",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Encodes the specified <code>methodCall<\/code> into binary.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nByteData encodeMethodCall(MethodCall call) {\n  final WriteBuffer buffer = WriteBuffer();\n  messageCodec.writeValue(buffer, call.method);\n  messageCodec.writeValue(buffer, call.arguments);\n  return buffer.done();\n}<\/code><\/pre>\n    ",
            "href": "services\/StandardMethodCodec\/encodeMethodCall.html",
            "isDeprecated": "0",
            "type": "dart:typed_data.ByteData",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "services.StandardMethodCodec",
            "params": [
                {
                    "name": "call",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "services.MethodCall"
                }
            ]
        },
        {
            "desc": "<p>Encodes a successful <code>result<\/code> into a binary envelope.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nByteData encodeSuccessEnvelope(dynamic result) {\n  final WriteBuffer buffer = WriteBuffer();\n  buffer.putUint8(0);\n  messageCodec.writeValue(buffer, result);\n  return buffer.done();\n}<\/code><\/pre>\n    ",
            "href": "services\/StandardMethodCodec\/encodeSuccessEnvelope.html",
            "isDeprecated": "0",
            "type": "dart:typed_data.ByteData",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "services.StandardMethodCodec",
            "params": [
                {
                    "name": "result",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<dynamic>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The message codec that this method codec uses for encoding values.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final StandardMessageCodec messageCodec\n\n<\/code><\/pre>\n        ",
            "href": "services\/StandardMethodCodec\/messageCodec.html",
            "isDeprecated": "0",
            "type": "services.StandardMessageCodec",
            "memberOf": "services.StandardMethodCodec",
            "params": []
        }
    ]
}