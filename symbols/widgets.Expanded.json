{
    "name": "widgets.Expanded",
    "extends": [
        "widgets.Flexible",
        "widgets.Flex",
        "widgets.ParentDataWidget",
        "widgets.ProxyWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "Expanded",
            "type": "",
            "desc": "<p>Creates a widget that expands a child of a <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Flex-class.html\">Flex<\/a>\nexpand to fill the available space in the main axis.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.Expanded",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "flex",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "child",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/Expanded\/Expanded.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Expanded({\n  Key key,\n  int flex = 1,\n  @required Widget child,\n}) : super(key: key, flex: flex, fit: FlexFit.tight, child: child);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "widgets\/Expanded-class.html",
    "desc": "<p>A widget that expands a child of a <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Flex-class.html\">Flex<\/a>.<\/p>\n<p>Using an <a href=\"widgets\/Expanded-class.html\">Expanded<\/a> widget makes a child of a <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Flex-class.html\">Flex<\/a>\nexpand to fill the available space in the main axis (e.g., horizontally for\na <a href=\"widgets\/Row-class.html\">Row<\/a> or vertically for a <a href=\"widgets\/Column-class.html\">Column<\/a>). If multiple children are expanded,\nthe available space is divided among them according to the <a href=\"widgets\/Flexible\/flex.html\">flex<\/a> factor.<\/p>\n<p>An <a href=\"widgets\/Expanded-class.html\">Expanded<\/a> widget must be a descendant of a <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Flex-class.html\">Flex<\/a>,\nand the path from the <a href=\"widgets\/Expanded-class.html\">Expanded<\/a> widget to its enclosing <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or\n<a href=\"widgets\/Flex-class.html\">Flex<\/a> must contain only <a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>s or <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>s (not other\nkinds of widgets, like <a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a>s).<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <script>var visibleSnippet1 = \"shortSnippet1\";<\/script><button id=\"shortSnippet1Button\" onclick=\"visibleSnippet1 = showSnippet('shortSnippet1', visibleSnippet1);\" selected>Sample<\/button>\n  <button id=\"longSnippet1Button\" onclick=\"visibleSnippet1 = showSnippet('longSnippet1', visibleSnippet1);\">Sample in an App<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\" id=\"shortSnippet1\">\n    <div class=\"snippet-description\">\nThis example shows how to use an <a href=\"widgets\/Expanded-class.html\">Expanded<\/a> widget in a <a href=\"widgets\/Column-class.html\">Column<\/a> so that\nit's middle child, a <a href=\"widgets\/Container-class.html\">Container<\/a> here, expands to fill the space.\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(visibleSnippet1);\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Widget build(BuildContext context) {\n  return Scaffold(\n    appBar: AppBar(\n      title: Text('Expanded Column Sample'),\n    ),\n    body: Center(\n       child: Column(\n        children: &lt;Widget&gt;[\n          Container(\n            color: Colors.red,\n            height: 100,\n            width: 100,\n          ),\n          Expanded(\n            child: Container(\n              color: Colors.blue,\n              width: 100,\n            ),\n          ),\n          Container(\n            color: Colors.red,\n            height: 100,\n            width: 100,\n          ),\n        ],\n      ),\n    ),\n  );\n}<\/code><\/pre>\n    <\/div>\n  <\/div>\n  <div class=\"snippet\" id=\"longSnippet1\" hidden>\n    <div class=\"snippet-description\">To create a sample project with this code snippet, run:<br><span class=\"snippet-create-command\">flutter create --sample=widgets.Expanded.1 mysample<\/span>\n    <\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(visibleSnippet1);\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\"><code class=\"language-dart\">\/\/ Flutter code sample for widgets.Expanded.1\n\n\/\/ This example shows how to use an [Expanded] widget in a [Column] so that\n\/\/ it's middle child, a [Container] here, expands to fill the space.\n\nimport 'package:flutter\/material.dart';\n\nvoid main() =&gt; runApp(MyApp());\n\n\/\/\/ This Widget is the main application widget.\nclass MyApp extends StatelessWidget {\n  static const String _title = 'Flutter Code Sample';\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: _title,\n      home: MyStatelessWidget(),\n    );\n  }\n}\n\n\/\/\/ This is the stateless widget that the main application instantiates.\nclass MyStatelessWidget extends StatelessWidget {\n  MyStatelessWidget({Key key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Expanded Column Sample'),\n      ),\n      body: Center(\n        child: Column(\n          children: &lt;Widget&gt;[\n            Container(\n              color: Colors.red,\n              height: 100,\n              width: 100,\n            ),\n            Expanded(\n              child: Container(\n                color: Colors.blue,\n                width: 100,\n              ),\n            ),\n            Container(\n              color: Colors.red,\n              height: 100,\n              width: 100,\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <script>var visibleSnippet2 = \"shortSnippet2\";<\/script><button id=\"shortSnippet2Button\" onclick=\"visibleSnippet2 = showSnippet('shortSnippet2', visibleSnippet2);\" selected>Sample<\/button>\n  <button id=\"longSnippet2Button\" onclick=\"visibleSnippet2 = showSnippet('longSnippet2', visibleSnippet2);\">Sample in an App<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\" id=\"shortSnippet2\">\n    <div class=\"snippet-description\">\nThis example shows how to use an <a href=\"widgets\/Expanded-class.html\">Expanded<\/a> widget in a <a href=\"widgets\/Row-class.html\">Row<\/a> with multiple\nchildren expanded, utilizing the <a href=\"widgets\/Flexible\/flex.html\">flex<\/a> factor to prioritize available space.\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(visibleSnippet2);\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Widget build(BuildContext context) {\n  return Scaffold(\n    appBar: AppBar(\n      title: Text('Expanded Row Sample'),\n    ),\n    body: Center(\n      child: Row(\n        children: &lt;Widget&gt;[\n          Expanded(\n            flex: 2,\n            child: Container(\n              color: Colors.red,\n              height: 100,\n            ),\n          ),\n          Container(\n            color: Colors.blue,\n            height: 100,\n            width: 50,\n          ),\n          Expanded(\n            flex: 1,\n            child: Container(\n              color: Colors.red,\n              height: 100,\n            ),\n          ),\n        ],\n      ),\n    ),\n  );\n}<\/code><\/pre>\n    <\/div>\n  <\/div>\n  <div class=\"snippet\" id=\"longSnippet2\" hidden>\n    <div class=\"snippet-description\">To create a sample project with this code snippet, run:<br><span class=\"snippet-create-command\">flutter create --sample=widgets.Expanded.2 mysample<\/span>\n    <\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(visibleSnippet2);\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\"><code class=\"language-dart\">\/\/ Flutter code sample for widgets.Expanded.2\n\n\/\/ This example shows how to use an [Expanded] widget in a [Row] with multiple\n\/\/ children expanded, utilizing the [flex] factor to prioritize available space.\n\nimport 'package:flutter\/material.dart';\n\nvoid main() =&gt; runApp(MyApp());\n\n\/\/\/ This Widget is the main application widget.\nclass MyApp extends StatelessWidget {\n  static const String _title = 'Flutter Code Sample';\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: _title,\n      home: MyStatelessWidget(),\n    );\n  }\n}\n\n\/\/\/ This is the stateless widget that the main application instantiates.\nclass MyStatelessWidget extends StatelessWidget {\n  MyStatelessWidget({Key key}) : super(key: key);\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(\n        title: Text('Expanded Row Sample'),\n      ),\n      body: Center(\n        child: Row(\n          children: &lt;Widget&gt;[\n            Expanded(\n              flex: 2,\n              child: Container(\n                color: Colors.red,\n                height: 100,\n              ),\n            ),\n            Container(\n              color: Colors.blue,\n              height: 100,\n              width: 50,\n            ),\n            Expanded(\n              flex: 1,\n              child: Container(\n                color: Colors.red,\n                height: 100,\n              ),\n            ),\n          ],\n        ),\n      ),\n    );\n  }\n}<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/Flexible-class.html\">Flexible<\/a>, which does not force the child to fill the available space.<\/li>\n<li>\n<a href=\"widgets\/Spacer-class.html\">Spacer<\/a>, a widget that takes up space proportional to it's flex value.<\/li>\n<li>The <a href=\"https:\/\/flutter.io\/widgets\/layout\/\">catalog of layout widgets<\/a>.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Expanded"
}