{
    "name": "widgets.GlobalKey",
    "extends": [
        "foundation.Key",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "GlobalKey",
            "type": "",
            "desc": "<p>Creates a <a href=\"widgets\/LabeledGlobalKey-class.html\">LabeledGlobalKey<\/a>, which is a <a href=\"widgets\/GlobalKey-class.html\">GlobalKey<\/a> with a label used for\ndebugging.<\/p>\n<p>The label is purely for debugging and not used for comparing the identity\nof the key.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.GlobalKey",
            "sig": "",
            "params": [
                {
                    "name": "debugLabel",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/GlobalKey\/GlobalKey.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory GlobalKey({ String debugLabel }) =&gt; LabeledGlobalKey&lt;T&gt;(debugLabel);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "GlobalKey.constructor",
            "type": "",
            "desc": "<p>Creates a global key without a label.<\/p>\n<p>Used by subclasses because the factory constructor shadows the implicit\nconstructor.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.GlobalKey",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "widgets\/GlobalKey\/GlobalKey.constructor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const GlobalKey.constructor() : super.empty();<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "currentContext",
            "type": "widgets.BuildContext",
            "types": [],
            "desc": "<p>The build context in which the widget with this key builds.<\/p>\n<p>The current context is null if there is no widget in the tree that matches\nthis global key.<\/p>\n        ",
            "memberOf": "widgets.GlobalKey",
            "isConstant": false,
            "href": "widgets\/GlobalKey\/currentContext.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">BuildContext get currentContext =&gt; _currentElement;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "currentState",
            "type": "",
            "types": [],
            "desc": "<p>The <a href=\"widgets\/State-class.html\">State<\/a> for the widget in the tree that currently has this global key.<\/p>\n<p>The current state is null if (1) there is no widget in the tree that\nmatches this global key, (2) that widget is not a <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>, or the\nassociated <a href=\"widgets\/State-class.html\">State<\/a> object is not a subtype of <code>T<\/code>.<\/p>\n        ",
            "memberOf": "widgets.GlobalKey",
            "isConstant": false,
            "href": "widgets\/GlobalKey\/currentState.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">T get currentState {\n  final Element element = _currentElement;\n  if (element is StatefulElement) {\n    final StatefulElement statefulElement = element;\n    final State state = statefulElement.state;\n    if (state is T)\n      return state;\n  }\n  return null;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "currentWidget",
            "type": "widgets.Widget",
            "types": [],
            "desc": "<p>The widget in the tree that currently has this global key.<\/p>\n<p>The current widget is null if there is no widget in the tree that matches\nthis global key.<\/p>\n        ",
            "memberOf": "widgets.GlobalKey",
            "isConstant": false,
            "href": "widgets\/GlobalKey\/currentWidget.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Widget get currentWidget =&gt; _currentElement?.widget;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "widgets.GlobalObjectKey",
        "widgets.LabeledGlobalKey"
    ],
    "realImplementors": [
        "widgets.GlobalObjectKey",
        "widgets.LabeledGlobalKey"
    ],
    "cn": [],
    "href": "widgets\/GlobalKey-class.html",
    "desc": "<p>A key that is unique across the entire app.<\/p>\n<p>Global keys uniquely identify elements. Global keys provide access to other\nobjects that are associated with elements, such as the a <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> and,\nfor <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>s, a <a href=\"widgets\/State-class.html\">State<\/a>.<\/p>\n<p>Widgets that have global keys reparent their subtrees when they are moved\nfrom one location in the tree to another location in the tree. In order to\nreparent its subtree, a widget must arrive at its new location in the tree\nin the same animation frame in which it was removed from its old location in\nthe tree.<\/p>\n<p>Global keys are relatively expensive. If you don't need any of the features\nlisted above, consider using a <a href=\"foundation\/Key-class.html\">Key<\/a>, <a href=\"foundation\/ValueKey-class.html\">ValueKey<\/a>, <a href=\"widgets\/ObjectKey-class.html\">ObjectKey<\/a>, or\n<a href=\"widgets\/UniqueKey-class.html\">UniqueKey<\/a> instead.<\/p>\n<p>You cannot simultaneously include two widgets in the tree with the same\nglobal key. Attempting to do so will assert at runtime.<\/p>\n<p>See also the discussion at <a href=\"widgets\/Widget\/key.html\">Widget.key<\/a>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "GlobalKey"
}