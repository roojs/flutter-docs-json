{
    "desc": "<p>A base class for providing string and <a href=\"foundation\/DiagnosticsNode-class.html\">DiagnosticsNode<\/a> debug\nrepresentations describing the properties and children of an object.<\/p>\n<p>The string debug representation is generated from the intermediate\n<a href=\"foundation\/DiagnosticsNode-class.html\">DiagnosticsNode<\/a> representation. The <a href=\"foundation\/DiagnosticsNode-class.html\">DiagnosticsNode<\/a> representation is\nalso used by debugging tools displaying interactive trees of objects and\nproperties.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"foundation\/DiagnosticableTreeMixin-mixin.html\">DiagnosticableTreeMixin<\/a>, a mixin that implements this class.<\/li>\n<li>\n<a href=\"foundation\/Diagnosticable-class.html\">Diagnosticable<\/a>, which should be used instead of this class to provide\ndiagnostics for objects without children.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "foundation\/DiagnosticableTree-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "foundation",
    "name": "foundation.DiagnosticableTree",
    "shortname": "DiagnosticableTree",
    "extends": [
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [
        "cupertino.CupertinoActionSheet",
        "cupertino.CupertinoActionSheetAction",
        "cupertino.CupertinoActivityIndicator",
        "cupertino.CupertinoAlertDialog",
        "cupertino.CupertinoApp",
        "cupertino.CupertinoButton",
        "cupertino.CupertinoDatePicker",
        "cupertino.CupertinoDialog",
        "cupertino.CupertinoDialogAction",
        "cupertino.CupertinoFullscreenDialogTransition",
        "cupertino.CupertinoNavigationBar",
        "cupertino.CupertinoNavigationBarBackButton",
        "cupertino.CupertinoPageScaffold",
        "cupertino.CupertinoPageTransition",
        "cupertino.CupertinoPicker",
        "cupertino.CupertinoPopupSurface",
        "cupertino.CupertinoScrollbar",
        "cupertino.CupertinoSegmentedControl",
        "cupertino.CupertinoSlider",
        "cupertino.CupertinoSliverNavigationBar",
        "cupertino.CupertinoSliverRefreshControl",
        "cupertino.CupertinoSwitch",
        "cupertino.CupertinoTabBar",
        "cupertino.CupertinoTabScaffold",
        "cupertino.CupertinoTabView",
        "cupertino.CupertinoTextField",
        "cupertino.CupertinoTheme",
        "cupertino.CupertinoTimerPicker",
        "material.AboutDialog",
        "material.AboutListTile",
        "material.ActionChip",
        "material.AlertDialog",
        "material.AnimatedIcon",
        "material.AnimatedTheme",
        "material.AppBar",
        "material.BackButton",
        "material.BackButtonIcon",
        "material.BottomAppBar",
        "material.BottomNavigationBar",
        "material.BottomSheet",
        "material.ButtonBar",
        "material.ButtonTheme",
        "material.Card",
        "material.Checkbox",
        "material.CheckboxListTile",
        "material.CheckedPopupMenuItem",
        "material.Chip",
        "material.ChipTheme",
        "material.ChoiceChip",
        "material.CircleAvatar",
        "material.CircularProgressIndicator",
        "material.CloseButton",
        "material.DataTable",
        "material.DayPicker",
        "material.DefaultTabController",
        "material.Dialog",
        "material.Divider",
        "material.Drawer",
        "material.DrawerController",
        "material.DrawerHeader",
        "material.DropdownButton",
        "material.DropdownButtonFormField",
        "material.DropdownButtonHideUnderline",
        "material.DropdownMenuItem",
        "material.ExpandIcon",
        "material.ExpansionPanelList",
        "material.ExpansionTile",
        "material.FilterChip",
        "material.FlatButton",
        "material.FlexibleSpaceBar",
        "material.FlexibleSpaceBarSettings",
        "material.FloatingActionButton",
        "material.FlutterLogo",
        "material.GridTile",
        "material.GridTileBar",
        "material.IconButton",
        "material.Ink",
        "material.InkResponse",
        "material.InkWell",
        "material.InputChip",
        "material.InputDecorator",
        "material.LicensePage",
        "material.LinearProgressIndicator",
        "material.ListTile",
        "material.ListTileTheme",
        "material.Material",
        "material.MaterialApp",
        "material.MaterialButton",
        "material.MergeableMaterial",
        "material.MonthPicker",
        "material.OutlineButton",
        "material.PaginatedDataTable",
        "material.PopupMenuButton",
        "material.PopupMenuDivider",
        "material.PopupMenuItem",
        "material.Radio",
        "material.RadioListTile",
        "material.RaisedButton",
        "material.RawChip",
        "material.RawMaterialButton",
        "material.RefreshIndicator",
        "material.RefreshProgressIndicator",
        "material.ReorderableListView",
        "material.Scaffold",
        "material.Scrollbar",
        "material.SimpleDialog",
        "material.SimpleDialogOption",
        "material.Slider",
        "material.SliderTheme",
        "material.SliverAppBar",
        "material.SnackBar",
        "material.SnackBarAction",
        "material.Stepper",
        "material.Switch",
        "material.SwitchListTile",
        "material.Tab",
        "material.TabBar",
        "material.TabBarView",
        "material.TabPageSelector",
        "material.TabPageSelectorIndicator",
        "material.TableRowInkWell",
        "material.TextField",
        "material.TextFormField",
        "material.Theme",
        "material.Tooltip",
        "material.UserAccountsDrawerHeader",
        "material.VerticalDivider",
        "material.YearPicker",
        "painting.TextSpan",
        "semantics.SemanticsHintOverrides",
        "semantics.SemanticsProperties",
        "widgets.AbsorbPointer",
        "widgets.Align",
        "widgets.AlignTransition",
        "widgets.AndroidView",
        "widgets.AnimatedAlign",
        "widgets.AnimatedBuilder",
        "widgets.AnimatedContainer",
        "widgets.AnimatedCrossFade",
        "widgets.AnimatedDefaultTextStyle",
        "widgets.AnimatedList",
        "widgets.AnimatedModalBarrier",
        "widgets.AnimatedOpacity",
        "widgets.AnimatedPadding",
        "widgets.AnimatedPhysicalModel",
        "widgets.AnimatedPositioned",
        "widgets.AnimatedPositionedDirectional",
        "widgets.AnimatedSize",
        "widgets.AnimatedSwitcher",
        "widgets.AnnotatedRegion",
        "widgets.AspectRatio",
        "widgets.AutomaticKeepAlive",
        "widgets.BackdropFilter",
        "widgets.Banner",
        "widgets.Baseline",
        "widgets.BlockSemantics",
        "widgets.Builder",
        "widgets.Center",
        "widgets.CheckedModeBanner",
        "widgets.ClipOval",
        "widgets.ClipPath",
        "widgets.ClipRRect",
        "widgets.ClipRect",
        "widgets.Column",
        "widgets.CompositedTransformFollower",
        "widgets.CompositedTransformTarget",
        "widgets.ConstrainedBox",
        "widgets.Container",
        "widgets.CustomMultiChildLayout",
        "widgets.CustomPaint",
        "widgets.CustomScrollView",
        "widgets.CustomSingleChildLayout",
        "widgets.DecoratedBox",
        "widgets.DecoratedBoxTransition",
        "widgets.DefaultAssetBundle",
        "widgets.DefaultTextStyle",
        "widgets.DefaultTextStyleTransition",
        "widgets.Directionality",
        "widgets.Dismissible",
        "widgets.DragTarget",
        "widgets.Draggable",
        "widgets.EditableText",
        "widgets.ErrorWidget",
        "widgets.ExcludeSemantics",
        "widgets.Expanded",
        "widgets.FadeInImage",
        "widgets.FadeTransition",
        "widgets.FittedBox",
        "widgets.Flex",
        "widgets.Flexible",
        "widgets.Flow",
        "widgets.FocusScope",
        "widgets.Form",
        "widgets.FormField",
        "widgets.FractionalTranslation",
        "widgets.FractionallySizedBox",
        "widgets.FutureBuilder",
        "widgets.GestureDetector",
        "widgets.GlowingOverscrollIndicator",
        "widgets.GridPaper",
        "widgets.GridView",
        "widgets.Hero",
        "widgets.Icon",
        "widgets.IconTheme",
        "widgets.IgnorePointer",
        "widgets.Image",
        "widgets.ImageIcon",
        "widgets.IndexedSemantics",
        "widgets.IndexedStack",
        "widgets.InheritedElement",
        "widgets.InheritedModelElement",
        "widgets.IntrinsicHeight",
        "widgets.IntrinsicWidth",
        "widgets.KeepAlive",
        "widgets.KeyedSubtree",
        "widgets.LayoutBuilder",
        "widgets.LayoutId",
        "widgets.LeafRenderObjectElement",
        "widgets.LimitedBox",
        "widgets.ListBody",
        "widgets.ListView",
        "widgets.ListWheelElement",
        "widgets.ListWheelScrollView",
        "widgets.ListWheelViewport",
        "widgets.Listener",
        "widgets.Localizations",
        "widgets.LongPressDraggable",
        "widgets.MediaQuery",
        "widgets.MergeSemantics",
        "widgets.MetaData",
        "widgets.ModalBarrier",
        "widgets.MultiChildRenderObjectElement",
        "widgets.NavigationToolbar",
        "widgets.Navigator",
        "widgets.NestedScrollView",
        "widgets.NestedScrollViewViewport",
        "widgets.NotificationListener",
        "widgets.Offstage",
        "widgets.Opacity",
        "widgets.OrientationBuilder",
        "widgets.OverflowBox",
        "widgets.Overlay",
        "widgets.Padding",
        "widgets.PageStorage",
        "widgets.PageView",
        "widgets.ParentDataElement",
        "widgets.PerformanceOverlay",
        "widgets.PhysicalModel",
        "widgets.PhysicalShape",
        "widgets.Placeholder",
        "widgets.Positioned",
        "widgets.PositionedDirectional",
        "widgets.PositionedTransition",
        "widgets.PreferredSize",
        "widgets.PrimaryScrollController",
        "widgets.RawGestureDetector",
        "widgets.RawImage",
        "widgets.RawKeyboardListener",
        "widgets.RelativePositionedTransition",
        "widgets.RenderObjectToWidgetAdapter",
        "widgets.RenderObjectToWidgetElement",
        "widgets.RepaintBoundary",
        "widgets.RichText",
        "widgets.RotatedBox",
        "widgets.RotationTransition",
        "widgets.Row",
        "widgets.SafeArea",
        "widgets.ScaleTransition",
        "widgets.ScrollConfiguration",
        "widgets.Scrollable",
        "widgets.Semantics",
        "widgets.SemanticsDebugger",
        "widgets.ShaderMask",
        "widgets.ShrinkWrappingViewport",
        "widgets.SingleChildRenderObjectElement",
        "widgets.SingleChildScrollView",
        "widgets.SizeChangedLayoutNotifier",
        "widgets.SizeTransition",
        "widgets.SizedBox",
        "widgets.SizedOverflowBox",
        "widgets.SlideTransition",
        "widgets.SliverFillRemaining",
        "widgets.SliverFillViewport",
        "widgets.SliverFixedExtentList",
        "widgets.SliverGrid",
        "widgets.SliverList",
        "widgets.SliverMultiBoxAdaptorElement",
        "widgets.SliverOverlapAbsorber",
        "widgets.SliverOverlapInjector",
        "widgets.SliverPadding",
        "widgets.SliverPersistentHeader",
        "widgets.SliverPrototypeExtentList",
        "widgets.SliverSafeArea",
        "widgets.SliverToBoxAdapter",
        "widgets.Spacer",
        "widgets.Stack",
        "widgets.StatefulBuilder",
        "widgets.StatefulElement",
        "widgets.StatelessElement",
        "widgets.StreamBuilder",
        "widgets.Table",
        "widgets.TableCell",
        "widgets.Text",
        "widgets.TextSelectionGestureDetector",
        "widgets.Texture",
        "widgets.TickerMode",
        "widgets.Title",
        "widgets.Transform",
        "widgets.UiKitView",
        "widgets.UnconstrainedBox",
        "widgets.ValueListenableBuilder",
        "widgets.Viewport",
        "widgets.Visibility",
        "widgets.WidgetInspector",
        "widgets.WidgetToRenderBoxAdapter",
        "widgets.WidgetsApp",
        "widgets.WillPopScope",
        "widgets.Wrap"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const DiagnosticableTree();<\/code><\/pre>\n    ",
            "href": "foundation\/DiagnosticableTree\/DiagnosticableTree.html",
            "isDeprecated": false,
            "type": "",
            "name": "DiagnosticableTree",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "foundation.DiagnosticableTree",
            "params": []
        },
        {
            "desc": "<p>Returns a list of <a href=\"foundation\/DiagnosticsNode-class.html\">DiagnosticsNode<\/a> objects describing this node's\nchildren.<\/p>\n<p>Children that are offstage should be added with <code>style<\/code> set to\n<a href=\"foundation\/DiagnosticsTreeStyle-class.html\">DiagnosticsTreeStyle.offstage<\/a> to indicate that they are offstage.<\/p>\n<p>The list must not contain any null entries. If there are explicit null\nchildren to report, consider <a href=\"foundation\/DiagnosticsNode\/DiagnosticsNode.message.html\">new DiagnosticsNode.message<\/a> or\n<a href=\"foundation\/DiagnosticsProperty-class.html\">DiagnosticsProperty&lt;Object&gt;<\/a> as possible <a href=\"foundation\/DiagnosticsNode-class.html\">DiagnosticsNode<\/a> objects to\nprovide.<\/p>\n<p>Used by <a href=\"foundation\/DiagnosticableTree\/toStringDeep.html\">toStringDeep<\/a>, <a href=\"foundation\/DiagnosticableTree\/toDiagnosticsNode.html\">toDiagnosticsNode<\/a> and <a href=\"foundation\/DiagnosticableTree\/toStringShallow.html\">toStringShallow<\/a>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"foundation\/DiagnosticableTree\/debugDescribeChildren.html\">RenderTable.debugDescribeChildren<\/a>, which provides high quality custom\ndescriptions for its child nodes.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@protected\nList&lt;DiagnosticsNode&gt; debugDescribeChildren() =&gt; const &lt;DiagnosticsNode&gt;[];<\/code><\/pre>\n    ",
            "href": "foundation\/DiagnosticableTree\/debugDescribeChildren.html",
            "isDeprecated": false,
            "type": "dart:core.List<foundation.DiagnosticsNode>",
            "name": "debugDescribeChildren",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "foundation.DiagnosticableTree",
            "params": []
        },
        {
            "desc": "<p>Returns a debug representation of the object that is used by debugging\ntools and by <a href=\"foundation\/DiagnosticableTree\/toStringDeep.html\">DiagnosticsNode.toStringDeep<\/a>.<\/p>\n<p>Leave <code>name<\/code> as null if there is not a meaningful description of the\nrelationship between the this node and its parent.<\/p>\n<p>Typically the <code>style<\/code> argument is only specified to indicate an atypical\nrelationship between the parent and the node. For example, pass\n<a href=\"foundation\/DiagnosticsTreeStyle-class.html\">DiagnosticsTreeStyle.offstage<\/a> to indicate that a node is offstage.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nDiagnosticsNode toDiagnosticsNode({ String name, DiagnosticsTreeStyle style }) {\n  return _DiagnosticableTreeNode(\n    name: name,\n    value: this,\n    style: style,\n  );\n}<\/code><\/pre>\n    ",
            "href": "foundation\/DiagnosticableTree\/toDiagnosticsNode.html",
            "isDeprecated": false,
            "type": "foundation.DiagnosticsNode",
            "name": "toDiagnosticsNode",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "foundation.DiagnosticableTree",
            "params": [
                {
                    "name": "name",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.String"
                },
                {
                    "name": "style",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "foundation.DiagnosticsTreeStyle"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this node and its descendants.<\/p>\n<p><code>prefixLineOne<\/code> will be added to the front of the first line of the\noutput. <code>prefixOtherLines<\/code> will be added to the front of each other line.\nIf <code>prefixOtherLines<\/code> is null, the <code>prefixLineOne<\/code> is used for every line.\nBy default, there is no prefix.<\/p>\n<p><code>minLevel<\/code> specifies the minimum <a href=\"foundation\/DiagnosticLevel-class.html\">DiagnosticLevel<\/a> for properties included\nin the output.<\/p>\n<p>The <a href=\"foundation\/DiagnosticableTree\/toStringDeep.html\">toStringDeep<\/a> method takes other arguments, but those are intended\nfor internal use when recursing to the descendants, and so can be ignored.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"foundation\/Diagnosticable\/toString.html\">toString<\/a>, for a brief description of the object but not its children.<\/li>\n<li>\n<a href=\"foundation\/DiagnosticableTree\/toStringShallow.html\">toStringShallow<\/a>, for a detailed description of the object but not its\nchildren.<\/li>\n<\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toStringDeep({\n  String prefixLineOne = '',\n  String prefixOtherLines,\n  DiagnosticLevel minLevel = DiagnosticLevel.debug,\n}) {\n  return toDiagnosticsNode().toStringDeep(prefixLineOne: prefixLineOne, prefixOtherLines: prefixOtherLines, minLevel: minLevel);\n}<\/code><\/pre>\n    ",
            "href": "foundation\/DiagnosticableTree\/toStringDeep.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toStringDeep",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "foundation.DiagnosticableTree",
            "params": [
                {
                    "name": "minLevel",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "foundation.DiagnosticLevel"
                },
                {
                    "name": "prefixLineOne",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.String"
                },
                {
                    "name": "prefixOtherLines",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Returns a one-line detailed description of the object.<\/p>\n<p>This description is often somewhat long. This includes the same\ninformation given by <a href=\"foundation\/DiagnosticableTree\/toStringDeep.html\">toStringDeep<\/a>, but does not recurse to any children.<\/p>\n<p><code>joiner<\/code> specifies the string which is place between each part obtained\nfrom <a href=\"foundation\/Diagnosticable\/debugFillProperties.html\">debugFillProperties<\/a>. Passing a string such as <code>'\\n '<\/code> will result\nin a multi-line string that indents the properties of the object below its\nname (as per <a href=\"foundation\/Diagnosticable\/toString.html\">toString<\/a>).<\/p>\n<p><code>minLevel<\/code> specifies the minimum <a href=\"foundation\/DiagnosticLevel-class.html\">DiagnosticLevel<\/a> for properties included\nin the output.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"foundation\/Diagnosticable\/toString.html\">toString<\/a>, for a brief description of the object.<\/li>\n<li>\n<a href=\"foundation\/DiagnosticableTree\/toStringDeep.html\">toStringDeep<\/a>, for a description of the subtree rooted at this object.<\/li>\n<\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toStringShallow({\n  String joiner = ', ',\n  DiagnosticLevel minLevel = DiagnosticLevel.debug,\n}) {\n  final StringBuffer result = StringBuffer();\n  result.write(toString());\n  result.write(joiner);\n  final DiagnosticPropertiesBuilder builder = DiagnosticPropertiesBuilder();\n  debugFillProperties(builder);\n  result.write(\n    builder.properties.where((DiagnosticsNode n) =&gt; !n.isFiltered(minLevel)).join(joiner),\n  );\n  return result.toString();\n}<\/code><\/pre>\n    ",
            "href": "foundation\/DiagnosticableTree\/toStringShallow.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toStringShallow",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "foundation.DiagnosticableTree",
            "params": [
                {
                    "name": "joiner",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.String"
                },
                {
                    "name": "minLevel",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "foundation.DiagnosticLevel"
                }
            ]
        },
        {
            "desc": "<p>A brief description of this object, usually just the <a href=\"dart-core\/Object\/runtimeType.html\">runtimeType<\/a> and the\n<a href=\"dart-core\/Object\/hashCode.html\">hashCode<\/a>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"foundation\/Diagnosticable\/toString.html\">toString<\/a>, for a detailed description of the object.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toStringShort() =&gt; describeIdentity(this);<\/code><\/pre>\n    ",
            "href": "foundation\/DiagnosticableTree\/toStringShort.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toStringShort",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "foundation.DiagnosticableTree",
            "params": []
        }
    ],
    "props": []
}