{
    "name": "material.RoundSliderThumbShape",
    "extends": [
        "material.SliderComponentShape",
        "dart:core.Object"
    ],
    "memberOf": "material",
    "events": [],
    "methods": [
        {
            "name": "RoundSliderThumbShape",
            "type": "",
            "desc": "<p>Create a slider thumb that draws a circle.<\/p>\n    ",
            "static": false,
            "memberOf": "material.RoundSliderThumbShape",
            "sig": "",
            "params": [
                {
                    "name": "enabledThumbRadius",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "disabledThumbRadius",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "material\/RoundSliderThumbShape\/RoundSliderThumbShape.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">\/\/ TODO(clocksmith): This needs to be changed to 10 according to spec.\nconst RoundSliderThumbShape({\n  this.enabledThumbRadius = 6.0,\n  this.disabledThumbRadius,\n});<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "getPreferredSize",
            "type": "dart:ui.Size",
            "desc": "<p>Returns the preferred size of the shape, based on the given conditions.<\/p>\n    ",
            "static": false,
            "memberOf": "material.RoundSliderThumbShape",
            "sig": "",
            "params": [
                {
                    "name": "isEnabled",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "isDiscrete",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "material\/RoundSliderThumbShape\/getPreferredSize.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nSize getPreferredSize(bool isEnabled, bool isDiscrete) {\n  return Size.fromRadius(isEnabled ? enabledThumbRadius : _disabledThumbRadius);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "paint",
            "type": "",
            "desc": "<p>Paints the shape, taking into account the state passed to it.<\/p>\n<p><code>context<\/code> is the same context for the render box of the <a href=\"material\/Slider-class.html\">Slider<\/a>.<\/p>\n<p><code>center<\/code> is the offset of the center where this shape should be painted.\nThis offset is relative to the origin of the <code>context<\/code> canvas.<\/p>\n<p><code>activationAnimation<\/code> is an animation triggered when the user beings\nto interact with the slider. It reverses when the user stops interacting\nwith the slider.<\/p>\n<p><code>enableAnimation<\/code> is an animation triggered when the <a href=\"material\/Slider-class.html\">Slider<\/a> is enabled,\nand it reverses when the slider is disabled. Enabled is the\n<code>Slider.isInteractive<\/code> state. Use this to paint intermediate frames for\nthis shape when the slider changes enabled state.<\/p>\n<p><code>isDiscrete<\/code> is true if <a href=\"material\/Slider\/divisions.html\">Slider.divisions<\/a> is non-null. If true, the\nslider will render tick marks on top of the track.<\/p>\n<p>If <code>labelPainter<\/code> is non-null, then <code>labelPainter.paint<\/code> should be\ncalled with the location that the label should appear. If the labelPainter\npassed is null, then no label was supplied to the <a href=\"material\/Slider-class.html\">Slider<\/a>.<\/p>\n<p><code>parentBox<\/code> is the <a href=\"rendering\/RenderBox-class.html\">RenderBox<\/a> of the <a href=\"material\/Slider-class.html\">Slider<\/a>. Its attributes, such as\nsize, can be used to assist in painting this shape.<\/p>\n<p><code>sliderTheme<\/code> is the theme assigned to the <a href=\"material\/Slider-class.html\">Slider<\/a> that this shape\nbelongs to.<\/p>\n<p><code>textDirection<\/code> can be used to determine how any extra text or graphics,\nbesides the text painted by the <code>labelPainter<\/code> should be positioned. The\n<code>labelPainter<\/code> already has the <code>textDirection<\/code> set.<\/p>\n<p><code>value<\/code> is the current parametric value (from 0.0 to 1.0) of the slider.<\/p>\n    ",
            "static": false,
            "memberOf": "material.RoundSliderThumbShape",
            "sig": "",
            "params": [
                {
                    "name": "context",
                    "type": "rendering.PaintingContext",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "center",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "activationAnimation",
                    "type": "animation.Animation<dart:core.double>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "animation.Animation",
                        "dart:core.double"
                    ]
                },
                {
                    "name": "enableAnimation",
                    "type": "animation.Animation<dart:core.double>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "animation.Animation",
                        "dart:core.double"
                    ]
                },
                {
                    "name": "isDiscrete",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "labelPainter",
                    "type": "painting.TextPainter",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "parentBox",
                    "type": "rendering.RenderBox",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "sliderTheme",
                    "type": "material.SliderThemeData",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textDirection",
                    "type": "dart:ui.TextDirection",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "value",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "material\/RoundSliderThumbShape\/paint.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid paint(\n  PaintingContext context,\n  Offset center, {\n  Animation&lt;double&gt; activationAnimation,\n  Animation&lt;double&gt; enableAnimation,\n  bool isDiscrete,\n  TextPainter labelPainter,\n  RenderBox parentBox,\n  SliderThemeData sliderTheme,\n  TextDirection textDirection,\n  double value,\n}) {\n  final Canvas canvas = context.canvas;\n  final Tween&lt;double&gt; radiusTween = Tween&lt;double&gt;(\n    begin: _disabledThumbRadius,\n    end: enabledThumbRadius,\n  );\n  final ColorTween colorTween = ColorTween(\n    begin: sliderTheme.disabledThumbColor,\n    end: sliderTheme.thumbColor,\n  );\n  canvas.drawCircle(\n    center,\n    radiusTween.evaluate(enableAnimation),\n    Paint()..color = colorTween.evaluate(enableAnimation),\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "disabledThumbRadius",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The preferred radius of the round thumb shape when the slider is disabled.<\/p>\n<p>If no disabledRadius is provided, then it is is derived from the enabled\nthumb radius and has the same ratio of enabled size to disabled size as\nthe Material spec. The default resolves to 4, which is 2 \/ 3 of the\ndefault enabled thumb.<\/p>\n        ",
            "memberOf": "material.RoundSliderThumbShape",
            "isConstant": false,
            "href": "material\/RoundSliderThumbShape\/disabledThumbRadius.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double disabledThumbRadius\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "enabledThumbRadius",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The preferred radius of the round thumb shape when the slider is enabled.<\/p>\n<p>If it is not provided, then the material default is used.<\/p>\n        ",
            "memberOf": "material.RoundSliderThumbShape",
            "isConstant": false,
            "href": "material\/RoundSliderThumbShape\/enabledThumbRadius.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double enabledThumbRadius\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "material\/RoundSliderThumbShape-class.html",
    "desc": "<p>This is the default shape of a <a href=\"material\/Slider-class.html\">Slider<\/a>'s thumb.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/Slider-class.html\">Slider<\/a>, which includes a thumb defined by this shape.<\/li>\n<li>\n<a href=\"material\/SliderTheme-class.html\">SliderTheme<\/a>, which can be used to configure the thumb shape of all\nsliders in a widget subtree.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "RoundSliderThumbShape"
}