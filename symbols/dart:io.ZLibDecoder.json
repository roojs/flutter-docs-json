{
    "desc": "<p>The <a href=\"dart-io\/ZLibDecoder-class.html\">ZLibDecoder<\/a> is used by <a href=\"dart-io\/ZLibCodec-class.html\">ZLibCodec<\/a> and <a href=\"dart-io\/GZipCodec-class.html\">GZipCodec<\/a> to decompress data.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-io\/ZLibDecoder-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:io",
    "name": "dart:io.ZLibDecoder",
    "shortname": "ZLibDecoder",
    "extends": [
        "dart:core.int",
        "dart:core.List",
        "dart:core.int",
        "dart:core.List",
        "dart:convert.Converter",
        "dart:core.int",
        "dart:core.List",
        "dart:core.int",
        "dart:core.List",
        "dart:async.StreamTransformerBase",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ZLibDecoder(\n    {this.windowBits: ZLibOption.defaultWindowBits,\n    this.dictionary,\n    this.raw: false}) {\n  _validateZLibWindowBits(windowBits);\n}<\/code><\/pre>\n    ",
            "href": "dart-io\/ZLibDecoder\/ZLibDecoder.html",
            "isDeprecated": "0",
            "type": "",
            "name": "ZLibDecoder",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:io.ZLibDecoder",
            "params": [
                {
                    "name": "dictionary",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.List<dart:core.int>"
                },
                {
                    "name": "raw",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "windowBits",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Convert a list of bytes using the options given to the <a href=\"dart-io\/ZLibDecoder-class.html\">ZLibDecoder<\/a>\nconstructor.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;int&gt; convert(List&lt;int&gt; bytes) {\n  _BufferSink sink = new _BufferSink();\n  startChunkedConversion(sink)\n    ..add(bytes)\n    ..close();\n  return sink.builder.takeBytes();\n}<\/code><\/pre>\n    ",
            "href": "dart-io\/ZLibDecoder\/convert.html",
            "isDeprecated": "0",
            "type": "dart:core.List<dart:core.int>",
            "name": "convert",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.ZLibDecoder",
            "params": [
                {
                    "name": "bytes",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.int>"
                }
            ]
        },
        {
            "desc": "<p>Start a chunked conversion. While it accepts any <a href=\"dart-core\/Sink-class.html\">Sink<\/a>\ntaking <a href=\"dart-core\/List-class.html\">List&lt;int&gt;<\/a>'s, the optimal sink to be passed as <code>sink<\/code> is a\n<a href=\"dart-convert\/ByteConversionSink-class.html\">ByteConversionSink<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ByteConversionSink startChunkedConversion(Sink&lt;List&lt;int&gt;&gt; sink) {\n  if (sink is! ByteConversionSink) {\n    sink = new ByteConversionSink.from(sink);\n  }\n  return new _ZLibDecoderSink(sink, windowBits, dictionary, raw);\n}<\/code><\/pre>\n    ",
            "href": "dart-io\/ZLibDecoder\/startChunkedConversion.html",
            "isDeprecated": "0",
            "type": "dart:convert.ByteConversionSink",
            "name": "startChunkedConversion",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.ZLibDecoder",
            "params": [
                {
                    "name": "sink",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Sink<dart:core.List<dart:core.int>>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Initial compression dictionary.<\/p>\n<p>It should consist of strings (byte sequences) that are likely to be\nencountered later in the data to be compressed, with the most commonly used\nstrings preferably put towards the end of the dictionary. Using a\ndictionary is most useful when the data to be compressed is short and can\nbe predicted with good accuracy; the data can then be compressed better\nthan with the default empty dictionary.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;int&gt; dictionary\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/ZLibDecoder\/dictionary.html",
            "name": "dictionary",
            "isDeprecated": false,
            "type": "dart:core.List<dart:core.int>",
            "memberOf": "dart:io.ZLibDecoder",
            "params": []
        },
        {
            "desc": "<p>When true, deflate generates raw data with no zlib header or trailer, and\nwill not compute an adler32 check value<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool raw\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/ZLibDecoder\/raw.html",
            "name": "raw",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "dart:io.ZLibDecoder",
            "params": []
        },
        {
            "desc": "<p>Base two logarithm of the window size (the size of the history buffer). It\nshould be in the range <code>8..15<\/code>. Larger values result in better compression\nat the expense of memory usage. The default value is <code>15<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int windowBits\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/ZLibDecoder\/windowBits.html",
            "name": "windowBits",
            "isDeprecated": false,
            "type": "dart:core.int",
            "memberOf": "dart:io.ZLibDecoder",
            "params": []
        }
    ]
}