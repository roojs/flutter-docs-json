{
    "desc": "<p>Service used by GUI tools to interact with the <a href=\"widgets\/WidgetInspector-class.html\">WidgetInspector<\/a>.<\/p>\n<p>Calls to this object are typically made from GUI tools such as the <a href=\"https:\/\/github.com\/flutter\/flutter-intellij\/blob\/master\/README.md\">Flutter\nIntelliJ Plugin<\/a>\nusing the <a href=\"https:\/\/github.com\/dart-lang\/sdk\/blob\/master\/runtime\/vm\/service\/service.md\">Dart VM Service protocol<\/a>.\nThis class uses its own object id and manages object lifecycles itself\ninstead of depending on the <a href=\"https:\/\/github.com\/dart-lang\/sdk\/blob\/master\/runtime\/vm\/service\/service.md#getobject\">object ids<\/a>\nspecified by the VM Service Protocol because the VM Service Protocol ids\nexpire unpredictably. Object references are tracked in groups so that tools\nthat clients can use dereference all objects in a group with a single\noperation making it easier to avoid memory leaks.<\/p>\n<p>All methods in this class are appropriate to invoke from debugging tools\nusing the Observatory service protocol to evaluate Dart expressions of the\nform <code>WidgetInspectorService.instance.methodName(arg1, arg2, ...)<\/code>. If you\nmake changes to any instance method of this class you need to verify that\nthe <a href=\"https:\/\/github.com\/flutter\/flutter-intellij\/blob\/master\/README.md\">Flutter IntelliJ Plugin<\/a>\nwidget inspector support still works with the changes.<\/p>\n<p>All methods returning String values return JSON.<\/p>\n    ",
    "dtype": "mixin",
    "example": "",
    "href": "widgets\/WidgetInspectorService-mixin.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "widgets",
    "name": "widgets.WidgetInspectorService",
    "shortname": "WidgetInspectorService",
    "extends": [],
    "is_enum": false,
    "is_mixin": true,
    "realImplementors": [],
    "events": [],
    "methods": [],
    "props": []
}