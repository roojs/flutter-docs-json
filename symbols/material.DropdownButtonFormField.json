{
    "desc": "<p>A convenience widget that wraps a <a href=\"material\/DropdownButton-class.html\">DropdownButton<\/a> in a <a href=\"widgets\/FormField-class.html\">FormField<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "material\/DropdownButtonFormField-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.DropdownButtonFormField",
    "shortname": "DropdownButtonFormField",
    "extends": [
        "widgets.FormField",
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [
        {
            "desc": "<p>Called when the user selects an item.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueChanged&lt;T&gt; onChanged\n\n<\/code><\/pre>\n        ",
            "href": "material\/DropdownButtonFormField\/onChanged.html",
            "isDeprecated": "0",
            "type": "foundation.ValueChanged",
            "memberOf": "material.DropdownButtonFormField",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a <a href=\"material\/DropdownButton-class.html\">DropdownButton<\/a> widget wrapped in an <a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a> and\n<a href=\"widgets\/FormField-class.html\">FormField<\/a>.<\/p>\n<p>The <a href=\"material\/DropdownButton-class.html\">DropdownButton<\/a> <code>items<\/code> parameters must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">DropdownButtonFormField({\n  Key key,\n  T value,\n  @required List&lt;DropdownMenuItem&lt;T&gt;&gt; items,\n  this.onChanged,\n  InputDecoration decoration = const InputDecoration(),\n  FormFieldSetter&lt;T&gt; onSaved,\n  FormFieldValidator&lt;T&gt; validator,\n  Widget hint,\n}) : assert(decoration != null),\n     super(\n       key: key,\n       onSaved: onSaved,\n       initialValue: value,\n       validator: validator,\n       builder: (FormFieldState&lt;T&gt; field) {\n         final InputDecoration effectiveDecoration = decoration\n           .applyDefaults(Theme.of(field.context).inputDecorationTheme);\n         return InputDecorator(\n           decoration: effectiveDecoration.copyWith(errorText: field.errorText),\n           isEmpty: value == null,\n           child: DropdownButtonHideUnderline(\n             child: DropdownButton&lt;T&gt;(\n               isDense: true,\n               value: value,\n               items: items,\n               hint: hint,\n               onChanged: field.didChange,\n             ),\n           ),\n         );\n       }\n     );<\/code><\/pre>\n    ",
            "href": "material\/DropdownButtonFormField\/DropdownButtonFormField.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.DropdownButtonFormField",
            "params": [
                {
                    "name": "decoration",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "material.InputDecoration"
                },
                {
                    "name": "hint",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "items",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<material.DropdownMenuItem>"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "onChanged",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.ValueChanged"
                },
                {
                    "name": "onSaved",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.FormFieldSetter"
                },
                {
                    "name": "validator",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.FormFieldValidator"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "<T>"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/DropdownButtonFormField\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nFormFieldState&lt;T&gt; createState() =&gt; _DropdownButtonFormFieldState&lt;T&gt;();<\/code><\/pre>\n    ",
            "href": "material\/DropdownButtonFormField\/createState.html",
            "isDeprecated": "0",
            "type": "widgets.FormFieldState",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.DropdownButtonFormField",
            "params": []
        }
    ],
    "props": []
}