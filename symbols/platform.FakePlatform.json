{
    "name": "platform.FakePlatform",
    "extends": [
        "platform.Platform",
        "dart:core.Object"
    ],
    "memberOf": "platform",
    "events": [],
    "methods": [
        {
            "name": "FakePlatform",
            "type": "",
            "desc": "<p>Creates a new <a href=\"package-platform_platform\/FakePlatform-class.html\">FakePlatform<\/a> with the specified properties.<\/p>\n<p>Unspecified properties will <em>not<\/em> be assigned default values (they will\nremain <code>null<\/code>).<\/p>\n    ",
            "static": false,
            "memberOf": "platform.FakePlatform",
            "sig": "",
            "params": [
                {
                    "name": "numberOfProcessors",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "pathSeparator",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "operatingSystem",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "localHostname",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "environment",
                    "type": "dart:core.Map<dart:core.String<dart:core.String>>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Map",
                        "dart:core.String",
                        "dart:core.String"
                    ]
                },
                {
                    "name": "executable",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "resolvedExecutable",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "script",
                    "type": "dart:core.Uri",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "executableArguments",
                    "type": "dart:core.List<dart:core.String>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "dart:core.String"
                    ]
                },
                {
                    "name": "packageRoot",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "packageConfig",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "version",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "stdinSupportsAnsi",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "stdoutSupportsAnsi",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "localeName",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-platform_platform\/FakePlatform\/FakePlatform.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">FakePlatform({\n  this.numberOfProcessors,\n  this.pathSeparator,\n  this.operatingSystem,\n  this.localHostname,\n  this.environment,\n  this.executable,\n  this.resolvedExecutable,\n  this.script,\n  this.executableArguments,\n  this.packageRoot,\n  this.packageConfig,\n  this.version,\n  this.stdinSupportsAnsi,\n  this.stdoutSupportsAnsi,\n  this.localeName,\n});<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "FakePlatform.fromJson",
            "type": "",
            "desc": "<p>Creates a new <a href=\"package-platform_platform\/FakePlatform-class.html\">FakePlatform<\/a> with properties extracted from the encoded\nJSON string.<\/p>\n<p><code>json<\/code> must be a JSON string that matches the encoding produced by\n<a href=\"package-platform_platform\/Platform\/toJson.html\">toJson<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "platform.FakePlatform",
            "sig": "",
            "params": [
                {
                    "name": "json",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-platform_platform\/FakePlatform\/FakePlatform.fromJson.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory FakePlatform.fromJson(String json) {\n  Map&lt;String, dynamic&gt; map = new JsonDecoder().convert(json);\n  return new FakePlatform(\n    numberOfProcessors: map['numberOfProcessors'],\n    pathSeparator: map['pathSeparator'],\n    operatingSystem: map['operatingSystem'],\n    localHostname: map['localHostname'],\n    environment: map['environment'].cast&lt;String, String&gt;(),\n    executable: map['executable'],\n    resolvedExecutable: map['resolvedExecutable'],\n    script: Uri.parse(map['script']),\n    executableArguments: map['executableArguments'].cast&lt;String&gt;(),\n    packageRoot: map['packageRoot'],\n    packageConfig: map['packageConfig'],\n    version: map['version'],\n    stdinSupportsAnsi: map['stdinSupportsAnsi'],\n    stdoutSupportsAnsi: map['stdoutSupportsAnsi'],\n    localeName: map['localeName'],\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "FakePlatform.fromPlatform",
            "type": "",
            "desc": "<p>Creates a new <a href=\"package-platform_platform\/FakePlatform-class.html\">FakePlatform<\/a> with properties whose initial values mirror\nthe specified <code>platform<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "platform.FakePlatform",
            "sig": "",
            "params": [
                {
                    "name": "platform",
                    "type": "platform.Platform",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-platform_platform\/FakePlatform\/FakePlatform.fromPlatform.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">FakePlatform.fromPlatform(Platform platform)\n    : numberOfProcessors = platform.numberOfProcessors,\n      pathSeparator = platform.pathSeparator,\n      operatingSystem = platform.operatingSystem,\n      localHostname = platform.localHostname,\n      environment = new Map&lt;String, String&gt;.from(platform.environment),\n      executable = platform.executable,\n      resolvedExecutable = platform.resolvedExecutable,\n      script = platform.script,\n      executableArguments =\n          new List&lt;String&gt;.from(platform.executableArguments),\n      packageRoot = platform.packageRoot,\n      packageConfig = platform.packageConfig,\n      version = platform.version,\n      stdinSupportsAnsi = platform.stdinSupportsAnsi,\n      stdoutSupportsAnsi = platform.stdoutSupportsAnsi,\n      localeName = platform.localeName;<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "environment",
            "type": "dart:core.Map<dart:core.String<dart:core.String>>",
            "types": [
                "dart:core.Map",
                "dart:core.String",
                "dart:core.String"
            ],
            "desc": "<p>The environment for this process.<\/p>\n<p>The returned environment is an unmodifiable map whose content is\nretrieved from the operating system on its first use.<\/p>\n<p>Environment variables on Windows are case-insensitive. The map\nreturned on Windows is therefore case-insensitive and will convert\nall keys to upper case. On other platforms the returned map is\na standard case-sensitive map.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/environment.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Map&lt;String, String&gt; environment\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "executable",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The path of the executable used to run the script in this isolate.<\/p>\n<p>The path returned is the literal path used to run the script. This\npath might be relative or just be a name from which the executable\nwas found by searching the <code>PATH<\/code>.<\/p>\n<p>To get the absolute path to the resolved executable use\n<a href=\"package-platform_platform\/FakePlatform\/resolvedExecutable.html\">resolvedExecutable<\/a>.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/executable.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String executable\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "executableArguments",
            "type": "dart:core.List<dart:core.String>",
            "types": [
                "dart:core.List",
                "dart:core.String"
            ],
            "desc": "<p>The flags passed to the executable used to run the script in this\nisolate. These are the command-line flags between the executable name\nand the script name. Each fetch of <code>executableArguments<\/code> returns a new\nlist containing the flags passed to the executable.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/executableArguments.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;String&gt; executableArguments\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "localHostname",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>Get the local hostname for the system.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/localHostname.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String localHostname\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "localeName",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>Get the name of the current locale.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/localeName.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String localeName\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "numberOfProcessors",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The number of processors of the machine.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/numberOfProcessors.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int numberOfProcessors\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "operatingSystem",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>A string (<code>linux<\/code>, <code>macos<\/code>, <code>windows<\/code>, <code>android<\/code>, <code>ios<\/code>, or <code>fuchsia<\/code>)\nrepresenting the operating system.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/operatingSystem.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String operatingSystem\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "packageConfig",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The value of the <code>--packages<\/code> flag passed to the executable\nused to run the script in this isolate. This is the configuration which\nspecifies how Dart packages are looked up.<\/p>\n<p>If there is no <code>--packages<\/code> flag, <code>null<\/code> is returned.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/packageConfig.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String packageConfig\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "packageRoot",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The value of the <code>--package-root<\/code> flag passed to the executable\nused to run the script in this isolate.  This is the directory in which\nDart packages are looked up.<\/p>\n<p>If there is no <code>--package-root<\/code> flag, <code>null<\/code> is returned.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/packageRoot.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String packageRoot\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "pathSeparator",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The path separator used by the operating system to separate\ncomponents in file paths.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/pathSeparator.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String pathSeparator\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "resolvedExecutable",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The path of the executable used to run the script in this\nisolate after it has been resolved by the OS.<\/p>\n<p>This is the absolute path, with all symlinks resolved, to the\nexecutable used to run the script.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/resolvedExecutable.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String resolvedExecutable\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "script",
            "type": "dart:core.Uri",
            "types": [],
            "desc": "<p>The absolute URI of the script being run in this\nisolate.<\/p>\n<p>If the script argument on the command line is relative,\nit is resolved to an absolute URI before fetching the script, and\nthis absolute URI is returned.<\/p>\n<p>URI resolution only does string manipulation on the script path, and this\nmay be different from the file system's path resolution behavior. For\nexample, a symbolic link immediately followed by '..' will not be\nlooked up.<\/p>\n<p>If the executable environment does not support <a href=\"package-platform_platform\/FakePlatform\/script.html\">script<\/a> an empty\n<a href=\"dart-core\/Uri-class.html\">Uri<\/a> is returned.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/script.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Uri script\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "stdinSupportsAnsi",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>When stdin is connected to a terminal, whether ANSI codes are supported.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/stdinSupportsAnsi.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool stdinSupportsAnsi\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "stdoutSupportsAnsi",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>When stdout is connected to a terminal, whether ANSI codes are supported.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/stdoutSupportsAnsi.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool stdoutSupportsAnsi\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "version",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The version of the current Dart runtime.<\/p>\n<p>The returned <code>String<\/code> is formatted as the <a href=\"http:\/\/semver.org\">semver<\/a>\nversion string of the current dart runtime, possibly followed by\nwhitespace and other version and build details.<\/p>\n        ",
            "memberOf": "platform.FakePlatform",
            "isConstant": false,
            "href": "package-platform_platform\/FakePlatform\/version.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String version\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "package-platform_platform\/FakePlatform-class.html",
    "desc": "<p>Provides a mutable implementation of the <a href=\"package-platform_platform\/Platform-class.html\">Platform<\/a> interface.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "FakePlatform"
}