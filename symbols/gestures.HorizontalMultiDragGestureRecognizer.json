{
    "name": "gestures.HorizontalMultiDragGestureRecognizer",
    "extends": [
        "gestures.MultiDragGestureRecognizer",
        "gestures.GestureRecognizer",
        "gestures.GestureArenaMember",
        "dart:core.Object"
    ],
    "memberOf": "gestures",
    "events": [],
    "methods": [
        {
            "name": "HorizontalMultiDragGestureRecognizer",
            "type": "",
            "desc": "<p>Create a gesture recognizer for tracking multiple pointers at once\nbut only if they first move horizontally.<\/p>\n    ",
            "static": false,
            "memberOf": "gestures.HorizontalMultiDragGestureRecognizer",
            "sig": "",
            "params": [
                {
                    "name": "debugOwner",
                    "type": "dart:core.Object",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "kind",
                    "type": "dart:ui.PointerDeviceKind",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "gestures\/HorizontalMultiDragGestureRecognizer\/HorizontalMultiDragGestureRecognizer.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">HorizontalMultiDragGestureRecognizer({\n  Object debugOwner,\n  PointerDeviceKind kind,\n}) : super(debugOwner: debugOwner, kind: kind);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "createNewPointerState",
            "type": "",
            "desc": "<p>Subclasses should override this method to create per-pointer state\nobjects to track the pointer associated with the given event.<\/p>\n    ",
            "static": false,
            "memberOf": "gestures.HorizontalMultiDragGestureRecognizer",
            "sig": "",
            "params": [
                {
                    "name": "event",
                    "type": "gestures.PointerDownEvent",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "gestures\/HorizontalMultiDragGestureRecognizer\/createNewPointerState.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_HorizontalPointerState createNewPointerState(PointerDownEvent event) {\n  return _HorizontalPointerState(event.position);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "debugDescription",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>Returns a very short pretty description of the gesture that the\nrecognizer looks for, like 'tap' or 'horizontal drag'.<\/p>\n        ",
            "memberOf": "gestures.HorizontalMultiDragGestureRecognizer",
            "isConstant": false,
            "href": "gestures\/HorizontalMultiDragGestureRecognizer\/debugDescription.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString get debugDescription =&gt; 'horizontal multidrag';<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "gestures\/HorizontalMultiDragGestureRecognizer-class.html",
    "desc": "<p>Recognizes movement in the horizontal direction on a per-pointer basis.<\/p>\n<p>In contrast to <a href=\"gestures\/HorizontalDragGestureRecognizer-class.html\">HorizontalDragGestureRecognizer<\/a>,\n<a href=\"gestures\/HorizontalMultiDragGestureRecognizer-class.html\">HorizontalMultiDragGestureRecognizer<\/a> watches each pointer separately,\nwhich means multiple drags can be recognized concurrently if multiple\npointers are in contact with the screen.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"gestures\/HorizontalDragGestureRecognizer-class.html\">HorizontalDragGestureRecognizer<\/a>, a gesture recognizer that just\nlooks at horizontal movement.<\/li>\n<li>\n<a href=\"gestures\/ImmediateMultiDragGestureRecognizer-class.html\">ImmediateMultiDragGestureRecognizer<\/a>, a similar recognizer, but without\nthe limitation that the drag must start horizontally.<\/li>\n<li>\n<a href=\"gestures\/VerticalMultiDragGestureRecognizer-class.html\">VerticalMultiDragGestureRecognizer<\/a>, which only recognizes drags that\nstart vertically.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "HorizontalMultiDragGestureRecognizer"
}