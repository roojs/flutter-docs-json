{
    "name": "convert.PercentDecoder",
    "extends": [
        "dart:core.int",
        "dart:core.List",
        "dart:core.String",
        "dart:convert.Converter",
        "dart:core.int",
        "dart:core.List",
        "dart:core.String",
        "dart:async.StreamTransformerBase",
        "dart:core.Object"
    ],
    "memberOf": "convert",
    "events": [],
    "methods": [
        {
            "name": "convert",
            "type": "dart:core.List<dart:core.int>",
            "desc": "<p>Converts <code>input<\/code> and returns the result of the conversion.<\/p>\n    ",
            "static": false,
            "memberOf": "convert.PercentDecoder",
            "sig": "",
            "params": [
                {
                    "name": "string",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "convert\/PercentDecoder\/convert.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;int&gt; convert(String string) {\n  var buffer = new Uint8Buffer();\n  var lastDigit = _decode(string.codeUnits, 0, string.length, buffer);\n\n  if (lastDigit != null) {\n    throw new FormatException(\n        \"Input ended with incomplete encoded byte.\", string, string.length);\n  }\n\n  return buffer.buffer.asUint8List(0, buffer.length);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "dart:core.List",
                "dart:core.int"
            ]
        },
        {
            "name": "startChunkedConversion",
            "type": "dart:convert.StringConversionSink",
            "desc": "<p>Starts a chunked conversion.<\/p>\n<p>The returned sink serves as input for the long-running conversion. The\ngiven <code>sink<\/code> serves as output.<\/p>\n    ",
            "static": false,
            "memberOf": "convert.PercentDecoder",
            "sig": "",
            "params": [
                {
                    "name": "sink",
                    "type": "dart:core.Sink<dart:core.List<dart:core.int>>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Sink",
                        "dart:core.List",
                        "dart:core.int"
                    ]
                }
            ],
            "isConstructor": false,
            "href": "convert\/PercentDecoder\/startChunkedConversion.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">StringConversionSink startChunkedConversion(Sink&lt;List&lt;int&gt;&gt; sink) =&gt;\n    new _PercentDecoderSink(sink);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "convert\/PercentDecoder-class.html",
    "desc": "<p>A converter that decodes percent-encoded strings into byte arrays.<\/p>\n<p>To be maximally flexible, this will decode any percent-encoded byte and\nwill allow any non-percent-encoded byte other than <code>%<\/code>. By default, it\ninterprets <code>+<\/code> as <code>0x2B<\/code> rather than <code>0x20<\/code> as emitted by\n<a href=\"dart-core\/Uri\/encodeQueryComponent.html\">Uri.encodeQueryComponent<\/a>.<\/p>\n<p>This will throw a <a href=\"dart-core\/FormatException-class.html\">FormatException<\/a> if the input string has an incomplete\npercent-encoding, or if it contains non-ASCII code units.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "PercentDecoder"
}