{
    "name": "scheduler.Priority",
    "extends": [],
    "memberOf": "scheduler",
    "events": [],
    "methods": [
        {
            "name": "operator +",
            "type": "scheduler.Priority",
            "desc": "<p>Returns a priority relative to this priority.<\/p>\n<p>A positive <code>offset<\/code> indicates a higher priority.<\/p>\n<p>The parameter <code>offset<\/code> is clamped to \u00b1<a href=\"scheduler\/Priority\/kMaxOffset-constant.html\">kMaxOffset<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "scheduler.Priority",
            "sig": "",
            "params": [
                {
                    "name": "offset",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "scheduler\/Priority\/operator_plus.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Priority operator +(int offset) {\n  if (offset.abs() &gt; kMaxOffset) {\n    \/\/ Clamp the input offset.\n    offset = kMaxOffset * offset.sign;\n  }\n  return Priority._(_value + offset);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator -",
            "type": "scheduler.Priority",
            "desc": "<p>Returns a priority relative to this priority.<\/p>\n<p>A positive offset indicates a lower priority.<\/p>\n<p>The parameter <code>offset<\/code> is clamped to \u00b1<a href=\"scheduler\/Priority\/kMaxOffset-constant.html\">kMaxOffset<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "scheduler.Priority",
            "sig": "",
            "params": [
                {
                    "name": "offset",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "scheduler\/Priority\/operator_minus.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Priority operator -(int offset) =&gt; this + (-offset);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "type": "",
            "href": "scheduler\/Priority\/animation-constant.html",
            "desc": "<p>A task to run even when animations are running.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const Priority animation = Priority._(100000)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "animation",
            "memberOf": "scheduler.Priority"
        },
        {
            "type": "",
            "href": "scheduler\/Priority\/idle-constant.html",
            "desc": "<p>A task to run after all other tasks, when no animations are running.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const Priority idle = Priority._(0)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "idle",
            "memberOf": "scheduler.Priority"
        },
        {
            "type": "",
            "href": "scheduler\/Priority\/kMaxOffset-constant.html",
            "desc": "<p>Maximum offset by which to clamp relative priorities.<\/p>\n<p>It is still possible to have priorities that are offset by more\nthan this amount by repeatedly taking relative offsets, but that\nis generally discouraged.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const int kMaxOffset = 10000\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "kMaxOffset",
            "memberOf": "scheduler.Priority"
        },
        {
            "type": "",
            "href": "scheduler\/Priority\/touch-constant.html",
            "desc": "<p>A task to run even when the user is interacting with the device.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const Priority touch = Priority._(200000)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "touch",
            "memberOf": "scheduler.Priority"
        },
        {
            "name": "value",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>Integer that describes this Priority value.<\/p>\n        ",
            "memberOf": "scheduler.Priority",
            "isConstant": false,
            "href": "scheduler\/Priority\/value.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get value =&gt; _value;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "scheduler\/Priority-class.html",
    "desc": "<p>A task priority, as passed to <a href=\"scheduler\/SchedulerBinding\/scheduleTask.html\">SchedulerBinding.scheduleTask<\/a>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Priority"
}