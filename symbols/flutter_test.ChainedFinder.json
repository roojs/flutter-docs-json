{
    "desc": "<p>Applies additional filtering against a <a href=\"flutter_test\/ChainedFinder\/parent.html\">parent<\/a> <a href=\"flutter_test\/Finder-class.html\">Finder<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "flutter_test\/ChainedFinder-class.html",
    "isAbstract": true,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "flutter_test",
    "name": "flutter_test.ChainedFinder",
    "shortname": "ChainedFinder",
    "extends": [
        "flutter_test.Finder",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Create a Finder chained against the candidates of another <a href=\"flutter_test\/Finder-class.html\">Finder<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ChainedFinder(this.parent) : assert(parent != null);<\/code><\/pre>\n    ",
            "href": "flutter_test\/ChainedFinder\/ChainedFinder.html",
            "isDeprecated": false,
            "type": "",
            "name": "ChainedFinder",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "flutter_test.ChainedFinder",
            "params": [
                {
                    "name": "parent",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "flutter_test.Finder"
                }
            ]
        },
        {
            "desc": "<p>Returns all the elements in the given list that match this\nfinder's pattern.<\/p>\n<p>When implementing your own Finders that inherit directly from\n<a href=\"flutter_test\/Finder-class.html\">Finder<\/a>, this is the main method to override. If your finder\ncan efficiently be described just in terms of a predicate\nfunction, consider extending <a href=\"flutter_test\/MatchFinder-class.html\">MatchFinder<\/a> instead.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nIterable&lt;Element&gt; apply(Iterable&lt;Element&gt; candidates) {\n  return filter(parent.apply(candidates));\n}<\/code><\/pre>\n    ",
            "href": "flutter_test\/ChainedFinder\/apply.html",
            "isDeprecated": false,
            "type": "dart:core.Iterable<widgets.Element>",
            "name": "apply",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "flutter_test.ChainedFinder",
            "params": [
                {
                    "name": "candidates",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Iterable<widgets.Element>"
                }
            ]
        },
        {
            "desc": "<p>Return another <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a> when given an <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a> of candidates from a\nparent <a href=\"flutter_test\/Finder-class.html\">Finder<\/a>.<\/p>\n<p>This is the method to implement when subclassing <a href=\"flutter_test\/ChainedFinder-class.html\">ChainedFinder<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Iterable&lt;Element&gt; filter(Iterable&lt;Element&gt; parentCandidates);<\/code><\/pre>\n    ",
            "href": "flutter_test\/ChainedFinder\/filter.html",
            "isDeprecated": false,
            "type": "dart:core.Iterable<widgets.Element>",
            "name": "filter",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "flutter_test.ChainedFinder",
            "params": [
                {
                    "name": "parentCandidates",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Iterable<widgets.Element>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns all the <a href=\"widgets\/Element-class.html\">Element<\/a>s that will be considered by this finder.<\/p>\n<p>See <a href=\"flutter_test\/collectAllElementsFrom.html\">collectAllElementsFrom<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nIterable&lt;Element&gt; get allCandidates =&gt; parent.allCandidates;<\/code><\/pre>\n        ",
            "href": "flutter_test\/ChainedFinder\/allCandidates.html",
            "name": "allCandidates",
            "isDeprecated": false,
            "type": "dart:core.Iterable<widgets.Element>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "flutter_test.ChainedFinder",
            "params": []
        },
        {
            "desc": "<p>Another <a href=\"flutter_test\/Finder-class.html\">Finder<\/a> that will run first.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Finder parent\n\n<\/code><\/pre>\n        ",
            "href": "flutter_test\/ChainedFinder\/parent.html",
            "name": "parent",
            "isDeprecated": false,
            "type": "flutter_test.Finder",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "flutter_test.ChainedFinder",
            "params": []
        }
    ]
}