{
    "desc": "<p>Static methods operating on 4x4 matrices packed column major into a\nFloat32List.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "vector_math_operations\/Matrix44Operations-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "vector_math_operations",
    "name": "vector_math_operations.Matrix44Operations",
    "shortname": "Matrix44Operations",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "vector_math_operations\/Matrix44Operations\/Matrix44Operations.html",
            "isDeprecated": false,
            "type": "",
            "name": "Matrix44Operations",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": []
        },
        {
            "desc": "<p>Compute the determinant of the 4x4 <code>matrix<\/code> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static double determinant(Float32List matrix, int offset) {\n  final double m0 = matrix[0 + offset];\n  final double m1 = matrix[1 + offset];\n  final double m2 = matrix[2 + offset];\n  final double m3 = matrix[3 + offset];\n  final double m4 = matrix[4 + offset];\n  final double m5 = matrix[5 + offset];\n  final double m6 = matrix[6 + offset];\n  final double m7 = matrix[7 + offset];\n\n  final double det2_01_01 = m0 * m5 - m1 * m4;\n  final double det2_01_02 = m0 * m6 - m2 * m4;\n  final double det2_01_03 = m0 * m7 - m3 * m4;\n  final double det2_01_12 = m1 * m6 - m2 * m5;\n  final double det2_01_13 = m1 * m7 - m3 * m5;\n  final double det2_01_23 = m2 * m7 - m3 * m6;\n\n  final double m8 = matrix[8 + offset];\n  final double m9 = matrix[9 + offset];\n  final double m10 = matrix[10 + offset];\n  final double m11 = matrix[11 + offset];\n\n  final double det3_201_012 =\n      m8 * det2_01_12 - m9 * det2_01_02 + m10 * det2_01_01;\n  final double det3_201_013 =\n      m8 * det2_01_13 - m9 * det2_01_03 + m11 * det2_01_01;\n  final double det3_201_023 =\n      m8 * det2_01_23 - m10 * det2_01_03 + m11 * det2_01_02;\n  final double det3_201_123 =\n      m9 * det2_01_23 - m10 * det2_01_13 + m11 * det2_01_12;\n\n  final double m12 = matrix[12 + offset];\n  final double m13 = matrix[13 + offset];\n  final double m14 = matrix[14 + offset];\n  final double m15 = matrix[15 + offset];\n\n  return -det3_201_123 * m12 +\n      det3_201_023 * m13 -\n      det3_201_013 * m14 +\n      det3_201_012 * m15;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/determinant.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "determinant",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Compute the determinant of the upper 3x3 of the 4x4 <code>matrix<\/code> starting at\n<code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static double determinant33(Float32List matrix, int offset) {\n  final double m0 = matrix[0 + offset];\n  final double m1 = matrix[1 + offset];\n  final double m2 = matrix[2 + offset];\n  final double m4 = matrix[4 + offset];\n  final double m5 = matrix[5 + offset];\n  final double m6 = matrix[6 + offset];\n  final double m8 = matrix[8 + offset];\n  final double m9 = matrix[9 + offset];\n  final double m10 = matrix[10 + offset];\n  final double x = m0 * ((m5 * m10) - (m6 * m8));\n  final double y = m1 * ((m4 * m10) - (m6 * m8));\n  final double z = m2 * ((m4 * m9) - (m5 * m8));\n  return x - y + z;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/determinant33.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "determinant33",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Compute the inverse of the 4x4 <code>matrix<\/code> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static double inverse(Float32List matrix, int offset) {\n  final double a00 = matrix[0];\n  final double a01 = matrix[1];\n  final double a02 = matrix[2];\n  final double a03 = matrix[3];\n  final double a10 = matrix[4];\n  final double a11 = matrix[5];\n  final double a12 = matrix[6];\n  final double a13 = matrix[7];\n  final double a20 = matrix[8];\n  final double a21 = matrix[9];\n  final double a22 = matrix[10];\n  final double a23 = matrix[11];\n  final double a30 = matrix[12];\n  final double a31 = matrix[13];\n  final double a32 = matrix[14];\n  final double a33 = matrix[15];\n  final double b00 = a00 * a11 - a01 * a10;\n  final double b01 = a00 * a12 - a02 * a10;\n  final double b02 = a00 * a13 - a03 * a10;\n  final double b03 = a01 * a12 - a02 * a11;\n  final double b04 = a01 * a13 - a03 * a11;\n  final double b05 = a02 * a13 - a03 * a12;\n  final double b06 = a20 * a31 - a21 * a30;\n  final double b07 = a20 * a32 - a22 * a30;\n  final double b08 = a20 * a33 - a23 * a30;\n  final double b09 = a21 * a32 - a22 * a31;\n  final double b10 = a21 * a33 - a23 * a31;\n  final double b11 = a22 * a33 - a23 * a32;\n  final double det =\n      (b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06);\n\n  if (det == 0.0) {\n    return det;\n  }\n\n  final double invDet = 1.0 \/ det;\n\n  matrix[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;\n  matrix[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;\n  matrix[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;\n  matrix[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;\n  matrix[4] = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;\n  matrix[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;\n  matrix[6] = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;\n  matrix[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;\n  matrix[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;\n  matrix[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;\n  matrix[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;\n  matrix[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;\n  matrix[12] = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;\n  matrix[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;\n  matrix[14] = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;\n  matrix[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;\n\n  return det;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/inverse.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "inverse",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Compute the inverse of the upper 3x3 of the 4x4 <code>matrix<\/code> starting\nat <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static double inverse33(Float32List matrix, int offset) =&gt;\n    throw new UnimplementedError();<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/inverse33.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "inverse33",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p><code>out<\/code> = <code>a<\/code> * <code>b<\/code>; Starting at <code>outOffset<\/code>, <code>aOffset<\/code>, and <code>bOffset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void multiply(Float32List out, int outOffset, Float32List a,\n    int aOffset, Float32List b, int bOffset) {\n  final double a00 = a[aOffset++];\n  final double a01 = a[aOffset++];\n  final double a02 = a[aOffset++];\n  final double a03 = a[aOffset++];\n  final double a10 = a[aOffset++];\n  final double a11 = a[aOffset++];\n  final double a12 = a[aOffset++];\n  final double a13 = a[aOffset++];\n  final double a20 = a[aOffset++];\n  final double a21 = a[aOffset++];\n  final double a22 = a[aOffset++];\n  final double a23 = a[aOffset++];\n  final double a30 = a[aOffset++];\n  final double a31 = a[aOffset++];\n  final double a32 = a[aOffset++];\n  final double a33 = a[aOffset++];\n\n  double b0 = b[bOffset++];\n  double b1 = b[bOffset++];\n  double b2 = b[bOffset++];\n  double b3 = b[bOffset++];\n  out[outOffset++] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[outOffset++] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[outOffset++] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[outOffset++] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[bOffset++];\n  b1 = b[bOffset++];\n  b2 = b[bOffset++];\n  b3 = b[bOffset++];\n  out[outOffset++] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[outOffset++] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[outOffset++] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[outOffset++] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[bOffset++];\n  b1 = b[bOffset++];\n  b2 = b[bOffset++];\n  b3 = b[bOffset++];\n  out[outOffset++] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[outOffset++] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[outOffset++] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[outOffset++] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n  b0 = b[bOffset++];\n  b1 = b[bOffset++];\n  b2 = b[bOffset++];\n  b3 = b[bOffset++];\n  out[outOffset++] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[outOffset++] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[outOffset++] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[outOffset++] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/multiply.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "multiply",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "a",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "aOffset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "b",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "bOffset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "out",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "outOffset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Normalize the upper 3x3 of the 4x4 <code>matrix<\/code> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void normalize33(Float32List matrix, int offset) {}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/normalize33.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "normalize33",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Perform a 4x4 transformation matrix inverse. Assumes the upper\n3x3 is orthonormal (i.e. does not contain any scale).<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void orthoInverse(Float32List matrix, int offset) {}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/orthoInverse.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "orthoInverse",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Transform the 3D <code>vector<\/code> starting at <code>vectorOffset<\/code> by the 4x4 <code>matrix<\/code>\nstarting at <code>matrixOffset<\/code>. Store result in <code>out<\/code> starting at <code>outOffset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void transform3(Float32List out, int outOffset, Float32List matrix,\n    int matrixOffset, Float32List vector, int vectorOffset) {}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/transform3.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "transform3",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "matrixOffset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "out",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "outOffset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "vector",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "vectorOffset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Transform the 4D <code>vector<\/code> starting at <code>vectorOffset<\/code> by the 4x4 <code>matrix<\/code>\nstarting at <code>matrixOffset<\/code>. Store result in <code>out<\/code> starting at <code>outOffset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void transform4(Float32List out, int outOffset, Float32List matrix,\n    int matrixOffset, Float32List vector, int vectorOffset) {\n  final double x = vector[vectorOffset++];\n  final double y = vector[vectorOffset++];\n  final double z = vector[vectorOffset++];\n  final double w = vector[vectorOffset++];\n  final double m0 = matrix[matrixOffset];\n  final double m4 = matrix[4 + matrixOffset];\n  final double m8 = matrix[8 + matrixOffset];\n  final double m12 = matrix[12 + matrixOffset];\n  out[outOffset++] = (m0 * x + m4 * y + m8 * z + m12 * w);\n  final double m1 = matrix[1 + matrixOffset];\n  final double m5 = matrix[5 + matrixOffset];\n  final double m9 = matrix[9 + matrixOffset];\n  final double m13 = matrix[13 + matrixOffset];\n  out[outOffset++] = (m1 * x + m5 * y + m9 * z + m13 * w);\n  final double m2 = matrix[2 + matrixOffset];\n  final double m6 = matrix[6 + matrixOffset];\n  final double m10 = matrix[10 + matrixOffset];\n  final double m14 = matrix[14 + matrixOffset];\n  out[outOffset++] = (m2 * x + m6 * y + m10 * z + m14 * w);\n  final double m3 = matrix[3 + matrixOffset];\n  final double m7 = matrix[7 + matrixOffset];\n  final double m11 = matrix[11 + matrixOffset];\n  final double m15 = matrix[15 + matrixOffset];\n  out[outOffset++] = (m3 * x + m7 * y + m11 * z + m15 * w);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/transform4.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "transform4",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "matrixOffset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "out",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "outOffset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "vector",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "vectorOffset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Transpose the 4x4 <code>matrix<\/code> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void transpose(Float32List matrix, int offset) {}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/transpose.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "transpose",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Transpose the upper 3x3 of the 4x4 <code>matrix<\/code> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void transpose33(Float32List matrix, int offset) {}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/transpose33.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "transpose33",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void zero(Float32List matrix, int offset) {\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n  matrix[offset++] = 0.0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_operations\/Matrix44Operations\/zero.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "zero",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_operations.Matrix44Operations",
            "params": [
                {
                    "name": "matrix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Float32List"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        }
    ],
    "props": []
}