{
    "desc": "<p>A single-line <a href=\"material\/ListTile-class.html\">ListTile<\/a> with a trailing button that expands or collapses\nthe tile to reveal or hide the <a href=\"material\/ExpansionTile\/children.html\">children<\/a>.<\/p>\n<p>This widget is typically used with <a href=\"widgets\/ListView-class.html\">ListView<\/a> to create an\n\"expand \/ collapse\" list entry. When used with scrolling widgets like\n<a href=\"widgets\/ListView-class.html\">ListView<\/a>, a unique <a href=\"widgets\/PageStorageKey-class.html\">PageStorageKey<\/a> must be specified to enable the\n<a href=\"material\/ExpansionTile-class.html\">ExpansionTile<\/a> to save and restore its expanded state when it is scrolled\nin and out of view.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/ListTile-class.html\">ListTile<\/a>, useful for creating expansion tile <a href=\"material\/ExpansionTile\/children.html\">children<\/a> when the\nexpansion tile represents a sublist.<\/li>\n<li>The \"Expand\/collapse\" section of\n<a href=\"https:\/\/material.io\/guidelines\/components\/lists-controls.html\">material.io\/guidelines\/components\/lists-controls.html<\/a>.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": null,
    "href": "material\/ExpansionTile-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.ExpansionTile",
    "shortname": "ExpansionTile",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [
        {
            "desc": "<p>Called when the tile expands or collapses.<\/p>\n<p>When the tile starts expanding, this function is called with the value\ntrue. When the tile starts collapsing, this function is called with\nthe value false.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueChanged&lt;bool&gt; onExpansionChanged\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionTile\/onExpansionChanged.html",
            "isDeprecated": "0",
            "type": "foundation.ValueChanged<dart:core.bool>",
            "memberOf": "material.ExpansionTile",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a single-line <a href=\"material\/ListTile-class.html\">ListTile<\/a> with a trailing button that expands or collapses\nthe tile to reveal or hide the <code>children<\/code>. The <code>initiallyExpanded<\/code> property must\nbe non-null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const ExpansionTile({\n  Key key,\n  this.leading,\n  @required this.title,\n  this.backgroundColor,\n  this.onExpansionChanged,\n  this.children = const &lt;Widget&gt;[],\n  this.trailing,\n  this.initiallyExpanded = false,\n}) : assert(initiallyExpanded != null),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/ExpansionTile\/ExpansionTile.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.ExpansionTile",
            "params": [
                {
                    "name": "backgroundColor",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "children",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<widgets.Widget>"
                },
                {
                    "name": "initiallyExpanded",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "leading",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "onExpansionChanged",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.ValueChanged<dart:core.bool>"
                },
                {
                    "name": "title",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "trailing",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/ExpansionTile\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_ExpansionTileState createState() =&gt; _ExpansionTileState();<\/code><\/pre>\n    ",
            "href": "material\/ExpansionTile\/createState.html",
            "isDeprecated": "0",
            "type": "<_ExpansionTileState>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.ExpansionTile",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The color to display behind the sublist when expanded.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color backgroundColor\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionTile\/backgroundColor.html",
            "isDeprecated": "0",
            "type": "dart:ui.Color",
            "memberOf": "material.ExpansionTile",
            "params": []
        },
        {
            "desc": "<p>The widgets that are displayed when the tile expands.<\/p>\n<p>Typically <a href=\"material\/ListTile-class.html\">ListTile<\/a> widgets.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;Widget&gt; children\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionTile\/children.html",
            "isDeprecated": "0",
            "type": "dart:core.List<widgets.Widget>",
            "memberOf": "material.ExpansionTile",
            "params": []
        },
        {
            "desc": "<p>Specifies if the list tile is initially expanded (true) or collapsed (false, the default).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool initiallyExpanded\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionTile\/initiallyExpanded.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "material.ExpansionTile",
            "params": []
        },
        {
            "desc": "<p>A widget to display before the title.<\/p>\n<p>Typically a <a href=\"material\/CircleAvatar-class.html\">CircleAvatar<\/a> widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget leading\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionTile\/leading.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.ExpansionTile",
            "params": []
        },
        {
            "desc": "<p>The primary content of the list item.<\/p>\n<p>Typically a <a href=\"widgets\/Text-class.html\">Text<\/a> widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget title\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionTile\/title.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.ExpansionTile",
            "params": []
        },
        {
            "desc": "<p>A widget to display instead of a rotating arrow icon.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget trailing\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionTile\/trailing.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.ExpansionTile",
            "params": []
        }
    ]
}