{
    "name": "semantics.CustomSemanticsAction",
    "extends": [],
    "memberOf": "semantics",
    "events": [],
    "methods": [
        {
            "name": "operator ==",
            "type": "dart:core.bool",
            "desc": "<p>The equality operator.<\/p>\n<p>The default behavior for all <a href=\"dart-core\/Object-class.html\">Object<\/a>s is to return true if and\nonly if <code>this<\/code> and <code>other<\/code> are the same object.<\/p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:<\/p>\n<ul>\n<li>\n<p>Total: It must return a boolean for all arguments. It should never throw\nor return <code>null<\/code>.<\/p>\n<\/li>\n<li>\n<p>Reflexive: For all objects <code>o<\/code>, <code>o == o<\/code> must be true.<\/p>\n<\/li>\n<li>\n<p>Symmetric: For all objects <code>o1<\/code> and <code>o2<\/code>, <code>o1 == o2<\/code> and <code>o2 == o1<\/code> must\neither both be true, or both be false.<\/p>\n<\/li>\n<li>\n<p>Transitive: For all objects <code>o1<\/code>, <code>o2<\/code>, and <code>o3<\/code>, if <code>o1 == o2<\/code> and\n<code>o2 == o3<\/code> are true, then <code>o1 == o3<\/code> must be true.<\/p>\n<\/li>\n<\/ul>\n<p>The method should also be consistent over time,\nso whether two objects are equal should only change\nif at least one of the objects was modified.<\/p>\n<p>If a subclass overrides the equality operator it should override\nthe <a href=\"semantics\/CustomSemanticsAction\/hashCode.html\">hashCode<\/a> method as well to maintain consistency.<\/p>\n    ",
            "static": false,
            "memberOf": "semantics.CustomSemanticsAction",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "semantics\/CustomSemanticsAction\/operator_equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool operator ==(dynamic other) {\n  if (other.runtimeType != runtimeType)\n    return false;\n  final CustomSemanticsAction typedOther = other;\n  return typedOther.label == label\n    &amp;&amp; typedOther.hint == hint\n    &amp;&amp; typedOther.action == action;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "CustomSemanticsAction",
            "type": "",
            "desc": "<p>Creates a new <a href=\"semantics\/CustomSemanticsAction-class.html\">CustomSemanticsAction<\/a>.<\/p>\n<p>The <code>label<\/code> must not be null or the empty string.<\/p>\n    ",
            "static": false,
            "memberOf": "semantics.CustomSemanticsAction",
            "sig": "",
            "params": [
                {
                    "name": "label",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "semantics\/CustomSemanticsAction\/CustomSemanticsAction.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const CustomSemanticsAction({@required this.label})\n  : assert(label != null),\n    assert(label != ''),\n    hint = null,\n    action = null;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "getAction",
            "type": "semantics.CustomSemanticsAction",
            "desc": "<p>Get the <code>action<\/code> for a given identifier.<\/p>\n    ",
            "static": false,
            "memberOf": "semantics.CustomSemanticsAction",
            "sig": "",
            "params": [
                {
                    "name": "id",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "semantics\/CustomSemanticsAction\/getAction.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static CustomSemanticsAction getAction(int id) {\n  return _actions[id];\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "getIdentifier",
            "type": "dart:core.int",
            "desc": "<p>Get the identifier for a given <code>action<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "semantics.CustomSemanticsAction",
            "sig": "",
            "params": [
                {
                    "name": "action",
                    "type": "semantics.CustomSemanticsAction",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "semantics\/CustomSemanticsAction\/getIdentifier.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static int getIdentifier(CustomSemanticsAction action) {\n  int result = _ids[action];\n  if (result == null) {\n    result = _nextId++;\n    _ids[action] = result;\n    _actions[result] = action;\n  }\n  return result;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "CustomSemanticsAction.overridingAction",
            "type": "",
            "desc": "<p>Creates a new <a href=\"semantics\/CustomSemanticsAction-class.html\">CustomSemanticsAction<\/a> that overrides a standard semantics\naction.<\/p>\n<p>The <code>hint<\/code> must not be null or the empty string.<\/p>\n    ",
            "static": false,
            "memberOf": "semantics.CustomSemanticsAction",
            "sig": "",
            "params": [
                {
                    "name": "hint",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "action",
                    "type": "dart:ui.SemanticsAction",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "semantics\/CustomSemanticsAction\/CustomSemanticsAction.overridingAction.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const CustomSemanticsAction.overridingAction({@required this.hint, @required this.action})\n  : assert(hint != null),\n    assert(hint != ''),\n    assert(action != null),\n    label = null;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "semantics.CustomSemanticsAction",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "semantics\/CustomSemanticsAction\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  return 'CustomSemanticsAction(${_ids[this]}, label:$label, hint:$hint, action:$action)';\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "action",
            "type": "dart:ui.SemanticsAction",
            "types": [],
            "desc": "<p>The standard semantics action this action replaces.<\/p>\n        ",
            "memberOf": "semantics.CustomSemanticsAction",
            "isConstant": false,
            "href": "semantics\/CustomSemanticsAction\/action.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final SemanticsAction action\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "hashCode",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"semantics\/CustomSemanticsAction\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"semantics\/CustomSemanticsAction\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"semantics\/CustomSemanticsAction\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"semantics\/CustomSemanticsAction\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"semantics\/CustomSemanticsAction\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"semantics\/CustomSemanticsAction\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "memberOf": "semantics.CustomSemanticsAction",
            "isConstant": false,
            "href": "semantics\/CustomSemanticsAction\/hashCode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get hashCode =&gt; ui.hashValues(label, hint, action);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "hint",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The hint description of this custom semantics action.<\/p>\n        ",
            "memberOf": "semantics.CustomSemanticsAction",
            "isConstant": false,
            "href": "semantics\/CustomSemanticsAction\/hint.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String hint\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "label",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The user readable name of this custom semantics action.<\/p>\n        ",
            "memberOf": "semantics.CustomSemanticsAction",
            "isConstant": false,
            "href": "semantics\/CustomSemanticsAction\/label.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String label\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "semantics\/CustomSemanticsAction-class.html",
    "desc": "<p>An identifier of a custom semantics action.<\/p>\n<p>Custom semantics actions can be provided to make complex user\ninteractions more accessible. For instance, if an application has a\ndrag-and-drop list that requires the user to press and hold an item\nto move it, users interacting with the application using a hardware\nswitch may have difficulty. This can be made accessible by creating custom\nactions and pairing them with handlers that move a list item up or down in\nthe list.<\/p>\n<p>In Android, these actions are presented in the local context menu. In iOS,\nthese are presented in the radial context menu.<\/p>\n<p>Localization and text direction do not automatically apply to the provided\nlabel or hint.<\/p>\n<p>Instances of this class should either be instantiated with const or\nnew instances cached in static fields.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"semantics\/SemanticsProperties-class.html\">SemanticsProperties<\/a>, where the handler for a custom action is provided.<\/li><\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "CustomSemanticsAction"
}