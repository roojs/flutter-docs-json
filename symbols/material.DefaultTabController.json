{
    "desc": "<p>The <a href=\"material\/TabController-class.html\">TabController<\/a> for descendant widgets that don't specify one\nexplicitly.<\/p>\n<p><a href=\"material\/DefaultTabController-class.html\">DefaultTabController<\/a> is an inherited widget that is used to share a\n<a href=\"material\/TabController-class.html\">TabController<\/a> with a <a href=\"material\/TabBar-class.html\">TabBar<\/a> or a <a href=\"material\/TabBarView-class.html\">TabBarView<\/a>. It's used when sharing an\nexplicitly created <a href=\"material\/TabController-class.html\">TabController<\/a> isn't convenient because the tab bar\nwidgets are created by a stateless parent widget or by different parent\nwidgets.<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">class MyDemo extends StatelessWidget {\n  final List&lt;Tab&gt; myTabs = &lt;Tab&gt;[\n    Tab(text: 'LEFT'),\n    Tab(text: 'RIGHT'),\n  ];\n\n  @override\n  Widget build(BuildContext context) {\n    return DefaultTabController(\n      length: myTabs.length,\n      child: Scaffold(\n        appBar: AppBar(\n          bottom: TabBar(\n            tabs: myTabs,\n          ),\n        ),\n        body: TabBarView(\n          children: myTabs.map((Tab tab) {\n            return Center(child: Text(tab.text));\n          }).toList(),\n        ),\n      ),\n    );\n  }\n}\n<\/code><\/pre>\n    ",
    "dtype": "class",
    "example": "",
    "href": "material\/DefaultTabController-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.DefaultTabController",
    "shortname": "DefaultTabController",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a default tab controller for the given <code>child<\/code> widget.<\/p>\n<p>The <code>length<\/code> argument is typically greater than one.<\/p>\n<p>The <code>initialIndex<\/code> argument must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const DefaultTabController({\n  Key key,\n  @required this.length,\n  this.initialIndex = 0,\n  @required this.child,\n}) : assert(initialIndex != null),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/DefaultTabController\/DefaultTabController.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.DefaultTabController",
            "params": [
                {
                    "name": "child",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "initialIndex",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "length",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/DefaultTabController\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_DefaultTabControllerState createState() =&gt; _DefaultTabControllerState();<\/code><\/pre>\n    ",
            "href": "material\/DefaultTabController\/createState.html",
            "isDeprecated": "0",
            "type": "<_DefaultTabControllerState>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.DefaultTabController",
            "params": []
        },
        {
            "desc": "<p>The closest instance of this class that encloses the given context.<\/p>\n<p>Typical usage:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">TabController controller = DefaultTabBarController.of(context);\n<\/code><\/pre>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static TabController of(BuildContext context) {\n  final _TabControllerScope scope = context.inheritFromWidgetOfExactType(_TabControllerScope);\n  return scope?.controller;\n}<\/code><\/pre>\n    ",
            "href": "material\/DefaultTabController\/of.html",
            "isDeprecated": "0",
            "type": "material.TabController",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.DefaultTabController",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The widget below this widget in the tree.<\/p>\n<p>Typically a <a href=\"material\/Scaffold-class.html\">Scaffold<\/a> whose <a href=\"material\/AppBar-class.html\">AppBar<\/a> includes a <a href=\"material\/TabBar-class.html\">TabBar<\/a>.<\/p>\n<p>This widget can only have one child. To lay out multiple children, let this\nwidget's child be a widget such as <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Stack-class.html\">Stack<\/a>, which have a\n<code>children<\/code> property, and then provide the children to that widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "href": "material\/DefaultTabController\/child.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.DefaultTabController",
            "params": []
        },
        {
            "desc": "<p>The initial index of the selected tab.<\/p>\n<p>Defaults to zero.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int initialIndex\n\n<\/code><\/pre>\n        ",
            "href": "material\/DefaultTabController\/initialIndex.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "material.DefaultTabController",
            "params": []
        },
        {
            "desc": "<p>The total number of tabs. Typically greater than one.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int length\n\n<\/code><\/pre>\n        ",
            "href": "material\/DefaultTabController\/length.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "material.DefaultTabController",
            "params": []
        }
    ]
}