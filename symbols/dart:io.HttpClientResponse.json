{
    "name": "dart:io.HttpClientResponse",
    "extends": [],
    "memberOf": "dart:io",
    "events": [],
    "methods": [
        {
            "name": "HttpClientResponse",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:io.HttpClientResponse",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "dart-io\/HttpClientResponse\/HttpClientResponse.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "detachSocket",
            "type": "dart:async.Future<dart:io.Socket>",
            "desc": "<p>Detach the underlying socket from the HTTP client. When the\nsocket is detached the HTTP client will no longer perform any\noperations on it.<\/p>\n<p>This is normally used when a HTTP upgrade is negotiated and the\ncommunication should continue with a different protocol.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:io.HttpClientResponse",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-io\/HttpClientResponse\/detachSocket.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;Socket&gt; detachSocket();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "dart:async.Future",
                "dart:io.Socket"
            ]
        },
        {
            "name": "redirect",
            "type": "dart:async.Future<dart:io.HttpClientResponse>",
            "desc": "<p>Redirects this connection to a new URL. The default value for\n<code>method<\/code> is the method for the current request. The default value\nfor <code>url<\/code> is the value of the <a href=\"dart-io\/HttpHeaders\/locationHeader-constant.html\">HttpHeaders.locationHeader<\/a> header of\nthe current response. All body data must have been read from the\ncurrent response before calling <a href=\"dart-io\/HttpClientResponse\/redirect.html\">redirect<\/a>.<\/p>\n<p>All headers added to the request will be added to the redirection\nrequest. However, any body sent with the request will not be\npart of the redirection request.<\/p>\n<p>If <code>followLoops<\/code> is set to <code>true<\/code>, redirect will follow the redirect,\neven if the URL was already visited. The default value is <code>false<\/code>.<\/p>\n<p>The method will ignore <a href=\"dart-io\/HttpClientRequest\/maxRedirects.html\">HttpClientRequest.maxRedirects<\/a>\nand will always perform the redirect.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:io.HttpClientResponse",
            "sig": "",
            "params": [
                {
                    "name": "method",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "url",
                    "type": "dart:core.Uri",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "followLoops",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-io\/HttpClientResponse\/redirect.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;HttpClientResponse&gt; redirect(\n    [String method, Uri url, bool followLoops]);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "dart:async.Future",
                "dart:io.HttpClientResponse"
            ]
        }
    ],
    "props": [
        {
            "name": "certificate",
            "type": "dart:io.X509Certificate",
            "types": [],
            "desc": "<p>Returns the certificate of the HTTPS server providing the response.\nReturns null if the connection is not a secure TLS or SSL connection.<\/p>\n        ",
            "memberOf": "dart:io.HttpClientResponse",
            "isConstant": false,
            "href": "dart-io\/HttpClientResponse\/certificate.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">X509Certificate get certificate;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "connectionInfo",
            "type": "dart:io.HttpConnectionInfo",
            "types": [],
            "desc": "<p>Gets information about the client connection. Returns <code>null<\/code> if the socket\nis not available.<\/p>\n        ",
            "memberOf": "dart:io.HttpClientResponse",
            "isConstant": false,
            "href": "dart-io\/HttpClientResponse\/connectionInfo.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HttpConnectionInfo get connectionInfo;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "contentLength",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>Returns the content length of the response body. Returns -1 if the size of\nthe response body is not known in advance.<\/p>\n<p>If the content length needs to be set, it must be set before the\nbody is written to. Setting the content length after writing to the body\nwill throw a <code>StateError<\/code>.<\/p>\n        ",
            "memberOf": "dart:io.HttpClientResponse",
            "isConstant": false,
            "href": "dart-io\/HttpClientResponse\/contentLength.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get contentLength;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "cookies",
            "type": "dart:core.List<dart:io.Cookie>",
            "types": [
                "dart:core.List",
                "dart:io.Cookie"
            ],
            "desc": "<p>Cookies set by the server (from the 'set-cookie' header).<\/p>\n        ",
            "memberOf": "dart:io.HttpClientResponse",
            "isConstant": false,
            "href": "dart-io\/HttpClientResponse\/cookies.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;Cookie&gt; get cookies;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "headers",
            "type": "dart:io.HttpHeaders",
            "types": [],
            "desc": "<p>Returns the client response headers.<\/p>\n<p>The client response headers are immutable.<\/p>\n        ",
            "memberOf": "dart:io.HttpClientResponse",
            "isConstant": false,
            "href": "dart-io\/HttpClientResponse\/headers.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HttpHeaders get headers;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "isRedirect",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Returns whether the status code is one of the normal redirect\ncodes <a href=\"dart-io\/HttpStatus\/movedPermanently-constant.html\">HttpStatus.movedPermanently<\/a>, <a href=\"dart-io\/HttpStatus\/found-constant.html\">HttpStatus.found<\/a>,\n<a href=\"dart-io\/HttpStatus\/movedTemporarily-constant.html\">HttpStatus.movedTemporarily<\/a>, <a href=\"dart-io\/HttpStatus\/seeOther-constant.html\">HttpStatus.seeOther<\/a> and\n<a href=\"dart-io\/HttpStatus\/temporaryRedirect-constant.html\">HttpStatus.temporaryRedirect<\/a>.<\/p>\n        ",
            "memberOf": "dart:io.HttpClientResponse",
            "isConstant": false,
            "href": "dart-io\/HttpClientResponse\/isRedirect.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isRedirect;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "persistentConnection",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Gets the persistent connection state returned by the server.<\/p>\n<p>If the persistent connection state needs to be set, it must be\nset before the body is written to. Setting the persistent connection state\nafter writing to the body will throw a <code>StateError<\/code>.<\/p>\n        ",
            "memberOf": "dart:io.HttpClientResponse",
            "isConstant": false,
            "href": "dart-io\/HttpClientResponse\/persistentConnection.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get persistentConnection;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "reasonPhrase",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>Returns the reason phrase associated with the status code.<\/p>\n<p>The reason phrase must be set before the body is written\nto. Setting the reason phrase after writing to the body will throw\na <code>StateError<\/code>.<\/p>\n        ",
            "memberOf": "dart:io.HttpClientResponse",
            "isConstant": false,
            "href": "dart-io\/HttpClientResponse\/reasonPhrase.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get reasonPhrase;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "redirects",
            "type": "dart:core.List<dart:io.RedirectInfo>",
            "types": [
                "dart:core.List",
                "dart:io.RedirectInfo"
            ],
            "desc": "<p>Returns the series of redirects this connection has been through. The\nlist will be empty if no redirects were followed. <a href=\"dart-io\/HttpClientResponse\/redirects.html\">redirects<\/a> will be\nupdated both in the case of an automatic and a manual redirect.<\/p>\n        ",
            "memberOf": "dart:io.HttpClientResponse",
            "isConstant": false,
            "href": "dart-io\/HttpClientResponse\/redirects.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;RedirectInfo&gt; get redirects;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "statusCode",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>Returns the status code.<\/p>\n<p>The status code must be set before the body is written\nto. Setting the status code after writing to the body will throw\na <code>StateError<\/code>.<\/p>\n        ",
            "memberOf": "dart:io.HttpClientResponse",
            "isConstant": false,
            "href": "dart-io\/HttpClientResponse\/statusCode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get statusCode;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-io\/HttpClientResponse-class.html",
    "desc": "<p>HTTP response for a client connection.<\/p>\n<p>The body of a <a href=\"dart-io\/HttpClientResponse-class.html\">HttpClientResponse<\/a> object is a\n<a href=\"dart-async\/Stream-class.html\">Stream<\/a> of data from the server. Listen to the body to handle\nthe data and be notified when the entire body is received.<\/p>\n<pre class=\"language-dart\"><code>new HttpClient().get('localhost', 80, '\/file.txt')\n     .then((HttpClientRequest request) =&gt; request.close())\n     .then((HttpClientResponse response) {\n       response.transform(utf8.decoder).listen((contents) {\n         \/\/ handle data\n       });\n     });\n<\/code><\/pre>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "HttpClientResponse"
}