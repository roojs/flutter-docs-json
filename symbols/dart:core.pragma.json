{
    "desc": "<p>A hint to tools.<\/p>\n<p>Tools that work with Dart programs may accept hints to guide their behavior\nas <code>pragma<\/code> annotations on declarations.\nEach tool decides which hints it accepts, what they mean, and whether and\nhow they apply to sub-parts of the annotated entity.<\/p>\n<p>Tools that recognize pragma hints should pick a pragma prefix to identify\nthe tool. They should recognize any hint with a <a href=\"dart-core\/pragma\/name.html\">name<\/a> starting with their\nprefix followed by <code>:<\/code> as if it was intended for that tool. A hint with a\nprefix for another tool should be ignored (unless compatibility with that\nother tool is a goal).<\/p>\n<p>A tool may recognize unprefixed names as well, if they would recognize that\nname with their own prefix in front.<\/p>\n<p>If the hint can be parameterized, an extra <a href=\"dart-core\/pragma\/options.html\">options<\/a> object can be added as well.<\/p>\n<p>For example:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@pragma('Tool:pragma-name', [param1, param2, ...])\nclass Foo { }\n\n@pragma('OtherTool:other-pragma')\nvoid foo() { }\n<\/code><\/pre>\n<p>Here class Foo is annotated with a Tool specific pragma 'pragma-name' and\nfunction foo is annotated with a pragma 'other-pragma' specific to OtherTool.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-core\/pragma-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:core",
    "name": "dart:core.pragma",
    "shortname": "pragma",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a hint named <code>name<\/code> with optional <code>options<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const factory pragma(String name, [Object options]) = pragma._;<\/code><\/pre>\n    ",
            "href": "dart-core\/pragma\/pragma.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:core.pragma",
            "params": [
                {
                    "name": "name",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "options",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.Object"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The name of the hint.<\/p>\n<p>A string that is recognized by one or more tools, or such a string prefixed\nby a tool identifier and a colon, which is only recognized by that\nparticular tool.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String name\n\n<\/code><\/pre>\n        ",
            "href": "dart-core\/pragma\/name.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "dart:core.pragma",
            "params": []
        },
        {
            "desc": "<p>Optional extra data parameterizing the hint.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Object options\n\n<\/code><\/pre>\n        ",
            "href": "dart-core\/pragma\/options.html",
            "isDeprecated": "0",
            "type": "dart:core.Object",
            "memberOf": "dart:core.pragma",
            "params": []
        }
    ]
}