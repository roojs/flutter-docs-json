{
    "name": "dart:convert.Encoding",
    "extends": [
        "dart:core.int",
        "dart:core.List",
        "dart:core.String",
        "dart:convert.Codec",
        "dart:core.Object"
    ],
    "memberOf": "dart:convert",
    "events": [],
    "methods": [
        {
            "name": "Encoding",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:convert.Encoding",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "dart-convert\/Encoding\/Encoding.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Encoding();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "decodeStream",
            "type": "dart:async.Future<dart:core.String>",
            "desc": "",
            "static": false,
            "memberOf": "dart:convert.Encoding",
            "sig": "",
            "params": [
                {
                    "name": "byteStream",
                    "type": "dart:async.Stream<dart:core.List<dart:core.int>>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:async.Stream",
                        "dart:core.List",
                        "dart:core.int"
                    ]
                }
            ],
            "isConstructor": false,
            "href": "dart-convert\/Encoding\/decodeStream.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;String&gt; decodeStream(Stream&lt;List&lt;int&gt;&gt; byteStream) {\n  return byteStream\n      .transform&lt;String&gt;(decoder)\n      .fold(StringBuffer(),\n          (StringBuffer buffer, String string) =&gt; buffer..write(string))\n      .then((StringBuffer buffer) =&gt; buffer.toString());\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "dart:async.Future",
                "dart:core.String"
            ]
        },
        {
            "name": "getByName",
            "type": "dart:convert.Encoding",
            "desc": "<p>Gets an <a href=\"dart-convert\/Encoding-class.html\">Encoding<\/a> object from the name of the character set\nname. The names used are the IANA official names for the\ncharacter set (see\n<a href=\"http:\/\/www.iana.org\/assignments\/character-sets\/character-sets.xml)\">http:\/\/www.iana.org\/assignments\/character-sets\/character-sets.xml)<\/a>.<\/p>\n<p>The <code>name<\/code> passed is case insensitive.<\/p>\n<p>If character set is not supported <code>null<\/code> is returned.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:convert.Encoding",
            "sig": "",
            "params": [
                {
                    "name": "name",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-convert\/Encoding\/getByName.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Encoding getByName(String name) {\n  if (name == null) return null;\n  name = name.toLowerCase();\n  return _nameToEncoding[name];\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "decoder",
            "type": "dart:convert.Converter<dart:core.List<dart:core.int<dart:core.String>>>",
            "types": [
                "dart:convert.Converter",
                "dart:core.List",
                "dart:core.int",
                "dart:core.String"
            ],
            "desc": "<p>Returns the decoder of <code>this<\/code>, converting from <code>List&lt;int&gt;<\/code> to <code>String<\/code>.<\/p>\n<p>It may be stateful and should not be reused.<\/p>\n        ",
            "memberOf": "dart:convert.Encoding",
            "isConstant": false,
            "href": "dart-convert\/Encoding\/decoder.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Converter&lt;List&lt;int&gt;, String&gt; get decoder;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "encoder",
            "type": "dart:convert.Converter<dart:core.String<dart:core.List<dart:core.int>>>",
            "types": [
                "dart:convert.Converter",
                "dart:core.String",
                "dart:core.List",
                "dart:core.int"
            ],
            "desc": "<p>Returns the encoder from <code>String<\/code> to <code>List&lt;int&gt;<\/code>.<\/p>\n<p>It may be stateful and should not be reused.<\/p>\n        ",
            "memberOf": "dart:convert.Encoding",
            "isConstant": false,
            "href": "dart-convert\/Encoding\/encoder.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Converter&lt;String, List&lt;int&gt;&gt; get encoder;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "name",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>Name of the encoding.<\/p>\n<p>If the encoding is standardized, this is the lower-case version of one of\nthe IANA official names for the character set (see\n<a href=\"http:\/\/www.iana.org\/assignments\/character-sets\/character-sets.xml\">http:\/\/www.iana.org\/assignments\/character-sets\/character-sets.xml<\/a>)<\/p>\n        ",
            "memberOf": "dart:convert.Encoding",
            "isConstant": false,
            "href": "dart-convert\/Encoding\/name.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get name;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "dart:convert.AsciiCodec",
        "dart:convert.Latin1Codec",
        "dart:convert.Utf8Codec",
        "dart:io.SystemEncoding"
    ],
    "realImplementors": [
        "dart:convert.AsciiCodec",
        "dart:convert.Latin1Codec",
        "dart:convert.Utf8Codec",
        "dart:io.SystemEncoding"
    ],
    "cn": [],
    "href": "dart-convert\/Encoding-class.html",
    "desc": "<p>Open-ended Encoding enum.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Encoding"
}