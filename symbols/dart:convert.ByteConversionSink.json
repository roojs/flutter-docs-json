{
    "desc": "<p>The <a href=\"dart-convert\/ByteConversionSink-class.html\">ByteConversionSink<\/a> provides an interface for converters to\nefficiently transmit byte data.<\/p>\n<p>Instead of limiting the interface to one non-chunked list of bytes it\naccepts its input in chunks (themselves being lists of bytes).<\/p>\n<p>This abstract class will likely get more methods over time. Implementers are\nurged to extend or mix in <a href=\"dart-convert\/ByteConversionSinkBase-class.html\">ByteConversionSinkBase<\/a> to ensure that their\nclass covers the newly added methods.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "dart-convert\/ByteConversionSink-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:convert",
    "name": "dart:convert.ByteConversionSink",
    "shortname": "ByteConversionSink",
    "extends": [
        "dart:core.int",
        "dart:core.List",
        "dart:convert.ChunkedConversionSink",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ByteConversionSink();<\/code><\/pre>\n    ",
            "href": "dart-convert\/ByteConversionSink\/ByteConversionSink.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:convert.ByteConversionSink",
            "params": []
        },
        {
            "desc": "<p>Adds the next <code>chunk<\/code> to <code>this<\/code>.<\/p>\n<p>Adds the bytes defined by <code>start<\/code> and <code>end<\/code>-exclusive to <code>this<\/code>.<\/p>\n<p>If <code>isLast<\/code> is <code>true<\/code> closes <code>this<\/code>.<\/p>\n<p>Contrary to <code>add<\/code> the given <code>chunk<\/code> must not be held onto. Once the method\nreturns, it is safe to overwrite the data in it.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addSlice(List&lt;int&gt; chunk, int start, int end, bool isLast);<\/code><\/pre>\n    ",
            "href": "dart-convert\/ByteConversionSink\/addSlice.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:convert.ByteConversionSink",
            "params": [
                {
                    "name": "chunk",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.int>"
                },
                {
                    "name": "end",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "isLast",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.bool"
                },
                {
                    "name": "start",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        }
    ],
    "props": []
}