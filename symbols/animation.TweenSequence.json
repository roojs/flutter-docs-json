{
    "desc": "<p>Enables creating an <a href=\"animation\/Animation-class.html\">Animation<\/a> whose value is defined by a\nsequence of <a href=\"animation\/Tween-class.html\">Tween<\/a>s.<\/p>\n<p>Each <a href=\"animation\/TweenSequenceItem-class.html\">TweenSequenceItem<\/a> has a weight that defines its percentage\nof the animation's duration. Each tween defines the animation's value\nduring the interval indicated by its weight.<\/p>\n<p>For example, to define an animation that uses an easing curve to\ninterpolate between 5.0 and 10.0 during the first 40% of the\nanimation, remain at 10.0 for the next 20%, and then return to\n10.0 for the final 40%:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">final Animation&lt;double&gt; animation = TweenSequence(\n  &lt;TweenSequenceItem&lt;double&gt;&gt;[\n    TweenSequenceItem&lt;double&gt;(\n      tween: Tween&lt;double&gt;(begin: 5.0, end: 10.0)\n        .chain(CurveTween(curve: Curves.ease)),\n      weight: 40.0,\n    ),\n    TweenSequenceItem&lt;double&gt;(\n      tween: ConstantTween&lt;double&gt;(10.0),\n      weight: 20.0,\n    ),\n    TweenSequenceItem&lt;double&gt;(\n      tween: Tween&lt;double&gt;(begin: 10.0, end: 5.0)\n        .chain(CurveTween(curve: Curves.ease)),\n      weight: 40.0,\n    ),\n  ],\n).animate(myAnimationController);\n<\/code><\/pre>\n    ",
    "dtype": "class",
    "example": "",
    "href": "animation\/TweenSequence-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "animation",
    "name": "animation.TweenSequence",
    "shortname": "TweenSequence",
    "extends": [
        "animation.Animatable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Construct a TweenSequence.<\/p>\n<p>The <code>items<\/code> parameter must be a list of one or more\n<a href=\"animation\/TweenSequenceItem-class.html\">TweenSequenceItem<\/a>s.<\/p>\n<p>There's a small cost associated with building a <code>TweenSequence<\/code> so\nit's best to reuse one, rather than rebuilding it on every frame,\nwhen that's possible.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">TweenSequence(List&lt;TweenSequenceItem&lt;T&gt;&gt; items)\n    : assert(items != null),\n      assert(items.isNotEmpty) {\n  _items.addAll(items);\n\n  double totalWeight = 0.0;\n  for (TweenSequenceItem&lt;T&gt; item in _items)\n    totalWeight += item.weight;\n  assert(totalWeight &gt; 0.0);\n\n  double start = 0.0;\n  for (int i = 0; i &lt; _items.length; i += 1) {\n    final double end = i == _items.length - 1 ? 1.0 : start + _items[i].weight \/ totalWeight;\n    _intervals.add(_Interval(start, end));\n    start = end;\n  }\n}<\/code><\/pre>\n    ",
            "href": "animation\/TweenSequence\/TweenSequence.html",
            "isDeprecated": "0",
            "type": "",
            "name": "TweenSequence",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "animation.TweenSequence",
            "params": [
                {
                    "name": "items",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<animation.TweenSequenceItem>"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; 'TweenSequence(${_items.length} items)';<\/code><\/pre>\n    ",
            "href": "animation\/TweenSequence\/toString.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "animation.TweenSequence",
            "params": []
        },
        {
            "desc": "<p>Returns the value of the object at point <code>t<\/code>.<\/p>\n<p>The value of <code>t<\/code> is nominally a fraction in the range 0.0 to 1.0, though\nin practice it may extend outside this range.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"animation\/Animatable\/evaluate.html\">evaluate<\/a>, which is a shorthand for applying <a href=\"animation\/TweenSequence\/transform.html\">transform<\/a> to the value\nof an <a href=\"animation\/Animation-class.html\">Animation<\/a>.<\/li>\n<li>\n<a href=\"animation\/TweenSequence\/transform.html\">Curve.transform<\/a>, a similar method for easing curves.<\/li>\n<\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nT transform(double t) {\n  assert(t &gt;= 0.0 &amp;&amp; t &lt;= 1.0);\n  if (t == 1.0)\n    return _evaluateAt(t, _items.length - 1);\n  for (int index = 0; index &lt; _items.length; index++) {\n    if (_intervals[index].contains(t))\n      return _evaluateAt(t, index);\n  }\n  \/\/ Should be unreachable.\n  assert(false, 'TweenSequence.evaluate() could not find a interval for $t');\n  return null;\n}<\/code><\/pre>\n    ",
            "href": "animation\/TweenSequence\/transform.html",
            "isDeprecated": "0",
            "type": "<T>",
            "name": "transform",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "animation.TweenSequence",
            "params": [
                {
                    "name": "t",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": []
}