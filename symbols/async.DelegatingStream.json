{
    "desc": "<p>Simple delegating wrapper around a <a href=\"dart-async\/Stream-class.html\">Stream<\/a>.<\/p>\n<p>Subclasses can override individual methods, or use this to expose only the\n<a href=\"dart-async\/Stream-class.html\">Stream<\/a> methods of a subclass.<\/p>\n<p>Note that this is identical to <a href=\"dart-async\/StreamView-class.html\">StreamView<\/a> in <code>dart:async<\/code>. It's provided\nunder this name for consistency with other <code>Delegating*<\/code> classes.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-async_async\/DelegatingStream-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "async",
    "name": "async.DelegatingStream",
    "shortname": "DelegatingStream",
    "extends": [
        "dart:async.StreamView",
        "dart:async.Stream",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">DelegatingStream(Stream&lt;T&gt; stream) : super(stream);<\/code><\/pre>\n    ",
            "href": "package-async_async\/DelegatingStream\/DelegatingStream.html",
            "isDeprecated": "0",
            "type": "",
            "name": "DelegatingStream",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "async.DelegatingStream",
            "params": [
                {
                    "name": "stream",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:async.Stream"
                }
            ]
        },
        {
            "desc": "<p>Creates a wrapper which throws if <code>stream<\/code>'s events aren't instances of\n<code>T<\/code>.<\/p>\n<p>This soundly converts a <a href=\"dart-async\/Stream-class.html\">Stream<\/a> to a <code>Stream&lt;T&gt;<\/code>, regardless of its\noriginal generic type, by asserting that its events are instances of <code>T<\/code>\nwhenever they're provided. If they're not, the stream throws a\n<a href=\"dart-core\/CastError-class.html\">CastError<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Stream&lt;T&gt; typed&lt;T&gt;(Stream stream) =&gt; stream.cast();<\/code><\/pre>\n    ",
            "href": "package-async_async\/DelegatingStream\/typed.html",
            "isDeprecated": "0",
            "type": "dart:async.Stream",
            "name": "typed",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "async.DelegatingStream",
            "params": [
                {
                    "name": "stream",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:async.Stream"
                }
            ]
        }
    ],
    "props": []
}