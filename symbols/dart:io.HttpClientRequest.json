{
    "desc": "<p>HTTP request for a client connection.<\/p>\n<p>To set up a request, set the headers using the headers property\nprovided in this class and write the data to the body of the request.\nHttpClientRequest is an <a href=\"dart-io\/IOSink-class.html\">IOSink<\/a>. Use the methods from IOSink,\nsuch as writeCharCode(), to write the body of the HTTP\nrequest. When one of the IOSink methods is used for the first\ntime, the request header is sent. Calling any methods that\nchange the header after it is sent throws an exception.<\/p>\n<p>When writing string data through the <a href=\"dart-io\/IOSink-class.html\">IOSink<\/a> the\nencoding used is determined from the \"charset\" parameter of\nthe \"Content-Type\" header.<\/p>\n<pre class=\"language-dart\"><code>HttpClientRequest request = ...\nrequest.headers.contentType\n    = new ContentType(\"application\", \"json\", charset: \"utf-8\");\nrequest.write(...);  \/\/ Strings written will be UTF-8 encoded.\n<\/code><\/pre>\n<p>If no charset is provided the default of ISO-8859-1 (Latin 1) is\nbe used.<\/p>\n<pre class=\"language-dart\"><code>HttpClientRequest request = ...\nrequest.headers.add(HttpHeaders.contentTypeHeader, \"text\/plain\");\nrequest.write(...);  \/\/ Strings written will be ISO-8859-1 encoded.\n<\/code><\/pre>\n<p>An exception is thrown if you use an unsupported encoding and the\n<code>write()<\/code> method being used takes a string parameter.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-io\/HttpClientRequest-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:io",
    "name": "dart:io.HttpClientRequest",
    "shortname": "HttpClientRequest",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "",
            "example": "",
            "href": "dart-io\/HttpClientRequest\/HttpClientRequest.html",
            "isDeprecated": false,
            "type": "",
            "name": "HttpClientRequest",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>Close the request for input. Returns the value of <a href=\"dart-io\/HttpClientRequest\/done.html\">done<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;HttpClientResponse&gt; close();<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpClientRequest\/close.html",
            "isDeprecated": false,
            "type": "dart:async.Future<dart:io.HttpClientResponse>",
            "name": "close",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Gets or sets if the <a href=\"dart-io\/HttpClientRequest-class.html\">HttpClientRequest<\/a> should buffer output.<\/p>\n<p>Default value is <code>true<\/code>.<\/p>\n<p><strong>Note<\/strong>: Disabling buffering of the output can result in very poor\nperformance, when writing many small chunks.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool bufferOutput\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/bufferOutput.html",
            "name": "bufferOutput",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>Gets information about the client connection.<\/p>\n<p>Returns <code>null<\/code> if the socket is not available.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HttpConnectionInfo get connectionInfo;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/connectionInfo.html",
            "name": "connectionInfo",
            "isDeprecated": false,
            "type": "dart:io.HttpConnectionInfo",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the content length of the request.<\/p>\n<p>If the size of the request is not known in advance set content length to\n-1, which is also the default.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int contentLength\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/contentLength.html",
            "name": "contentLength",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>Cookies to present to the server (in the 'cookie' header).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;Cookie&gt; get cookies;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/cookies.html",
            "name": "cookies",
            "isDeprecated": false,
            "type": "dart:core.List<dart:io.Cookie>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>A <a href=\"dart-io\/HttpClientResponse-class.html\">HttpClientResponse<\/a> future that will complete once the response is\navailable.<\/p>\n<p>If an error occurs before the response is available, this future will\ncomplete with an error.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;HttpClientResponse&gt; get done;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/done.html",
            "name": "done",
            "isDeprecated": false,
            "type": "dart:async.Future<dart:io.HttpClientResponse>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>Set this property to <code>true<\/code> if this request should\nautomatically follow redirects. The default is <code>true<\/code>.<\/p>\n<p>Automatic redirect will only happen for \"GET\" and \"HEAD\" requests\nand only for the status codes <code>HttpStatus.movedPermanently<\/code>\n(301), <code>HttpStatus.found<\/code> (302),\n<code>HttpStatus.movedTemporarily<\/code> (302, alias for\n<code>HttpStatus.found<\/code>), <code>HttpStatus.seeOther<\/code> (303) and\n<code>HttpStatus.temporaryRedirect<\/code> (307). For\n<code>HttpStatus.seeOther<\/code> (303) automatic redirect will also happen\nfor \"POST\" requests with the method changed to \"GET\" when\nfollowing the redirect.<\/p>\n<p>All headers added to the request will be added to the redirection\nrequest(s). However, any body send with the request will not be\npart of the redirection request(s).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool followRedirects\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/followRedirects.html",
            "name": "followRedirects",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>Returns the client request headers.<\/p>\n<p>The client request headers can be modified until the client\nrequest body is written to or closed. After that they become\nimmutable.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HttpHeaders get headers;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/headers.html",
            "name": "headers",
            "isDeprecated": false,
            "type": "dart:io.HttpHeaders",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>Set this property to the maximum number of redirects to follow\nwhen <a href=\"dart-io\/HttpClientRequest\/followRedirects.html\">followRedirects<\/a> is <code>true<\/code>. If this number is exceeded\nan error event will be added with a <a href=\"dart-io\/RedirectException-class.html\">RedirectException<\/a>.<\/p>\n<p>The default value is 5.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int maxRedirects\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/maxRedirects.html",
            "name": "maxRedirects",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>The method of the request.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get method;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/method.html",
            "name": "method",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the requested persistent connection state.<\/p>\n<p>The default value is <code>true<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool persistentConnection\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/persistentConnection.html",
            "name": "persistentConnection",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        },
        {
            "desc": "<p>The uri of the request.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Uri get uri;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpClientRequest\/uri.html",
            "name": "uri",
            "isDeprecated": false,
            "type": "dart:core.Uri",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpClientRequest",
            "params": []
        }
    ]
}