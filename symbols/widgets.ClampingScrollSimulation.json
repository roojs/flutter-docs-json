{
    "desc": "<p>An implementation of scroll physics that matches Android.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/BouncingScrollSimulation-class.html\">BouncingScrollSimulation<\/a>, which implements iOS scroll physics.<\/li><\/ul>",
    "dtype": "class",
    "example": "",
    "href": "widgets\/ClampingScrollSimulation-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.ClampingScrollSimulation",
    "shortname": "ClampingScrollSimulation",
    "extends": [
        "physics.Simulation",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a scroll physics simulation that matches Android scrolling.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ClampingScrollSimulation({\n  @required this.position,\n  @required this.velocity,\n  this.friction = 0.015,\n  Tolerance tolerance = Tolerance.defaultTolerance,\n}) : assert(_flingVelocityPenetration(0.0) == _initialVelocityPenetration),\n     super(tolerance: tolerance) {\n  _duration = _flingDuration(velocity);\n  _distance = (velocity * _duration \/ _initialVelocityPenetration).abs();\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ClampingScrollSimulation\/ClampingScrollSimulation.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.ClampingScrollSimulation",
            "params": [
                {
                    "name": "friction",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "position",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "tolerance",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "physics.Tolerance"
                },
                {
                    "name": "velocity",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>The velocity of the object in the simulation at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble dx(double time) {\n  final double t = (time \/ _duration).clamp(0.0, 1.0);\n  return _distance * _flingVelocityPenetration(t) * velocity.sign \/ _duration;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ClampingScrollSimulation\/dx.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ClampingScrollSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Whether the simulation is \"done\" at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool isDone(double time) {\n  return time &gt;= _duration;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ClampingScrollSimulation\/isDone.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ClampingScrollSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>The position of the object in the simulation at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble x(double time) {\n  final double t = (time \/ _duration).clamp(0.0, 1.0);\n  return position + _distance * _flingDistancePenetration(t) * velocity.sign;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ClampingScrollSimulation\/x.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ClampingScrollSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The amount of friction the particle experiences as it travels.<\/p>\n<p>The more friction the particle experiences, the sooner it stops.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double friction\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ClampingScrollSimulation\/friction.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "widgets.ClampingScrollSimulation",
            "params": []
        },
        {
            "desc": "<p>The position of the particle at the beginning of the simulation.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double position\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ClampingScrollSimulation\/position.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "widgets.ClampingScrollSimulation",
            "params": []
        },
        {
            "desc": "<p>The velocity at which the particle is traveling at the beginning of the\nsimulation.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double velocity\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ClampingScrollSimulation\/velocity.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "widgets.ClampingScrollSimulation",
            "params": []
        }
    ]
}