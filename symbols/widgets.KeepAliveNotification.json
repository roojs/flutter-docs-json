{
    "desc": "<p>Indicates that the subtree through which this notification bubbles must be\nkept alive even if it would normally be discarded as an optimization.<\/p>\n<p>For example, a focused text field might fire this notification to indicate\nthat it should not be disposed even if the user scrolls the field off\nscreen.<\/p>\n<p>Each <a href=\"widgets\/KeepAliveNotification-class.html\">KeepAliveNotification<\/a> is configured with a <a href=\"widgets\/KeepAliveNotification\/handle.html\">handle<\/a> that consists of\na <a href=\"foundation\/Listenable-class.html\">Listenable<\/a> that is triggered when the subtree no longer needs to be kept\nalive.<\/p>\n<p>The <a href=\"widgets\/KeepAliveNotification\/handle.html\">handle<\/a> should be triggered any time the sending widget is removed from\nthe tree (in <a href=\"widgets\/State\/deactivate.html\">State.deactivate<\/a>). If the widget is then rebuilt and still\nneeds to be kept alive, it should immediately send a new notification\n(possible with the very same <a href=\"foundation\/Listenable-class.html\">Listenable<\/a>) during build.<\/p>\n<p>This notification is listened to by the <a href=\"widgets\/AutomaticKeepAlive-class.html\">AutomaticKeepAlive<\/a> widget, which\nis added to the tree automatically by <a href=\"widgets\/SliverList-class.html\">SliverList<\/a> (and <a href=\"widgets\/ListView-class.html\">ListView<\/a>) and\n<a href=\"widgets\/SliverGrid-class.html\">SliverGrid<\/a> (and <a href=\"widgets\/GridView-class.html\">GridView<\/a>) widgets.<\/p>\n<p>Failure to trigger the <a href=\"widgets\/KeepAliveNotification\/handle.html\">handle<\/a> in the manner described above will likely\ncause the <a href=\"widgets\/AutomaticKeepAlive-class.html\">AutomaticKeepAlive<\/a> to lose track of whether the widget should be\nkept alive or not, leading to memory leaks or lost data. For example, if the\nwidget that requested keep-alive is removed from the subtree but doesn't\ntrigger its <a href=\"foundation\/Listenable-class.html\">Listenable<\/a> on the way out, then the subtree will continue to\nbe kept alive until the list itself is disposed. Similarly, if the\n<a href=\"foundation\/Listenable-class.html\">Listenable<\/a> is triggered while the widget needs to be kept alive, but a new\n<a href=\"widgets\/KeepAliveNotification-class.html\">KeepAliveNotification<\/a> is not immediately sent, then the widget risks being\ngarbage collected while it wants to be kept alive.<\/p>\n<p>It is an error to use the same <a href=\"widgets\/KeepAliveNotification\/handle.html\">handle<\/a> in two <a href=\"widgets\/KeepAliveNotification-class.html\">KeepAliveNotification<\/a>s\nwithin the same <a href=\"widgets\/AutomaticKeepAlive-class.html\">AutomaticKeepAlive<\/a> without triggering that <a href=\"widgets\/KeepAliveNotification\/handle.html\">handle<\/a> before\nthe second notification is sent.<\/p>\n<p>For a more convenient way to interact with <a href=\"widgets\/AutomaticKeepAlive-class.html\">AutomaticKeepAlive<\/a> widgets,\nconsider using <a href=\"widgets\/AutomaticKeepAliveClientMixin-mixin.html\">AutomaticKeepAliveClientMixin<\/a>, which uses\n<a href=\"widgets\/KeepAliveNotification-class.html\">KeepAliveNotification<\/a> internally.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "widgets\/KeepAliveNotification-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.KeepAliveNotification",
    "shortname": "KeepAliveNotification",
    "extends": [
        "widgets.Notification",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a notification to indicate that a subtree must be kept alive.<\/p>\n<p>The <code>handle<\/code> must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const KeepAliveNotification(this.handle) : assert(handle != null);<\/code><\/pre>\n    ",
            "href": "widgets\/KeepAliveNotification\/KeepAliveNotification.html",
            "isDeprecated": false,
            "type": "",
            "name": "KeepAliveNotification",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.KeepAliveNotification",
            "params": [
                {
                    "name": "handle",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Listenable"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>A <a href=\"foundation\/Listenable-class.html\">Listenable<\/a> that will inform its clients when the widget that fired the\nnotification no longer needs to be kept alive.<\/p>\n<p>The <a href=\"foundation\/Listenable-class.html\">Listenable<\/a> should be triggered any time the sending widget is\nremoved from the tree (in <a href=\"widgets\/State\/deactivate.html\">State.deactivate<\/a>). If the widget is then\nrebuilt and still needs to be kept alive, it should immediately send a new\nnotification (possible with the very same <a href=\"foundation\/Listenable-class.html\">Listenable<\/a>) during build.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/KeepAliveHandle-class.html\">KeepAliveHandle<\/a>, a convenience class for use with this property.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Listenable handle\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/KeepAliveNotification\/handle.html",
            "name": "handle",
            "isDeprecated": false,
            "type": "foundation.Listenable",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.KeepAliveNotification",
            "params": []
        }
    ]
}