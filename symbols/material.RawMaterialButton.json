{
    "name": "material.RawMaterialButton",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "material",
    "events": [
        {
            "name": "onHighlightChanged",
            "type": "foundation.ValueChanged<dart:core.bool>",
            "desc": "<p>Called by the underlying <a href=\"material\/InkWell-class.html\">InkWell<\/a> widget's <a href=\"material\/RawMaterialButton\/onHighlightChanged.html\">InkWell.onHighlightChanged<\/a>\ncallback.<\/p>\n<p>If <a href=\"material\/RawMaterialButton\/onPressed.html\">onPressed<\/a> changes from null to non-null while a gesture is ongoing,\nthis can fire during the build phase (in which case calling\n<a href=\"widgets\/State\/setState.html\">State.setState<\/a> is not allowed).<\/p>\n        ",
            "static": false,
            "memberOf": "",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "material\/RawMaterialButton\/onHighlightChanged.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueChanged&lt;bool&gt; onHighlightChanged\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false,
            "isConstant": false,
            "types": [
                "foundation.ValueChanged",
                "dart:core.bool"
            ]
        },
        {
            "name": "onPressed",
            "type": "dart:ui.VoidCallback",
            "desc": "<p>Called when the button is tapped or otherwise activated.<\/p>\n<p>If this is set to null, the button will be disabled, see <a href=\"material\/RawMaterialButton\/enabled.html\">enabled<\/a>.<\/p>\n        ",
            "static": false,
            "memberOf": "",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "material\/RawMaterialButton\/onPressed.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final VoidCallback onPressed\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false,
            "isConstant": false
        }
    ],
    "methods": [
        {
            "name": "RawMaterialButton",
            "type": "",
            "desc": "<p>Create a button based on <a href=\"widgets\/Semantics-class.html\">Semantics<\/a>, <a href=\"material\/Material-class.html\">Material<\/a>, and <a href=\"material\/InkWell-class.html\">InkWell<\/a> widgets.<\/p>\n<p>The <code>shape<\/code>, <code>elevation<\/code>, <code>highlightElevation<\/code>, <code>disabledElevation<\/code>,\n<code>padding<\/code>, <code>constraints<\/code>, and <code>clipBehavior<\/code> arguments must not be null.\nAdditionally, <code>elevation<\/code>, <code>highlightElevation<\/code>, and <code>disabledElevation<\/code>\nmust be non-negative.<\/p>\n    ",
            "static": false,
            "memberOf": "material.RawMaterialButton",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onPressed",
                    "type": "dart:ui.VoidCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onHighlightChanged",
                    "type": "foundation.ValueChanged<dart:core.bool>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "foundation.ValueChanged",
                        "dart:core.bool"
                    ]
                },
                {
                    "name": "textStyle",
                    "type": "painting.TextStyle",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "fillColor",
                    "type": "dart:ui.Color",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "highlightColor",
                    "type": "dart:ui.Color",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "splashColor",
                    "type": "dart:ui.Color",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "elevation",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "highlightElevation",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "disabledElevation",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "padding",
                    "type": "painting.EdgeInsetsGeometry",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "constraints",
                    "type": "rendering.BoxConstraints",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "shape",
                    "type": "painting.ShapeBorder",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "animationDuration",
                    "type": "dart:core.Duration",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "clipBehavior",
                    "type": "dart:ui.Clip",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "materialTapTargetSize",
                    "type": "material.MaterialTapTargetSize",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "child",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "material\/RawMaterialButton\/RawMaterialButton.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const RawMaterialButton({\n  Key key,\n  @required this.onPressed,\n  this.onHighlightChanged,\n  this.textStyle,\n  this.fillColor,\n  this.highlightColor,\n  this.splashColor,\n  this.elevation = 2.0,\n  this.highlightElevation = 8.0,\n  this.disabledElevation = 0.0,\n  this.padding = EdgeInsets.zero,\n  this.constraints = const BoxConstraints(minWidth: 88.0, minHeight: 36.0),\n  this.shape = const RoundedRectangleBorder(),\n  this.animationDuration = kThemeChangeDuration,\n  this.clipBehavior = Clip.none,\n  MaterialTapTargetSize materialTapTargetSize,\n  this.child,\n}) : materialTapTargetSize = materialTapTargetSize ?? MaterialTapTargetSize.padded,\n     assert(shape != null),\n     assert(elevation != null &amp;&amp; elevation &gt;= 0.0),\n     assert(highlightElevation != null &amp;&amp; highlightElevation &gt;= 0.0),\n     assert(disabledElevation != null &amp;&amp; disabledElevation &gt;= 0.0),\n     assert(padding != null),\n     assert(constraints != null),\n     assert(animationDuration != null),\n     assert(clipBehavior != null),\n     super(key: key);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "createState",
            "type": "",
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/RawMaterialButton\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "static": false,
            "memberOf": "material.RawMaterialButton",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "material\/RawMaterialButton\/createState.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_RawMaterialButtonState createState() =&gt; _RawMaterialButtonState();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "animationDuration",
            "type": "dart:core.Duration",
            "types": [],
            "desc": "<p>Defines the duration of animated changes for <a href=\"material\/RawMaterialButton\/shape.html\">shape<\/a> and <a href=\"material\/RawMaterialButton\/elevation.html\">elevation<\/a>.<\/p>\n<p>The default value is <a href=\"material\/kThemeChangeDuration-constant.html\">kThemeChangeDuration<\/a>.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/animationDuration.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Duration animationDuration\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "child",
            "type": "widgets.Widget",
            "types": [],
            "desc": "<p>Typically the button's label.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/child.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "clipBehavior",
            "type": "dart:ui.Clip",
            "types": [],
            "desc": "<p>The content will be clipped (or not) according to this option.<\/p>\n<p>See the enum <a href=\"dart-ui\/Clip-class.html\">Clip<\/a> for details of all possible options and their common\nuse cases.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/clipBehavior.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Clip clipBehavior\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "constraints",
            "type": "rendering.BoxConstraints",
            "types": [],
            "desc": "<p>Defines the button's size.<\/p>\n<p>Typically used to constrain the button's minimum size.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/constraints.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final BoxConstraints constraints\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "disabledElevation",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The elevation for the button's <a href=\"material\/Material-class.html\">Material<\/a> when the button\nis not <a href=\"material\/RawMaterialButton\/enabled.html\">enabled<\/a>.<\/p>\n<p>Defaults to 0.0. The value is always non-negative.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/RawMaterialButton\/elevation.html\">elevation<\/a>, the default elevation.<\/li>\n<li>\n<a href=\"material\/RawMaterialButton\/highlightElevation.html\">highlightElevation<\/a>, the elevation when the button is pressed.<\/li>\n<\/ul>",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/disabledElevation.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double disabledElevation\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "elevation",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The elevation for the button's <a href=\"material\/Material-class.html\">Material<\/a> when the button\nis <a href=\"material\/RawMaterialButton\/enabled.html\">enabled<\/a> but not pressed.<\/p>\n<p>Defaults to 2.0. The value is always non-negative.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/RawMaterialButton\/highlightElevation.html\">highlightElevation<\/a>, the default elevation.<\/li>\n<li>\n<a href=\"material\/RawMaterialButton\/disabledElevation.html\">disabledElevation<\/a>, the elevation when the button is disabled.<\/li>\n<\/ul>",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/elevation.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double elevation\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "enabled",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the button is enabled or disabled.<\/p>\n<p>Buttons are disabled by default. To enable a button, set its <a href=\"material\/RawMaterialButton\/onPressed.html\">onPressed<\/a>\nproperty to a non-null value.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/enabled.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get enabled =&gt; onPressed != null;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "fillColor",
            "type": "dart:ui.Color",
            "types": [],
            "desc": "<p>The color of the button's <a href=\"material\/Material-class.html\">Material<\/a>.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/fillColor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color fillColor\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "highlightColor",
            "type": "dart:ui.Color",
            "types": [],
            "desc": "<p>The highlight color for the button's <a href=\"material\/InkWell-class.html\">InkWell<\/a>.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/highlightColor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color highlightColor\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "highlightElevation",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The elevation for the button's <a href=\"material\/Material-class.html\">Material<\/a> when the button\nis <a href=\"material\/RawMaterialButton\/enabled.html\">enabled<\/a> and pressed.<\/p>\n<p>Defaults to 8.0. The value is always non-negative.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/RawMaterialButton\/elevation.html\">elevation<\/a>, the default elevation.<\/li>\n<li>\n<a href=\"material\/RawMaterialButton\/disabledElevation.html\">disabledElevation<\/a>, the elevation when the button is disabled.<\/li>\n<\/ul>",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/highlightElevation.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double highlightElevation\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "materialTapTargetSize",
            "type": "material.MaterialTapTargetSize",
            "types": [],
            "desc": "<p>Configures the minimum size of the tap target.<\/p>\n<p>Defaults to <a href=\"material\/MaterialTapTargetSize-class.html\">MaterialTapTargetSize.padded<\/a>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/MaterialTapTargetSize-class.html\">MaterialTapTargetSize<\/a>, for a description of how this affects tap targets.<\/li><\/ul>",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/materialTapTargetSize.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final MaterialTapTargetSize materialTapTargetSize\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "padding",
            "type": "painting.EdgeInsetsGeometry",
            "types": [],
            "desc": "<p>The internal padding for the button's <a href=\"material\/RawMaterialButton\/child.html\">child<\/a>.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/padding.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final EdgeInsetsGeometry padding\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "shape",
            "type": "painting.ShapeBorder",
            "types": [],
            "desc": "<p>The shape of the button's <a href=\"material\/Material-class.html\">Material<\/a>.<\/p>\n<p>The button's highlight and splash are clipped to this shape. If the\nbutton has an elevation, then its drop shadow is defined by this shape.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/shape.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ShapeBorder shape\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "splashColor",
            "type": "dart:ui.Color",
            "types": [],
            "desc": "<p>The splash color for the button's <a href=\"material\/InkWell-class.html\">InkWell<\/a>.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/splashColor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color splashColor\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "textStyle",
            "type": "painting.TextStyle",
            "types": [],
            "desc": "<p>Defines the default text style, with <a href=\"material\/RawMaterialButton\/textStyle.html\">Material.textStyle<\/a>, for the\nbutton's <a href=\"material\/RawMaterialButton\/child.html\">child<\/a>.<\/p>\n        ",
            "memberOf": "material.RawMaterialButton",
            "isConstant": false,
            "href": "material\/RawMaterialButton\/textStyle.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextStyle textStyle\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "material\/RawMaterialButton-class.html",
    "desc": "<p>Creates a button based on <a href=\"widgets\/Semantics-class.html\">Semantics<\/a>, <a href=\"material\/Material-class.html\">Material<\/a>, and <a href=\"material\/InkWell-class.html\">InkWell<\/a>\nwidgets.<\/p>\n<p>This class does not use the current <a href=\"material\/Theme-class.html\">Theme<\/a> or <a href=\"material\/ButtonTheme-class.html\">ButtonTheme<\/a> to\ncompute default values for unspecified parameters. It's intended to\nbe used for custom Material buttons that optionally incorporate defaults\nfrom the themes or from app-specific sources.<\/p>\n<p><a href=\"material\/RaisedButton-class.html\">RaisedButton<\/a> and <a href=\"material\/FlatButton-class.html\">FlatButton<\/a> configure a <a href=\"material\/RawMaterialButton-class.html\">RawMaterialButton<\/a> based\non the current <a href=\"material\/Theme-class.html\">Theme<\/a> and <a href=\"material\/ButtonTheme-class.html\">ButtonTheme<\/a>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "RawMaterialButton"
}