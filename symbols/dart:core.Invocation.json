{
    "name": "dart:core.Invocation",
    "extends": [],
    "memberOf": "dart:core",
    "events": [],
    "methods": [
        {
            "name": "Invocation",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:core.Invocation",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "dart-core\/Invocation\/Invocation.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Invocation();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "Invocation.genericMethod",
            "type": "",
            "desc": "<p>Creates an invocation corresponding to a generic method invocation.<\/p>\n<p>If <code>typeArguments<\/code> is <code>null<\/code> or empty, the constructor is equivalent to\ncalling <a href=\"dart-core\/Invocation\/Invocation.method.html\">Invocation.method<\/a> with the remaining arguments.\nAll the individual type arguments must be non-null.<\/p>\n<p>If the named arguments are omitted, they default to no named arguments.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Invocation",
            "sig": "",
            "params": [
                {
                    "name": "memberName",
                    "type": "dart:core.Symbol",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "typeArguments",
                    "type": "dart:core.Iterable<dart:core.Type>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Iterable",
                        "dart:core.Type"
                    ]
                },
                {
                    "name": "positionalArguments",
                    "type": "dart:core.Iterable<dart:core.Object>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Iterable",
                        "dart:core.Object"
                    ]
                },
                {
                    "name": "namedArguments",
                    "type": "dart:core.Map<dart:core.Symbol<dart:core.Object>>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Map",
                        "dart:core.Symbol",
                        "dart:core.Object"
                    ]
                }
            ],
            "isConstructor": true,
            "href": "dart-core\/Invocation\/Invocation.genericMethod.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory Invocation.genericMethod(Symbol memberName,\n        Iterable&lt;Type&gt; typeArguments, Iterable&lt;Object&gt; positionalArguments,\n        [Map&lt;Symbol, Object&gt; namedArguments]) =&gt;\n    new _Invocation.method(\n        memberName, typeArguments, positionalArguments, namedArguments);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "Invocation.getter",
            "type": "",
            "desc": "<p>Creates an invocation corresponding to a getter invocation.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Invocation",
            "sig": "",
            "params": [
                {
                    "name": "name",
                    "type": "dart:core.Symbol",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-core\/Invocation\/Invocation.getter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory Invocation.getter(Symbol name) = _Invocation.getter;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "Invocation.method",
            "type": "",
            "desc": "<p>Creates an invocation corresponding to a method invocation.<\/p>\n<p>The method invocation has no type arguments.\nIf the named arguments are omitted, they default to no named arguments.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Invocation",
            "sig": "",
            "params": [
                {
                    "name": "memberName",
                    "type": "dart:core.Symbol",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "positionalArguments",
                    "type": "dart:core.Iterable<dart:core.Object>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Iterable",
                        "dart:core.Object"
                    ]
                },
                {
                    "name": "namedArguments",
                    "type": "dart:core.Map<dart:core.Symbol<dart:core.Object>>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Map",
                        "dart:core.Symbol",
                        "dart:core.Object"
                    ]
                }
            ],
            "isConstructor": true,
            "href": "dart-core\/Invocation\/Invocation.method.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory Invocation.method(\n        Symbol memberName, Iterable&lt;Object&gt; positionalArguments,\n        [Map&lt;Symbol, Object&gt; namedArguments]) =&gt;\n    new _Invocation.method(\n        memberName, null, positionalArguments, namedArguments);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "Invocation.setter",
            "type": "",
            "desc": "<p>Creates an invocation corresponding to a setter invocation.<\/p>\n<p>This constructor accepts any <a href=\"dart-core\/Symbol-class.html\">Symbol<\/a> as <code>memberName<\/code>, but remember that\n<em>actual setter names<\/em> end in <code>=<\/code>, so the invocation corresponding\nto <code>object.member = value<\/code> is<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">Invocation.setter(const Symbol(\"member=\"), value)\n<\/code><\/pre>\n    ",
            "static": false,
            "memberOf": "dart:core.Invocation",
            "sig": "",
            "params": [
                {
                    "name": "memberName",
                    "type": "dart:core.Symbol",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "argument",
                    "type": "dart:core.Object",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-core\/Invocation\/Invocation.setter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory Invocation.setter(Symbol memberName, Object argument) =\n    _Invocation.setter;<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "isAccessor",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the invocation was a getter or a setter call.<\/p>\n        ",
            "memberOf": "dart:core.Invocation",
            "isConstant": false,
            "href": "dart-core\/Invocation\/isAccessor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isAccessor =&gt; isGetter || isSetter;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "isGetter",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the invocation was a getter call.\nIf so, all three types of arguments lists are empty.<\/p>\n        ",
            "memberOf": "dart:core.Invocation",
            "isConstant": false,
            "href": "dart-core\/Invocation\/isGetter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isGetter;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "isMethod",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the invocation was a method call.<\/p>\n        ",
            "memberOf": "dart:core.Invocation",
            "isConstant": false,
            "href": "dart-core\/Invocation\/isMethod.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isMethod;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "isSetter",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the invocation was a setter call.<\/p>\n<p>If so, <a href=\"dart-core\/Invocation\/positionalArguments.html\">positionalArguments<\/a> has exactly one positional\nargument, <a href=\"dart-core\/Invocation\/namedArguments.html\">namedArguments<\/a> is empty, and typeArguments is\nempty.<\/p>\n        ",
            "memberOf": "dart:core.Invocation",
            "isConstant": false,
            "href": "dart-core\/Invocation\/isSetter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isSetter;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "memberName",
            "type": "dart:core.Symbol",
            "types": [],
            "desc": "<p>The name of the invoked member.<\/p>\n        ",
            "memberOf": "dart:core.Invocation",
            "isConstant": false,
            "href": "dart-core\/Invocation\/memberName.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Symbol get memberName;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "namedArguments",
            "type": "dart:core.Map<dart:core.Symbol>",
            "types": [
                "dart:core.Map",
                "dart:core.Symbol"
            ],
            "desc": "<p>An unmodifiable view of the named arguments of the call.<\/p>\n<p>If the member is a getter, setter or operator,\nthe named arguments map is always empty.<\/p>\n        ",
            "memberOf": "dart:core.Invocation",
            "isConstant": false,
            "href": "dart-core\/Invocation\/namedArguments.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Map&lt;Symbol, dynamic&gt; get namedArguments;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "positionalArguments",
            "type": "dart:core.List",
            "types": [],
            "desc": "<p>An unmodifiable view of the positional arguments of the call.<\/p>\n<p>If the member is a getter, the positional arguments list is\nalways empty.<\/p>\n        ",
            "memberOf": "dart:core.Invocation",
            "isConstant": false,
            "href": "dart-core\/Invocation\/positionalArguments.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;dynamic&gt; get positionalArguments;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "typeArguments",
            "type": "dart:core.List<dart:core.Type>",
            "types": [
                "dart:core.List",
                "dart:core.Type"
            ],
            "desc": "<p>An unmodifiable view of the type arguments of the call.<\/p>\n<p>If the member is a getter, setter or operator,\nthe type argument list is always empty.<\/p>\n        ",
            "memberOf": "dart:core.Invocation",
            "isConstant": false,
            "href": "dart-core\/Invocation\/typeArguments.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;Type&gt; get typeArguments =&gt; const &lt;Type&gt;[];<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-core\/Invocation-class.html",
    "desc": "<p>Representation of the invocation of a member on an object.<\/p>\n<p>This is the type of objects passed to <a href=\"dart-core\/Object\/noSuchMethod.html\">Object.noSuchMethod<\/a> when\nan object doesn't support the member invocation that was attempted\non it.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Invocation"
}