{
    "desc": "<p>The system encoding is the current code page on Windows and UTF-8 on Linux\nand Mac.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-io\/SystemEncoding-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:io",
    "name": "dart:io.SystemEncoding",
    "shortname": "SystemEncoding",
    "extends": [
        "dart:convert.Encoding",
        "dart:core.int",
        "dart:core.List",
        "dart:core.String",
        "dart:convert.Codec",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a const SystemEncoding.<\/p>\n<p>Users should use the top-level constant, <a href=\"dart-io\/systemEncoding-constant.html\">systemEncoding<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SystemEncoding();<\/code><\/pre>\n    ",
            "href": "dart-io\/SystemEncoding\/SystemEncoding.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:io.SystemEncoding",
            "params": []
        },
        {
            "desc": "<p>Decodes <code>encoded<\/code> data.<\/p>\n<p>The input is decoded as if by <code>decoder.convert<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String decode(List&lt;int&gt; encoded) =&gt; decoder.convert(encoded);<\/code><\/pre>\n    ",
            "href": "dart-io\/SystemEncoding\/decode.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.SystemEncoding",
            "params": [
                {
                    "name": "encoded",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.int>"
                }
            ]
        },
        {
            "desc": "<p>Encodes <code>input<\/code>.<\/p>\n<p>The input is encoded as if by <code>encoder.convert<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;int&gt; encode(String input) =&gt; encoder.convert(input);<\/code><\/pre>\n    ",
            "href": "dart-io\/SystemEncoding\/encode.html",
            "isDeprecated": "0",
            "type": "dart:core.List<dart:core.int>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.SystemEncoding",
            "params": [
                {
                    "name": "input",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns the decoder of <code>this<\/code>, converting from <code>List&lt;int&gt;<\/code> to <code>String<\/code>.<\/p>\n<p>It may be stateful and should not be reused.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Converter&lt;List&lt;int&gt;, String&gt; get decoder {\n  if (Platform.operatingSystem == \"windows\") {\n    return const _WindowsCodePageDecoder();\n  } else {\n    return const Utf8Decoder();\n  }\n}<\/code><\/pre>\n        ",
            "href": "dart-io\/SystemEncoding\/decoder.html",
            "isDeprecated": "0",
            "type": "dart:convert.Converter<dart:core.List<dart:core.int<dart:core.String>>>",
            "memberOf": "dart:io.SystemEncoding",
            "params": []
        },
        {
            "desc": "<p>Returns the encoder from <code>String<\/code> to <code>List&lt;int&gt;<\/code>.<\/p>\n<p>It may be stateful and should not be reused.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Converter&lt;String, List&lt;int&gt;&gt; get encoder {\n  if (Platform.operatingSystem == \"windows\") {\n    return const _WindowsCodePageEncoder();\n  } else {\n    return const Utf8Encoder();\n  }\n}<\/code><\/pre>\n        ",
            "href": "dart-io\/SystemEncoding\/encoder.html",
            "isDeprecated": "0",
            "type": "dart:convert.Converter<dart:core.String<dart:core.List<dart:core.int>>>",
            "memberOf": "dart:io.SystemEncoding",
            "params": []
        },
        {
            "desc": "<p>Name of the encoding.<\/p>\n<p>If the encoding is standardized, this is the lower-case version of one of\nthe IANA official names for the character set (see\n<a href=\"http:\/\/www.iana.org\/assignments\/character-sets\/character-sets.xml\">http:\/\/www.iana.org\/assignments\/character-sets\/character-sets.xml<\/a>)<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get name =&gt; 'system';<\/code><\/pre>\n        ",
            "href": "dart-io\/SystemEncoding\/name.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "dart:io.SystemEncoding",
            "params": []
        }
    ]
}