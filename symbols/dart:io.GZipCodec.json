{
    "desc": "<p>The <a href=\"dart-io\/GZipCodec-class.html\">GZipCodec<\/a> encodes raw bytes to GZip compressed bytes and decodes GZip\ncompressed bytes to raw bytes.<\/p>\n<p>The difference between <a href=\"dart-io\/ZLibCodec-class.html\">ZLibCodec<\/a> and <a href=\"dart-io\/GZipCodec-class.html\">GZipCodec<\/a> is that the <a href=\"dart-io\/GZipCodec-class.html\">GZipCodec<\/a>\nwraps the <code>ZLib<\/code> compressed bytes in <code>GZip<\/code> frames.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-io\/GZipCodec-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:io",
    "name": "dart:io.GZipCodec",
    "shortname": "GZipCodec",
    "extends": [
        "dart:core.int",
        "dart:core.List",
        "dart:core.int",
        "dart:core.List",
        "dart:convert.Codec",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">GZipCodec(\n    {this.level: ZLibOption.defaultLevel,\n    this.windowBits: ZLibOption.defaultWindowBits,\n    this.memLevel: ZLibOption.defaultMemLevel,\n    this.strategy: ZLibOption.strategyDefault,\n    this.dictionary,\n    this.raw: false,\n    this.gzip: true}) {\n  _validateZLibeLevel(level);\n  _validateZLibMemLevel(memLevel);\n  _validateZLibStrategy(strategy);\n  _validateZLibWindowBits(windowBits);\n}<\/code><\/pre>\n    ",
            "href": "dart-io\/GZipCodec\/GZipCodec.html",
            "isDeprecated": false,
            "type": "",
            "name": "GZipCodec",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:io.GZipCodec",
            "params": [
                {
                    "name": "dictionary",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.List<dart:core.int>"
                },
                {
                    "name": "gzip",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "level",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "memLevel",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "raw",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "strategy",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "windowBits",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Get a <a href=\"dart-io\/ZLibDecoder-class.html\">ZLibDecoder<\/a> for decoding <code>GZip<\/code> compressed data.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ZLibDecoder get decoder =&gt;\n    new ZLibDecoder(windowBits: windowBits, dictionary: dictionary, raw: raw);<\/code><\/pre>\n        ",
            "href": "dart-io\/GZipCodec\/decoder.html",
            "name": "decoder",
            "isDeprecated": false,
            "type": "dart:io.ZLibDecoder",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.GZipCodec",
            "params": []
        },
        {
            "desc": "<p>Initial compression dictionary.<\/p>\n<p>It should consist of strings (byte sequences) that are likely to be\nencountered later in the data to be compressed, with the most commonly used\nstrings preferably put towards the end of the dictionary. Using a\ndictionary is most useful when the data to be compressed is short and can\nbe predicted with good accuracy; the data can then be compressed better\nthan with the default empty dictionary.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;int&gt; dictionary\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/GZipCodec\/dictionary.html",
            "name": "dictionary",
            "isDeprecated": false,
            "type": "dart:core.List<dart:core.int>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.GZipCodec",
            "params": []
        },
        {
            "desc": "<p>Get a <a href=\"dart-io\/ZLibEncoder-class.html\">ZLibEncoder<\/a> for encoding to <code>GZip<\/code> compressed data.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ZLibEncoder get encoder =&gt; new ZLibEncoder(\n    gzip: true,\n    level: level,\n    windowBits: windowBits,\n    memLevel: memLevel,\n    strategy: strategy,\n    dictionary: dictionary,\n    raw: raw);<\/code><\/pre>\n        ",
            "href": "dart-io\/GZipCodec\/encoder.html",
            "name": "encoder",
            "isDeprecated": false,
            "type": "dart:io.ZLibEncoder",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.GZipCodec",
            "params": []
        },
        {
            "desc": "<p>When true, <code>GZip<\/code> frames will be added to the compressed data.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool gzip\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/GZipCodec\/gzip.html",
            "name": "gzip",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.GZipCodec",
            "params": []
        },
        {
            "desc": "<p>The compression-<a href=\"dart-io\/GZipCodec\/level.html\">level<\/a> can be set in the range of <code>-1..9<\/code>, with <code>6<\/code> being\nthe default compression level. Levels above <code>6<\/code> will have higher\ncompression rates at the cost of more CPU and memory usage. Levels below\n<code>6<\/code> will use less CPU and memory at the cost of lower compression rates.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int level\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/GZipCodec\/level.html",
            "name": "level",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.GZipCodec",
            "params": []
        },
        {
            "desc": "<p>Specifies how much memory should be allocated for the internal compression\nstate. <code>1<\/code> uses minimum memory but is slow and reduces compression ratio;\n<code>9<\/code> uses maximum memory for optimal speed. The default value is <code>8<\/code>.<\/p>\n<p>The memory requirements for deflate are (in bytes):<\/p>\n<pre class=\"language-dart\"><code>(1 &lt;&lt; (windowBits + 2)) +  (1 &lt;&lt; (memLevel + 9))\n<\/code><\/pre>\n<p>that is: 128K for windowBits = 15 + 128K for memLevel = 8 (default values)<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int memLevel\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/GZipCodec\/memLevel.html",
            "name": "memLevel",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.GZipCodec",
            "params": []
        },
        {
            "desc": "<p>When true, deflate generates raw data with no zlib header or trailer, and\nwill not compute an adler32 check value<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool raw\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/GZipCodec\/raw.html",
            "name": "raw",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.GZipCodec",
            "params": []
        },
        {
            "desc": "<p>Tunes the compression algorithm. Use the value\n<a href=\"dart-io\/ZLibOption\/strategyDefault-constant.html\">ZLibOption.strategyDefault<\/a> for normal data,\n<a href=\"dart-io\/ZLibOption\/strategyFiltered-constant.html\">ZLibOption.strategyFiltered<\/a> for data produced by a filter\n(or predictor), <a href=\"dart-io\/ZLibOption\/strategyHuffmanOnly-constant.html\">ZLibOption.strategyHuffmanOnly<\/a> to force Huffman\nencoding only (no string match), or <a href=\"dart-io\/ZLibOption\/strategyRle-constant.html\">ZLibOption.strategyRle<\/a> to limit\nmatch distances to one (run-length encoding).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int strategy\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/GZipCodec\/strategy.html",
            "name": "strategy",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.GZipCodec",
            "params": []
        },
        {
            "desc": "<p>Base two logarithm of the window size (the size of the history buffer). It\nshould be in the range <code>8..15<\/code>. Larger values result in better compression\nat the expense of memory usage. The default value is <code>15<\/code><\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int windowBits\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/GZipCodec\/windowBits.html",
            "name": "windowBits",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.GZipCodec",
            "params": []
        }
    ]
}