{
    "name": "dart:collection.DoubleLinkedQueueEntry",
    "extends": [],
    "memberOf": "dart:collection",
    "events": [],
    "methods": [
        {
            "name": "DoubleLinkedQueueEntry",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:collection.DoubleLinkedQueueEntry",
            "sig": "",
            "params": [
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": true,
            "href": "dart-collection\/DoubleLinkedQueueEntry\/DoubleLinkedQueueEntry.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">DoubleLinkedQueueEntry(this.element);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "append",
            "type": "",
            "desc": "<p>Appends the given <code>e<\/code> as entry just after this entry.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:collection.DoubleLinkedQueueEntry",
            "sig": "",
            "params": [
                {
                    "name": "e",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "dart-collection\/DoubleLinkedQueueEntry\/append.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void append(E e) {\n  DoubleLinkedQueueEntry&lt;E&gt;(e)._link(this, _nextLink);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "nextEntry",
            "type": "dart:collection.DoubleLinkedQueueEntry",
            "desc": "<p>Returns the next entry or <code>null<\/code> if there is none.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:collection.DoubleLinkedQueueEntry",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-collection\/DoubleLinkedQueueEntry\/nextEntry.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">DoubleLinkedQueueEntry&lt;E&gt; nextEntry() =&gt; _nextLink;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "prepend",
            "type": "",
            "desc": "<p>Prepends the given <code>e<\/code> as entry just before this entry.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:collection.DoubleLinkedQueueEntry",
            "sig": "",
            "params": [
                {
                    "name": "e",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "dart-collection\/DoubleLinkedQueueEntry\/prepend.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void prepend(E e) {\n  DoubleLinkedQueueEntry&lt;E&gt;(e)._link(_previousLink, this);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "previousEntry",
            "type": "dart:collection.DoubleLinkedQueueEntry",
            "desc": "<p>Returns the previous entry or <code>null<\/code> if there is none.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:collection.DoubleLinkedQueueEntry",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-collection\/DoubleLinkedQueueEntry\/previousEntry.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">DoubleLinkedQueueEntry&lt;E&gt; previousEntry() =&gt; _previousLink;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "remove",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:collection.DoubleLinkedQueueEntry",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-collection\/DoubleLinkedQueueEntry\/remove.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">E remove() {\n  _unlink();\n  return element;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "element",
            "type": "",
            "types": [],
            "desc": "<p>The element in the queue.<\/p>\n        ",
            "memberOf": "dart:collection.DoubleLinkedQueueEntry",
            "isConstant": false,
            "href": "dart-collection\/DoubleLinkedQueueEntry\/element.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">E element\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-collection\/DoubleLinkedQueueEntry-class.html",
    "desc": "<p>An entry in a doubly linked list. It contains a pointer to the next\nentry, the previous entry, and the boxed element.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "DoubleLinkedQueueEntry"
}