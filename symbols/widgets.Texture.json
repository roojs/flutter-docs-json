{
    "desc": "<p>A rectangle upon which a backend texture is mapped.<\/p>\n<p>Backend textures are images that can be applied (mapped) to an area of the\nFlutter view. They are created, managed, and updated using a\nplatform-specific texture registry. This is typically done by a plugin\nthat integrates with host platform video player, camera, or OpenGL APIs,\nor similar image sources.<\/p>\n<p>A texture widget refers to its backend texture using an integer ID. Texture\nIDs are obtained from the texture registry and are scoped to the Flutter\nview. Texture IDs may be reused after deregistration, at the discretion\nof the registry. The use of texture IDs currently unknown to the registry\nwill silently result in a blank rectangle.<\/p>\n<p>Texture widgets are repainted autonomously as dictated by the backend (e.g.\non arrival of a video frame). Such repainting generally does not involve\nexecuting Dart code.<\/p>\n<p>The size of the rectangle is determined by its parent widget, and the\ntexture is automatically scaled to fit.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"https:\/\/docs.flutter.io\/javadoc\/io\/flutter\/view\/TextureRegistry.html\">docs.flutter.io\/javadoc\/io\/flutter\/view\/TextureRegistry.html<\/a>\nfor how to create and manage backend textures on Android.<\/li>\n<li>\n<a href=\"https:\/\/docs.flutter.io\/objcdoc\/Protocols\/FlutterTextureRegistry.html\">docs.flutter.io\/objcdoc\/Protocols\/FlutterTextureRegistry.html<\/a>\nfor how to create and manage backend textures on iOS.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": null,
    "href": "widgets\/Texture-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.Texture",
    "shortname": "Texture",
    "extends": [
        "widgets.LeafRenderObjectWidget",
        "widgets.RenderObjectWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a widget backed by the texture identified by <code>textureId<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Texture({\n  Key key,\n  @required this.textureId,\n}) : assert(textureId != null),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "widgets\/Texture\/Texture.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.Texture",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "textureId",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Creates an instance of the <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> class that this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> represents, using the configuration described by this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a>.<\/p>\n<p>This method should not do anything with the children of the render object.\nThat should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/mount.html\">RenderObjectElement.mount<\/a> in the object rendered by this object's\n<a href=\"widgets\/LeafRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/mount.html\">SingleChildRenderObjectElement.mount<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nTextureBox createRenderObject(BuildContext context) =&gt; TextureBox(textureId: textureId);<\/code><\/pre>\n    ",
            "href": "widgets\/Texture\/createRenderObject.html",
            "isDeprecated": "0",
            "type": "rendering.TextureBox",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.Texture",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>Copies the configuration described by this <a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> to the\ngiven <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a>, which will be of the same type as returned by this\nobject's <a href=\"widgets\/Texture\/createRenderObject.html\">createRenderObject<\/a>.<\/p>\n<p>This method should not do anything to update the children of the render\nobject. That should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/update.html\">RenderObjectElement.update<\/a> in the object rendered by this object's\n<a href=\"widgets\/LeafRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/update.html\">SingleChildRenderObjectElement.update<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid updateRenderObject(BuildContext context, TextureBox renderObject) {\n  renderObject.textureId = textureId;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/Texture\/updateRenderObject.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.Texture",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "renderObject",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "rendering.TextureBox"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The identity of the backend texture.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int textureId\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/Texture\/textureId.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "widgets.Texture",
            "params": []
        }
    ]
}