{
    "name": "dart:isolate.RawReceivePort",
    "extends": [],
    "memberOf": "dart:isolate",
    "events": [],
    "methods": [
        {
            "name": "RawReceivePort",
            "type": "",
            "desc": "<p>Opens a long-lived port for receiving messages.<\/p>\n<p>A <a href=\"dart-isolate\/RawReceivePort-class.html\">RawReceivePort<\/a> is low level and does not work with <a href=\"dart-async\/Zone-class.html\">Zone<\/a>s. It\ncan not be paused. The data-handler must be set before the first\nevent is received.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:isolate.RawReceivePort",
            "sig": "",
            "params": [
                {
                    "name": "handler",
                    "type": "dart:core.Function",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-isolate\/RawReceivePort\/RawReceivePort.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">external factory RawReceivePort([Function handler]);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "close",
            "type": "",
            "desc": "<p>Closes the port.<\/p>\n<p>After a call to this method any incoming message is silently dropped.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:isolate.RawReceivePort",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-isolate\/RawReceivePort\/close.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void close();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "handler",
            "type": "",
            "types": [],
            "desc": "<p>Sets the handler that is invoked for every incoming message.<\/p>\n<p>The handler is invoked in the root-zone (<a href=\"dart-async\/Zone\/root-constant.html\">Zone.root<\/a>).<\/p>\n        ",
            "memberOf": "dart:isolate.RawReceivePort",
            "isConstant": false,
            "href": "dart-isolate\/RawReceivePort\/handler.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">void set handler(Function newHandler);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "sendPort",
            "type": "dart:isolate.SendPort",
            "types": [],
            "desc": "<p>Returns a <a href=\"dart-isolate\/SendPort-class.html\">SendPort<\/a> that sends to this raw receive port.<\/p>\n        ",
            "memberOf": "dart:isolate.RawReceivePort",
            "isConstant": false,
            "href": "dart-isolate\/RawReceivePort\/sendPort.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">SendPort get sendPort;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-isolate\/RawReceivePort-class.html",
    "desc": "",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "RawReceivePort"
}