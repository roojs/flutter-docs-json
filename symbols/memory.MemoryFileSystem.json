{
    "name": "memory.MemoryFileSystem",
    "extends": [],
    "memberOf": "memory",
    "events": [],
    "methods": [
        {
            "name": "MemoryFileSystem",
            "type": "",
            "desc": "<p>Creates a new <code>MemoryFileSystem<\/code>.<\/p>\n<p>The file system will be empty, and the current directory will be the\nroot directory.<\/p>\n<p>If <code>style<\/code> is specified, the file system will use the specified path\nstyle. The default is <a href=\"package-file_memory\/FileSystemStyle\/posix-constant.html\">FileSystemStyle.posix<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "memory.MemoryFileSystem",
            "sig": "",
            "params": [
                {
                    "name": "style",
                    "type": "memory.FileSystemStyle",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-file_memory\/MemoryFileSystem\/MemoryFileSystem.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory MemoryFileSystem({FileSystemStyle style}) = _MemoryFileSystem;<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "package-file_memory\/MemoryFileSystem-class.html",
    "desc": "<p>An implementation of <a href=\"package-file_file\/FileSystem-class.html\">FileSystem<\/a> that exists entirely in memory with an\ninternal representation loosely based on the Filesystem Hierarchy Standard.<\/p>\n<p><a href=\"package-file_memory\/MemoryFileSystem-class.html\">MemoryFileSystem<\/a> is suitable for mocking and tests, as well as for\ncaching or staging before writing or reading to a live system.<\/p>\n<p>This implementation of the <a href=\"package-file_file\/FileSystem-class.html\">FileSystem<\/a> interface does not directly use\nany <code>dart:io<\/code> APIs; it merely uses the library's enum values and interfaces.\nAs such, it is suitable for use in the browser.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "MemoryFileSystem"
}