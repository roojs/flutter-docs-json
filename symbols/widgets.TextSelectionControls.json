{
    "desc": "<p>An interface for building the selection UI, to be provided by the\nimplementor of the toolbar widget.<\/p>\n<p>Override text operations such as <a href=\"widgets\/TextSelectionControls\/handleCut.html\">handleCut<\/a> if needed.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "widgets\/TextSelectionControls-class.html",
    "isAbstract": true,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "widgets",
    "name": "widgets.TextSelectionControls",
    "shortname": "TextSelectionControls",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "",
            "example": "",
            "href": "widgets\/TextSelectionControls\/TextSelectionControls.html",
            "isDeprecated": false,
            "type": "",
            "name": "TextSelectionControls",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": []
        },
        {
            "desc": "<p>Builds a selection handle of the given type.<\/p>\n<p>The top left corner of this widget is positioned at the bottom of the\nselection position.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Widget buildHandle(BuildContext context, TextSelectionHandleType type, double textLineHeight);<\/code><\/pre>\n    ",
            "href": "widgets\/TextSelectionControls\/buildHandle.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "buildHandle",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "textLineHeight",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "type",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.TextSelectionHandleType"
                }
            ]
        },
        {
            "desc": "<p>Builds a toolbar near a text selection.<\/p>\n<p>Typically displays buttons for copying and pasting text.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Widget buildToolbar(BuildContext context, Rect globalEditableRegion, Offset position, TextSelectionDelegate delegate);<\/code><\/pre>\n    ",
            "href": "widgets\/TextSelectionControls\/buildToolbar.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "buildToolbar",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextSelectionDelegate"
                },
                {
                    "name": "globalEditableRegion",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.Rect"
                },
                {
                    "name": "position",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                }
            ]
        },
        {
            "desc": "<p>Whether the current selection of the text field managed by the given\n<code>delegate<\/code> can be copied to the <a href=\"services\/Clipboard-class.html\">Clipboard<\/a>.<\/p>\n<p>By default, false is returned when nothing is selected in the text field.<\/p>\n<p>Subclasses can use this to decide if they should expose the copy\nfunctionality to the user.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool canCopy(TextSelectionDelegate delegate) {\n  return !delegate.textEditingValue.selection.isCollapsed;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/TextSelectionControls\/canCopy.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "canCopy",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": [
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextSelectionDelegate"
                }
            ]
        },
        {
            "desc": "<p>Whether the current selection of the text field managed by the given\n<code>delegate<\/code> can be removed from the text field and placed into the\n<a href=\"services\/Clipboard-class.html\">Clipboard<\/a>.<\/p>\n<p>By default, false is returned when nothing is selected in the text field.<\/p>\n<p>Subclasses can use this to decide if they should expose the cut\nfunctionality to the user.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool canCut(TextSelectionDelegate delegate) {\n  return !delegate.textEditingValue.selection.isCollapsed;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/TextSelectionControls\/canCut.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "canCut",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": [
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextSelectionDelegate"
                }
            ]
        },
        {
            "desc": "<p>Whether the current <a href=\"services\/Clipboard-class.html\">Clipboard<\/a> content can be pasted into the text field\nmanaged by the given <code>delegate<\/code>.<\/p>\n<p>Subclasses can use this to decide if they should expose the paste\nfunctionality to the user.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool canPaste(TextSelectionDelegate delegate) {\n  \/\/ TODO(goderbauer): return false when clipboard is empty, https:\/\/github.com\/flutter\/flutter\/issues\/11254\n  return true;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/TextSelectionControls\/canPaste.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "canPaste",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": [
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextSelectionDelegate"
                }
            ]
        },
        {
            "desc": "<p>Whether the current selection of the text field managed by the given\n<code>delegate<\/code> can be extended to include the entire content of the text\nfield.<\/p>\n<p>Subclasses can use this to decide if they should expose the select all\nfunctionality to the user.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool canSelectAll(TextSelectionDelegate delegate) {\n  return delegate.textEditingValue.text.isNotEmpty &amp;&amp; delegate.textEditingValue.selection.isCollapsed;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/TextSelectionControls\/canSelectAll.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "canSelectAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": [
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextSelectionDelegate"
                }
            ]
        },
        {
            "desc": "<p>Copy the current selection of the text field managed by the given\n<code>delegate<\/code> to the <a href=\"services\/Clipboard-class.html\">Clipboard<\/a>. Then, move the cursor to the end of the\ntext (collapsing the selection in the process), and hide the toolbar.<\/p>\n<p>This is called by subclasses when their copy affordance is activated by\nthe user.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void handleCopy(TextSelectionDelegate delegate) {\n  final TextEditingValue value = delegate.textEditingValue;\n  Clipboard.setData(ClipboardData(\n    text: value.selection.textInside(value.text),\n  ));\n  delegate.textEditingValue = TextEditingValue(\n    text: value.text,\n    selection: TextSelection.collapsed(offset: value.selection.end),\n  );\n  delegate.bringIntoView(delegate.textEditingValue.selection.extent);\n  delegate.hideToolbar();\n}<\/code><\/pre>\n    ",
            "href": "widgets\/TextSelectionControls\/handleCopy.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "handleCopy",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": [
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextSelectionDelegate"
                }
            ]
        },
        {
            "desc": "<p>Copy the current selection of the text field managed by the given\n<code>delegate<\/code> to the <a href=\"services\/Clipboard-class.html\">Clipboard<\/a>. Then, remove the selected text from the\ntext field and hide the toolbar.<\/p>\n<p>This is called by subclasses when their cut affordance is activated by\nthe user.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void handleCut(TextSelectionDelegate delegate) {\n  final TextEditingValue value = delegate.textEditingValue;\n  Clipboard.setData(ClipboardData(\n    text: value.selection.textInside(value.text),\n  ));\n  delegate.textEditingValue = TextEditingValue(\n    text: value.selection.textBefore(value.text)\n        + value.selection.textAfter(value.text),\n    selection: TextSelection.collapsed(\n      offset: value.selection.start\n    ),\n  );\n  delegate.bringIntoView(delegate.textEditingValue.selection.extent);\n  delegate.hideToolbar();\n}<\/code><\/pre>\n    ",
            "href": "widgets\/TextSelectionControls\/handleCut.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "handleCut",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": [
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextSelectionDelegate"
                }
            ]
        },
        {
            "desc": "<p>Paste the current clipboard selection (obtained from <a href=\"services\/Clipboard-class.html\">Clipboard<\/a>) into\nthe text field managed by the given <code>delegate<\/code>, replacing its current\nselection, if any. Then, hide the toolbar.<\/p>\n<p>This is called by subclasses when their paste affordance is activated by\nthe user.<\/p>\n<p>This function is asynchronous since interacting with the clipboard is\nasynchronous. Race conditions may exist with this API as currently\nimplemented.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">\/\/ TODO(ianh): https:\/\/github.com\/flutter\/flutter\/issues\/11427\nFuture&lt;void&gt; handlePaste(TextSelectionDelegate delegate) async {\n  final TextEditingValue value = delegate.textEditingValue; \/\/ Snapshot the input before using `await`.\n  final ClipboardData data = await Clipboard.getData(Clipboard.kTextPlain);\n  if (data != null) {\n    delegate.textEditingValue = TextEditingValue(\n      text: value.selection.textBefore(value.text)\n          + data.text\n          + value.selection.textAfter(value.text),\n      selection: TextSelection.collapsed(\n        offset: value.selection.start + data.text.length\n      ),\n    );\n  }\n  delegate.bringIntoView(delegate.textEditingValue.selection.extent);\n  delegate.hideToolbar();\n}<\/code><\/pre>\n    ",
            "href": "widgets\/TextSelectionControls\/handlePaste.html",
            "isDeprecated": false,
            "type": "dart:async.Future",
            "name": "handlePaste",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": [
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextSelectionDelegate"
                }
            ]
        },
        {
            "desc": "<p>Adjust the selection of the text field managed by the given <code>delegate<\/code> so\nthat everything is selected.<\/p>\n<p>Does not hide the toolbar.<\/p>\n<p>This is called by subclasses when their select-all affordance is activated\nby the user.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void handleSelectAll(TextSelectionDelegate delegate) {\n  delegate.textEditingValue = TextEditingValue(\n    text: delegate.textEditingValue.text,\n    selection: TextSelection(\n      baseOffset: 0,\n      extentOffset: delegate.textEditingValue.text.length,\n    ),\n  );\n  delegate.bringIntoView(delegate.textEditingValue.selection.extent);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/TextSelectionControls\/handleSelectAll.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "handleSelectAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": [
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextSelectionDelegate"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns the size of the selection handle.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Size get handleSize;<\/code><\/pre>\n        ",
            "href": "widgets\/TextSelectionControls\/handleSize.html",
            "name": "handleSize",
            "isDeprecated": false,
            "type": "dart:ui.Size",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.TextSelectionControls",
            "params": []
        }
    ]
}