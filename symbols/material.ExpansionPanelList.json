{
    "desc": "<p>A material expansion panel list that lays out its children and animates\nexpansions.<\/p>\n<p>See also:<\/p>\n<ul>\n<li><a href=\"material\/ExpansionPanel-class.html\">ExpansionPanel<\/a><\/li>\n<li><a href=\"https:\/\/material.io\/design\/components\/lists.html#types\">material.io\/design\/components\/lists.html#types<\/a><\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/ExpansionPanelList-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "material",
    "name": "material.ExpansionPanelList",
    "shortname": "ExpansionPanelList",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>The callback that gets called whenever one of the expand\/collapse buttons\nis pressed. The arguments passed to the callback are the index of the\nto-be-expanded panel in the list and whether the panel is currently\nexpanded or not.<\/p>\n<p>This callback is useful in order to keep track of the expanded\/collapsed\npanels in a parent widget that may need to react to these changes.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ExpansionPanelCallback expansionCallback\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionPanelList\/expansionCallback.html",
            "isDeprecated": false,
            "type": "material.ExpansionPanelCallback",
            "name": "expansionCallback",
            "memberOf": "material.ExpansionPanelList",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates an expansion panel list widget. The <code>expansionCallback<\/code> is\ntriggered when an expansion panel expand\/collapse button is pushed.<\/p>\n<p>The <code>children<\/code> and <code>animationDuration<\/code> arguments must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const ExpansionPanelList({\n  Key key,\n  this.children = const &lt;ExpansionPanel&gt;[],\n  this.expansionCallback,\n  this.animationDuration = kThemeAnimationDuration,\n}) : assert(children != null),\n     assert(animationDuration != null),\n     _allowOnlyOnePanelOpen = false,\n     initialOpenPanelValue = null,\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/ExpansionPanelList\/ExpansionPanelList.html",
            "isDeprecated": false,
            "type": "",
            "name": "ExpansionPanelList",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.ExpansionPanelList",
            "params": [
                {
                    "name": "animationDuration",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.Duration"
                },
                {
                    "name": "children",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.List<material.ExpansionPanel>"
                },
                {
                    "name": "expansionCallback",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "material.ExpansionPanelCallback"
                },
                {
                    "name": "key",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/ExpansionPanelList\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nState&lt;StatefulWidget&gt; createState() =&gt; _ExpansionPanelListState();<\/code><\/pre>\n    ",
            "href": "material\/ExpansionPanelList\/createState.html",
            "isDeprecated": false,
            "type": "widgets.State<widgets.StatefulWidget>",
            "name": "createState",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.ExpansionPanelList",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The duration of the expansion animation.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Duration animationDuration\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionPanelList\/animationDuration.html",
            "name": "animationDuration",
            "isDeprecated": false,
            "type": "dart:core.Duration",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ExpansionPanelList",
            "params": []
        },
        {
            "desc": "<p>The children of the expansion panel list. They are laid out in a similar\nfashion to <a href=\"widgets\/ListBody-class.html\">ListBody<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;ExpansionPanel&gt; children\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionPanelList\/children.html",
            "name": "children",
            "isDeprecated": false,
            "type": "dart:core.List<material.ExpansionPanel>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ExpansionPanelList",
            "params": []
        },
        {
            "desc": "<p>The value of the panel that initially begins open. (This value is\nonly used when initializing with the <a href=\"material\/ExpansionPanelList\/ExpansionPanelList.radio.html\">ExpansionPanelList.radio<\/a>\nconstructor.)<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Object initialOpenPanelValue\n\n<\/code><\/pre>\n        ",
            "href": "material\/ExpansionPanelList\/initialOpenPanelValue.html",
            "name": "initialOpenPanelValue",
            "isDeprecated": false,
            "type": "dart:core.Object",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ExpansionPanelList",
            "params": []
        }
    ]
}