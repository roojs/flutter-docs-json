{
    "name": "collection.DelegatingQueue",
    "extends": [
        "collection.DelegatingIterable",
        "dart:core.Object"
    ],
    "memberOf": "collection",
    "events": [],
    "methods": [
        {
            "name": "DelegatingQueue",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [
                {
                    "name": "queue",
                    "type": "dart:collection.Queue",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-collection_collection\/DelegatingQueue\/DelegatingQueue.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const DelegatingQueue(Queue&lt;E&gt; queue) : super(queue);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "add",
            "type": "",
            "desc": "<p>Adds <code>value<\/code> at the end of the queue.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/add.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(E value) {\n  _baseQueue.add(value);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "addAll",
            "type": "",
            "desc": "<p>Adds all elements of <code>iterable<\/code> at the end of the queue. The\nlength of the queue is extended by the length of <code>iterable<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [
                {
                    "name": "iterable",
                    "type": "dart:core.Iterable",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/addAll.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addAll(Iterable&lt;E&gt; iterable) {\n  _baseQueue.addAll(iterable);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "addFirst",
            "type": "",
            "desc": "<p>Adds <code>value<\/code> at the beginning of the queue.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/addFirst.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addFirst(E value) {\n  _baseQueue.addFirst(value);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "addLast",
            "type": "",
            "desc": "<p>Adds <code>value<\/code> at the end of the queue.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/addLast.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addLast(E value) {\n  _baseQueue.addLast(value);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "cast",
            "type": "dart:collection.Queue",
            "desc": "<p>Provides a view of this queue as a queue of <code>R<\/code> instances, if necessary.<\/p>\n<p>If this queue contains only instances of <code>R<\/code>, all read operations\nwill work correctly. If any operation tries to access an element\nthat is not an instance of <code>R<\/code>, the access will throw instead.<\/p>\n<p>Elements added to the queue (e.g., by using <a href=\"package-collection_collection\/DelegatingQueue\/addFirst.html\">addFirst<\/a> or <a href=\"package-collection_collection\/DelegatingQueue\/addAll.html\">addAll<\/a>)\nmust be instance of <code>R<\/code> to be valid arguments to the adding function,\nand they must be instances of <code>E<\/code> as well to be accepted by\nthis queue as well.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/cast.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Queue&lt;T&gt; cast&lt;T&gt;() =&gt; _baseQueue.cast&lt;T&gt;();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "clear",
            "type": "",
            "desc": "<p>Removes all elements in the queue. The size of the queue becomes zero.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/clear.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void clear() {\n  _baseQueue.clear();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "remove",
            "type": "dart:core.bool",
            "desc": "<p>Remove a single instance of <code>value<\/code> from the queue.<\/p>\n<p>Returns <code>true<\/code> if a value was removed, or <code>false<\/code> if the queue\ncontained no element equal to <code>value<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [
                {
                    "name": "object",
                    "type": "dart:core.Object",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/remove.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool remove(Object object) =&gt; _baseQueue.remove(object);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "removeFirst",
            "type": "",
            "desc": "<p>Removes and returns the first element of this queue.<\/p>\n<p>The queue must not be empty when this method is called.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/removeFirst.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">E removeFirst() =&gt; _baseQueue.removeFirst();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "removeLast",
            "type": "",
            "desc": "<p>Removes and returns the last element of the queue.<\/p>\n<p>The queue must not be empty when this method is called.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/removeLast.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">E removeLast() =&gt; _baseQueue.removeLast();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "removeWhere",
            "type": "",
            "desc": "<p>Removes all elements matched by <code>test<\/code> from the queue.<\/p>\n<p>The <code>test<\/code> function must not throw or modify the queue.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/removeWhere.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void removeWhere(bool test(E element)) {\n  _baseQueue.removeWhere(test);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "retainWhere",
            "type": "",
            "desc": "<p>Removes all elements not matched by <code>test<\/code> from the queue.<\/p>\n<p>The <code>test<\/code> function must not throw or modify the queue.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/retainWhere.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void retainWhere(bool test(E element)) {\n  _baseQueue.retainWhere(test);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "retype",
            "type": "dart:collection.Queue",
            "desc": "",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/retype.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@deprecated\nQueue&lt;T&gt; retype&lt;T&gt;() =&gt; cast&lt;T&gt;();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "typed",
            "type": "dart:collection.Queue",
            "desc": "<p>Creates a wrapper that asserts the types of values in <code>base<\/code>.<\/p>\n<p>This soundly converts a <a href=\"dart-collection\/Queue-class.html\">Queue<\/a> without a generic type to a <code>Queue&lt;E&gt;<\/code> by\nasserting that its elements are instances of <code>E<\/code> whenever they're\naccessed. If they're not, it throws a <a href=\"dart-core\/CastError-class.html\">CastError<\/a>. Note that even if an\noperation throws a <a href=\"dart-core\/CastError-class.html\">CastError<\/a>, it may still mutate the underlying\ncollection.<\/p>\n<p>This forwards all operations to <code>base<\/code>, so any changes in <code>base<\/code> will be\nreflected in <a href=\"package-collection_collection\/DelegatingQueue-class.html\">this<\/a>. If <code>base<\/code> is already a <code>Queue&lt;E&gt;<\/code>, it's returned\nunmodified.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.DelegatingQueue",
            "sig": "",
            "params": [
                {
                    "name": "base",
                    "type": "dart:collection.Queue",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/DelegatingQueue\/typed.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@Deprecated('Use queue.cast&lt;E&gt; instead.')\nstatic Queue&lt;E&gt; typed&lt;E&gt;(Queue base) =&gt; base.cast&lt;E&gt;();<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "package-collection_collection\/DelegatingQueue-class.html",
    "desc": "<p>A <a href=\"dart-collection\/Queue-class.html\">Queue<\/a> that delegates all operations to a base queue.<\/p>\n<p>This class can be used to hide non-<code>Queue<\/code> methods of a queue object, or it\ncan be extended to add extra functionality on top of an existing queue\nobject.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "DelegatingQueue"
}