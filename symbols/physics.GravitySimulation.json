{
    "name": "physics.GravitySimulation",
    "extends": [
        "physics.Simulation",
        "dart:core.Object"
    ],
    "memberOf": "physics",
    "events": [],
    "methods": [
        {
            "name": "GravitySimulation",
            "type": "",
            "desc": "<p>Creates a <a href=\"physics\/GravitySimulation-class.html\">GravitySimulation<\/a> using the given arguments, which are,\nrespectively: an acceleration that is to be applied continually over time;\nan initial position relative to an origin; the magnitude of the distance\nfrom that origin beyond which (in either direction) to consider the\nsimulation to be \"done\", which must be positive; and an initial velocity.<\/p>\n<p>The initial position and maximum distance are measured in arbitrary length\nunits L from an arbitrary origin. The units will match those used for <a href=\"physics\/GravitySimulation\/x.html\">x<\/a>.<\/p>\n<p>The time unit T used for the arguments to <a href=\"physics\/GravitySimulation\/x.html\">x<\/a>, <a href=\"physics\/GravitySimulation\/dx.html\">dx<\/a>, and <a href=\"physics\/GravitySimulation\/isDone.html\">isDone<\/a>,\ncombined with the aforementioned length unit, together determine the units\nthat must be used for the velocity and acceleration arguments: L\/T and\nL\/T\u00b2 respectively. The same units of velocity are used for the velocity\nobtained from <a href=\"physics\/GravitySimulation\/dx.html\">dx<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "physics.GravitySimulation",
            "sig": "",
            "params": [
                {
                    "name": "acceleration",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "distance",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "endDistance",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "velocity",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "physics\/GravitySimulation\/GravitySimulation.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">GravitySimulation(\n  double acceleration,\n  double distance,\n  double endDistance,\n  double velocity,\n) : assert(acceleration != null),\n    assert(distance != null),\n    assert(velocity != null),\n    assert(endDistance != null),\n    assert(endDistance &gt;= 0),\n    _a = acceleration,\n    _x = distance,\n    _v = velocity,\n    _end = endDistance;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "dx",
            "type": "dart:core.double",
            "desc": "<p>The velocity of the object in the simulation at the given time.<\/p>\n    ",
            "static": false,
            "memberOf": "physics.GravitySimulation",
            "sig": "",
            "params": [
                {
                    "name": "time",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "physics\/GravitySimulation\/dx.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble dx(double time) =&gt; _v + time * _a;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "isDone",
            "type": "dart:core.bool",
            "desc": "<p>Whether the simulation is \"done\" at the given time.<\/p>\n    ",
            "static": false,
            "memberOf": "physics.GravitySimulation",
            "sig": "",
            "params": [
                {
                    "name": "time",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "physics\/GravitySimulation\/isDone.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool isDone(double time) =&gt; x(time).abs() &gt;= _end;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "x",
            "type": "dart:core.double",
            "desc": "<p>The position of the object in the simulation at the given time.<\/p>\n    ",
            "static": false,
            "memberOf": "physics.GravitySimulation",
            "sig": "",
            "params": [
                {
                    "name": "time",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "physics\/GravitySimulation\/x.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble x(double time) =&gt; _x + _v * time + 0.5 * _a * time * time;<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "physics\/GravitySimulation-class.html",
    "desc": "<p>A simulation that applies a constant accelerating force.<\/p>\n<p>Models a particle that follows Newton's second law of motion. The simulation\nends when the position reaches a defined point.<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n<div class=\"snippet-description\">\nThis method triggers an <a href=\"animation\/AnimationController-class.html\">AnimationController<\/a> (a previously constructed\n<code>_controller<\/code> field) to simulate a fall of 300 pixels.\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">void _startFall() {\n  _controller.animateWith(GravitySimulation(\n    10.0, \/\/ acceleration, pixels per second per second\n    0.0, \/\/ starting position, pixels\n    300.0, \/\/ ending position, pixels\n    0.0, \/\/ starting velocity, pixels per second\n  ));\n}<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<p>This <a href=\"animation\/AnimationController-class.html\">AnimationController<\/a> could be used with an <a href=\"widgets\/AnimatedBuilder-class.html\">AnimatedBuilder<\/a> to\nanimate the position of a child as if it was falling.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"animation\/Curves\/bounceOut-constant.html\">Curves.bounceOut<\/a>, a <a href=\"animation\/Curve-class.html\">Curve<\/a> that has a similar aesthetics but includes\na bouncing effect.<\/li><\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "GravitySimulation"
}