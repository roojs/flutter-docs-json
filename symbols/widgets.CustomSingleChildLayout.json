{
    "name": "widgets.CustomSingleChildLayout",
    "extends": [
        "widgets.SingleChildRenderObjectWidget",
        "widgets.RenderObjectWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "CustomSingleChildLayout",
            "type": "",
            "desc": "<p>Creates a custom single child layout.<\/p>\n<p>The <code>delegate<\/code> argument must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.CustomSingleChildLayout",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "delegate",
                    "type": "rendering.SingleChildLayoutDelegate",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "child",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/CustomSingleChildLayout\/CustomSingleChildLayout.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const CustomSingleChildLayout({\n  Key key,\n  @required this.delegate,\n  Widget child,\n}) : assert(delegate != null),\n     super(key: key, child: child);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "createRenderObject",
            "type": "rendering.RenderCustomSingleChildLayoutBox",
            "desc": "<p>Creates an instance of the <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> class that this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> represents, using the configuration described by this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a>.<\/p>\n<p>This method should not do anything with the children of the render object.\nThat should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/mount.html\">RenderObjectElement.mount<\/a> in the object rendered by this object's\n<a href=\"widgets\/SingleChildRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/mount.html\">SingleChildRenderObjectElement.mount<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.CustomSingleChildLayout",
            "sig": "",
            "params": [
                {
                    "name": "context",
                    "type": "widgets.BuildContext",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/CustomSingleChildLayout\/createRenderObject.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nRenderCustomSingleChildLayoutBox createRenderObject(BuildContext context) {\n  return RenderCustomSingleChildLayoutBox(delegate: delegate);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "updateRenderObject",
            "type": "",
            "desc": "<p>Copies the configuration described by this <a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> to the\ngiven <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a>, which will be of the same type as returned by this\nobject's <a href=\"widgets\/CustomSingleChildLayout\/createRenderObject.html\">createRenderObject<\/a>.<\/p>\n<p>This method should not do anything to update the children of the render\nobject. That should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/update.html\">RenderObjectElement.update<\/a> in the object rendered by this object's\n<a href=\"widgets\/SingleChildRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/update.html\">SingleChildRenderObjectElement.update<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.CustomSingleChildLayout",
            "sig": "",
            "params": [
                {
                    "name": "context",
                    "type": "widgets.BuildContext",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "renderObject",
                    "type": "rendering.RenderCustomSingleChildLayoutBox",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/CustomSingleChildLayout\/updateRenderObject.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid updateRenderObject(BuildContext context, RenderCustomSingleChildLayoutBox renderObject) {\n  renderObject.delegate = delegate;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "delegate",
            "type": "rendering.SingleChildLayoutDelegate",
            "types": [],
            "desc": "<p>The delegate that controls the layout of the child.<\/p>\n        ",
            "memberOf": "widgets.CustomSingleChildLayout",
            "isConstant": false,
            "href": "widgets\/CustomSingleChildLayout\/delegate.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final SingleChildLayoutDelegate delegate\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "widgets\/CustomSingleChildLayout-class.html",
    "desc": "<p>A widget that defers the layout of its single child to a delegate.<\/p>\n<p>The delegate can determine the layout constraints for the child and can\ndecide where to position the child. The delegate can also determine the size\nof the parent, but the size of the parent cannot depend on the size of the\nchild.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"rendering\/SingleChildLayoutDelegate-class.html\">SingleChildLayoutDelegate<\/a>, which controls the layout of the child.<\/li>\n<li>\n<a href=\"widgets\/Align-class.html\">Align<\/a>, which sizes itself based on its child's size and positions\nthe child according to an <a href=\"painting\/Alignment-class.html\">Alignment<\/a> value.<\/li>\n<li>\n<a href=\"widgets\/FractionallySizedBox-class.html\">FractionallySizedBox<\/a>, which sizes its child based on a fraction of its own\nsize and positions the child according to an <a href=\"painting\/Alignment-class.html\">Alignment<\/a> value.<\/li>\n<li>\n<a href=\"widgets\/CustomMultiChildLayout-class.html\">CustomMultiChildLayout<\/a>, which uses a delegate to position multiple\nchildren.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "CustomSingleChildLayout"
}