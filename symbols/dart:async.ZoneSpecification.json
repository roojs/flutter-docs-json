{
    "name": "dart:async.ZoneSpecification",
    "extends": [],
    "memberOf": "dart:async",
    "events": [],
    "methods": [
        {
            "name": "ZoneSpecification",
            "type": "",
            "desc": "<p>Creates a specification with the provided handlers.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:async.ZoneSpecification",
            "sig": "",
            "params": [
                {
                    "name": "handleUncaughtError",
                    "type": "dart:async.HandleUncaughtErrorHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "run",
                    "type": "dart:async.RunHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "runUnary",
                    "type": "dart:async.RunUnaryHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "runBinary",
                    "type": "dart:async.RunBinaryHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "registerCallback",
                    "type": "dart:async.RegisterCallbackHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "registerUnaryCallback",
                    "type": "dart:async.RegisterUnaryCallbackHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "registerBinaryCallback",
                    "type": "dart:async.RegisterBinaryCallbackHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "errorCallback",
                    "type": "dart:async.ErrorCallbackHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "scheduleMicrotask",
                    "type": "dart:async.ScheduleMicrotaskHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "createTimer",
                    "type": "dart:async.CreateTimerHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "createPeriodicTimer",
                    "type": "dart:async.CreatePeriodicTimerHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "print",
                    "type": "dart:async.PrintHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "fork",
                    "type": "dart:async.ForkHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-async\/ZoneSpecification\/ZoneSpecification.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const factory ZoneSpecification(\n    {HandleUncaughtErrorHandler handleUncaughtError,\n    RunHandler run,\n    RunUnaryHandler runUnary,\n    RunBinaryHandler runBinary,\n    RegisterCallbackHandler registerCallback,\n    RegisterUnaryCallbackHandler registerUnaryCallback,\n    RegisterBinaryCallbackHandler registerBinaryCallback,\n    ErrorCallbackHandler errorCallback,\n    ScheduleMicrotaskHandler scheduleMicrotask,\n    CreateTimerHandler createTimer,\n    CreatePeriodicTimerHandler createPeriodicTimer,\n    PrintHandler print,\n    ForkHandler fork}) = _ZoneSpecification;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "ZoneSpecification.from",
            "type": "",
            "desc": "<p>Creates a specification from <code>other<\/code> with the provided handlers overriding\nthe ones in <code>other<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:async.ZoneSpecification",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:async.ZoneSpecification",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "handleUncaughtError",
                    "type": "dart:async.HandleUncaughtErrorHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "run",
                    "type": "dart:async.RunHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "runUnary",
                    "type": "dart:async.RunUnaryHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "runBinary",
                    "type": "dart:async.RunBinaryHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "registerCallback",
                    "type": "dart:async.RegisterCallbackHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "registerUnaryCallback",
                    "type": "dart:async.RegisterUnaryCallbackHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "registerBinaryCallback",
                    "type": "dart:async.RegisterBinaryCallbackHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "errorCallback",
                    "type": "dart:async.ErrorCallbackHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "scheduleMicrotask",
                    "type": "dart:async.ScheduleMicrotaskHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "createTimer",
                    "type": "dart:async.CreateTimerHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "createPeriodicTimer",
                    "type": "dart:async.CreatePeriodicTimerHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "print",
                    "type": "dart:async.PrintHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "fork",
                    "type": "dart:async.ForkHandler",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-async\/ZoneSpecification\/ZoneSpecification.from.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory ZoneSpecification.from(ZoneSpecification other,\n    {HandleUncaughtErrorHandler handleUncaughtError,\n    RunHandler run,\n    RunUnaryHandler runUnary,\n    RunBinaryHandler runBinary,\n    RegisterCallbackHandler registerCallback,\n    RegisterUnaryCallbackHandler registerUnaryCallback,\n    RegisterBinaryCallbackHandler registerBinaryCallback,\n    ErrorCallbackHandler errorCallback,\n    ScheduleMicrotaskHandler scheduleMicrotask,\n    CreateTimerHandler createTimer,\n    CreatePeriodicTimerHandler createPeriodicTimer,\n    PrintHandler print,\n    ForkHandler fork}) {\n  return new ZoneSpecification(\n      handleUncaughtError: handleUncaughtError ?? other.handleUncaughtError,\n      run: run ?? other.run,\n      runUnary: runUnary ?? other.runUnary,\n      runBinary: runBinary ?? other.runBinary,\n      registerCallback: registerCallback ?? other.registerCallback,\n      registerUnaryCallback:\n          registerUnaryCallback ?? other.registerUnaryCallback,\n      registerBinaryCallback:\n          registerBinaryCallback ?? other.registerBinaryCallback,\n      errorCallback: errorCallback ?? other.errorCallback,\n      scheduleMicrotask: scheduleMicrotask ?? other.scheduleMicrotask,\n      createTimer: createTimer ?? other.createTimer,\n      createPeriodicTimer: createPeriodicTimer ?? other.createPeriodicTimer,\n      print: print ?? other.print,\n      fork: fork ?? other.fork);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "createPeriodicTimer",
            "type": "dart:async.CreatePeriodicTimerHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/createPeriodicTimer.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">CreatePeriodicTimerHandler get createPeriodicTimer;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "createTimer",
            "type": "dart:async.CreateTimerHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/createTimer.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">CreateTimerHandler get createTimer;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "errorCallback",
            "type": "dart:async.ErrorCallbackHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/errorCallback.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ErrorCallbackHandler get errorCallback;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "fork",
            "type": "dart:async.ForkHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/fork.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ForkHandler get fork;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "handleUncaughtError",
            "type": "dart:async.HandleUncaughtErrorHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/handleUncaughtError.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HandleUncaughtErrorHandler get handleUncaughtError;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "print",
            "type": "dart:async.PrintHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/print.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">PrintHandler get print;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "registerBinaryCallback",
            "type": "dart:async.RegisterBinaryCallbackHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/registerBinaryCallback.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">RegisterBinaryCallbackHandler get registerBinaryCallback;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "registerCallback",
            "type": "dart:async.RegisterCallbackHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/registerCallback.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">RegisterCallbackHandler get registerCallback;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "registerUnaryCallback",
            "type": "dart:async.RegisterUnaryCallbackHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/registerUnaryCallback.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">RegisterUnaryCallbackHandler get registerUnaryCallback;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "run",
            "type": "dart:async.RunHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/run.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">RunHandler get run;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "runBinary",
            "type": "dart:async.RunBinaryHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/runBinary.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">RunBinaryHandler get runBinary;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "runUnary",
            "type": "dart:async.RunUnaryHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/runUnary.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">RunUnaryHandler get runUnary;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "scheduleMicrotask",
            "type": "dart:async.ScheduleMicrotaskHandler",
            "types": [],
            "desc": "",
            "memberOf": "dart:async.ZoneSpecification",
            "isConstant": false,
            "href": "dart-async\/ZoneSpecification\/scheduleMicrotask.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ScheduleMicrotaskHandler get scheduleMicrotask;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-async\/ZoneSpecification-class.html",
    "desc": "<p>This class provides the specification for a forked zone.<\/p>\n<p>When forking a new zone (see <a href=\"dart-async\/ZoneSpecification\/fork.html\">Zone.fork<\/a>) one can override the default\nbehavior of the zone by providing callbacks. These callbacks must be\ngiven in an instance of this class.<\/p>\n<p>Handlers have the same signature as the same-named methods on <a href=\"dart-async\/Zone-class.html\">Zone<\/a> but\nreceive three additional arguments:<\/p>\n<ol>\n<li>the zone the handlers are attached to (the \"self\" zone).<\/li>\n<li>a <a href=\"dart-async\/ZoneDelegate-class.html\">ZoneDelegate<\/a> to the parent zone.<\/li>\n<li>the zone that first received the request (before the request was\n    bubbled up).<\/li>\n<\/ol>\n<p>Handlers can either stop propagation the request (by simply not calling the\nparent handler), or forward to the parent zone, potentially modifying the\narguments on the way.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "ZoneSpecification"
}