{
    "desc": "<p>Base class for implementing a <a href=\"dart-core\/Map-class.html\">Map<\/a>.<\/p>\n<p>This class has a basic implementation of all but five of the members of\n<a href=\"dart-core\/Map-class.html\">Map<\/a>.\nA basic <code>Map<\/code> class can be implemented by extending this class and\nimplementing <code>keys<\/code>, <code>operator[]<\/code>, <code>operator[]=<\/code>, <code>remove<\/code> and <code>clear<\/code>.\nThe remaining operations are implemented in terms of these five.<\/p>\n<p>The <code>keys<\/code> iterable should have efficient <a href=\"dart-collection\/MapMixin\/length.html\">Iterable.length<\/a> and\n<a href=\"dart-core\/Iterable\/contains.html\">Iterable.contains<\/a> operations, and it should catch concurrent modifications\nof the keys while iterating.<\/p>\n<p>A more efficient implementation is usually possible by overriding\nsome of the other members as well.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-collection\/MapBase-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:collection",
    "name": "dart:collection.MapBase",
    "shortname": "MapBase",
    "extends": [
        "dart:collection.MapMixin",
        "dart:core.Object"
    ],
    "realImplementors": [
        "collection.CombinedMapView"
    ],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "dart-collection\/MapBase\/MapBase.html",
            "isDeprecated": false,
            "type": "",
            "name": "MapBase",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:collection.MapBase",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static String mapToString(Map m) {\n  \/\/ Reuses the list in IterableBase for detecting toString cycles.\n  if (_isToStringVisiting(m)) {\n    return '{...}';\n  }\n\n  var result = StringBuffer();\n  try {\n    _toStringVisiting.add(m);\n    result.write('{');\n    bool first = true;\n    m.forEach((k, v) {\n      if (!first) {\n        result.write(', ');\n      }\n      first = false;\n      result.write(k);\n      result.write(': ');\n      result.write(v);\n    });\n    result.write('}');\n  } finally {\n    assert(identical(_toStringVisiting.last, m));\n    _toStringVisiting.removeLast();\n  }\n\n  return result.toString();\n}<\/code><\/pre>\n    ",
            "href": "dart-collection\/MapBase\/mapToString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "mapToString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:collection.MapBase",
            "params": [
                {
                    "name": "m",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Map"
                }
            ]
        }
    ],
    "props": []
}