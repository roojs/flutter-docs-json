{
    "name": "dart:core.Expando",
    "extends": [],
    "memberOf": "dart:core",
    "events": [],
    "methods": [
        {
            "name": "Expando",
            "type": "",
            "desc": "<p>Creates a new <a href=\"dart-core\/Expando-class.html\">Expando<\/a>. The optional name is only used for\ndebugging purposes and creating two different <a href=\"dart-core\/Expando-class.html\">Expando<\/a>s with the\nsame name yields two <a href=\"dart-core\/Expando-class.html\">Expando<\/a>s that work on different properties\nof the objects they are used on.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Expando",
            "sig": "",
            "params": [
                {
                    "name": "name",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-core\/Expando\/Expando.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">external Expando([String name]);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator []",
            "type": "",
            "desc": "<p>Gets the value of this <a href=\"dart-core\/Expando-class.html\">Expando<\/a>'s property on the given\nobject. If the object hasn't been expanded, the method returns\n<code>null<\/code>.<\/p>\n<p>The object must not be a number, a string, a boolean or null.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Expando",
            "sig": "",
            "params": [
                {
                    "name": "object",
                    "type": "dart:core.Object",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-core\/Expando\/operator_get.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">external T operator [](Object object);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "operator []=",
            "type": "",
            "desc": "<p>Sets the value of this <a href=\"dart-core\/Expando-class.html\">Expando<\/a>'s property on the given\nobject. Properties can effectively be removed again by setting\ntheir value to null.<\/p>\n<p>The object must not be a number, a string, a boolean or null.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Expando",
            "sig": "",
            "params": [
                {
                    "name": "object",
                    "type": "dart:core.Object",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "dart-core\/Expando\/operator_put.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">external void operator []=(Object object, T value);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Expando toString method override.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Expando",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-core\/Expando\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() =&gt; \"Expando:$name\";<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "name",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The name of the this <a href=\"dart-core\/Expando-class.html\">Expando<\/a> as passed to the constructor. If\nno name was passed to the constructor, the name is <code>null<\/code>.<\/p>\n        ",
            "memberOf": "dart:core.Expando",
            "isConstant": false,
            "href": "dart-core\/Expando\/name.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String name\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-core\/Expando-class.html",
    "desc": "<p>An <a href=\"dart-core\/Expando-class.html\">Expando<\/a> allows adding new properties to objects.<\/p>\n<p>Does not work on numbers, strings, booleans or null.<\/p>\n<p>An <code>Expando<\/code> does not hold on to the added property value after an object\nbecomes inaccessible.<\/p>\n<p>Since you can always create a new number that is identical to an existing\nnumber, it means that an expando property on a number could never be\nreleased. To avoid this, expando properties cannot be added to numbers.\nThe same argument applies to strings, booleans and null, which also have\nliterals that evaluate to identical values when they occur more than once.<\/p>\n<p>There is no restriction on other classes, even for compile time constant\nobjects. Be careful if adding expando properties to compile time constants,\nsince they will stay alive forever.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Expando"
}