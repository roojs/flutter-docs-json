{
    "name": "quiver.iterables.InfiniteIterable",
    "extends": [
        "dart:collection.IterableBase",
        "dart:core.Iterable",
        "dart:core.Object"
    ],
    "memberOf": "quiver.iterables",
    "events": [],
    "methods": [
        {
            "name": "InfiniteIterable",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "quiver.iterables.InfiniteIterable",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "quiver.iterables\/InfiniteIterable\/InfiniteIterable.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "every",
            "type": "dart:core.bool",
            "desc": "<p>Checks whether every element of this iterable satisfies <a href=\"flutter_test\/test.html\">test<\/a>.<\/p>\n<p>Checks every element in iteration order, and returns <code>false<\/code> if\nany of them make <a href=\"flutter_test\/test.html\">test<\/a> return <code>false<\/code>, otherwise returns <code>true<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.iterables.InfiniteIterable",
            "sig": "",
            "params": [
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.iterables\/InfiniteIterable\/every.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool every(bool f(T element)) =&gt; throw new UnsupportedError('every');<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "fold",
            "type": "",
            "desc": "<p>Reduces a collection to a single value by iteratively combining each\nelement of the collection with an existing value<\/p>\n<p>Uses <code>initialValue<\/code> as the initial value,\nthen iterates through the elements and updates the value with\neach element using the <code>combine<\/code> function, as if by:<\/p>\n<pre class=\"language-dart\"><code>var value = initialValue;\nfor (E element in this) {\n  value = combine(value, element);\n}\nreturn value;\n<\/code><\/pre>\n<p>Example of calculating the sum of an iterable:<\/p>\n<pre class=\"language-dart\"><code>iterable.fold(0, (prev, element) =&gt; prev + element);\n<\/code><\/pre>\n    ",
            "static": false,
            "memberOf": "quiver.iterables.InfiniteIterable",
            "sig": "",
            "params": [
                {
                    "name": "initialValue",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "previousValue",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.iterables\/InfiniteIterable\/fold.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">T1 fold&lt;T1&gt;(T1 initialValue, T1 combine(T1 previousValue, T element)) =&gt;\n    throw new UnsupportedError('fold');<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "forEach",
            "type": "",
            "desc": "<p>Applies the function <code>f<\/code> to each element of this collection in iteration\norder.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.iterables.InfiniteIterable",
            "sig": "",
            "params": [
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.iterables\/InfiniteIterable\/forEach.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void forEach(void f(T element)) =&gt; throw new UnsupportedError('forEach');<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "join",
            "type": "dart:core.String",
            "desc": "<p>Converts each element to a <a href=\"dart-core\/String-class.html\">String<\/a> and concatenates the strings.<\/p>\n<p>Iterates through elements of this iterable,\nconverts each one to a <a href=\"dart-core\/String-class.html\">String<\/a> by calling <a href=\"dart-core\/Iterable\/toString.html\">Object.toString<\/a>,\nand then concatenates the strings, with the\n<code>separator<\/code> string interleaved between the elements.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.iterables.InfiniteIterable",
            "sig": "",
            "params": [
                {
                    "name": "separator",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "quiver.iterables\/InfiniteIterable\/join.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String join([String separator = '']) =&gt; throw new UnsupportedError('join');<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "lastWhere",
            "type": "",
            "desc": "<p>Returns the last element that satisfies the given predicate <code>test<\/code>.<\/p>\n<p>An iterable that can access its elements directly may check its\nelements in any order (for example a list starts by checking the\nlast element and then moves towards the start of the list).\nThe default implementation iterates elements in iteration order,\nchecks <code>test(element)<\/code> for each,\nand finally returns that last one that matched.<\/p>\n<p>If no element satisfies <code>test<\/code>, the result of invoking the <code>orElse<\/code>\nfunction is returned.\nIf <code>orElse<\/code> is omitted, it defaults to throwing a <a href=\"dart-core\/StateError-class.html\">StateError<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.iterables.InfiniteIterable",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "orElse",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.iterables\/InfiniteIterable\/lastWhere.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">T lastWhere(bool test(T value), {T orElse()}) =&gt;\n    throw new UnsupportedError('lastWhere');<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "reduce",
            "type": "",
            "desc": "<p>Reduces a collection to a single value by iteratively combining elements\nof the collection using the provided function.<\/p>\n<p>The iterable must have at least one element.\nIf it has only one element, that element is returned.<\/p>\n<p>Otherwise this method starts with the first element from the iterator,\nand then combines it with the remaining elements in iteration order,\nas if by:<\/p>\n<pre class=\"language-dart\"><code>E value = iterable.first;\niterable.skip(1).forEach((element) {\n  value = combine(value, element);\n});\nreturn value;\n<\/code><\/pre>\n<p>Example of calculating the sum of an iterable:<\/p>\n<pre class=\"language-dart\"><code>iterable.reduce((value, element) =&gt; value + element);\n<\/code><\/pre>\n    ",
            "static": false,
            "memberOf": "quiver.iterables.InfiniteIterable",
            "sig": "",
            "params": [
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "element",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.iterables\/InfiniteIterable\/reduce.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">T reduce(T combine(T value, T element)) =&gt;\n    throw new UnsupportedError('reduce');<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "singleWhere",
            "type": "",
            "desc": "<p>Returns the single element that satisfies <code>test<\/code>.<\/p>\n<p>Checks elements to see if <code>test(element)<\/code> returns true.\nIf exactly one element satisfies <code>test<\/code>, that element is returned.\nIf more than one matching element is found, throws <a href=\"dart-core\/StateError-class.html\">StateError<\/a>.\nIf no matching element is found, returns the result of <code>orElse<\/code>.\nIf <code>orElse<\/code> is omitted, it defaults to throwing a <a href=\"dart-core\/StateError-class.html\">StateError<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.iterables.InfiniteIterable",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "orElse",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "quiver.iterables\/InfiniteIterable\/singleWhere.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">T singleWhere(bool test(T value), {T orElse()}) =&gt;\n    throw new UnsupportedError('singleWhere');<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "toList",
            "type": "dart:core.List",
            "desc": "<p>Creates a <a href=\"dart-core\/List-class.html\">List<\/a> containing the elements of this <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a>.<\/p>\n<p>The elements are in iteration order.\nThe list is fixed-length if <code>growable<\/code> is false.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.iterables.InfiniteIterable",
            "sig": "",
            "params": [
                {
                    "name": "growable",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "quiver.iterables\/InfiniteIterable\/toList.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;T&gt; toList({bool growable: true}) =&gt; throw new UnsupportedError('toList');<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toSet",
            "type": "dart:core.Set",
            "desc": "<p>Creates a <a href=\"dart-core\/Set-class.html\">Set<\/a> containing the same elements as this iterable.<\/p>\n<p>The set may contain fewer elements than the iterable,\nif the iterable contains an element more than once,\nor it contains one or more elements that are equal.\nThe order of the elements in the set is not guaranteed to be the same\nas for the iterable.<\/p>\n    ",
            "static": false,
            "memberOf": "quiver.iterables.InfiniteIterable",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "quiver.iterables\/InfiniteIterable\/toSet.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Set&lt;T&gt; toSet() =&gt; throw new UnsupportedError('toSet');<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "isEmpty",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Returns <code>true<\/code> if there are no elements in this collection.<\/p>\n<p>May be computed by checking if <code>iterator.moveNext()<\/code> returns <code>false<\/code>.<\/p>\n        ",
            "memberOf": "quiver.iterables.InfiniteIterable",
            "isConstant": false,
            "href": "quiver.iterables\/InfiniteIterable\/isEmpty.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isEmpty =&gt; false;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "isNotEmpty",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Returns true if there is at least one element in this collection.<\/p>\n<p>May be computed by checking if <code>iterator.moveNext()<\/code> returns <code>true<\/code>.<\/p>\n        ",
            "memberOf": "quiver.iterables.InfiniteIterable",
            "isConstant": false,
            "href": "quiver.iterables\/InfiniteIterable\/isNotEmpty.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isNotEmpty =&gt; true;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "last",
            "type": "",
            "types": [],
            "desc": "<p>Returns the last element.<\/p>\n<p>Throws a <a href=\"dart-core\/StateError-class.html\">StateError<\/a> if <code>this<\/code> is empty.\nOtherwise may iterate through the elements and returns the last one\nseen.\nSome iterables may have more efficient ways to find the last element\n(for example a list can directly access the last element,\nwithout iterating through the previous ones).<\/p>\n        ",
            "memberOf": "quiver.iterables.InfiniteIterable",
            "isConstant": false,
            "href": "quiver.iterables\/InfiniteIterable\/last.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">T get last =&gt; throw new UnsupportedError('last');<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "length",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>Returns the number of elements in <a href=\"quiver.iterables\/InfiniteIterable-class.html\">this<\/a>.<\/p>\n<p>Counting all elements may involve iterating through all elements and can\ntherefore be slow.\nSome iterables have a more efficient way to find the number of elements.<\/p>\n        ",
            "memberOf": "quiver.iterables.InfiniteIterable",
            "isConstant": false,
            "href": "quiver.iterables\/InfiniteIterable\/length.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get length =&gt; throw new UnsupportedError('length');<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "single",
            "type": "",
            "types": [],
            "desc": "<p>Checks that this iterable has only one element, and returns that element.<\/p>\n<p>Throws a <a href=\"dart-core\/StateError-class.html\">StateError<\/a> if <code>this<\/code> is empty or has more than one element.<\/p>\n        ",
            "memberOf": "quiver.iterables.InfiniteIterable",
            "isConstant": false,
            "href": "quiver.iterables\/InfiniteIterable\/single.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">T get single =&gt; throw new StateError('single');<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "quiver.iterables\/InfiniteIterable-class.html",
    "desc": "<p>A base class for <a href=\"dart-core\/Iterable-class.html\">Iterable<\/a>s of infinite length that throws\n<a href=\"dart-core\/UnsupportedError-class.html\">UnsupportedError<\/a> for methods that would require the Iterable to\nterminate.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "InfiniteIterable"
}