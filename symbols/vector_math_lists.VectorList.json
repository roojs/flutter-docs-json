{
    "name": "vector_math_lists.VectorList",
    "extends": [],
    "memberOf": "vector_math_lists",
    "events": [],
    "methods": [
        {
            "name": "VectorList",
            "type": "",
            "desc": "<p>Create a new vector list with <code>length<\/code> elements that have a size of\n<code>vectorLength<\/code>. Optionally it is possible to specify an <code>offset<\/code> in the\n<a href=\"vector_math_lists\/VectorList\/buffer.html\">buffer<\/a> and a <code>stride<\/code> between each vector.<\/p>\n    ",
            "static": false,
            "memberOf": "vector_math_lists.VectorList",
            "sig": "",
            "params": [
                {
                    "name": "length",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "vectorLength",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "offset",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "stride",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "vector_math_lists\/VectorList\/VectorList.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">VectorList(int length, int vectorLength, [int offset = 0, int stride = 0])\n    : _vectorLength = vectorLength,\n      _offset = offset,\n      _stride = stride == 0 ? vectorLength : stride,\n      _length = length,\n      _buffer = new Float32List(\n          VectorList._listLength(offset, stride, vectorLength, length)) {\n  if (_stride &lt; _vectorLength) {\n    throw new ArgumentError('Stride cannot be smaller than the vector size.');\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator []",
            "type": "",
            "desc": "<p>Retrieves the vector at <code>index<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "vector_math_lists.VectorList",
            "sig": "",
            "params": [
                {
                    "name": "index",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_lists\/VectorList\/operator_get.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">T operator [](int index) {\n  final T r = newVector();\n  load(index, r);\n  return r;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "operator []=",
            "type": "",
            "desc": "<p>Store <code>v<\/code> in the list at <code>index<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "vector_math_lists.VectorList",
            "sig": "",
            "params": [
                {
                    "name": "index",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "v",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "vector_math_lists\/VectorList\/operator_put.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void operator []=(int index, T v) {\n  store(index, v);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "copy",
            "type": "",
            "desc": "<p>Copy a range of <code>count<\/code> vectors beginning at <code>srcOffset<\/code> from <code>src<\/code> into\nthis list starting at <code>offset<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "vector_math_lists.VectorList",
            "sig": "",
            "params": [
                {
                    "name": "src",
                    "type": "vector_math_lists.VectorList",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "srcOffset",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "offset",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "count",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_lists\/VectorList\/copy.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void copy(VectorList&lt;T&gt; src,\n    {int srcOffset: 0, int offset: 0, int count: 0}) {\n  if (count == 0) {\n    count = math.min(length - offset, src.length - srcOffset);\n  }\n  final int minVectorLength = math.min(_vectorLength, src._vectorLength);\n  for (int i = 0; i &lt; count; i++) {\n    int index = _vectorIndexToBufferIndex(i + offset);\n    int srcIndex = src._vectorIndexToBufferIndex(i + srcOffset);\n    for (int j = 0; j &lt; minVectorLength; j++) {\n      _buffer[index++] = src._buffer[srcIndex++];\n    }\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "VectorList.fromList",
            "type": "",
            "desc": "<p>Create a new vector list from a list of vectors that have a size of\n<code>vectorLength<\/code>. Optionally it is possible to specify an <code>offset<\/code> in the\n<a href=\"vector_math_lists\/VectorList\/buffer.html\">buffer<\/a> and a <code>stride<\/code> between each vector.<\/p>\n    ",
            "static": false,
            "memberOf": "vector_math_lists.VectorList",
            "sig": "",
            "params": [
                {
                    "name": "list",
                    "type": "dart:core.List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "vectorLength",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "offset",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "stride",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "vector_math_lists\/VectorList\/VectorList.fromList.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">VectorList.fromList(List&lt;T&gt; list, int vectorLength,\n    [int offset = 0, int stride = 0])\n    : _vectorLength = vectorLength,\n      _offset = offset,\n      _stride = stride == 0 ? vectorLength : stride,\n      _length = list.length,\n      _buffer = new Float32List(\n          offset + list.length * (stride == 0 ? vectorLength : stride)) {\n  if (_stride &lt; _vectorLength) {\n    throw new ArgumentError('Stride cannot be smaller than the vector size.');\n  }\n  for (int i = 0; i &lt; _length; i++) {\n    store(i, list[i]);\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "load",
            "type": "",
            "desc": "<p>Retrieves the vector at <code>index<\/code> and stores it in <code>vector<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "vector_math_lists.VectorList",
            "sig": "",
            "params": [
                {
                    "name": "index",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "vector",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "vector_math_lists\/VectorList\/load.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void load(int index, T vector);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "newVector",
            "type": "",
            "desc": "<p>Create a new instance of <code>T<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "vector_math_lists.VectorList",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "vector_math_lists\/VectorList\/newVector.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">T newVector();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "store",
            "type": "",
            "desc": "<p>Store <code>vector<\/code> in the list at <code>index<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "vector_math_lists.VectorList",
            "sig": "",
            "params": [
                {
                    "name": "index",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "vector",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "vector_math_lists\/VectorList\/store.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void store(int index, T vector);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "VectorList.view",
            "type": "",
            "desc": "<p>Create a new vector list as a view of <code>buffer<\/code> for vectors that have a\nsize of <code>vectorLength<\/code>. Optionally it is possible to specify an <code>offset<\/code>\nin the <code>buffer<\/code> and a <code>stride<\/code> between each vector.<\/p>\n    ",
            "static": false,
            "memberOf": "vector_math_lists.VectorList",
            "sig": "",
            "params": [
                {
                    "name": "buffer",
                    "type": "dart:typed_data.Float32List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "vectorLength",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "offset",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "stride",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "vector_math_lists\/VectorList\/VectorList.view.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">VectorList.view(Float32List buffer, int vectorLength,\n    [int offset = 0, int stride = 0])\n    : _vectorLength = vectorLength,\n      _offset = offset,\n      _stride = stride == 0 ? vectorLength : stride,\n      _length = (buffer.length - math.max(0, offset - stride)) ~\/\n          (stride == 0 ? vectorLength : stride),\n      _buffer = buffer {\n  if (_stride &lt; _vectorLength) {\n    throw new ArgumentError('Stride cannot be smaller than the vector size.');\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "buffer",
            "type": "dart:typed_data.Float32List",
            "types": [],
            "desc": "<p>The internal storage buffer of this list.<\/p>\n        ",
            "memberOf": "vector_math_lists.VectorList",
            "isConstant": false,
            "href": "vector_math_lists\/VectorList\/buffer.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Float32List get buffer =&gt; _buffer;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "length",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The count of vectors in this list.<\/p>\n        ",
            "memberOf": "vector_math_lists.VectorList",
            "isConstant": false,
            "href": "vector_math_lists\/VectorList\/length.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get length =&gt; _length;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "vector_math_lists.Vector2List",
        "vector_math_lists.Vector3List",
        "vector_math_lists.Vector4List"
    ],
    "realImplementors": [
        "vector_math_lists.Vector2List",
        "vector_math_lists.Vector3List",
        "vector_math_lists.Vector4List"
    ],
    "cn": [],
    "href": "vector_math_lists\/VectorList-class.html",
    "desc": "<p>Abstract base class for vector lists. See <a href=\"vector_math_lists\/Vector2List-class.html\">Vector2List<\/a>, <a href=\"vector_math_lists\/Vector3List-class.html\">Vector3List<\/a>, and\n<a href=\"vector_math_lists\/Vector4List-class.html\">Vector4List<\/a> for implementations of this class.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "VectorList"
}