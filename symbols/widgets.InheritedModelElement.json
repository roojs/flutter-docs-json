{
    "name": "widgets.InheritedModelElement",
    "extends": [
        "widgets.InheritedElement",
        "widgets.ProxyElement",
        "widgets.ComponentElement",
        "widgets.Element",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "InheritedModelElement",
            "type": "",
            "desc": "<p>Creates an element that uses the given widget as its configuration.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.InheritedModelElement",
            "sig": "",
            "params": [
                {
                    "name": "widget",
                    "type": "widgets.InheritedModel",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/InheritedModelElement\/InheritedModelElement.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">InheritedModelElement(InheritedModel&lt;T&gt; widget) : super(widget);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "notifyDependent",
            "type": "",
            "desc": "<p>Called by <a href=\"widgets\/InheritedElement\/notifyClients.html\">notifyClients<\/a> for each dependent.<\/p>\n<p>Calls <code>dependent.didChangeDependencies()<\/code> by default.<\/p>\n<p>Subclasses can override this method to selectively call\n<a href=\"widgets\/Element\/didChangeDependencies.html\">didChangeDependencies<\/a> based on the value of <a href=\"widgets\/InheritedElement\/getDependencies.html\">getDependencies<\/a>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/InheritedModelElement\/updateDependencies.html\">updateDependencies<\/a>, which is called each time a dependency is\ncreated with <a href=\"widgets\/Element\/inheritFromWidgetOfExactType.html\">inheritFromWidgetOfExactType<\/a>.<\/li>\n<li>\n<a href=\"widgets\/InheritedElement\/getDependencies.html\">getDependencies<\/a>, which returns the current value for a dependent\nelement.<\/li>\n<li>\n<a href=\"widgets\/InheritedElement\/setDependencies.html\">setDependencies<\/a>, which sets the value for a dependent element.<\/li>\n<li>\n<a href=\"widgets\/InheritedModel-class.html\">InheritedModel<\/a>, which is an example of a class that uses this method\nto manage dependency values.<\/li>\n<\/ul>",
            "static": false,
            "memberOf": "widgets.InheritedModelElement",
            "sig": "",
            "params": [
                {
                    "name": "oldWidget",
                    "type": "widgets.InheritedModel",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "dependent",
                    "type": "widgets.Element",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/InheritedModelElement\/notifyDependent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid notifyDependent(InheritedModel&lt;T&gt; oldWidget, Element dependent) {\n  final Set&lt;T&gt; dependencies = getDependencies(dependent);\n  if (dependencies == null)\n    return;\n  if (dependencies.isEmpty || widget.updateShouldNotifyDependent(oldWidget, dependencies))\n    dependent.didChangeDependencies();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "updateDependencies",
            "type": "",
            "desc": "<p>Called by <a href=\"widgets\/Element\/inheritFromWidgetOfExactType.html\">inheritFromWidgetOfExactType<\/a> when a new <code>dependent<\/code> is added.<\/p>\n<p>Each dependent element can be mapped to a single object value with\n<a href=\"widgets\/InheritedElement\/setDependencies.html\">setDependencies<\/a>. This method can lookup the existing dependencies with\n<a href=\"widgets\/InheritedElement\/getDependencies.html\">getDependencies<\/a>.<\/p>\n<p>By default this method sets the inherited dependencies for <code>dependent<\/code>\nto null. This only serves to record an unconditional dependency on\n<code>dependent<\/code>.<\/p>\n<p>Subclasses can manage their own dependencies values so that they\ncan selectively rebuild dependents in <code>notifyDependents<\/code>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/InheritedElement\/getDependencies.html\">getDependencies<\/a>, which returns the current value for a dependent\nelement.<\/li>\n<li>\n<a href=\"widgets\/InheritedElement\/setDependencies.html\">setDependencies<\/a>, which sets the value for a dependent element.<\/li>\n<li>\n<a href=\"widgets\/InheritedModelElement\/notifyDependent.html\">notifyDependent<\/a>, which can be overridden to use a dependent's\ndependencies value to decide if the dependent needs to be rebuilt.<\/li>\n<li>\n<a href=\"widgets\/InheritedModel-class.html\">InheritedModel<\/a>, which is an example of a class that uses this method\nto manage dependency values.<\/li>\n<\/ul>",
            "static": false,
            "memberOf": "widgets.InheritedModelElement",
            "sig": "",
            "params": [
                {
                    "name": "dependent",
                    "type": "widgets.Element",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "aspect",
                    "type": "dart:core.Object",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/InheritedModelElement\/updateDependencies.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid updateDependencies(Element dependent, Object aspect) {\n  final Set&lt;T&gt; dependencies = getDependencies(dependent);\n  if (dependencies != null &amp;&amp; dependencies.isEmpty)\n    return;\n\n  if (aspect == null) {\n    setDependencies(dependent, HashSet&lt;T&gt;());\n  } else {\n    assert(aspect is T);\n    setDependencies(dependent, (dependencies ?? HashSet&lt;T&gt;())..add(aspect));\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "widget",
            "type": "widgets.InheritedModel",
            "types": [],
            "desc": "<p>The configuration for this element.<\/p>\n        ",
            "memberOf": "widgets.InheritedModelElement",
            "isConstant": false,
            "href": "widgets\/InheritedModelElement\/widget.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nInheritedModel&lt;T&gt; get widget =&gt; super.widget;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "widgets\/InheritedModelElement-class.html",
    "desc": "<p>An <a href=\"widgets\/Element-class.html\">Element<\/a> that uses a <a href=\"widgets\/InheritedModel-class.html\">InheritedModel<\/a> as its configuration.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "InheritedModelElement"
}