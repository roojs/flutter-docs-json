{
    "name": "widgets.Matrix4Tween",
    "extends": [
        "vector_math_64.Matrix4",
        "animation.Tween",
        "vector_math_64.Matrix4",
        "animation.Animatable",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "Matrix4Tween",
            "type": "",
            "desc": "<p>Creates a <a href=\"vector_math_64\/Matrix4-class.html\">Matrix4<\/a> tween.<\/p>\n<p>The <code>begin<\/code> and <code>end<\/code> properties must be non-null before the tween is\nfirst used, but the arguments can be null if the values are going to be\nfilled in later.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.Matrix4Tween",
            "sig": "",
            "params": [
                {
                    "name": "begin",
                    "type": "vector_math_64.Matrix4",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "end",
                    "type": "vector_math_64.Matrix4",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/Matrix4Tween\/Matrix4Tween.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix4Tween({ Matrix4 begin, Matrix4 end }) : super(begin: begin, end: end);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "lerp",
            "type": "vector_math_64.Matrix4",
            "desc": "<p>Returns the value this variable has at the given animation clock value.<\/p>\n<p>The default implementation of this method uses the <code>+<\/code>, <code>-<\/code>, and <code>*<\/code>\noperators on <code>T<\/code>. The <a href=\"animation\/Tween\/begin.html\">begin<\/a> and <a href=\"animation\/Tween\/end.html\">end<\/a> properties must therefore be\nnon-null by the time this method is called.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.Matrix4Tween",
            "sig": "",
            "params": [
                {
                    "name": "t",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/Matrix4Tween\/lerp.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nMatrix4 lerp(double t) {\n  assert(begin != null);\n  assert(end != null);\n  final Vector3 beginTranslation = Vector3.zero();\n  final Vector3 endTranslation = Vector3.zero();\n  final Quaternion beginRotation = Quaternion.identity();\n  final Quaternion endRotation = Quaternion.identity();\n  final Vector3 beginScale = Vector3.zero();\n  final Vector3 endScale = Vector3.zero();\n  begin.decompose(beginTranslation, beginRotation, beginScale);\n  end.decompose(endTranslation, endRotation, endScale);\n  final Vector3 lerpTranslation =\n      beginTranslation * (1.0 - t) + endTranslation * t;\n  \/\/ TODO(alangardner): Implement slerp for constant rotation\n  final Quaternion lerpRotation =\n      (beginRotation.scaled(1.0 - t) + endRotation.scaled(t)).normalized();\n  final Vector3 lerpScale = beginScale * (1.0 - t) + endScale * t;\n  return Matrix4.compose(lerpTranslation, lerpRotation, lerpScale);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "widgets\/Matrix4Tween-class.html",
    "desc": "<p>An interpolation between two <a href=\"vector_math_64\/Matrix4-class.html\">Matrix4<\/a>s.<\/p>\n<p>This class specializes the interpolation of <a href=\"animation\/Tween-class.html\">Tween&lt;Matrix4&gt;<\/a> to be\nappropriate for transformation matrices.<\/p>\n<p>Currently this class works only for translations.<\/p>\n<p>See <a href=\"animation\/Tween-class.html\">Tween<\/a> for a discussion on how to use interpolation objects.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Matrix4Tween"
}