{
    "name": "widgets.ListWheelChildBuilderDelegate",
    "extends": [
        "widgets.ListWheelChildDelegate",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "ListWheelChildBuilderDelegate",
            "type": "",
            "desc": "<p>Constructs the delegate from a builder callback.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.ListWheelChildBuilderDelegate",
            "sig": "",
            "params": [
                {
                    "name": "builder",
                    "type": "widgets.IndexedWidgetBuilder",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "childCount",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/ListWheelChildBuilderDelegate\/ListWheelChildBuilderDelegate.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ListWheelChildBuilderDelegate({\n  @required this.builder,\n  this.childCount,\n}) : assert(builder != null);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "build",
            "type": "widgets.Widget",
            "desc": "<p>Return the child at the given index. If the child at the given\nindex does not exist, return null.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.ListWheelChildBuilderDelegate",
            "sig": "",
            "params": [
                {
                    "name": "context",
                    "type": "widgets.BuildContext",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "index",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/ListWheelChildBuilderDelegate\/build.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context, int index) {\n  if (childCount == null) {\n    final Widget child = builder(context, index);\n    return child == null ? null : IndexedSemantics(child: child, index: index);\n  }\n  if (index &lt; 0 || index &gt;= childCount)\n    return null;\n  return IndexedSemantics(child: builder(context, index), index: index);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "shouldRebuild",
            "type": "dart:core.bool",
            "desc": "<p>Called to check whether this and the old delegate are actually 'different',\nso that the caller can decide to rebuild or not.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.ListWheelChildBuilderDelegate",
            "sig": "",
            "params": [
                {
                    "name": "oldDelegate",
                    "type": "widgets.ListWheelChildBuilderDelegate",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/ListWheelChildBuilderDelegate\/shouldRebuild.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool shouldRebuild(covariant ListWheelChildBuilderDelegate oldDelegate) {\n  return builder != oldDelegate.builder || childCount != oldDelegate.childCount;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "builder",
            "type": "widgets.IndexedWidgetBuilder",
            "types": [],
            "desc": "<p>Called lazily to build children.<\/p>\n        ",
            "memberOf": "widgets.ListWheelChildBuilderDelegate",
            "isConstant": false,
            "href": "widgets\/ListWheelChildBuilderDelegate\/builder.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final IndexedWidgetBuilder builder\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "childCount",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>If non-null, <a href=\"widgets\/ListWheelChildBuilderDelegate\/childCount.html\">childCount<\/a> is the maximum number of children that can be\nprovided, and children are available from 0 to <a href=\"widgets\/ListWheelChildBuilderDelegate\/childCount.html\">childCount<\/a> - 1.<\/p>\n<p>If null, then the lower and upper limit are not known. However the <a href=\"widgets\/ListWheelChildBuilderDelegate\/builder.html\">builder<\/a>\nmust provide children for a contiguous segment. If the builder returns null\nat some index, the segment terminates there.<\/p>\n        ",
            "memberOf": "widgets.ListWheelChildBuilderDelegate",
            "isConstant": false,
            "href": "widgets\/ListWheelChildBuilderDelegate\/childCount.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int childCount\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "estimatedChildCount",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>Returns an estimate of the number of children this delegate will build.<\/p>\n        ",
            "memberOf": "widgets.ListWheelChildBuilderDelegate",
            "isConstant": false,
            "href": "widgets\/ListWheelChildBuilderDelegate\/estimatedChildCount.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get estimatedChildCount =&gt; childCount;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "widgets\/ListWheelChildBuilderDelegate-class.html",
    "desc": "<p>A delegate that supplies children for <a href=\"widgets\/ListWheelScrollView-class.html\">ListWheelScrollView<\/a> using a builder\ncallback.<\/p>\n<p><a href=\"widgets\/ListWheelScrollView-class.html\">ListWheelScrollView<\/a> lazily constructs its children to avoid creating more\nchildren than are visible through the <a href=\"widgets\/Viewport-class.html\">Viewport<\/a>. This delegate provides\nchildren using an <a href=\"widgets\/IndexedWidgetBuilder.html\">IndexedWidgetBuilder<\/a> callback, so that the children do\nnot have to be built until they are displayed.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "ListWheelChildBuilderDelegate"
}