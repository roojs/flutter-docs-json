{
    "name": "dart:ui.Offset",
    "extends": [
        "dart:ui.OffsetBase",
        "dart:core.Object"
    ],
    "memberOf": "dart:ui",
    "events": [],
    "methods": [
        {
            "name": "operator %",
            "type": "dart:ui.Offset",
            "desc": "<p>Modulo (remainder) operator.<\/p>\n<p>Returns an offset whose coordinates are the remainder of dividing the\ncoordinates of the left-hand-side operand (an Offset) by the scalar\nright-hand-side operand (a double).<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "operand",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/operator_modulo.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Offset operator %(double operand) =&gt; new Offset(dx % operand, dy % operand);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator &",
            "type": "dart:ui.Rect",
            "desc": "<p>Rectangle constructor operator.<\/p>\n<p>Combines an <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> and a <a href=\"dart-ui\/Size-class.html\">Size<\/a> to form a <a href=\"dart-ui\/Rect-class.html\">Rect<\/a> whose top-left\ncoordinate is the point given by adding this offset, the left-hand-side\noperand, to the origin, and whose size is the right-hand-side operand.<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">Rect myRect = Offset.zero &amp; const Size(100.0, 100.0);\n\/\/ same as: new Rect.fromLTWH(0.0, 0.0, 100.0, 100.0)\n<\/code><\/pre>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:ui.Size",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/operator_bitwise_and.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Rect operator &amp;(Size other) =&gt; new Rect.fromLTWH(dx, dy, other.width, other.height);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator *",
            "type": "dart:ui.Offset",
            "desc": "<p>Multiplication operator.<\/p>\n<p>Returns an offset whose coordinates are the coordinates of the\nleft-hand-side operand (an Offset) multiplied by the scalar\nright-hand-side operand (a double).<\/p>\n<p>See also <a href=\"dart-ui\/Offset\/scale.html\">scale<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "operand",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/operator_multiply.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Offset operator *(double operand) =&gt; new Offset(dx * operand, dy * operand);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator +",
            "type": "dart:ui.Offset",
            "desc": "<p>Binary addition operator.<\/p>\n<p>Returns an offset whose <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> value is the sum of the <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> values of the\ntwo operands, and whose <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a> value is the sum of the <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a> values of the\ntwo operands.<\/p>\n<p>See also <a href=\"dart-ui\/Offset\/translate.html\">translate<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/operator_plus.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Offset operator +(Offset other) =&gt; new Offset(dx + other.dx, dy + other.dy);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator -",
            "type": "dart:ui.Offset",
            "desc": "<p>Binary subtraction operator.<\/p>\n<p>Returns an offset whose <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> value is the left-hand-side operand's <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a>\nminus the right-hand-side operand's <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> and whose <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a> value is the\nleft-hand-side operand's <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a> minus the right-hand-side operand's <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a>.<\/p>\n<p>See also <a href=\"dart-ui\/Offset\/translate.html\">translate<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/operator_minus.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Offset operator -(Offset other) =&gt; new Offset(dx - other.dx, dy - other.dy);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator \/",
            "type": "dart:ui.Offset",
            "desc": "<p>Division operator.<\/p>\n<p>Returns an offset whose coordinates are the coordinates of the\nleft-hand-side operand (an Offset) divided by the scalar right-hand-side\noperand (a double).<\/p>\n<p>See also <a href=\"dart-ui\/Offset\/scale.html\">scale<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "operand",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/operator_divide.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Offset operator \/(double operand) =&gt; new Offset(dx \/ operand, dy \/ operand);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator ==",
            "type": "dart:core.bool",
            "desc": "<p>Compares two Offsets for equality.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/operator_equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool operator ==(dynamic other) {\n  if (other is! Offset)\n    return false;\n  final Offset typedOther = other;\n  return dx == typedOther.dx &amp;&amp;\n         dy == typedOther.dy;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "Offset",
            "type": "",
            "desc": "<p>Creates an offset. The first argument sets <code>dx<\/code>, the horizontal component,\nand the second sets <code>dy<\/code>, the vertical component.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "dx",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "dy",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-ui\/Offset\/Offset.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Offset(double dx, double dy) : super(dx, dy);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "Offset.fromDirection",
            "type": "",
            "desc": "<p>Creates an offset from its <code>direction<\/code> and <code>distance<\/code>.<\/p>\n<p>The direction is in radians clockwise from the positive x-axis.<\/p>\n<p>The distance can be omitted, to create a unit vector (distance = 1.0).<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "direction",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "distance",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-ui\/Offset\/Offset.fromDirection.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory Offset.fromDirection(double direction, [ double distance = 1.0 ]) {\n  return new Offset(distance * math.cos(direction), distance * math.sin(direction));\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "lerp",
            "type": "dart:ui.Offset",
            "desc": "<p>Linearly interpolate between two offsets.<\/p>\n<p>If either offset is null, this function interpolates from <a href=\"dart-ui\/Offset\/zero-constant.html\">Offset.zero<\/a>.<\/p>\n<p>The <code>t<\/code> argument represents position on the timeline, with 0.0 meaning\nthat the interpolation has not started, returning <code>a<\/code> (or something\nequivalent to <code>a<\/code>), 1.0 meaning that the interpolation has finished,\nreturning <code>b<\/code> (or something equivalent to <code>b<\/code>), and values in between\nmeaning that the interpolation is at the relevant point on the timeline\nbetween <code>a<\/code> and <code>b<\/code>. The interpolation can be extrapolated beyond 0.0 and\n1.0, so negative values and values greater than 1.0 are valid (and can\neasily be generated by curves such as <a href=\"animation\/Curves\/elasticInOut-constant.html\">Curves.elasticInOut<\/a>).<\/p>\n<p>Values for <code>t<\/code> are usually obtained from an <a href=\"animation\/Animation-class.html\">Animation&lt;double&gt;<\/a>, such as\nan <a href=\"animation\/AnimationController-class.html\">AnimationController<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "a",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "b",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "t",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/lerp.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Offset lerp(Offset a, Offset b, double t) {\n  assert(t != null);\n  if (a == null &amp;&amp; b == null)\n    return null;\n  if (a == null)\n    return b * t;\n  if (b == null)\n    return a * (1.0 - t);\n  return new Offset(lerpDouble(a.dx, b.dx, t), lerpDouble(a.dy, b.dy, t));\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "scale",
            "type": "dart:ui.Offset",
            "desc": "<p>Returns a new offset with the x component scaled by <code>scaleX<\/code> and the y\ncomponent scaled by <code>scaleY<\/code>.<\/p>\n<p>If the two scale arguments are the same, consider using the <code>*<\/code> operator\ninstead:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">Offset a = const Offset(10.0, 10.0);\nOffset b = a * 2.0; \/\/ same as: a.scale(2.0, 2.0)\n<\/code><\/pre>\n<p>If the two arguments are -1, consider using the unary <code>-<\/code> operator\ninstead:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">Offset a = const Offset(10.0, 10.0);\nOffset b = -a; \/\/ same as: a.scale(-1.0, -1.0)\n<\/code><\/pre>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "scaleX",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "scaleY",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/scale.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Offset scale(double scaleX, double scaleY) =&gt; new Offset(dx * scaleX, dy * scaleY);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; 'Offset(${dx?.toStringAsFixed(1)}, ${dy?.toStringAsFixed(1)})';<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "translate",
            "type": "dart:ui.Offset",
            "desc": "<p>Returns a new offset with translateX added to the x component and\ntranslateY added to the y component.<\/p>\n<p>If the arguments come from another <a href=\"dart-ui\/Offset-class.html\">Offset<\/a>, consider using the <code>+<\/code> or <code>-<\/code>\noperators instead:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">Offset a = const Offset(10.0, 10.0);\nOffset b = const Offset(10.0, 10.0);\nOffset c = a + b; \/\/ same as: a.translate(b.dx, b.dy)\nOffset d = a - b; \/\/ same as: a.translate(-b.dx, -b.dy)\n<\/code><\/pre>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "translateX",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "translateY",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/translate.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Offset translate(double translateX, double translateY) =&gt; new Offset(dx + translateX, dy + translateY);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator unary-",
            "type": "dart:ui.Offset",
            "desc": "<p>Unary negation operator.<\/p>\n<p>Returns an offset with the coordinates negated.<\/p>\n<p>If the <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> represents an arrow on a plane, this operator returns the\nsame arrow but pointing in the reverse direction.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/operator_unary_minus.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Offset operator -() =&gt; new Offset(-dx, -dy);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator ~\/",
            "type": "dart:ui.Offset",
            "desc": "<p>Integer (truncating) division operator.<\/p>\n<p>Returns an offset whose coordinates are the coordinates of the\nleft-hand-side operand (an Offset) divided by the scalar right-hand-side\noperand (a double), rounded towards zero.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.Offset",
            "sig": "",
            "params": [
                {
                    "name": "operand",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/Offset\/operator_truncate_divide.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Offset operator ~\/(double operand) =&gt; new Offset((dx ~\/ operand).toDouble(), (dy ~\/ operand).toDouble());<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "direction",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The angle of this offset as radians clockwise from the positive x-axis, in\nthe range -<a href=\"dart-math\/pi-constant.html\">pi<\/a> to <a href=\"dart-math\/pi-constant.html\">pi<\/a>, assuming positive values of the x-axis go to the\nleft and positive values of the y-axis go down.<\/p>\n<p>Zero means that <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a> is zero and <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> is zero or positive.<\/p>\n<p>Values from zero to <a href=\"dart-math\/pi-constant.html\">pi<\/a>\/2 indicate positive values of <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> and <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a>, the\nbottom-right quadrant.<\/p>\n<p>Values from <a href=\"dart-math\/pi-constant.html\">pi<\/a>\/2 to <a href=\"dart-math\/pi-constant.html\">pi<\/a> indicate negative values of <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> and positive\nvalues of <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a>, the bottom-left quadrant.<\/p>\n<p>Values from zero to -<a href=\"dart-math\/pi-constant.html\">pi<\/a>\/2 indicate positive values of <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> and negative\nvalues of <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a>, the top-right quadrant.<\/p>\n<p>Values from -<a href=\"dart-math\/pi-constant.html\">pi<\/a>\/2 to -<a href=\"dart-math\/pi-constant.html\">pi<\/a> indicate negative values of <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> and <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a>,\nthe top-left quadrant.<\/p>\n<p>When <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a> is zero and <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> is negative, the <a href=\"dart-ui\/Offset\/direction.html\">direction<\/a> is <a href=\"dart-math\/pi-constant.html\">pi<\/a>.<\/p>\n<p>When <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a> is zero, <a href=\"dart-ui\/Offset\/direction.html\">direction<\/a> is <a href=\"dart-math\/pi-constant.html\">pi<\/a>\/2 if <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a> is positive and -<a href=\"dart-math\/pi-constant.html\">pi<\/a>\/2\nif <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a> is negative.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"dart-ui\/Offset\/distance.html\">distance<\/a>, to compute the magnitude of the vector.<\/li>\n<li>\n<a href=\"dart-ui\/Canvas\/rotate.html\">Canvas.rotate<\/a>, which uses the same convention for its angle.<\/li>\n<\/ul>",
            "memberOf": "dart:ui.Offset",
            "isConstant": false,
            "href": "dart-ui\/Offset\/direction.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get direction =&gt; math.atan2(dy, dx);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "distance",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The magnitude of the offset.<\/p>\n<p>If you need this value to compare it to another <a href=\"dart-ui\/Offset-class.html\">Offset<\/a>'s distance,\nconsider using <a href=\"dart-ui\/Offset\/distanceSquared.html\">distanceSquared<\/a> instead, since it is cheaper to compute.<\/p>\n        ",
            "memberOf": "dart:ui.Offset",
            "isConstant": false,
            "href": "dart-ui\/Offset\/distance.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get distance =&gt; math.sqrt(dx * dx + dy * dy);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "distanceSquared",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The square of the magnitude of the offset.<\/p>\n<p>This is cheaper than computing the <a href=\"dart-ui\/Offset\/distance.html\">distance<\/a> itself.<\/p>\n        ",
            "memberOf": "dart:ui.Offset",
            "isConstant": false,
            "href": "dart-ui\/Offset\/distanceSquared.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get distanceSquared =&gt; dx * dx + dy * dy;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "dx",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The x component of the offset.<\/p>\n<p>The y component is given by <a href=\"dart-ui\/Offset\/dy.html\">dy<\/a>.<\/p>\n        ",
            "memberOf": "dart:ui.Offset",
            "isConstant": false,
            "href": "dart-ui\/Offset\/dx.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get dx =&gt; _dx;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "dy",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The y component of the offset.<\/p>\n<p>The x component is given by <a href=\"dart-ui\/Offset\/dx.html\">dx<\/a>.<\/p>\n        ",
            "memberOf": "dart:ui.Offset",
            "isConstant": false,
            "href": "dart-ui\/Offset\/dy.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get dy =&gt; _dy;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "hashCode",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"dart-ui\/Offset\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"dart-ui\/Offset\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"dart-ui\/Offset\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"dart-ui\/Offset\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"dart-ui\/Offset\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"dart-ui\/Offset\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "memberOf": "dart:ui.Offset",
            "isConstant": false,
            "href": "dart-ui\/Offset\/hashCode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get hashCode =&gt; hashValues(dx, dy);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "type": "",
            "href": "dart-ui\/Offset\/infinite-constant.html",
            "desc": "<p>An offset with infinite x and y components.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"dart-ui\/OffsetBase\/isInfinite.html\">isInfinite<\/a>, which checks whether either component is infinite.<\/li>\n<li>\n<a href=\"dart-ui\/OffsetBase\/isFinite.html\">isFinite<\/a>, which checks whether both components are finite.<\/li>\n<\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const Offset infinite = const Offset(double.infinity, double.infinity)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "infinite",
            "memberOf": "dart:ui.Offset"
        },
        {
            "type": "",
            "href": "dart-ui\/Offset\/zero-constant.html",
            "desc": "<p>An offset with zero magnitude.<\/p>\n<p>This can be used to represent the origin of a coordinate space.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const Offset zero = const Offset(0.0, 0.0)\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "zero",
            "memberOf": "dart:ui.Offset"
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [
        "material.MaterialPointArcTween"
    ],
    "realImplementors": [
        "material.MaterialPointArcTween"
    ],
    "cn": [],
    "href": "dart-ui\/Offset-class.html",
    "desc": "<p>An immutable 2D floating-point offset.<\/p>\n<p>Generally speaking, Offsets can be interpreted in two ways:<\/p>\n<ol>\n<li>\n<p>As representing a point in Cartesian space a specified distance from a\nseparately-maintained origin. For example, the top-left position of\nchildren in the <a href=\"rendering\/RenderBox-class.html\">RenderBox<\/a> protocol is typically represented as an\n<a href=\"dart-ui\/Offset-class.html\">Offset<\/a> from the top left of the parent box.<\/p>\n<\/li>\n<li>\n<p>As a vector that can be applied to coordinates. For example, when\npainting a <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a>, the parent is passed an <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> from the\nscreen's origin which it can add to the offsets of its children to find\nthe <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> from the screen's origin to each of the children.<\/p>\n<\/li>\n<\/ol>\n<p>Because a particular <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> can be interpreted as one sense at one time\nthen as the other sense at a later time, the same class is used for both\nsenses.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"dart-ui\/Size-class.html\">Size<\/a>, which represents a vector describing the size of a rectangle.<\/li><\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Offset"
}