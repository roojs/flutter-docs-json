{
    "desc": "<p>Property which handles <a href=\"vector_math_64\/Matrix4-class.html\">Matrix4<\/a> that represent transforms.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "painting\/TransformProperty-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "painting",
    "name": "painting.TransformProperty",
    "shortname": "TransformProperty",
    "extends": [
        "vector_math_64.Matrix4",
        "foundation.DiagnosticsProperty",
        "foundation.DiagnosticsNode",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Create a diagnostics property for <a href=\"vector_math_64\/Matrix4-class.html\">Matrix4<\/a> objects.<\/p>\n<p>The <code>showName<\/code> and <code>level<\/code> arguments must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">TransformProperty(\n  String name,\n  Matrix4 value, {\n  bool showName = true,\n  Object defaultValue = kNoDefaultValue,\n  DiagnosticLevel level = DiagnosticLevel.info,\n}) : assert(showName != null),\n     assert(level != null),\n     super(\n       name,\n       value,\n       showName: showName,\n       defaultValue: defaultValue,\n       level: level,\n     );<\/code><\/pre>\n    ",
            "href": "painting\/TransformProperty\/TransformProperty.html",
            "isDeprecated": "0",
            "type": "",
            "name": "TransformProperty",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "painting.TransformProperty",
            "params": [
                {
                    "name": "defaultValue",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.Object"
                },
                {
                    "name": "level",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.DiagnosticLevel"
                },
                {
                    "name": "name",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "showName",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of the property value.<\/p>\n<p>Subclasses should override this method instead of <a href=\"foundation\/DiagnosticsProperty\/toDescription.html\">toDescription<\/a> to\ncustomize how property values are converted to strings.<\/p>\n<p>Overriding this method ensures that behavior controlling how property\nvalues are decorated to generate a nice <a href=\"foundation\/DiagnosticsProperty\/toDescription.html\">toDescription<\/a> are consistent\nacross all implementations. Debugging tools may also choose to use\n<a href=\"painting\/TransformProperty\/valueToString.html\">valueToString<\/a> directly instead of <a href=\"foundation\/DiagnosticsProperty\/toDescription.html\">toDescription<\/a>.<\/p>\n<p><code>parentConfiguration<\/code> specifies how the parent is rendered as text art.\nFor example, if the parent places all properties on one line, the value\nof the property should be displayed without line breaks if possible.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString valueToString({ TextTreeConfiguration parentConfiguration }) {\n  if (parentConfiguration != null &amp;&amp; !parentConfiguration.lineBreakProperties) {\n    \/\/ Format the value on a single line to be compatible with the parent's\n    \/\/ style.\n    final List&lt;Vector4&gt; rows = &lt;Vector4&gt;[\n      value.getRow(0),\n      value.getRow(1),\n      value.getRow(2),\n      value.getRow(3),\n    ];\n    return '[${rows.join(\"; \")}]';\n  }\n  return debugDescribeTransform(value).join('\\n');\n}<\/code><\/pre>\n    ",
            "href": "painting\/TransformProperty\/valueToString.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "name": "valueToString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "painting.TransformProperty",
            "params": [
                {
                    "name": "parentConfiguration",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "foundation.TextTreeConfiguration"
                }
            ]
        }
    ],
    "props": []
}