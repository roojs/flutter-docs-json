{
    "desc": "<p>A bridge from a <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> to an <a href=\"widgets\/Element-class.html\">Element<\/a> tree.<\/p>\n<p>The given container is the <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> that the <a href=\"widgets\/Element-class.html\">Element<\/a> tree should be\ninserted into. It must be a <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> that implements the\n<a href=\"rendering\/RenderObjectWithChildMixin-mixin.html\">RenderObjectWithChildMixin<\/a> protocol. The type argument <code>T<\/code> is the kind of\n<a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> that the container expects as its child.<\/p>\n<p>Used by <a href=\"widgets\/runApp.html\">runApp<\/a> to bootstrap applications.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "widgets\/RenderObjectToWidgetAdapter-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.RenderObjectToWidgetAdapter",
    "shortname": "RenderObjectToWidgetAdapter",
    "extends": [
        "widgets.RenderObjectWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a bridge from a <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> to an <a href=\"widgets\/Element-class.html\">Element<\/a> tree.<\/p>\n<p>Used by <a href=\"widgets\/WidgetsBinding-mixin.html\">WidgetsBinding<\/a> to attach the root widget to the <a href=\"rendering\/RenderView-class.html\">RenderView<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RenderObjectToWidgetAdapter({\n  this.child,\n  this.container,\n  this.debugShortDescription,\n}) : super(key: GlobalObjectKey(container));<\/code><\/pre>\n    ",
            "href": "widgets\/RenderObjectToWidgetAdapter\/RenderObjectToWidgetAdapter.html",
            "isDeprecated": false,
            "type": "",
            "name": "RenderObjectToWidgetAdapter",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.RenderObjectToWidgetAdapter",
            "params": [
                {
                    "name": "child",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "container",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "rendering.RenderObjectWithChildMixin"
                },
                {
                    "name": "debugShortDescription",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Inflate this widget and actually set the resulting <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> as the\nchild of <a href=\"widgets\/RenderObjectToWidgetAdapter\/container.html\">container<\/a>.<\/p>\n<p>If <code>element<\/code> is null, this function will create a new element. Otherwise,\nthe given element will have an update scheduled to switch to this widget.<\/p>\n<p>Used by <a href=\"widgets\/runApp.html\">runApp<\/a> to bootstrap applications.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RenderObjectToWidgetElement&lt;T&gt; attachToRenderTree(BuildOwner owner, [ RenderObjectToWidgetElement&lt;T&gt; element ]) {\n  if (element == null) {\n    owner.lockState(() {\n      element = createElement();\n      assert(element != null);\n      element.assignOwner(owner);\n    });\n    owner.buildScope(element, () {\n      element.mount(null, null);\n    });\n  } else {\n    element._newWidget = this;\n    element.markNeedsBuild();\n  }\n  return element;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/RenderObjectToWidgetAdapter\/attachToRenderTree.html",
            "isDeprecated": false,
            "type": "widgets.RenderObjectToWidgetElement",
            "name": "attachToRenderTree",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.RenderObjectToWidgetAdapter",
            "params": [
                {
                    "name": "element",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.RenderObjectToWidgetElement"
                },
                {
                    "name": "owner",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildOwner"
                }
            ]
        },
        {
            "desc": "<p>RenderObjectWidgets always inflate to a <a href=\"widgets\/RenderObjectElement-class.html\">RenderObjectElement<\/a> subclass.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nRenderObjectToWidgetElement&lt;T&gt; createElement() =&gt; RenderObjectToWidgetElement&lt;T&gt;(this);<\/code><\/pre>\n    ",
            "href": "widgets\/RenderObjectToWidgetAdapter\/createElement.html",
            "isDeprecated": false,
            "type": "widgets.RenderObjectToWidgetElement",
            "name": "createElement",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.RenderObjectToWidgetAdapter",
            "params": []
        },
        {
            "desc": "<p>Creates an instance of the <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> class that this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> represents, using the configuration described by this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a>.<\/p>\n<p>This method should not do anything with the children of the render object.\nThat should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/mount.html\">RenderObjectElement.mount<\/a> in the object rendered by this object's\n<a href=\"widgets\/RenderObjectToWidgetAdapter\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/mount.html\">SingleChildRenderObjectElement.mount<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nRenderObjectWithChildMixin&lt;T&gt; createRenderObject(BuildContext context) =&gt; container;<\/code><\/pre>\n    ",
            "href": "widgets\/RenderObjectToWidgetAdapter\/createRenderObject.html",
            "isDeprecated": false,
            "type": "rendering.RenderObjectWithChildMixin",
            "name": "createRenderObject",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.RenderObjectToWidgetAdapter",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>A short, textual description of this widget.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toStringShort() =&gt; debugShortDescription ?? super.toStringShort();<\/code><\/pre>\n    ",
            "href": "widgets\/RenderObjectToWidgetAdapter\/toStringShort.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toStringShort",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.RenderObjectToWidgetAdapter",
            "params": []
        },
        {
            "desc": "<p>Copies the configuration described by this <a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> to the\ngiven <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a>, which will be of the same type as returned by this\nobject's <a href=\"widgets\/RenderObjectToWidgetAdapter\/createRenderObject.html\">createRenderObject<\/a>.<\/p>\n<p>This method should not do anything to update the children of the render\nobject. That should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/update.html\">RenderObjectElement.update<\/a> in the object rendered by this object's\n<a href=\"widgets\/RenderObjectToWidgetAdapter\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/update.html\">SingleChildRenderObjectElement.update<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid updateRenderObject(BuildContext context, RenderObject renderObject) { }<\/code><\/pre>\n    ",
            "href": "widgets\/RenderObjectToWidgetAdapter\/updateRenderObject.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "updateRenderObject",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.RenderObjectToWidgetAdapter",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "renderObject",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "rendering.RenderObject"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The widget below this widget in the tree.<\/p>\n<p>This widget can only have one child. To lay out multiple children, let this\nwidget's child be a widget such as <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Stack-class.html\">Stack<\/a>, which have a\n<code>children<\/code> property, and then provide the children to that widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/RenderObjectToWidgetAdapter\/child.html",
            "name": "child",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.RenderObjectToWidgetAdapter",
            "params": []
        },
        {
            "desc": "<p>The <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> that is the parent of the <a href=\"widgets\/Element-class.html\">Element<\/a> created by this widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final RenderObjectWithChildMixin&lt;T&gt; container\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/RenderObjectToWidgetAdapter\/container.html",
            "name": "container",
            "isDeprecated": false,
            "type": "rendering.RenderObjectWithChildMixin",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.RenderObjectToWidgetAdapter",
            "params": []
        },
        {
            "desc": "<p>A short description of this widget used by debugging aids.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String debugShortDescription\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/RenderObjectToWidgetAdapter\/debugShortDescription.html",
            "name": "debugShortDescription",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.RenderObjectToWidgetAdapter",
            "params": []
        }
    ]
}