{
    "name": "dart:math.Random",
    "extends": [],
    "memberOf": "dart:math",
    "events": [],
    "methods": [
        {
            "name": "Random",
            "type": "",
            "desc": "<p>Creates a random number generator.<\/p>\n<p>The optional parameter <code>seed<\/code> is used to initialize the\ninternal state of the generator. The implementation of the\nrandom stream can change between releases of the library.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:math.Random",
            "sig": "",
            "params": [
                {
                    "name": "seed",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-math\/Random\/Random.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">external factory Random([int seed]);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "nextBool",
            "type": "dart:core.bool",
            "desc": "<p>Generates a random boolean value.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:math.Random",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-math\/Random\/nextBool.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool nextBool();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "nextDouble",
            "type": "dart:core.double",
            "desc": "<p>Generates a non-negative random floating point value uniformly distributed\nin the range from 0.0, inclusive, to 1.0, exclusive.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:math.Random",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-math\/Random\/nextDouble.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double nextDouble();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "nextInt",
            "type": "dart:core.int",
            "desc": "<p>Generates a non-negative random integer uniformly distributed in the range\nfrom 0, inclusive, to <code>max<\/code>, exclusive.<\/p>\n<p>Implementation note: The default implementation supports <code>max<\/code> values\nbetween 1 and (1&lt;&lt;32) inclusive.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:math.Random",
            "sig": "",
            "params": [
                {
                    "name": "max",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-math\/Random\/nextInt.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">int nextInt(int max);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "Random.secure",
            "type": "",
            "desc": "<p>Creates a cryptographically secure random number generator.<\/p>\n<p>If the program cannot provide a cryptographically secure\nsource of random numbers, it throws an <a href=\"dart-core\/UnsupportedError-class.html\">UnsupportedError<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:math.Random",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "dart-math\/Random\/Random.secure.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">external factory Random.secure();<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-math\/Random-class.html",
    "desc": "<p>A generator of random bool, int, or double values.<\/p>\n<p>The default implementation supplies a stream of pseudo-random bits that are\nnot suitable for cryptographic purposes.<\/p>\n<p>Use the <a href=\"\">Random.secure<\/a> constructor for cryptographic purposes.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Random"
}