{
    "desc": "<p>A single stack frame. Each frame points to a precise location in Dart code.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-stack_trace_stack_trace\/Frame-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "stack_trace",
    "name": "stack_trace.Frame",
    "shortname": "Frame",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Frame(this.uri, this.line, this.column, this.member);<\/code><\/pre>\n    ",
            "href": "package-stack_trace_stack_trace\/Frame\/Frame.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "stack_trace.Frame",
            "params": [
                {
                    "name": "column",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "line",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "member",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "uri",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.Uri"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() =&gt; '$location in $member';<\/code><\/pre>\n    ",
            "href": "package-stack_trace_stack_trace\/Frame\/toString.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "stack_trace.Frame",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The column number of the code location.<\/p>\n<p>This can be null, indicating that the column number is unknown or\nunimportant.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int column\n\n<\/code><\/pre>\n        ",
            "href": "package-stack_trace_stack_trace\/Frame\/column.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "stack_trace.Frame",
            "params": []
        },
        {
            "desc": "<p>Whether this stack frame comes from the Dart core libraries.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isCore =&gt; uri.scheme == 'dart';<\/code><\/pre>\n        ",
            "href": "package-stack_trace_stack_trace\/Frame\/isCore.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "stack_trace.Frame",
            "params": []
        },
        {
            "desc": "<p>Returns a human-friendly description of the library that this stack frame\ncomes from.<\/p>\n<p>This will usually be the string form of <a href=\"package-stack_trace_stack_trace\/Frame\/uri.html\">uri<\/a>, but a relative URI will be\nused if possible. Data URIs will be truncated.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get library {\n  if (uri.scheme == 'data') return \"data:...\";\n  return path.prettyUri(uri);\n}<\/code><\/pre>\n        ",
            "href": "package-stack_trace_stack_trace\/Frame\/library.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "stack_trace.Frame",
            "params": []
        },
        {
            "desc": "<p>The line number on which the code location is located.<\/p>\n<p>This can be null, indicating that the line number is unknown or\nunimportant.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int line\n\n<\/code><\/pre>\n        ",
            "href": "package-stack_trace_stack_trace\/Frame\/line.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "stack_trace.Frame",
            "params": []
        },
        {
            "desc": "<p>A human-friendly description of the code location.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get location {\n  if (line == null) return library;\n  if (column == null) return '$library $line';\n  return '$library $line:$column';\n}<\/code><\/pre>\n        ",
            "href": "package-stack_trace_stack_trace\/Frame\/location.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "stack_trace.Frame",
            "params": []
        },
        {
            "desc": "<p>The name of the member in which the code location occurs.<\/p>\n<p>Anonymous closures are represented as <code>&lt;fn&gt;<\/code> in this member string.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String member\n\n<\/code><\/pre>\n        ",
            "href": "package-stack_trace_stack_trace\/Frame\/member.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "stack_trace.Frame",
            "params": []
        },
        {
            "desc": "<p>Returns the name of the package this stack frame comes from, or <code>null<\/code> if\nthis stack frame doesn't come from a <code>package:<\/code> URL.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get package {\n  if (uri.scheme != 'package') return null;\n  return uri.path.split('\/').first;\n}<\/code><\/pre>\n        ",
            "href": "package-stack_trace_stack_trace\/Frame\/package.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "stack_trace.Frame",
            "params": []
        },
        {
            "desc": "<p>The URI of the file in which the code is located.<\/p>\n<p>This URI will usually have the scheme <code>dart<\/code>, <code>file<\/code>, <code>http<\/code>, or <code>https<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Uri uri\n\n<\/code><\/pre>\n        ",
            "href": "package-stack_trace_stack_trace\/Frame\/uri.html",
            "isDeprecated": "0",
            "type": "dart:core.Uri",
            "memberOf": "stack_trace.Frame",
            "params": []
        }
    ]
}