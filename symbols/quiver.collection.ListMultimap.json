{
    "desc": "<p>A multimap implementation that uses <a href=\"dart-core\/List-class.html\">List<\/a>s to store the values associated\nwith each key.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "quiver.collection\/ListMultimap-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "quiver.collection",
    "name": "quiver.collection.ListMultimap",
    "shortname": "ListMultimap",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ListMultimap();<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/ListMultimap.html",
            "isDeprecated": "0",
            "type": "",
            "name": "ListMultimap",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": []
        },
        {
            "desc": "<p>Adds an association from the given key to the given value.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(K key, V value) {\n  _map.putIfAbsent(key, _create);\n  _add(_map[key], value);\n}<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/add.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "add",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<K>"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<V>"
                }
            ]
        },
        {
            "desc": "<p>Adds all associations of <code>other<\/code> to this multimap.<\/p>\n<p>The operation is equivalent to doing <code>this[key] = value<\/code> for each key and\nassociated value in other. It iterates over <code>other<\/code>, which must therefore\nnot change during the iteration.<\/p>\n<p>This implementation iterates through each key of <code>other<\/code> and adds the\nassociated values to this instance via <a href=\"quiver.collection\/ListMultimap\/addValues.html\">addValues<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addAll(Multimap&lt;K, V&gt; other) =&gt; other.forEachKey(addValues);<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/addAll.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "addAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "quiver.collection.Multimap"
                }
            ]
        },
        {
            "desc": "<p>Adds an association from the given key to each of the given values.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addValues(K key, Iterable&lt;V&gt; values) {\n  _map.putIfAbsent(key, _create);\n  _addAll(_map[key], values);\n}<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/addValues.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "addValues",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<K>"
                },
                {
                    "name": "values",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Iterable"
                }
            ]
        },
        {
            "desc": "<p>Returns a view of this multimap as a map.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Map&lt;K, List&lt;V&gt;&gt; asMap() =&gt; new _WrappedMap&lt;K, V, List&lt;V&gt;&gt;(this);<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/asMap.html",
            "isDeprecated": "0",
            "type": "dart:core.Map<dart:core.List>",
            "name": "asMap",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": []
        },
        {
            "desc": "<p>Removes all data from the multimap.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void clear() {\n  _map.forEach((K key, Iterable&lt;V&gt; value) =&gt; _clear(value));\n  _map.clear();\n}<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/clear.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "clear",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": []
        },
        {
            "desc": "<p>Returns whether this multimap contains the given association between <code>key<\/code>\nand <code>value<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool contains(Object key, Object value) =&gt; _map[key]?.contains(value) == true;<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/contains.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "name": "contains",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        },
        {
            "desc": "<p>Returns whether this multimap contains the given <code>key<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool containsKey(Object key) =&gt; _map.keys.contains(key);<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/containsKey.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "name": "containsKey",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        },
        {
            "desc": "<p>Returns whether this multimap contains the given <code>value<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool containsValue(Object value) =&gt; values.contains(value);<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/containsValue.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "name": "containsValue",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": [
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        },
        {
            "desc": "<p>Applies <code>f<\/code> to each {key, value} pair of the multimap.<\/p>\n<p>It is an error to add or remove keys from the map during iteration.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void forEach(void f(K key, V value)) {\n  _map.forEach((K key, Iterable&lt;V&gt; values) {\n    values.forEach((V value) =&gt; f(key, value));\n  });\n}<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/forEach.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "forEach",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<K>"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<V>"
                }
            ]
        },
        {
            "desc": "<p>Applies <code>f<\/code> to each {key, <code>Iterable&lt;value&gt;<\/code>} pair of the multimap.<\/p>\n<p>It is an error to add or remove keys from the map during iteration.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void forEachKey(void f(K key, C value)) =&gt; _map.forEach(f);<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/forEachKey.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "forEachKey",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<K>"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<C>"
                }
            ]
        },
        {
            "desc": "<p>Removes the association between the given <code>key<\/code> and <code>value<\/code>. Returns\n<code>true<\/code> if the association existed, <code>false<\/code> otherwise.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool remove(Object key, V value) {\n  if (!_map.containsKey(key)) return false;\n  bool removed = _remove(_map[key], value);\n  if (removed &amp;&amp; _map[key].isEmpty) _map.remove(key);\n  return removed;\n}<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/remove.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "name": "remove",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<V>"
                }
            ]
        },
        {
            "desc": "<p>Removes the association for the given <code>key<\/code>. Returns the collection of\nremoved values, or an empty iterable if <code>key<\/code> was unmapped.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;V&gt; removeAll(Object key) =&gt; super.removeAll(key);<\/code><\/pre>\n    ",
            "href": "quiver.collection\/ListMultimap\/removeAll.html",
            "isDeprecated": "0",
            "type": "dart:core.List",
            "name": "removeAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.collection.ListMultimap",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns true if there is no key in the multimap.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isEmpty =&gt; _map.isEmpty;<\/code><\/pre>\n        ",
            "href": "quiver.collection\/ListMultimap\/isEmpty.html",
            "name": "isEmpty",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "quiver.collection.ListMultimap",
            "params": []
        },
        {
            "desc": "<p>Returns true if there is at least one key in the multimap.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isNotEmpty =&gt; _map.isNotEmpty;<\/code><\/pre>\n        ",
            "href": "quiver.collection\/ListMultimap\/isNotEmpty.html",
            "name": "isNotEmpty",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "quiver.collection.ListMultimap",
            "params": []
        },
        {
            "desc": "<p>The keys of <a href=\"quiver.collection\/ListMultimap-class.html\">this<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Iterable&lt;K&gt; get keys =&gt; _map.keys;<\/code><\/pre>\n        ",
            "href": "quiver.collection\/ListMultimap\/keys.html",
            "name": "keys",
            "isDeprecated": false,
            "type": "dart:core.Iterable",
            "memberOf": "quiver.collection.ListMultimap",
            "params": []
        },
        {
            "desc": "<p>The number of keys in the multimap.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get length =&gt; _map.length;<\/code><\/pre>\n        ",
            "href": "quiver.collection\/ListMultimap\/length.html",
            "name": "length",
            "isDeprecated": false,
            "type": "dart:core.int",
            "memberOf": "quiver.collection.ListMultimap",
            "params": []
        },
        {
            "desc": "<p>The values of <a href=\"quiver.collection\/ListMultimap-class.html\">this<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Iterable&lt;V&gt; get values =&gt; _map.values.expand((x) =&gt; x);<\/code><\/pre>\n        ",
            "href": "quiver.collection\/ListMultimap\/values.html",
            "name": "values",
            "isDeprecated": false,
            "type": "dart:core.Iterable",
            "memberOf": "quiver.collection.ListMultimap",
            "params": []
        }
    ]
}