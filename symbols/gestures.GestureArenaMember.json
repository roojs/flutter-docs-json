{
    "name": "gestures.GestureArenaMember",
    "extends": [],
    "memberOf": "gestures",
    "events": [],
    "methods": [
        {
            "name": "GestureArenaMember",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "gestures.GestureArenaMember",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "gestures\/GestureArenaMember\/GestureArenaMember.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "acceptGesture",
            "type": "",
            "desc": "<p>Called when this member wins the arena for the given pointer id.<\/p>\n    ",
            "static": false,
            "memberOf": "gestures.GestureArenaMember",
            "sig": "",
            "params": [
                {
                    "name": "pointer",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "gestures\/GestureArenaMember\/acceptGesture.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void acceptGesture(int pointer);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "rejectGesture",
            "type": "",
            "desc": "<p>Called when this member loses the arena for the given pointer id.<\/p>\n    ",
            "static": false,
            "memberOf": "gestures.GestureArenaMember",
            "sig": "",
            "params": [
                {
                    "name": "pointer",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "gestures\/GestureArenaMember\/rejectGesture.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void rejectGesture(int pointer);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "gestures.DelayedMultiDragGestureRecognizer",
        "gestures.DoubleTapGestureRecognizer",
        "gestures.DragGestureRecognizer",
        "gestures.EagerGestureRecognizer",
        "gestures.ForcePressGestureRecognizer",
        "gestures.GestureRecognizer",
        "gestures.HorizontalDragGestureRecognizer",
        "gestures.HorizontalMultiDragGestureRecognizer",
        "gestures.ImmediateMultiDragGestureRecognizer",
        "gestures.LongPressGestureRecognizer",
        "gestures.MultiDragGestureRecognizer",
        "gestures.MultiTapGestureRecognizer",
        "gestures.OneSequenceGestureRecognizer",
        "gestures.PanGestureRecognizer",
        "gestures.PrimaryPointerGestureRecognizer",
        "gestures.ScaleGestureRecognizer",
        "gestures.TapGestureRecognizer",
        "gestures.VerticalDragGestureRecognizer",
        "gestures.VerticalMultiDragGestureRecognizer"
    ],
    "realImplementors": [
        "gestures.DelayedMultiDragGestureRecognizer",
        "gestures.DoubleTapGestureRecognizer"
    ],
    "cn": [],
    "href": "gestures\/GestureArenaMember-class.html",
    "desc": "<p>Represents an object participating in an arena.<\/p>\n<p>Receives callbacks from the GestureArena to notify the object when it wins\nor loses a gesture negotiation. Exactly one of <a href=\"gestures\/GestureArenaMember\/acceptGesture.html\">acceptGesture<\/a> or\n<a href=\"gestures\/GestureArenaMember\/rejectGesture.html\">rejectGesture<\/a> will be called for each arena this member was added to,\nregardless of what caused the arena to be resolved. For example, if a\nmember resolves the arena itself, that member still receives an\n<a href=\"gestures\/GestureArenaMember\/acceptGesture.html\">acceptGesture<\/a> callback.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "GestureArenaMember"
}