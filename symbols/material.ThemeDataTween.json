{
    "name": "material.ThemeDataTween",
    "extends": [
        "material.ThemeData",
        "animation.Tween",
        "material.ThemeData",
        "animation.Animatable",
        "dart:core.Object"
    ],
    "memberOf": "material",
    "events": [],
    "methods": [
        {
            "name": "ThemeDataTween",
            "type": "",
            "desc": "<p>Creates a <a href=\"material\/ThemeData-class.html\">ThemeData<\/a> tween.<\/p>\n<p>The <code>begin<\/code> and <code>end<\/code> properties must be non-null before the tween is\nfirst used, but the arguments can be null if the values are going to be\nfilled in later.<\/p>\n    ",
            "static": false,
            "memberOf": "material.ThemeDataTween",
            "sig": "",
            "params": [
                {
                    "name": "begin",
                    "type": "material.ThemeData",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "end",
                    "type": "material.ThemeData",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "material\/ThemeDataTween\/ThemeDataTween.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ThemeDataTween({ ThemeData begin, ThemeData end }) : super(begin: begin, end: end);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "lerp",
            "type": "material.ThemeData",
            "desc": "<p>Returns the value this variable has at the given animation clock value.<\/p>\n<p>The default implementation of this method uses the <code>+<\/code>, <code>-<\/code>, and <code>*<\/code>\noperators on <code>T<\/code>. The <a href=\"animation\/Tween\/begin.html\">begin<\/a> and <a href=\"animation\/Tween\/end.html\">end<\/a> properties must therefore be\nnon-null by the time this method is called.<\/p>\n    ",
            "static": false,
            "memberOf": "material.ThemeDataTween",
            "sig": "",
            "params": [
                {
                    "name": "t",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "material\/ThemeDataTween\/lerp.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nThemeData lerp(double t) =&gt; ThemeData.lerp(begin, end, t);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "material\/ThemeDataTween-class.html",
    "desc": "<p>An interpolation between two <a href=\"material\/ThemeData-class.html\">ThemeData<\/a>s.<\/p>\n<p>This class specializes the interpolation of <a href=\"animation\/Tween-class.html\">Tween&lt;ThemeData&gt;<\/a> to call the\n<a href=\"material\/ThemeDataTween\/lerp.html\">ThemeData.lerp<\/a> method.<\/p>\n<p>See <a href=\"animation\/Tween-class.html\">Tween<\/a> for a discussion on how to use interpolation objects.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "ThemeDataTween"
}