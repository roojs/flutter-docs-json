{
    "desc": "<p>A <a href=\"dart-convert\/Codec-class.html\">Codec<\/a> that performs the identity conversion (changing nothing) in both\ndirections.<\/p>\n<p>The identity codec passes input directly to output in both directions.\nThis class can be used as a base when combining multiple codecs,\nbecause fusing the identity codec with any other codec gives the other\ncodec back.<\/p>\n<p>Note, that when fused with another <a href=\"dart-convert\/Codec-class.html\">Codec<\/a> the identity codec disppears.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "convert\/IdentityCodec-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "convert",
    "name": "convert.IdentityCodec",
    "shortname": "IdentityCodec",
    "extends": [
        "dart:convert.Codec",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const IdentityCodec();<\/code><\/pre>\n    ",
            "href": "convert\/IdentityCodec\/IdentityCodec.html",
            "isDeprecated": false,
            "type": "",
            "name": "IdentityCodec",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "convert.IdentityCodec",
            "params": []
        },
        {
            "desc": "<p>Fuse with an other codec.<\/p>\n<p>Fusing with the identify converter is a no-op, so this always return\n<code>other<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Codec&lt;T, R&gt; fuse&lt;R&gt;(Codec&lt;T, R&gt; other) =&gt; other;<\/code><\/pre>\n    ",
            "href": "convert\/IdentityCodec\/fuse.html",
            "isDeprecated": false,
            "type": "dart:convert.Codec",
            "name": "fuse",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "convert.IdentityCodec",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:convert.Codec"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns the decoder of <code>this<\/code>, converting from <code>T<\/code> to <code>S<\/code>.<\/p>\n<p>It may be stateful and should not be reused.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Converter&lt;T, T&gt; get decoder =&gt; new _IdentityConverter&lt;T&gt;();<\/code><\/pre>\n        ",
            "href": "convert\/IdentityCodec\/decoder.html",
            "name": "decoder",
            "isDeprecated": false,
            "type": "dart:convert.Converter",
            "memberOf": "convert.IdentityCodec",
            "params": []
        },
        {
            "desc": "<p>Returns the encoder from <code>S<\/code> to <code>T<\/code>.<\/p>\n<p>It may be stateful and should not be reused.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Converter&lt;T, T&gt; get encoder =&gt; new _IdentityConverter&lt;T&gt;();<\/code><\/pre>\n        ",
            "href": "convert\/IdentityCodec\/encoder.html",
            "name": "encoder",
            "isDeprecated": false,
            "type": "dart:convert.Converter",
            "memberOf": "convert.IdentityCodec",
            "params": []
        }
    ]
}