{
    "desc": "<p>Sends messages to its <a href=\"dart-isolate\/ReceivePort-class.html\">ReceivePort<\/a>s.<\/p>\n<p><a href=\"dart-isolate\/SendPort-class.html\">SendPort<\/a>s are created from <a href=\"dart-isolate\/ReceivePort-class.html\">ReceivePort<\/a>s. Any message sent through\na <a href=\"dart-isolate\/SendPort-class.html\">SendPort<\/a> is delivered to its corresponding <a href=\"dart-isolate\/ReceivePort-class.html\">ReceivePort<\/a>. There might be\nmany <a href=\"dart-isolate\/SendPort-class.html\">SendPort<\/a>s for the same <a href=\"dart-isolate\/ReceivePort-class.html\">ReceivePort<\/a>.<\/p>\n<p><a href=\"dart-isolate\/SendPort-class.html\">SendPort<\/a>s can be transmitted to other isolates, and they preserve equality\nwhen sent.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-isolate\/SendPort-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:isolate",
    "name": "dart:isolate.SendPort",
    "shortname": "SendPort",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "dart-isolate\/SendPort\/SendPort.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:isolate.SendPort",
            "params": []
        },
        {
            "desc": "<p>Sends an asynchronous <code>message<\/code> through this send port, to its\ncorresponding <code>ReceivePort<\/code>.<\/p>\n<p>The content of <code>message<\/code> can be: primitive values (null, num, bool, double,\nString), instances of <a href=\"dart-isolate\/SendPort-class.html\">SendPort<\/a>, and lists and maps whose elements are any\nof these. List and maps are also allowed to be cyclic.<\/p>\n<p>In the special circumstances when two isolates share the same code and are\nrunning in the same process (e.g. isolates created via <a href=\"dart-isolate\/Isolate\/spawn.html\">Isolate.spawn<\/a>), it\nis also possible to send object instances (which would be copied in the\nprocess). This is currently only supported by the dartvm.  For now, the\ndart2js compiler only supports the restricted messages described above.<\/p>\n<p>The send happens immediately and doesn't block.  The corresponding receive\nport can receive the message as soon as its isolate's event loop is ready\nto deliver it, independently of what the sending isolate is doing.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void send(var message);<\/code><\/pre>\n    ",
            "href": "dart-isolate\/SendPort\/send.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:isolate.SendPort",
            "params": [
                {
                    "name": "message",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<dynamic>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns an immutable hash code for this send port that is\nconsistent with the == operator.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get hashCode;<\/code><\/pre>\n        ",
            "href": "dart-isolate\/SendPort\/hashCode.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:isolate.SendPort",
            "params": []
        }
    ]
}