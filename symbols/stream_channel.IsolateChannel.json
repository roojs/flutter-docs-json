{
    "desc": "<p>A <a href=\"package-stream_channel_stream_channel\/StreamChannel-class.html\">StreamChannel<\/a> that communicates over a <a href=\"dart-isolate\/ReceivePort-class.html\">ReceivePort<\/a>\/<a href=\"dart-isolate\/SendPort-class.html\">SendPort<\/a> pair,\npresumably with another isolate.<\/p>\n<p>The remote endpoint doesn't necessarily need to be running an\n<a href=\"package-stream_channel_stream_channel\/IsolateChannel-class.html\">IsolateChannel<\/a>. This can be used with any two ports, although the\n<a href=\"package-stream_channel_stream_channel\/StreamChannel-class.html\">StreamChannel<\/a> semantics mean that this class will treat them as being\npaired (for example, closing the <a href=\"package-stream_channel_stream_channel\/IsolateChannel\/sink.html\">sink<\/a> will cause the <a href=\"package-stream_channel_stream_channel\/IsolateChannel\/stream.html\">stream<\/a> to stop\nemitting events).<\/p>\n<p>The underlying isolate ports have no notion of closing connections. This\nmeans that <a href=\"package-stream_channel_stream_channel\/IsolateChannel\/stream.html\">stream<\/a> won't close unless <a href=\"package-stream_channel_stream_channel\/IsolateChannel\/sink.html\">sink<\/a> is closed, and that closing\n<a href=\"package-stream_channel_stream_channel\/IsolateChannel\/sink.html\">sink<\/a> won't cause the remote endpoint to close. Users should take care to\nensure that they always close the <a href=\"package-stream_channel_stream_channel\/IsolateChannel\/sink.html\">sink<\/a> of every <a href=\"package-stream_channel_stream_channel\/IsolateChannel-class.html\">IsolateChannel<\/a> they use\nto avoid leaving dangling <a href=\"dart-isolate\/ReceivePort-class.html\">ReceivePort<\/a>s.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-stream_channel_stream_channel\/IsolateChannel-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "stream_channel",
    "name": "stream_channel.IsolateChannel",
    "shortname": "IsolateChannel",
    "extends": [
        "stream_channel.StreamChannelMixin",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a stream channel that receives messages from <code>receivePort<\/code> and\nsends them over <code>sendPort<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory IsolateChannel(ReceivePort receivePort, SendPort sendPort) {\n  var controller =\n      new StreamChannelController&lt;T&gt;(allowForeignErrors: false, sync: true);\n  receivePort.cast&lt;T&gt;().pipe(controller.local.sink);\n  controller.local.stream\n      .listen((data) =&gt; sendPort.send(data), onDone: receivePort.close);\n  return new IsolateChannel._(\n      controller.foreign.stream, controller.foreign.sink);\n}<\/code><\/pre>\n    ",
            "href": "package-stream_channel_stream_channel\/IsolateChannel\/IsolateChannel.html",
            "isDeprecated": false,
            "type": "",
            "name": "IsolateChannel",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "stream_channel.IsolateChannel",
            "params": [
                {
                    "name": "receivePort",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:isolate.ReceivePort"
                },
                {
                    "name": "sendPort",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:isolate.SendPort"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The sink for sending values to the other endpoint.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final StreamSink&lt;T&gt; sink\n\n<\/code><\/pre>\n        ",
            "href": "package-stream_channel_stream_channel\/IsolateChannel\/sink.html",
            "name": "sink",
            "isDeprecated": false,
            "type": "dart:async.StreamSink",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "stream_channel.IsolateChannel",
            "params": []
        },
        {
            "desc": "<p>The single-subscription stream that emits values from the other endpoint.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Stream&lt;T&gt; stream\n\n<\/code><\/pre>\n        ",
            "href": "package-stream_channel_stream_channel\/IsolateChannel\/stream.html",
            "name": "stream",
            "isDeprecated": false,
            "type": "dart:async.Stream",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "stream_channel.IsolateChannel",
            "params": []
        }
    ]
}