{
    "name": "cupertino.CupertinoAlertDialog",
    "extends": [
        "widgets.StatelessWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "cupertino",
    "events": [],
    "methods": [
        {
            "name": "CupertinoAlertDialog",
            "type": "",
            "desc": "<p>Creates an iOS-style alert dialog.<\/p>\n<p>The <code>actions<\/code> must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "cupertino.CupertinoAlertDialog",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "title",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "content",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "actions",
                    "type": "dart:core.List<widgets.Widget>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "widgets.Widget"
                    ]
                },
                {
                    "name": "scrollController",
                    "type": "widgets.ScrollController",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "actionScrollController",
                    "type": "widgets.ScrollController",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "cupertino\/CupertinoAlertDialog\/CupertinoAlertDialog.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const CupertinoAlertDialog({\n  Key key,\n  this.title,\n  this.content,\n  this.actions = const &lt;Widget&gt;[],\n  this.scrollController,\n  this.actionScrollController,\n}) : assert(actions != null),\n     super(key: key);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "build",
            "type": "widgets.Widget",
            "desc": "<p>Describes the part of the user interface represented by this widget.<\/p>\n<p>The framework calls this method when this widget is inserted into the\ntree in a given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> and when the dependencies of this widget\nchange (e.g., an <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> referenced by this widget changes).<\/p>\n<p>The framework replaces the subtree below this widget with the widget\nreturned by this method, either by updating the existing subtree or by\nremoving the subtree and inflating a new subtree, depending on whether the\nwidget returned by this method can update the root of the existing\nsubtree, as determined by calling <a href=\"widgets\/Widget\/canUpdate.html\">Widget.canUpdate<\/a>.<\/p>\n<p>Typically implementations return a newly created constellation of widgets\nthat are configured with information from this widget's constructor and\nfrom the given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>.<\/p>\n<p>The given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> contains information about the location in the\ntree at which this widget is being built. For example, the context\nprovides the set of inherited widgets for this location in the tree. A\ngiven widget might be built with multiple different <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>\narguments over time if the widget is moved around the tree or if the\nwidget is inserted into the tree in multiple places at once.<\/p>\n<p>The implementation of this method must only depend on:<\/p>\n<ul>\n<li>the fields of the widget, which themselves must not change over time,\nand<\/li>\n<li>any ambient state obtained from the <code>context<\/code> using\n<a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a>.<\/li>\n<\/ul>\n<p>If a widget's <a href=\"cupertino\/CupertinoAlertDialog\/build.html\">build<\/a> method is to depend on anything else, use a\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> instead.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, which contains the discussion on performance considerations.<\/li><\/ul>",
            "static": false,
            "memberOf": "cupertino.CupertinoAlertDialog",
            "sig": "",
            "params": [
                {
                    "name": "context",
                    "type": "widgets.BuildContext",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "cupertino\/CupertinoAlertDialog\/build.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  final CupertinoLocalizations localizations = CupertinoLocalizations.of(context);\n  final bool isInAccessibilityMode = _isInAccessibilityMode(context);\n  final double textScaleFactor = MediaQuery.of(context).textScaleFactor;\n  return MediaQuery(\n    data: MediaQuery.of(context).copyWith(\n      \/\/ iOS does not shrink dialog content below a 1.0 scale factor\n      textScaleFactor: math.max(textScaleFactor, 1.0),\n    ),\n    child: LayoutBuilder(\n      builder: (BuildContext context, BoxConstraints constraints) {\n        return Center(\n          child: Container(\n            margin: const EdgeInsets.symmetric(vertical: _kEdgePadding),\n            width: isInAccessibilityMode\n                ? _kAccessibilityCupertinoDialogWidth\n                : _kCupertinoDialogWidth,\n            child: CupertinoPopupSurface(\n              isSurfacePainted: false,\n              child: Semantics(\n                namesRoute: true,\n                scopesRoute: true,\n                explicitChildNodes: true,\n                label: localizations.alertDialogLabel,\n                child: _CupertinoDialogRenderWidget(\n                  contentSection: _buildContent(),\n                  actionsSection: _buildActions(),\n                ),\n              ),\n            ),\n          ),\n        );\n      },\n    ),\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "actionScrollController",
            "type": "widgets.ScrollController",
            "types": [],
            "desc": "<p>A scroll controller that can be used to control the scrolling of the\nactions in the dialog.<\/p>\n<p>Defaults to null, and is typically not needed.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"cupertino\/CupertinoAlertDialog\/scrollController.html\">scrollController<\/a>, which can be used for controlling the <a href=\"cupertino\/CupertinoAlertDialog\/content.html\">content<\/a>\nsection when it is long.<\/li><\/ul>",
            "memberOf": "cupertino.CupertinoAlertDialog",
            "isConstant": false,
            "href": "cupertino\/CupertinoAlertDialog\/actionScrollController.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ScrollController actionScrollController\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "actions",
            "type": "dart:core.List<widgets.Widget>",
            "types": [
                "dart:core.List",
                "widgets.Widget"
            ],
            "desc": "<p>The (optional) set of actions that are displayed at the bottom of the\ndialog.<\/p>\n<p>Typically this is a list of <a href=\"cupertino\/CupertinoDialogAction-class.html\">CupertinoDialogAction<\/a> widgets.<\/p>\n        ",
            "memberOf": "cupertino.CupertinoAlertDialog",
            "isConstant": false,
            "href": "cupertino\/CupertinoAlertDialog\/actions.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;Widget&gt; actions\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "content",
            "type": "widgets.Widget",
            "types": [],
            "desc": "<p>The (optional) content of the dialog is displayed in the center of the\ndialog in a lighter font.<\/p>\n<p>Typically a <a href=\"widgets\/Text-class.html\">Text<\/a> widget.<\/p>\n        ",
            "memberOf": "cupertino.CupertinoAlertDialog",
            "isConstant": false,
            "href": "cupertino\/CupertinoAlertDialog\/content.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget content\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "scrollController",
            "type": "widgets.ScrollController",
            "types": [],
            "desc": "<p>A scroll controller that can be used to control the scrolling of the\n<a href=\"cupertino\/CupertinoAlertDialog\/content.html\">content<\/a> in the dialog.<\/p>\n<p>Defaults to null, and is typically not needed, since most alert messages\nare short.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"cupertino\/CupertinoAlertDialog\/actionScrollController.html\">actionScrollController<\/a>, which can be used for controlling the actions\nsection when there are many actions.<\/li><\/ul>",
            "memberOf": "cupertino.CupertinoAlertDialog",
            "isConstant": false,
            "href": "cupertino\/CupertinoAlertDialog\/scrollController.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ScrollController scrollController\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "title",
            "type": "widgets.Widget",
            "types": [],
            "desc": "<p>The (optional) title of the dialog is displayed in a large font at the top\nof the dialog.<\/p>\n<p>Typically a <a href=\"widgets\/Text-class.html\">Text<\/a> widget.<\/p>\n        ",
            "memberOf": "cupertino.CupertinoAlertDialog",
            "isConstant": false,
            "href": "cupertino\/CupertinoAlertDialog\/title.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget title\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "cupertino\/CupertinoAlertDialog-class.html",
    "desc": "<p>An iOS-style alert dialog.<\/p>\n<p>An alert dialog informs the user about situations that require\nacknowledgement. An alert dialog has an optional title, optional content,\nand an optional list of actions. The title is displayed above the content\nand the actions are displayed below the content.<\/p>\n<p>This dialog styles its title and content (typically a message) to match the\nstandard iOS title and message dialog text style. These default styles can\nbe overridden by explicitly defining <a href=\"painting\/TextStyle-class.html\">TextStyle<\/a>s for <a href=\"widgets\/Text-class.html\">Text<\/a> widgets that\nare part of the title or content.<\/p>\n<p>To display action buttons that look like standard iOS dialog buttons,\nprovide <a href=\"cupertino\/CupertinoDialogAction-class.html\">CupertinoDialogAction<\/a>s for the <a href=\"cupertino\/CupertinoAlertDialog\/actions.html\">actions<\/a> given to this dialog.<\/p>\n<p>Typically passed as the child widget to <a href=\"material\/showDialog.html\">showDialog<\/a>, which displays the\ndialog.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"cupertino\/CupertinoPopupSurface-class.html\">CupertinoPopupSurface<\/a>, which is a generic iOS-style popup surface that\nholds arbitrary content to create custom popups.<\/li>\n<li>\n<a href=\"cupertino\/CupertinoDialogAction-class.html\">CupertinoDialogAction<\/a>, which is an iOS-style dialog button.<\/li>\n<li><a href=\"https:\/\/developer.apple.com\/ios\/human-interface-guidelines\/views\/alerts\/\">developer.apple.com\/ios\/human-interface-guidelines\/views\/alerts\/<\/a><\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "CupertinoAlertDialog"
}