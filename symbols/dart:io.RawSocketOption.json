{
    "desc": "<p>The <a href=\"dart-io\/RawSocketOption-class.html\">RawSocketOption<\/a> is used as a parameter to <a href=\"dart-io\/Socket\/setRawOption.html\">Socket.setRawOption<\/a> and\n<a href=\"dart-io\/RawSocket\/setRawOption.html\">RawSocket.setRawOption<\/a> to set customize the behaviour of the underlying\nsocket.<\/p>\n<p>It allows for fine grained control of the socket options, and its values will\nbe passed to the underlying platform's implementation of setsockopt and\ngetsockopt.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-io\/RawSocketOption-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:io",
    "name": "dart:io.RawSocketOption",
    "shortname": "RawSocketOption",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a RawSocketOption for getRawOption andSetRawOption.<\/p>\n<p>All arguments are required and must not be null.<\/p>\n<p>The level and option arguments correspond to level and optname arguments\non the get\/setsockopt native calls.<\/p>\n<p>The value argument and its length correspond to the optval and length\narguments on the native call.<\/p>\n<p>For a <code>getRawOption<\/code> call, the value parameter will be updated after a\nsuccessful call (although its length will not be changed).<\/p>\n<p>For a <code>setRawOption<\/code> call, the value parameter will be used set the\noption.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const RawSocketOption(this.level, this.option, this.value);<\/code><\/pre>\n    ",
            "href": "dart-io\/RawSocketOption\/RawSocketOption.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:io.RawSocketOption",
            "params": [
                {
                    "name": "level",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "option",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:typed_data.Uint8List"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Socket option for IP_MULTICAST_IF.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static int get IPv4MulticastInterface =&gt;\n    _getOptionValue(_RawSocketOptions.IP_MULTICAST_IF.index);<\/code><\/pre>\n        ",
            "href": "dart-io\/RawSocketOption\/IPv4MulticastInterface.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.RawSocketOption",
            "params": []
        },
        {
            "desc": "<p>Socket option for IPV6_MULTICAST_IF.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static int get IPv6MulticastInterface =&gt;\n    _getOptionValue(_RawSocketOptions.IPV6_MULTICAST_IF.index);<\/code><\/pre>\n        ",
            "href": "dart-io\/RawSocketOption\/IPv6MulticastInterface.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.RawSocketOption",
            "params": []
        },
        {
            "desc": "<p>The level for the option to set or get.<\/p>\n<p>See also:<\/p>\n<ul>\n<li><a href=\"dart-io\/RawSocketOption\/levelSocket.html\">RawSocketOption.levelSocket<\/a><\/li>\n<li><a href=\"dart-io\/RawSocketOption\/levelIPv4.html\">RawSocketOption.levelIPv4<\/a><\/li>\n<li><a href=\"dart-io\/RawSocketOption\/levelIPv6.html\">RawSocketOption.levelIPv6<\/a><\/li>\n<li><a href=\"dart-io\/RawSocketOption\/levelTcp.html\">RawSocketOption.levelTcp<\/a><\/li>\n<li><a href=\"dart-io\/RawSocketOption\/levelUdp.html\">RawSocketOption.levelUdp<\/a><\/li>\n<\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int level\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/RawSocketOption\/level.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.RawSocketOption",
            "params": []
        },
        {
            "desc": "<p>Socket level option for IPPROTO_IP.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static int get levelIPv4 =&gt;\n    _getOptionValue(_RawSocketOptions.IPPROTO_IP.index);<\/code><\/pre>\n        ",
            "href": "dart-io\/RawSocketOption\/levelIPv4.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.RawSocketOption",
            "params": []
        },
        {
            "desc": "<p>Socket level option for IPPROTO_IPV6.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static int get levelIPv6 =&gt;\n    _getOptionValue(_RawSocketOptions.IPPROTO_IPV6.index);<\/code><\/pre>\n        ",
            "href": "dart-io\/RawSocketOption\/levelIPv6.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.RawSocketOption",
            "params": []
        },
        {
            "desc": "<p>Socket level option for SOL_SOCKET.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static int get levelSocket =&gt;\n    _getOptionValue(_RawSocketOptions.SOL_SOCKET.index);<\/code><\/pre>\n        ",
            "href": "dart-io\/RawSocketOption\/levelSocket.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.RawSocketOption",
            "params": []
        },
        {
            "desc": "<p>Socket level option for IPPROTO_TCP.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static int get levelTcp =&gt;\n    _getOptionValue(_RawSocketOptions.IPPROTO_TCP.index);<\/code><\/pre>\n        ",
            "href": "dart-io\/RawSocketOption\/levelTcp.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.RawSocketOption",
            "params": []
        },
        {
            "desc": "<p>Socket level option for IPPROTO_UDP.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static int get levelUdp =&gt;\n    _getOptionValue(_RawSocketOptions.IPPROTO_UDP.index);<\/code><\/pre>\n        ",
            "href": "dart-io\/RawSocketOption\/levelUdp.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.RawSocketOption",
            "params": []
        },
        {
            "desc": "<p>The option to set or get.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int option\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/RawSocketOption\/option.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.RawSocketOption",
            "params": []
        },
        {
            "desc": "<p>The raw data to set, or the array to write the current option value into.<\/p>\n<p>This list must be the correct length for the expected option. For most\noptions that take int or bool values, the length should be 4. For options\nthat expect a struct (such as an in_addr_t), the length should be the\ncorrect length for that struct.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Uint8List value\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/RawSocketOption\/value.html",
            "isDeprecated": "0",
            "type": "dart:typed_data.Uint8List",
            "memberOf": "dart:io.RawSocketOption",
            "params": []
        }
    ]
}