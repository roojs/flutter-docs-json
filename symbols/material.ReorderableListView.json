{
    "desc": "<p>A list whose items the user can interactively reorder by dragging.<\/p>\n<p>This class is appropriate for views with a small number of\nchildren because constructing the <a href=\"dart-core\/List-class.html\">List<\/a> requires doing work for every\nchild that could possibly be displayed in the list view instead of just\nthose children that are actually visible.<\/p>\n<p>All <a href=\"material\/ReorderableListView\/children.html\">children<\/a> must have a key.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "material\/ReorderableListView-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "material",
    "name": "material.ReorderableListView",
    "shortname": "ReorderableListView",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>Called when a list child is dropped into a new position to shuffle the\nunderlying list.<\/p>\n<p>This <a href=\"material\/ReorderableListView-class.html\">ReorderableListView<\/a> calls <a href=\"material\/ReorderableListView\/onReorder.html\">onReorder<\/a> after a list child is dropped\ninto a new position.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ReorderCallback onReorder\n\n<\/code><\/pre>\n        ",
            "href": "material\/ReorderableListView\/onReorder.html",
            "isDeprecated": false,
            "type": "material.ReorderCallback",
            "name": "onReorder",
            "memberOf": "material.ReorderableListView",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a reorderable list.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ReorderableListView({\n  this.header,\n  @required this.children,\n  @required this.onReorder,\n  this.scrollDirection = Axis.vertical,\n  this.padding,\n  this.reverse = false,\n}) : assert(scrollDirection != null),\n     assert(onReorder != null),\n     assert(children != null),\n     assert(\n       children.every((Widget w) =&gt; w.key != null),\n       'All children of this widget must have a key.',\n     );<\/code><\/pre>\n    ",
            "href": "material\/ReorderableListView\/ReorderableListView.html",
            "isDeprecated": false,
            "type": "",
            "name": "ReorderableListView",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.ReorderableListView",
            "params": [
                {
                    "name": "children",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.List<widgets.Widget>"
                },
                {
                    "name": "header",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "onReorder",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "material.ReorderCallback"
                },
                {
                    "name": "padding",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "painting.EdgeInsets"
                },
                {
                    "name": "reverse",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "scrollDirection",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "painting.Axis"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/ReorderableListView\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_ReorderableListViewState createState() =&gt; _ReorderableListViewState();<\/code><\/pre>\n    ",
            "href": "material\/ReorderableListView\/createState.html",
            "isDeprecated": false,
            "type": "<_ReorderableListViewState>",
            "name": "createState",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.ReorderableListView",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The widgets to display.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;Widget&gt; children\n\n<\/code><\/pre>\n        ",
            "href": "material\/ReorderableListView\/children.html",
            "name": "children",
            "isDeprecated": false,
            "type": "dart:core.List<widgets.Widget>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ReorderableListView",
            "params": []
        },
        {
            "desc": "<p>A non-reorderable header widget to show before the list.<\/p>\n<p>If null, no header will appear before the list.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget header\n\n<\/code><\/pre>\n        ",
            "href": "material\/ReorderableListView\/header.html",
            "name": "header",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ReorderableListView",
            "params": []
        },
        {
            "desc": "<p>The amount of space by which to inset the <a href=\"material\/ReorderableListView\/children.html\">children<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final EdgeInsets padding\n\n<\/code><\/pre>\n        ",
            "href": "material\/ReorderableListView\/padding.html",
            "name": "padding",
            "isDeprecated": false,
            "type": "painting.EdgeInsets",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ReorderableListView",
            "params": []
        },
        {
            "desc": "<p>Whether the scroll view scrolls in the reading direction.<\/p>\n<p>For example, if the reading direction is left-to-right and\n<a href=\"material\/ReorderableListView\/scrollDirection.html\">scrollDirection<\/a> is <a href=\"painting\/Axis-class.html\">Axis.horizontal<\/a>, then the scroll view scrolls from\nleft to right when <a href=\"material\/ReorderableListView\/reverse.html\">reverse<\/a> is false and from right to left when\n<a href=\"material\/ReorderableListView\/reverse.html\">reverse<\/a> is true.<\/p>\n<p>Similarly, if <a href=\"material\/ReorderableListView\/scrollDirection.html\">scrollDirection<\/a> is <a href=\"painting\/Axis-class.html\">Axis.vertical<\/a>, then the scroll view\nscrolls from top to bottom when <a href=\"material\/ReorderableListView\/reverse.html\">reverse<\/a> is false and from bottom to top\nwhen <a href=\"material\/ReorderableListView\/reverse.html\">reverse<\/a> is true.<\/p>\n<p>Defaults to false.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool reverse\n\n<\/code><\/pre>\n        ",
            "href": "material\/ReorderableListView\/reverse.html",
            "name": "reverse",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ReorderableListView",
            "params": []
        },
        {
            "desc": "<p>The <a href=\"painting\/Axis-class.html\">Axis<\/a> along which the list scrolls.<\/p>\n<p>List <a href=\"material\/ReorderableListView\/children.html\">children<\/a> can only drag along this <a href=\"painting\/Axis-class.html\">Axis<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Axis scrollDirection\n\n<\/code><\/pre>\n        ",
            "href": "material\/ReorderableListView\/scrollDirection.html",
            "name": "scrollDirection",
            "isDeprecated": false,
            "type": "painting.Axis",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.ReorderableListView",
            "params": []
        }
    ]
}