{
    "name": "dart:collection.HasNextIterator",
    "extends": [],
    "memberOf": "dart:collection",
    "events": [],
    "methods": [
        {
            "name": "HasNextIterator",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:collection.HasNextIterator",
            "sig": "",
            "params": [
                {
                    "name": "_iterator",
                    "type": "dart:core.Iterator",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-collection\/HasNextIterator\/HasNextIterator.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">HasNextIterator(this._iterator);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "next",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:collection.HasNextIterator",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-collection\/HasNextIterator\/next.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">E next() {\n  \/\/ Call to hasNext is necessary to make sure we are positioned at the first\n  \/\/ element when we start iterating.\n  if (!hasNext) throw StateError(\"No more elements\");\n  assert(_state == _HAS_NEXT_AND_NEXT_IN_CURRENT);\n  E result = _iterator.current;\n  _move();\n  return result;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "hasNext",
            "type": "dart:core.bool",
            "types": [],
            "desc": "",
            "memberOf": "dart:collection.HasNextIterator",
            "isConstant": false,
            "href": "dart-collection\/HasNextIterator\/hasNext.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get hasNext {\n  if (_state == _NOT_MOVED_YET) _move();\n  return _state == _HAS_NEXT_AND_NEXT_IN_CURRENT;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-collection\/HasNextIterator-class.html",
    "desc": "<p>The <a href=\"dart-collection\/HasNextIterator-class.html\">HasNextIterator<\/a> class wraps an <a href=\"dart-core\/Iterator-class.html\">Iterator<\/a> and provides methods to\niterate over an object using <code>hasNext<\/code> and <code>next<\/code>.<\/p>\n<p>An <a href=\"dart-collection\/HasNextIterator-class.html\">HasNextIterator<\/a> does not implement the <a href=\"dart-core\/Iterator-class.html\">Iterator<\/a> interface.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "HasNextIterator"
}