{
    "desc": "<p>Information about the state of a pointer.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-ui\/PointerData-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "dart:ui",
    "name": "dart:ui.PointerData",
    "shortname": "PointerData",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates an object that represents the state of a pointer.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const PointerData({\n  this.timeStamp: Duration.zero,\n  this.change: PointerChange.cancel,\n  this.kind: PointerDeviceKind.touch,\n  this.signalKind,\n  this.device: 0,\n  this.physicalX: 0.0,\n  this.physicalY: 0.0,\n  this.buttons: 0,\n  this.obscured: false,\n  this.pressure: 0.0,\n  this.pressureMin: 0.0,\n  this.pressureMax: 0.0,\n  this.distance: 0.0,\n  this.distanceMax: 0.0,\n  this.size: 0.0,\n  this.radiusMajor: 0.0,\n  this.radiusMinor: 0.0,\n  this.radiusMin: 0.0,\n  this.radiusMax: 0.0,\n  this.orientation: 0.0,\n  this.tilt: 0.0,\n  this.platformData: 0,\n  this.scrollDeltaX: 0.0,\n  this.scrollDeltaY: 0.0,\n});<\/code><\/pre>\n    ",
            "href": "dart-ui\/PointerData\/PointerData.html",
            "isDeprecated": false,
            "type": "",
            "name": "PointerData",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:ui.PointerData",
            "params": [
                {
                    "name": "buttons",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "change",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.PointerChange"
                },
                {
                    "name": "device",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "distance",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "distanceMax",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "kind",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.PointerDeviceKind"
                },
                {
                    "name": "obscured",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "orientation",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "physicalX",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "physicalY",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "platformData",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "pressure",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "pressureMax",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "pressureMin",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "radiusMajor",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "radiusMax",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "radiusMin",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "radiusMinor",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "scrollDeltaX",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "scrollDeltaY",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "signalKind",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.PointerSignalKind"
                },
                {
                    "name": "size",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "tilt",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "timeStamp",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.Duration"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; '$runtimeType(x: $physicalX, y: $physicalY)';<\/code><\/pre>\n    ",
            "href": "dart-ui\/PointerData\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>Returns a complete textual description of the information in this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toStringFull() {\n  return '$runtimeType('\n           'timeStamp: $timeStamp, '\n           'change: $change, '\n           'kind: $kind, '\n           'signalKind: $signalKind, '\n           'device: $device, '\n           'physicalX: $physicalX, '\n           'physicalY: $physicalY, '\n           'buttons: $buttons, '\n           'pressure: $pressure, '\n           'pressureMin: $pressureMin, '\n           'pressureMax: $pressureMax, '\n           'distance: $distance, '\n           'distanceMax: $distanceMax, '\n           'size: $size, '\n           'radiusMajor: $radiusMajor, '\n           'radiusMinor: $radiusMinor, '\n           'radiusMin: $radiusMin, '\n           'radiusMax: $radiusMax, '\n           'orientation: $orientation, '\n           'tilt: $tilt, '\n           'platformData: $platformData, '\n           'scrollDeltaX: $scrollDeltaX, '\n           'scrollDeltaY: $scrollDeltaY'\n         ')';\n}<\/code><\/pre>\n    ",
            "href": "dart-ui\/PointerData\/toStringFull.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toStringFull",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Bit field using the *Button constants (primaryMouseButton,\nsecondaryStylusButton, etc). For example, if this has the value 6 and the\n<a href=\"dart-ui\/PointerData\/kind.html\">kind<\/a> is <a href=\"dart-ui\/PointerDeviceKind-class.html\">PointerDeviceKind.invertedStylus<\/a>, then this indicates an\nupside-down stylus with both its primary and secondary buttons pressed.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int buttons\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/buttons.html",
            "name": "buttons",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>How the pointer has changed since the last report.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final PointerChange change\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/change.html",
            "name": "change",
            "isDeprecated": false,
            "type": "dart:ui.PointerChange",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>Unique identifier for the pointing device, reused across interactions.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int device\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/device.html",
            "name": "device",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The distance of the detected object from the input surface (e.g. the\ndistance of a stylus or finger from a touch screen), in arbitrary units on\nan arbitrary (not necessarily linear) scale. If the pointer is down, this\nis 0.0 by definition.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double distance\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/distance.html",
            "name": "distance",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The maximum value that a distance can return for this pointer. If this\ninput device cannot detect \"hover touch\" input events, then this will be\n0.0.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double distanceMax\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/distanceMax.html",
            "name": "distanceMax",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The kind of input device for which the event was generated.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final PointerDeviceKind kind\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/kind.html",
            "name": "kind",
            "isDeprecated": false,
            "type": "dart:ui.PointerDeviceKind",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>Set if an application from a different security domain is in any way\nobscuring this application's window. (Aspirational; not currently\nimplemented.)<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool obscured\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/obscured.html",
            "name": "obscured",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>For PointerDeviceKind.touch events:<\/p>\n<p>The angle of the contact ellipse, in radius in the range:<\/p>\n<p>   -pi\/2 &lt; orientation &lt;= pi\/2<\/p>\n<p>...giving the angle of the major axis of the ellipse with the y-axis\n(negative angles indicating an orientation along the top-left \/\nbottom-right diagonal, positive angles indicating an orientation along the\ntop-right \/ bottom-left diagonal, and zero indicating an orientation\nparallel with the y-axis).<\/p>\n<p>For PointerDeviceKind.stylus and PointerDeviceKind.invertedStylus events:<\/p>\n<p>The angle of the stylus, in radians in the range:<\/p>\n<p>   -pi &lt; orientation &lt;= pi<\/p>\n<p>...giving the angle of the axis of the stylus projected onto the input\nsurface, relative to the positive y-axis of that surface (thus 0.0\nindicates the stylus, if projected onto that surface, would go from the\ncontact point vertically up in the positive y-axis direction, pi would\nindicate that the stylus would go down in the negative y-axis direction;\npi\/4 would indicate that the stylus goes up and to the right, -pi\/2 would\nindicate that the stylus goes to the left, etc).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double orientation\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/orientation.html",
            "name": "orientation",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>X coordinate of the position of the pointer, in physical pixels in the\nglobal coordinate space.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double physicalX\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/physicalX.html",
            "name": "physicalX",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>Y coordinate of the position of the pointer, in physical pixels in the\nglobal coordinate space.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double physicalY\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/physicalY.html",
            "name": "physicalY",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>Opaque platform-specific data associated with the event.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int platformData\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/platformData.html",
            "name": "platformData",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The pressure of the touch as a number ranging from 0.0, indicating a touch\nwith no discernible pressure, to 1.0, indicating a touch with \"normal\"\npressure, and possibly beyond, indicating a stronger touch. For devices\nthat do not detect pressure (e.g. mice), returns 1.0.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double pressure\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/pressure.html",
            "name": "pressure",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The maximum value that <a href=\"dart-ui\/PointerData\/pressure.html\">pressure<\/a> can return for this pointer. For devices\nthat do not detect pressure (e.g. mice), returns 1.0. This will always be\na greater than or equal to 1.0.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double pressureMax\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/pressureMax.html",
            "name": "pressureMax",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The minimum value that <a href=\"dart-ui\/PointerData\/pressure.html\">pressure<\/a> can return for this pointer. For devices\nthat do not detect pressure (e.g. mice), returns 1.0. This will always be\na number less than or equal to 1.0.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double pressureMin\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/pressureMin.html",
            "name": "pressureMin",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The radius of the contact ellipse along the major axis, in logical pixels.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double radiusMajor\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/radiusMajor.html",
            "name": "radiusMajor",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The minimum value that could be reported for radiusMajor and radiusMinor\nfor this pointer, in logical pixels.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double radiusMax\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/radiusMax.html",
            "name": "radiusMax",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The minimum value that could be reported for radiusMajor and radiusMinor\nfor this pointer, in logical pixels.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double radiusMin\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/radiusMin.html",
            "name": "radiusMin",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The radius of the contact ellipse along the minor axis, in logical pixels.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double radiusMinor\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/radiusMinor.html",
            "name": "radiusMinor",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>For events with signalKind of PointerSignalKind.scroll:<\/p>\n<p>The amount to scroll in the x direction, in physical pixels.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double scrollDeltaX\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/scrollDeltaX.html",
            "name": "scrollDeltaX",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>For events with signalKind of PointerSignalKind.scroll:<\/p>\n<p>The amount to scroll in the y direction, in physical pixels.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double scrollDeltaY\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/scrollDeltaY.html",
            "name": "scrollDeltaY",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The kind of signal for a pointer signal event.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final PointerSignalKind signalKind\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/signalKind.html",
            "name": "signalKind",
            "isDeprecated": false,
            "type": "dart:ui.PointerSignalKind",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>The area of the screen being pressed, scaled to a value between 0 and 1.\nThe value of size can be used to determine fat touch events. This value\nis only set on Android, and is a device specific approximation within\nthe range of detectable values. So, for example, the value of 0.1 could\nmean a touch with the tip of the finger, 0.2 a touch with full finger,\nand 0.3 the full palm.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double size\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/size.html",
            "name": "size",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>For PointerDeviceKind.stylus and PointerDeviceKind.invertedStylus events:<\/p>\n<p>The angle of the stylus, in radians in the range:<\/p>\n<p>   0 &lt;= tilt &lt;= pi\/2<\/p>\n<p>...giving the angle of the axis of the stylus, relative to the axis\nperpendicular to the input surface (thus 0.0 indicates the stylus is\northogonal to the plane of the input surface, while pi\/2 indicates that\nthe stylus is flat on that surface).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double tilt\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/tilt.html",
            "name": "tilt",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        },
        {
            "desc": "<p>Time of event dispatch, relative to an arbitrary timeline.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Duration timeStamp\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/PointerData\/timeStamp.html",
            "name": "timeStamp",
            "isDeprecated": false,
            "type": "dart:core.Duration",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.PointerData",
            "params": []
        }
    ]
}