{
    "desc": "<p>A rectangle upon which a backend texture is mapped.<\/p>\n<p>Backend textures are images that can be applied (mapped) to an area of the\nFlutter view. They are created, managed, and updated using a\nplatform-specific texture registry. This is typically done by a plugin\nthat integrates with host platform video player, camera, or OpenGL APIs,\nor similar image sources.<\/p>\n<p>A texture box refers to its backend texture using an integer ID. Texture\nIDs are obtained from the texture registry and are scoped to the Flutter\nview. Texture IDs may be reused after deregistration, at the discretion\nof the registry. The use of texture IDs currently unknown to the registry\nwill silently result in a blank rectangle.<\/p>\n<p>Texture boxes are repainted autonomously as dictated by the backend (e.g. on\narrival of a video frame). Such repainting generally does not involve\nexecuting Dart code.<\/p>\n<p>The size of the rectangle is determined by the parent, and the texture is\nautomatically scaled to fit.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"https:\/\/docs.flutter.io\/javadoc\/io\/flutter\/view\/TextureRegistry.html\">docs.flutter.io\/javadoc\/io\/flutter\/view\/TextureRegistry.html<\/a>\nfor how to create and manage backend textures on Android.<\/li>\n<li>\n<a href=\"https:\/\/docs.flutter.io\/objcdoc\/Protocols\/FlutterTextureRegistry.html\">docs.flutter.io\/objcdoc\/Protocols\/FlutterTextureRegistry.html<\/a>\nfor how to create and manage backend textures on iOS.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "rendering\/TextureBox-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "rendering",
    "name": "rendering.TextureBox",
    "shortname": "TextureBox",
    "extends": [
        "rendering.RenderBox",
        "rendering.RenderObject",
        "foundation.AbstractNode",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a box backed by the texture identified by <code>textureId<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">TextureBox({ @required int textureId })\n  : assert(textureId != null),\n    _textureId = textureId;<\/code><\/pre>\n    ",
            "href": "rendering\/TextureBox\/TextureBox.html",
            "isDeprecated": false,
            "type": "",
            "name": "TextureBox",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "rendering.TextureBox",
            "params": [
                {
                    "name": "textureId",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Override this method if this render object can be hit even if its\nchildren were not hit.<\/p>\n<p>The caller is responsible for transforming <code>position<\/code> from global\ncoordinates to its location relative to the origin of this <a href=\"rendering\/RenderBox-class.html\">RenderBox<\/a>.\nThis <a href=\"rendering\/RenderBox-class.html\">RenderBox<\/a> is responsible for checking whether the given position is\nwithin its bounds.<\/p>\n<p>Used by <a href=\"rendering\/RenderBox\/hitTest.html\">hitTest<\/a>. If you override <a href=\"rendering\/RenderBox\/hitTest.html\">hitTest<\/a> and do not call this\nfunction, then you don't need to implement this function.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool hitTestSelf(Offset position) {\n  return true;\n}<\/code><\/pre>\n    ",
            "href": "rendering\/TextureBox\/hitTestSelf.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "hitTestSelf",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.TextureBox",
            "params": [
                {
                    "name": "position",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                }
            ]
        },
        {
            "desc": "<p>Paint this render object into the given context at the given offset.<\/p>\n<p>Subclasses should override this method to provide a visual appearance\nfor themselves. The render object's local coordinate system is\naxis-aligned with the coordinate system of the context's canvas and the\nrender object's local origin (i.e, x=0 and y=0) is placed at the given\noffset in the context's canvas.<\/p>\n<p>Do not call this function directly. If you wish to paint yourself, call\n<a href=\"rendering\/RenderObject\/markNeedsPaint.html\">markNeedsPaint<\/a> instead to schedule a call to this function. If you wish\nto paint one of your children, call <a href=\"rendering\/PaintingContext\/paintChild.html\">PaintingContext.paintChild<\/a> on the\ngiven <code>context<\/code>.<\/p>\n<p>When painting one of your children (via a paint child function on the\ngiven context), the current canvas held by the context might change\nbecause draw operations before and after painting children might need to\nbe recorded on separate compositing layers.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid paint(PaintingContext context, Offset offset) {\n  if (_textureId == null)\n    return;\n  context.addLayer(TextureLayer(\n    rect: Rect.fromLTWH(offset.dx, offset.dy, size.width, size.height),\n    textureId: _textureId,\n  ));\n}<\/code><\/pre>\n    ",
            "href": "rendering\/TextureBox\/paint.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "paint",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.TextureBox",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "rendering.PaintingContext"
                },
                {
                    "name": "offset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                }
            ]
        },
        {
            "desc": "<p>Updates the render objects size using only the constraints.<\/p>\n<p>Do not call this function directly: call <a href=\"rendering\/RenderObject\/layout.html\">layout<\/a> instead. This function\nis called by <a href=\"rendering\/RenderObject\/layout.html\">layout<\/a> when there is actually work to be done by this\nrender object during layout. The layout constraints provided by your\nparent are available via the <a href=\"rendering\/RenderBox\/constraints.html\">constraints<\/a> getter.<\/p>\n<p>Subclasses that set <a href=\"rendering\/TextureBox\/sizedByParent.html\">sizedByParent<\/a> to true should override this method\nto compute their size.<\/p>\n<p>This function is called only if <a href=\"rendering\/TextureBox\/sizedByParent.html\">sizedByParent<\/a> is true.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid performResize() {\n  size = constraints.biggest;\n}<\/code><\/pre>\n    ",
            "href": "rendering\/TextureBox\/performResize.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "performResize",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.TextureBox",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Whether this render object always needs compositing.<\/p>\n<p>Override this in subclasses to indicate that your paint function always\ncreates at least one composited layer. For example, videos should return\ntrue if they use hardware decoders.<\/p>\n<p>You must call <a href=\"rendering\/RenderObject\/markNeedsCompositingBitsUpdate.html\">markNeedsCompositingBitsUpdate<\/a> if the value of this getter\nchanges. (This is implied when <a href=\"rendering\/RenderObject\/adoptChild.html\">adoptChild<\/a> or <a href=\"rendering\/RenderObject\/dropChild.html\">dropChild<\/a> are called.)<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get alwaysNeedsCompositing =&gt; true;<\/code><\/pre>\n        ",
            "href": "rendering\/TextureBox\/alwaysNeedsCompositing.html",
            "name": "alwaysNeedsCompositing",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "rendering.TextureBox",
            "params": []
        },
        {
            "desc": "<p>Whether this render object repaints separately from its parent.<\/p>\n<p>Override this in subclasses to indicate that instances of your class ought\nto repaint independently. For example, render objects that repaint\nfrequently might want to repaint themselves without requiring their parent\nto repaint.<\/p>\n<p>If this getter returns true, the <a href=\"rendering\/RenderBox\/paintBounds.html\">paintBounds<\/a> are applied to this object\nand all descendants.<\/p>\n<p>Warning: This getter must not change value over the lifetime of this object.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get isRepaintBoundary =&gt; true;<\/code><\/pre>\n        ",
            "href": "rendering\/TextureBox\/isRepaintBoundary.html",
            "name": "isRepaintBoundary",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "rendering.TextureBox",
            "params": []
        },
        {
            "desc": "<p>Whether the constraints are the only input to the sizing algorithm (in\nparticular, child nodes have no impact).<\/p>\n<p>Returning false is always correct, but returning true can be more\nefficient when computing the size of this render object because we don't\nneed to recompute the size if the constraints don't change.<\/p>\n<p>Typically, subclasses will always return the same value. If the value can\nchange, then, when it does change, the subclass should make sure to call\n<a href=\"rendering\/RenderObject\/markNeedsLayoutForSizedByParentChange.html\">markNeedsLayoutForSizedByParentChange<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get sizedByParent =&gt; true;<\/code><\/pre>\n        ",
            "href": "rendering\/TextureBox\/sizedByParent.html",
            "name": "sizedByParent",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "rendering.TextureBox",
            "params": []
        },
        {
            "desc": "<p>The identity of the backend texture.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get textureId =&gt; _textureId;<\/code><\/pre>\n        ",
            "href": "rendering\/TextureBox\/textureId.html",
            "name": "textureId",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "rendering.TextureBox",
            "params": []
        }
    ]
}