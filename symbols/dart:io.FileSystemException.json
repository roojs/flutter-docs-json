{
    "name": "dart:io.FileSystemException",
    "extends": [],
    "memberOf": "dart:io",
    "events": [],
    "methods": [
        {
            "name": "FileSystemException",
            "type": "",
            "desc": "<p>Creates a new FileSystemException with an optional error message\n<code>message<\/code>, optional file system path <code>path<\/code> and optional OS error\n<code>osError<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:io.FileSystemException",
            "sig": "",
            "params": [
                {
                    "name": "message",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "path",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "osError",
                    "type": "dart:io.OSError",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-io\/FileSystemException\/FileSystemException.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@pragma(\"vm:entry-point\")\nconst FileSystemException([this.message = \"\", this.path = \"\", this.osError]);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:io.FileSystemException",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-io\/FileSystemException\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() {\n  StringBuffer sb = new StringBuffer();\n  sb.write(\"FileSystemException\");\n  if (message.isNotEmpty) {\n    sb.write(\": $message\");\n    if (path != null) {\n      sb.write(\", path = '$path'\");\n    }\n    if (osError != null) {\n      sb.write(\" ($osError)\");\n    }\n  } else if (osError != null) {\n    sb.write(\": $osError\");\n    if (path != null) {\n      sb.write(\", path = '$path'\");\n    }\n  } else if (path != null) {\n    sb.write(\": $path\");\n  }\n  return sb.toString();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "message",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>Message describing the error. This does not include any detailed\ninformation form the underlying OS error. Check <a href=\"dart-io\/FileSystemException\/osError.html\">osError<\/a> for\nthat information.<\/p>\n        ",
            "memberOf": "dart:io.FileSystemException",
            "isConstant": false,
            "href": "dart-io\/FileSystemException\/message.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String message\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "osError",
            "type": "dart:io.OSError",
            "types": [],
            "desc": "<p>The underlying OS error. Can be <code>null<\/code> if the exception is not\nraised due to an OS error.<\/p>\n        ",
            "memberOf": "dart:io.FileSystemException",
            "isConstant": false,
            "href": "dart-io\/FileSystemException\/osError.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final OSError osError\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "path",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The file system path on which the error occurred. Can be <code>null<\/code>\nif the exception does not relate directly to a file system path.<\/p>\n        ",
            "memberOf": "dart:io.FileSystemException",
            "isConstant": false,
            "href": "dart-io\/FileSystemException\/path.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String path\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-io\/FileSystemException-class.html",
    "desc": "<p>Exception thrown when a file operation fails.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "FileSystemException"
}