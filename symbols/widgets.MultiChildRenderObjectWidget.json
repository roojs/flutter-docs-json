{
    "desc": "<p>A superclass for RenderObjectWidgets that configure RenderObject subclasses\nthat have a single list of children. (This superclass only provides the\nstorage for that child list, it doesn't actually provide the updating\nlogic.)<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "widgets\/MultiChildRenderObjectWidget-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.MultiChildRenderObjectWidget",
    "shortname": "MultiChildRenderObjectWidget",
    "extends": [
        "widgets.RenderObjectWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Initializes fields for subclasses.<\/p>\n<p>The <code>children<\/code> argument must not be null and must not contain any null\nobjects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">MultiChildRenderObjectWidget({ Key key, this.children = const &lt;Widget&gt;[] })\n  : assert(children != null),\n    assert(!children.any((Widget child) =&gt; child == null)), \/\/ https:\/\/github.com\/dart-lang\/sdk\/issues\/29276\n    super(key: key);<\/code><\/pre>\n    ",
            "href": "widgets\/MultiChildRenderObjectWidget\/MultiChildRenderObjectWidget.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.MultiChildRenderObjectWidget",
            "params": [
                {
                    "name": "children",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<widgets.Widget>"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                }
            ]
        },
        {
            "desc": "<p>RenderObjectWidgets always inflate to a <a href=\"widgets\/RenderObjectElement-class.html\">RenderObjectElement<\/a> subclass.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nMultiChildRenderObjectElement createElement() =&gt; MultiChildRenderObjectElement(this);<\/code><\/pre>\n    ",
            "href": "widgets\/MultiChildRenderObjectWidget\/createElement.html",
            "isDeprecated": "0",
            "type": "widgets.MultiChildRenderObjectElement",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.MultiChildRenderObjectWidget",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The widgets below this widget in the tree.<\/p>\n<p>If this list is going to be mutated, it is usually wise to put <a href=\"foundation\/Key-class.html\">Key<\/a>s on\nthe widgets, so that the framework can match old configurations to new\nconfigurations and maintain the underlying render objects.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;Widget&gt; children\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/MultiChildRenderObjectWidget\/children.html",
            "isDeprecated": "0",
            "type": "dart:core.List<widgets.Widget>",
            "memberOf": "widgets.MultiChildRenderObjectWidget",
            "params": []
        }
    ]
}