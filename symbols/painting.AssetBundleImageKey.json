{
    "name": "painting.AssetBundleImageKey",
    "extends": [],
    "memberOf": "painting",
    "events": [],
    "methods": [
        {
            "name": "operator ==",
            "type": "dart:core.bool",
            "desc": "<p>The equality operator.<\/p>\n<p>The default behavior for all <a href=\"dart-core\/Object-class.html\">Object<\/a>s is to return true if and\nonly if <code>this<\/code> and <code>other<\/code> are the same object.<\/p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:<\/p>\n<ul>\n<li>\n<p>Total: It must return a boolean for all arguments. It should never throw\nor return <code>null<\/code>.<\/p>\n<\/li>\n<li>\n<p>Reflexive: For all objects <code>o<\/code>, <code>o == o<\/code> must be true.<\/p>\n<\/li>\n<li>\n<p>Symmetric: For all objects <code>o1<\/code> and <code>o2<\/code>, <code>o1 == o2<\/code> and <code>o2 == o1<\/code> must\neither both be true, or both be false.<\/p>\n<\/li>\n<li>\n<p>Transitive: For all objects <code>o1<\/code>, <code>o2<\/code>, and <code>o3<\/code>, if <code>o1 == o2<\/code> and\n<code>o2 == o3<\/code> are true, then <code>o1 == o3<\/code> must be true.<\/p>\n<\/li>\n<\/ul>\n<p>The method should also be consistent over time,\nso whether two objects are equal should only change\nif at least one of the objects was modified.<\/p>\n<p>If a subclass overrides the equality operator it should override\nthe <a href=\"painting\/AssetBundleImageKey\/hashCode.html\">hashCode<\/a> method as well to maintain consistency.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.AssetBundleImageKey",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "painting\/AssetBundleImageKey\/operator_equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool operator ==(dynamic other) {\n  if (other.runtimeType != runtimeType)\n    return false;\n  final AssetBundleImageKey typedOther = other;\n  return bundle == typedOther.bundle\n      &amp;&amp; name == typedOther.name\n      &amp;&amp; scale == typedOther.scale;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "AssetBundleImageKey",
            "type": "",
            "desc": "<p>Creates the key for an <a href=\"painting\/AssetImage-class.html\">AssetImage<\/a> or <a href=\"painting\/AssetBundleImageProvider-class.html\">AssetBundleImageProvider<\/a>.<\/p>\n<p>The arguments must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.AssetBundleImageKey",
            "sig": "",
            "params": [
                {
                    "name": "bundle",
                    "type": "services.AssetBundle",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "name",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "scale",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "painting\/AssetBundleImageKey\/AssetBundleImageKey.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const AssetBundleImageKey({\n  @required this.bundle,\n  @required this.name,\n  @required this.scale,\n}) : assert(bundle != null),\n     assert(name != null),\n     assert(scale != null);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.AssetBundleImageKey",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "painting\/AssetBundleImageKey\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; '$runtimeType(bundle: $bundle, name: \"$name\", scale: $scale)';<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "bundle",
            "type": "services.AssetBundle",
            "types": [],
            "desc": "<p>The bundle from which the image will be obtained.<\/p>\n<p>The image is obtained by calling <a href=\"services\/AssetBundle\/load.html\">AssetBundle.load<\/a> on the given <a href=\"painting\/AssetBundleImageKey\/bundle.html\">bundle<\/a>\nusing the key given by <a href=\"painting\/AssetBundleImageKey\/name.html\">name<\/a>.<\/p>\n        ",
            "memberOf": "painting.AssetBundleImageKey",
            "isConstant": false,
            "href": "painting\/AssetBundleImageKey\/bundle.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final AssetBundle bundle\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "hashCode",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"painting\/AssetBundleImageKey\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"painting\/AssetBundleImageKey\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"painting\/AssetBundleImageKey\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"painting\/AssetBundleImageKey\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"painting\/AssetBundleImageKey\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"painting\/AssetBundleImageKey\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "memberOf": "painting.AssetBundleImageKey",
            "isConstant": false,
            "href": "painting\/AssetBundleImageKey\/hashCode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get hashCode =&gt; hashValues(bundle, name, scale);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "name",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The key to use to obtain the resource from the <a href=\"painting\/AssetBundleImageKey\/bundle.html\">bundle<\/a>. This is the\nargument passed to <a href=\"services\/AssetBundle\/load.html\">AssetBundle.load<\/a>.<\/p>\n        ",
            "memberOf": "painting.AssetBundleImageKey",
            "isConstant": false,
            "href": "painting\/AssetBundleImageKey\/name.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String name\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "scale",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The scale to place in the <a href=\"painting\/ImageInfo-class.html\">ImageInfo<\/a> object of the image.<\/p>\n        ",
            "memberOf": "painting.AssetBundleImageKey",
            "isConstant": false,
            "href": "painting\/AssetBundleImageKey\/scale.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double scale\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [
        "painting.AssetBundleImageProvider",
        "painting.AssetImage",
        "painting.ExactAssetImage"
    ],
    "realImplementors": [],
    "cn": [],
    "href": "painting\/AssetBundleImageKey-class.html",
    "desc": "<p>Key for the image obtained by an <a href=\"painting\/AssetImage-class.html\">AssetImage<\/a> or <a href=\"painting\/ExactAssetImage-class.html\">ExactAssetImage<\/a>.<\/p>\n<p>This is used to identify the precise resource in the <a href=\"painting\/imageCache.html\">imageCache<\/a>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "AssetBundleImageKey"
}