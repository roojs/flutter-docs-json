{
    "name": "dart:convert.Base64Decoder",
    "extends": [
        "dart:core.int",
        "dart:core.List",
        "dart:core.String",
        "dart:convert.Converter",
        "dart:core.int",
        "dart:core.List",
        "dart:core.String",
        "dart:async.StreamTransformerBase",
        "dart:core.Object"
    ],
    "memberOf": "dart:convert",
    "events": [],
    "methods": [
        {
            "name": "Base64Decoder",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:convert.Base64Decoder",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "dart-convert\/Base64Decoder\/Base64Decoder.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Base64Decoder();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "convert",
            "type": "dart:typed_data.Uint8List",
            "desc": "<p>Decodes the characters of <code>input<\/code> from <code>start<\/code> to <code>end<\/code> as base64.<\/p>\n<p>If <code>start<\/code> is omitted, it defaults to the start of <code>input<\/code>.\nIf <code>end<\/code> is omitted, it defaults to the end of <code>input<\/code>.<\/p>\n<p>The returned <a href=\"dart-typed_data\/Uint8List-class.html\">Uint8List<\/a> contains exactly the decoded bytes,\nso the <a href=\"dart-core\/List\/length.html\">Uint8List.length<\/a> is precisely the number of decoded bytes.\nThe <a href=\"dart-typed_data\/TypedData\/buffer.html\">Uint8List.buffer<\/a> may be larger than the decoded bytes.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:convert.Base64Decoder",
            "sig": "",
            "params": [
                {
                    "name": "input",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "start",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "end",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-convert\/Base64Decoder\/convert.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Uint8List convert(String input, [int start = 0, int end]) {\n  end = RangeError.checkValidRange(start, end, input.length);\n  if (start == end) return Uint8List(0);\n  var decoder = _Base64Decoder();\n  var buffer = decoder.decode(input, start, end);\n  decoder.close(input, end);\n  return buffer;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "startChunkedConversion",
            "type": "dart:convert.StringConversionSink",
            "desc": "<p>Starts a chunked conversion.<\/p>\n<p>The returned sink serves as input for the long-running conversion. The\ngiven <code>sink<\/code> serves as output.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:convert.Base64Decoder",
            "sig": "",
            "params": [
                {
                    "name": "sink",
                    "type": "dart:core.Sink<dart:core.List<dart:core.int>>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Sink",
                        "dart:core.List",
                        "dart:core.int"
                    ]
                }
            ],
            "isConstructor": false,
            "href": "dart-convert\/Base64Decoder\/startChunkedConversion.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">StringConversionSink startChunkedConversion(Sink&lt;List&lt;int&gt;&gt; sink) {\n  return _Base64DecoderSink(sink);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-convert\/Base64Decoder-class.html",
    "desc": "<p>Decoder for base64 encoded data.<\/p>\n<p>This decoder accepts both base64 and base64url (\"url-safe\") encodings.<\/p>\n<p>The encoding is required to be properly padded.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Base64Decoder"
}