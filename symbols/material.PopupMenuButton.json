{
    "desc": "<p>Displays a menu when pressed and calls <a href=\"material\/PopupMenuButton\/onSelected.html\">onSelected<\/a> when the menu is dismissed\nbecause an item was selected. The value passed to <a href=\"material\/PopupMenuButton\/onSelected.html\">onSelected<\/a> is the value of\nthe selected menu item.<\/p>\n<p>One of <a href=\"material\/PopupMenuButton\/child.html\">child<\/a> or <a href=\"material\/PopupMenuButton\/icon.html\">icon<\/a> may be provided, but not both. If <a href=\"material\/PopupMenuButton\/icon.html\">icon<\/a> is provided,\nthen <a href=\"material\/PopupMenuButton-class.html\">PopupMenuButton<\/a> behaves like an <a href=\"material\/IconButton-class.html\">IconButton<\/a>.<\/p>\n<p>If both are null, then a standard overflow icon is created (depending on the\nplatform).<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n<div class=\"snippet-description\">\nThis example shows a menu with four items, selecting between an enum's\nvalues and setting a <code>_selection<\/code> field based on the selection.\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">\/\/ This is the type used by the popup menu below.\nenum WhyFarther { harder, smarter, selfStarter, tradingCharter }\n\n\/\/ This menu button widget updates a _selection field (of type WhyFarther,\n\/\/ not shown here).\nPopupMenuButton&lt;WhyFarther&gt;(\n  onSelected: (WhyFarther result) { setState(() { _selection = result; }); },\n  itemBuilder: (BuildContext context) =&gt; &lt;PopupMenuEntry&lt;WhyFarther&gt;&gt;[\n    const PopupMenuItem&lt;WhyFarther&gt;(\n      value: WhyFarther.harder,\n      child: Text('Working a lot harder'),\n    ),\n    const PopupMenuItem&lt;WhyFarther&gt;(\n      value: WhyFarther.smarter,\n      child: Text('Being a lot smarter'),\n    ),\n    const PopupMenuItem&lt;WhyFarther&gt;(\n      value: WhyFarther.selfStarter,\n      child: Text('Being a self-starter'),\n    ),\n    const PopupMenuItem&lt;WhyFarther&gt;(\n      value: WhyFarther.tradingCharter,\n      child: Text('Placed in charge of trading charter'),\n    ),\n  ],\n)<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/PopupMenuItem-class.html\">PopupMenuItem<\/a>, a popup menu entry for a single value.<\/li>\n<li>\n<a href=\"material\/PopupMenuDivider-class.html\">PopupMenuDivider<\/a>, a popup menu entry that is just a horizontal line.<\/li>\n<li>\n<a href=\"material\/CheckedPopupMenuItem-class.html\">CheckedPopupMenuItem<\/a>, a popup menu item with a checkmark.<\/li>\n<li>\n<a href=\"material\/showMenu.html\">showMenu<\/a>, a method to dynamically show a popup menu at a given location.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/PopupMenuButton-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.PopupMenuButton",
    "shortname": "PopupMenuButton",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>Called when the button is pressed to create the items to show in the menu.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final PopupMenuItemBuilder&lt;T&gt; itemBuilder\n\n<\/code><\/pre>\n        ",
            "href": "material\/PopupMenuButton\/itemBuilder.html",
            "isDeprecated": false,
            "type": "material.PopupMenuItemBuilder",
            "name": "itemBuilder",
            "memberOf": "material.PopupMenuButton",
            "params": []
        },
        {
            "desc": "<p>Called when the user dismisses the popup menu without selecting an item.<\/p>\n<p>If the user selects a value, <a href=\"material\/PopupMenuButton\/onSelected.html\">onSelected<\/a> is called instead.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final PopupMenuCanceled onCanceled\n\n<\/code><\/pre>\n        ",
            "href": "material\/PopupMenuButton\/onCanceled.html",
            "isDeprecated": false,
            "type": "material.PopupMenuCanceled",
            "name": "onCanceled",
            "memberOf": "material.PopupMenuButton",
            "params": []
        },
        {
            "desc": "<p>Called when the user selects a value from the popup menu created by this button.<\/p>\n<p>If the popup menu is dismissed without selecting a value, <a href=\"material\/PopupMenuButton\/onCanceled.html\">onCanceled<\/a> is\ncalled instead.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final PopupMenuItemSelected&lt;T&gt; onSelected\n\n<\/code><\/pre>\n        ",
            "href": "material\/PopupMenuButton\/onSelected.html",
            "isDeprecated": false,
            "type": "material.PopupMenuItemSelected",
            "name": "onSelected",
            "memberOf": "material.PopupMenuButton",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a button that shows a popup menu.<\/p>\n<p>The <code>itemBuilder<\/code> argument must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const PopupMenuButton({\n  Key key,\n  @required this.itemBuilder,\n  this.initialValue,\n  this.onSelected,\n  this.onCanceled,\n  this.tooltip,\n  this.elevation = 8.0,\n  this.padding = const EdgeInsets.all(8.0),\n  this.child,\n  this.icon,\n  this.offset = Offset.zero,\n}) : assert(itemBuilder != null),\n     assert(offset != null),\n     assert(!(child != null &amp;&amp; icon != null)), \/\/ fails if passed both parameters\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/PopupMenuButton\/PopupMenuButton.html",
            "isDeprecated": false,
            "type": "",
            "name": "PopupMenuButton",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.PopupMenuButton",
            "params": [
                {
                    "name": "child",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "elevation",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "icon",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Icon"
                },
                {
                    "name": "initialValue",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "<T>"
                },
                {
                    "name": "itemBuilder",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "material.PopupMenuItemBuilder"
                },
                {
                    "name": "key",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "offset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.Offset"
                },
                {
                    "name": "onCanceled",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "material.PopupMenuCanceled"
                },
                {
                    "name": "onSelected",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "material.PopupMenuItemSelected"
                },
                {
                    "name": "padding",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "painting.EdgeInsetsGeometry"
                },
                {
                    "name": "tooltip",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/PopupMenuButton\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_PopupMenuButtonState&lt;T&gt; createState() =&gt; _PopupMenuButtonState&lt;T&gt;();<\/code><\/pre>\n    ",
            "href": "material\/PopupMenuButton\/createState.html",
            "isDeprecated": false,
            "type": "<_PopupMenuButtonState<T>>",
            "name": "createState",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.PopupMenuButton",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>If provided, the widget used for this button.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "href": "material\/PopupMenuButton\/child.html",
            "name": "child",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.PopupMenuButton",
            "params": []
        },
        {
            "desc": "<p>The z-coordinate at which to place the menu when open. This controls the\nsize of the shadow below the menu.<\/p>\n<p>Defaults to 8, the appropriate elevation for popup menus.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double elevation\n\n<\/code><\/pre>\n        ",
            "href": "material\/PopupMenuButton\/elevation.html",
            "name": "elevation",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.PopupMenuButton",
            "params": []
        },
        {
            "desc": "<p>If provided, the icon used for this button.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Icon icon\n\n<\/code><\/pre>\n        ",
            "href": "material\/PopupMenuButton\/icon.html",
            "name": "icon",
            "isDeprecated": false,
            "type": "widgets.Icon",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.PopupMenuButton",
            "params": []
        },
        {
            "desc": "<p>The offset applied to the Popup Menu Button.<\/p>\n<p>When not set, the Popup Menu Button will be positioned directly next to\nthe button that was used to create it.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Offset offset\n\n<\/code><\/pre>\n        ",
            "href": "material\/PopupMenuButton\/offset.html",
            "name": "offset",
            "isDeprecated": false,
            "type": "dart:ui.Offset",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.PopupMenuButton",
            "params": []
        },
        {
            "desc": "<p>Matches IconButton's 8 dps padding by default. In some cases, notably where\nthis button appears as the trailing element of a list item, it's useful to be able\nto set the padding to zero.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final EdgeInsetsGeometry padding\n\n<\/code><\/pre>\n        ",
            "href": "material\/PopupMenuButton\/padding.html",
            "name": "padding",
            "isDeprecated": false,
            "type": "painting.EdgeInsetsGeometry",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.PopupMenuButton",
            "params": []
        },
        {
            "desc": "<p>Text that describes the action that will occur when the button is pressed.<\/p>\n<p>This text is displayed when the user long-presses on the button and is\nused for accessibility.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String tooltip\n\n<\/code><\/pre>\n        ",
            "href": "material\/PopupMenuButton\/tooltip.html",
            "name": "tooltip",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.PopupMenuButton",
            "params": []
        }
    ]
}