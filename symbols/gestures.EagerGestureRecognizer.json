{
    "name": "gestures.EagerGestureRecognizer",
    "extends": [
        "gestures.OneSequenceGestureRecognizer",
        "gestures.GestureRecognizer",
        "gestures.GestureArenaMember",
        "dart:core.Object"
    ],
    "memberOf": "gestures",
    "events": [],
    "methods": [
        {
            "name": "EagerGestureRecognizer",
            "type": "",
            "desc": "<p>Create an eager gesture recognizer.<\/p>\n<p>It's possible to limit this recognizer to a specific <a href=\"dart-ui\/PointerDeviceKind-class.html\">PointerDeviceKind<\/a>\nby providing the optional <code>kind<\/code> argument. If <code>kind<\/code> is null,\nthe recognizer will accept pointer events from all device kinds.<\/p>\n    ",
            "static": false,
            "memberOf": "gestures.EagerGestureRecognizer",
            "sig": "",
            "params": [
                {
                    "name": "kind",
                    "type": "dart:ui.PointerDeviceKind",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "gestures\/EagerGestureRecognizer\/EagerGestureRecognizer.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">EagerGestureRecognizer({ PointerDeviceKind kind }) : super(kind: kind);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "addAllowedPointer",
            "type": "",
            "desc": "<p>Registers a new pointer that's been checked to be allowed by this gesture\nrecognizer.<\/p>\n<p>Subclasses of <a href=\"gestures\/GestureRecognizer-class.html\">GestureRecognizer<\/a> are supposed to override this method\ninstead of <a href=\"gestures\/GestureRecognizer\/addPointer.html\">addPointer<\/a> because <a href=\"gestures\/GestureRecognizer\/addPointer.html\">addPointer<\/a> will be called for each\npointer being added while <a href=\"gestures\/EagerGestureRecognizer\/addAllowedPointer.html\">addAllowedPointer<\/a> is only called for pointers\nthat are allowed by this recognizer.<\/p>\n    ",
            "static": false,
            "memberOf": "gestures.EagerGestureRecognizer",
            "sig": "",
            "params": [
                {
                    "name": "event",
                    "type": "gestures.PointerDownEvent",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "gestures\/EagerGestureRecognizer\/addAllowedPointer.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid addAllowedPointer(PointerDownEvent event) {\n  \/\/ We call startTrackingPointer as this is where OneSequenceGestureRecognizer joins the arena.\n  startTrackingPointer(event.pointer);\n  resolve(GestureDisposition.accepted);\n  stopTrackingPointer(event.pointer);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "didStopTrackingLastPointer",
            "type": "",
            "desc": "<p>Called when the number of pointers this recognizer is tracking changes from one to zero.<\/p>\n<p>The given pointer ID is the ID of the last pointer this recognizer was\ntracking.<\/p>\n    ",
            "static": false,
            "memberOf": "gestures.EagerGestureRecognizer",
            "sig": "",
            "params": [
                {
                    "name": "pointer",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "gestures\/EagerGestureRecognizer\/didStopTrackingLastPointer.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid didStopTrackingLastPointer(int pointer) { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "handleEvent",
            "type": "",
            "desc": "<p>Called when a pointer event is routed to this recognizer.<\/p>\n    ",
            "static": false,
            "memberOf": "gestures.EagerGestureRecognizer",
            "sig": "",
            "params": [
                {
                    "name": "event",
                    "type": "gestures.PointerEvent",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "gestures\/EagerGestureRecognizer\/handleEvent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid handleEvent(PointerEvent event) { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "debugDescription",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>Returns a very short pretty description of the gesture that the\nrecognizer looks for, like 'tap' or 'horizontal drag'.<\/p>\n        ",
            "memberOf": "gestures.EagerGestureRecognizer",
            "isConstant": false,
            "href": "gestures\/EagerGestureRecognizer\/debugDescription.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString get debugDescription =&gt; 'eager';<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "gestures\/EagerGestureRecognizer-class.html",
    "desc": "<p>A gesture recognizer that eagerly claims victory in all gesture arenas.<\/p>\n<p>This is typically passed in <a href=\"widgets\/AndroidView\/gestureRecognizers.html\">AndroidView.gestureRecognizers<\/a> in order to immediately dispatch\nall touch events inside the view bounds to the embedded Android view.\nSee <a href=\"widgets\/AndroidView\/gestureRecognizers.html\">AndroidView.gestureRecognizers<\/a> for more details.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "EagerGestureRecognizer"
}