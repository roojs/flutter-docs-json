{
    "name": "painting.ImageConfiguration",
    "extends": [],
    "memberOf": "painting",
    "events": [],
    "methods": [
        {
            "name": "operator ==",
            "type": "dart:core.bool",
            "desc": "<p>The equality operator.<\/p>\n<p>The default behavior for all <a href=\"dart-core\/Object-class.html\">Object<\/a>s is to return true if and\nonly if <code>this<\/code> and <code>other<\/code> are the same object.<\/p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:<\/p>\n<ul>\n<li>\n<p>Total: It must return a boolean for all arguments. It should never throw\nor return <code>null<\/code>.<\/p>\n<\/li>\n<li>\n<p>Reflexive: For all objects <code>o<\/code>, <code>o == o<\/code> must be true.<\/p>\n<\/li>\n<li>\n<p>Symmetric: For all objects <code>o1<\/code> and <code>o2<\/code>, <code>o1 == o2<\/code> and <code>o2 == o1<\/code> must\neither both be true, or both be false.<\/p>\n<\/li>\n<li>\n<p>Transitive: For all objects <code>o1<\/code>, <code>o2<\/code>, and <code>o3<\/code>, if <code>o1 == o2<\/code> and\n<code>o2 == o3<\/code> are true, then <code>o1 == o3<\/code> must be true.<\/p>\n<\/li>\n<\/ul>\n<p>The method should also be consistent over time,\nso whether two objects are equal should only change\nif at least one of the objects was modified.<\/p>\n<p>If a subclass overrides the equality operator it should override\nthe <a href=\"painting\/ImageConfiguration\/hashCode.html\">hashCode<\/a> method as well to maintain consistency.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.ImageConfiguration",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "painting\/ImageConfiguration\/operator_equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool operator ==(dynamic other) {\n  if (other.runtimeType != runtimeType)\n    return false;\n  final ImageConfiguration typedOther = other;\n  return typedOther.bundle == bundle\n      &amp;&amp; typedOther.devicePixelRatio == devicePixelRatio\n      &amp;&amp; typedOther.locale == locale\n      &amp;&amp; typedOther.textDirection == textDirection\n      &amp;&amp; typedOther.size == size\n      &amp;&amp; typedOther.platform == platform;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "ImageConfiguration",
            "type": "",
            "desc": "<p>Creates an object holding the configuration information for an <a href=\"painting\/ImageProvider-class.html\">ImageProvider<\/a>.<\/p>\n<p>All the arguments are optional. Configuration information is merely\nadvisory and best-effort.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.ImageConfiguration",
            "sig": "",
            "params": [
                {
                    "name": "bundle",
                    "type": "services.AssetBundle",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "devicePixelRatio",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "locale",
                    "type": "dart:ui.Locale",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textDirection",
                    "type": "dart:ui.TextDirection",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "size",
                    "type": "dart:ui.Size",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "platform",
                    "type": "foundation.TargetPlatform",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "painting\/ImageConfiguration\/ImageConfiguration.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const ImageConfiguration({\n  this.bundle,\n  this.devicePixelRatio,\n  this.locale,\n  this.textDirection,\n  this.size,\n  this.platform,\n});<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "copyWith",
            "type": "painting.ImageConfiguration",
            "desc": "<p>Creates an object holding the configuration information for an <a href=\"painting\/ImageProvider-class.html\">ImageProvider<\/a>.<\/p>\n<p>All the arguments are optional. Configuration information is merely\nadvisory and best-effort.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.ImageConfiguration",
            "sig": "",
            "params": [
                {
                    "name": "bundle",
                    "type": "services.AssetBundle",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "devicePixelRatio",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "locale",
                    "type": "dart:ui.Locale",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textDirection",
                    "type": "dart:ui.TextDirection",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "size",
                    "type": "dart:ui.Size",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "platform",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "painting\/ImageConfiguration\/copyWith.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ImageConfiguration copyWith({\n  AssetBundle bundle,\n  double devicePixelRatio,\n  Locale locale,\n  TextDirection textDirection,\n  Size size,\n  String platform,\n}) {\n  return ImageConfiguration(\n    bundle: bundle ?? this.bundle,\n    devicePixelRatio: devicePixelRatio ?? this.devicePixelRatio,\n    locale: locale ?? this.locale,\n    textDirection: textDirection ?? this.textDirection,\n    size: size ?? this.size,\n    platform: platform ?? this.platform,\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "painting.ImageConfiguration",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "painting\/ImageConfiguration\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  final StringBuffer result = StringBuffer();\n  result.write('ImageConfiguration(');\n  bool hasArguments = false;\n  if (bundle != null) {\n    if (hasArguments)\n      result.write(', ');\n    result.write('bundle: $bundle');\n    hasArguments = true;\n  }\n  if (devicePixelRatio != null) {\n    if (hasArguments)\n      result.write(', ');\n    result.write('devicePixelRatio: ${devicePixelRatio.toStringAsFixed(1)}');\n    hasArguments = true;\n  }\n  if (locale != null) {\n    if (hasArguments)\n      result.write(', ');\n    result.write('locale: $locale');\n    hasArguments = true;\n  }\n  if (textDirection != null) {\n    if (hasArguments)\n      result.write(', ');\n    result.write('textDirection: $textDirection');\n    hasArguments = true;\n  }\n  if (size != null) {\n    if (hasArguments)\n      result.write(', ');\n    result.write('size: $size');\n    hasArguments = true;\n  }\n  if (platform != null) {\n    if (hasArguments)\n      result.write(', ');\n    result.write('platform: ${describeEnum(platform)}');\n    hasArguments = true;\n  }\n  result.write(')');\n  return result.toString();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "bundle",
            "type": "services.AssetBundle",
            "types": [],
            "desc": "<p>The preferred <a href=\"services\/AssetBundle-class.html\">AssetBundle<\/a> to use if the <a href=\"painting\/ImageProvider-class.html\">ImageProvider<\/a> needs one and\ndoes not have one already selected.<\/p>\n        ",
            "memberOf": "painting.ImageConfiguration",
            "isConstant": false,
            "href": "painting\/ImageConfiguration\/bundle.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final AssetBundle bundle\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "devicePixelRatio",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The device pixel ratio where the image will be shown.<\/p>\n        ",
            "memberOf": "painting.ImageConfiguration",
            "isConstant": false,
            "href": "painting\/ImageConfiguration\/devicePixelRatio.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double devicePixelRatio\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "type": "",
            "href": "painting\/ImageConfiguration\/empty-constant.html",
            "desc": "<p>An image configuration that provides no additional information.<\/p>\n<p>Useful when resolving an <a href=\"painting\/ImageProvider-class.html\">ImageProvider<\/a> without any context.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const ImageConfiguration empty = ImageConfiguration()\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "empty",
            "memberOf": "painting.ImageConfiguration"
        },
        {
            "name": "hashCode",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"painting\/ImageConfiguration\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"painting\/ImageConfiguration\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"painting\/ImageConfiguration\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"painting\/ImageConfiguration\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"painting\/ImageConfiguration\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"painting\/ImageConfiguration\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "memberOf": "painting.ImageConfiguration",
            "isConstant": false,
            "href": "painting\/ImageConfiguration\/hashCode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get hashCode =&gt; hashValues(bundle, devicePixelRatio, locale, size, platform);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "locale",
            "type": "dart:ui.Locale",
            "types": [],
            "desc": "<p>The language and region for which to select the image.<\/p>\n        ",
            "memberOf": "painting.ImageConfiguration",
            "isConstant": false,
            "href": "painting\/ImageConfiguration\/locale.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Locale locale\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "platform",
            "type": "foundation.TargetPlatform",
            "types": [],
            "desc": "<p>The <a href=\"foundation\/TargetPlatform-class.html\">TargetPlatform<\/a> for which assets should be used. This allows images\nto be specified in a platform-neutral fashion yet use different assets on\ndifferent platforms, to match local conventions e.g. for color matching or\nshadows.<\/p>\n        ",
            "memberOf": "painting.ImageConfiguration",
            "isConstant": false,
            "href": "painting\/ImageConfiguration\/platform.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TargetPlatform platform\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "size",
            "type": "dart:ui.Size",
            "types": [],
            "desc": "<p>The size at which the image will be rendered.<\/p>\n        ",
            "memberOf": "painting.ImageConfiguration",
            "isConstant": false,
            "href": "painting\/ImageConfiguration\/size.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Size size\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "textDirection",
            "type": "dart:ui.TextDirection",
            "types": [],
            "desc": "<p>The reading direction of the language for which to select the image.<\/p>\n        ",
            "memberOf": "painting.ImageConfiguration",
            "isConstant": false,
            "href": "painting\/ImageConfiguration\/textDirection.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextDirection textDirection\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "painting\/ImageConfiguration-class.html",
    "desc": "<p>Configuration information passed to the <a href=\"painting\/ImageProvider\/resolve.html\">ImageProvider.resolve<\/a> method to\nselect a specific image.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/createLocalImageConfiguration.html\">createLocalImageConfiguration<\/a>, which creates an <a href=\"painting\/ImageConfiguration-class.html\">ImageConfiguration<\/a>\nbased on ambient configuration in a <a href=\"widgets\/Widget-class.html\">Widget<\/a> environment.<\/li>\n<li>\n<a href=\"painting\/ImageProvider-class.html\">ImageProvider<\/a>, which uses <a href=\"painting\/ImageConfiguration-class.html\">ImageConfiguration<\/a> objects to determine\nwhich image to obtain.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "ImageConfiguration"
}