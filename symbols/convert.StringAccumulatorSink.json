{
    "desc": "<p>A sink that provides access to the concatenated strings passed to it.<\/p>\n<p>See also <a href=\"dart-convert\/StringConversionSink\/StringConversionSink.withCallback.html\">StringConversionSink.withCallback<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "convert\/StringAccumulatorSink-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "convert",
    "name": "convert.StringAccumulatorSink",
    "shortname": "StringAccumulatorSink",
    "extends": [
        "dart:convert.StringConversionSinkBase",
        "dart:convert.StringConversionSinkMixin",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "convert\/StringAccumulatorSink\/StringAccumulatorSink.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "convert.StringAccumulatorSink",
            "params": []
        },
        {
            "desc": "<p>Adds chunked data to this sink.<\/p>\n<p>This method is also used when converters are used as <a href=\"dart-async\/StreamTransformer-class.html\">StreamTransformer<\/a>s.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(String chunk) {\n  if (_isClosed) {\n    throw new StateError(\"Can't add to a closed sink.\");\n  }\n\n  _buffer.write(chunk);\n}<\/code><\/pre>\n    ",
            "href": "convert\/StringAccumulatorSink\/add.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "convert.StringAccumulatorSink",
            "params": [
                {
                    "name": "chunk",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Adds the next <code>chunk<\/code> to <code>this<\/code>.<\/p>\n<p>Adds the substring defined by <code>start<\/code> and <code>end<\/code>-exclusive to <code>this<\/code>.<\/p>\n<p>If <code>isLast<\/code> is <code>true<\/code> closes <code>this<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addSlice(String chunk, int start, int end, bool isLast) {\n  if (_isClosed) {\n    throw new StateError(\"Can't add to a closed sink.\");\n  }\n\n  _buffer.write(chunk.substring(start, end));\n  if (isLast) _isClosed = true;\n}<\/code><\/pre>\n    ",
            "href": "convert\/StringAccumulatorSink\/addSlice.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "convert.StringAccumulatorSink",
            "params": [
                {
                    "name": "chunk",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                },
                {
                    "name": "end",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "isLast",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.bool"
                },
                {
                    "name": "start",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Empties <a href=\"convert\/StringAccumulatorSink\/string.html\">string<\/a>.<\/p>\n<p>This can be used to avoid double-processing data.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void clear() {\n  _buffer.clear();\n}<\/code><\/pre>\n    ",
            "href": "convert\/StringAccumulatorSink\/clear.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "convert.StringAccumulatorSink",
            "params": []
        },
        {
            "desc": "<p>Closes the sink.<\/p>\n<p>This signals the end of the chunked conversion. This method is called\nwhen converters are used as <a href=\"dart-async\/StreamTransformer-class.html\">StreamTransformer<\/a>'s.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void close() {\n  _isClosed = true;\n}<\/code><\/pre>\n    ",
            "href": "convert\/StringAccumulatorSink\/close.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "convert.StringAccumulatorSink",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Whether <a href=\"convert\/StringAccumulatorSink\/close.html\">close<\/a> has been called.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isClosed =&gt; _isClosed;<\/code><\/pre>\n        ",
            "href": "convert\/StringAccumulatorSink\/isClosed.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "convert.StringAccumulatorSink",
            "params": []
        },
        {
            "desc": "<p>The string accumulated so far.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get string =&gt; _buffer.toString();<\/code><\/pre>\n        ",
            "href": "convert\/StringAccumulatorSink\/string.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "convert.StringAccumulatorSink",
            "params": []
        }
    ]
}