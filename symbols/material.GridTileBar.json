{
    "desc": "<p>A header used in a material design <a href=\"material\/GridTile-class.html\">GridTile<\/a>.<\/p>\n<p>Typically used to add a one or two line header or footer on a <a href=\"material\/GridTile-class.html\">GridTile<\/a>.<\/p>\n<p>For a one-line header, include a <a href=\"material\/GridTileBar\/title.html\">title<\/a> widget. To add a second line, also\ninclude a <a href=\"material\/GridTileBar\/subtitle.html\">subtitle<\/a> widget. Use <a href=\"material\/GridTileBar\/leading.html\">leading<\/a> or <a href=\"material\/GridTileBar\/trailing.html\">trailing<\/a> to add an icon.<\/p>\n<p>See also:<\/p>\n<ul>\n<li><a href=\"material\/GridTile-class.html\">GridTile<\/a><\/li>\n<li><a href=\"https:\/\/material.io\/design\/components\/image-lists.html#anatomy\">material.io\/design\/components\/image-lists.html#anatomy<\/a><\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/GridTileBar-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.GridTileBar",
    "shortname": "GridTileBar",
    "extends": [
        "widgets.StatelessWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a grid tile bar.<\/p>\n<p>Typically used to with <a href=\"material\/GridTile-class.html\">GridTile<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const GridTileBar({\n  Key key,\n  this.backgroundColor,\n  this.leading,\n  this.title,\n  this.subtitle,\n  this.trailing,\n}) : super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/GridTileBar\/GridTileBar.html",
            "isDeprecated": "0",
            "type": "",
            "name": "GridTileBar",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.GridTileBar",
            "params": [
                {
                    "name": "backgroundColor",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "leading",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "subtitle",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "title",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "trailing",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                }
            ]
        },
        {
            "desc": "<p>Describes the part of the user interface represented by this widget.<\/p>\n<p>The framework calls this method when this widget is inserted into the\ntree in a given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> and when the dependencies of this widget\nchange (e.g., an <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> referenced by this widget changes).<\/p>\n<p>The framework replaces the subtree below this widget with the widget\nreturned by this method, either by updating the existing subtree or by\nremoving the subtree and inflating a new subtree, depending on whether the\nwidget returned by this method can update the root of the existing\nsubtree, as determined by calling <a href=\"widgets\/Widget\/canUpdate.html\">Widget.canUpdate<\/a>.<\/p>\n<p>Typically implementations return a newly created constellation of widgets\nthat are configured with information from this widget's constructor and\nfrom the given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>.<\/p>\n<p>The given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> contains information about the location in the\ntree at which this widget is being built. For example, the context\nprovides the set of inherited widgets for this location in the tree. A\ngiven widget might be built with multiple different <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>\narguments over time if the widget is moved around the tree or if the\nwidget is inserted into the tree in multiple places at once.<\/p>\n<p>The implementation of this method must only depend on:<\/p>\n<ul>\n<li>the fields of the widget, which themselves must not change over time,\nand<\/li>\n<li>any ambient state obtained from the <code>context<\/code> using\n<a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a>.<\/li>\n<\/ul>\n<p>If a widget's <a href=\"material\/GridTileBar\/build.html\">build<\/a> method is to depend on anything else, use a\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> instead.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, which contains the discussion on performance considerations.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  BoxDecoration decoration;\n  if (backgroundColor != null)\n    decoration = BoxDecoration(color: backgroundColor);\n\n  final List&lt;Widget&gt; children = &lt;Widget&gt;[];\n  final EdgeInsetsDirectional padding = EdgeInsetsDirectional.only(\n    start: leading != null ? 8.0 : 16.0,\n    end: trailing != null ? 8.0 : 16.0,\n  );\n\n  if (leading != null)\n    children.add(Padding(padding: const EdgeInsetsDirectional.only(end: 8.0), child: leading));\n\n  final ThemeData theme = Theme.of(context);\n  final ThemeData darkTheme = ThemeData(\n    brightness: Brightness.dark,\n    accentColor: theme.accentColor,\n    accentColorBrightness: theme.accentColorBrightness,\n  );\n  if (title != null &amp;&amp; subtitle != null) {\n    children.add(\n      Expanded(\n        child: Column(\n          mainAxisAlignment: MainAxisAlignment.center,\n          crossAxisAlignment: CrossAxisAlignment.start,\n          children: &lt;Widget&gt;[\n            DefaultTextStyle(\n              style: darkTheme.textTheme.subhead,\n              softWrap: false,\n              overflow: TextOverflow.ellipsis,\n              child: title,\n            ),\n            DefaultTextStyle(\n              style: darkTheme.textTheme.caption,\n              softWrap: false,\n              overflow: TextOverflow.ellipsis,\n              child: subtitle,\n            ),\n          ],\n        ),\n      )\n    );\n  } else if (title != null || subtitle != null) {\n    children.add(\n      Expanded(\n        child: DefaultTextStyle(\n          style: darkTheme.textTheme.subhead,\n          softWrap: false,\n          overflow: TextOverflow.ellipsis,\n          child: title ?? subtitle,\n        ),\n      )\n    );\n  }\n\n  if (trailing != null)\n    children.add(Padding(padding: const EdgeInsetsDirectional.only(start: 8.0), child: trailing));\n\n  return Container(\n    padding: padding,\n    decoration: decoration,\n    height: (title != null &amp;&amp; subtitle != null) ? 68.0 : 48.0,\n    child: Theme(\n      data: darkTheme,\n      child: IconTheme.merge(\n        data: const IconThemeData(color: Colors.white),\n        child: Row(\n          crossAxisAlignment: CrossAxisAlignment.center,\n          children: children,\n        ),\n      ),\n    ),\n  );\n}<\/code><\/pre>\n    ",
            "href": "material\/GridTileBar\/build.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "name": "build",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.GridTileBar",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The color to paint behind the child widgets.<\/p>\n<p>Defaults to transparent.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color backgroundColor\n\n<\/code><\/pre>\n        ",
            "href": "material\/GridTileBar\/backgroundColor.html",
            "name": "backgroundColor",
            "isDeprecated": false,
            "type": "dart:ui.Color",
            "memberOf": "material.GridTileBar",
            "params": []
        },
        {
            "desc": "<p>A widget to display before the title.<\/p>\n<p>Typically an <a href=\"widgets\/Icon-class.html\">Icon<\/a> or an <a href=\"material\/IconButton-class.html\">IconButton<\/a> widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget leading\n\n<\/code><\/pre>\n        ",
            "href": "material\/GridTileBar\/leading.html",
            "name": "leading",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "memberOf": "material.GridTileBar",
            "params": []
        },
        {
            "desc": "<p>Additional content displayed below the title.<\/p>\n<p>Typically a <a href=\"widgets\/Text-class.html\">Text<\/a> widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget subtitle\n\n<\/code><\/pre>\n        ",
            "href": "material\/GridTileBar\/subtitle.html",
            "name": "subtitle",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "memberOf": "material.GridTileBar",
            "params": []
        },
        {
            "desc": "<p>The primary content of the list item.<\/p>\n<p>Typically a <a href=\"widgets\/Text-class.html\">Text<\/a> widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget title\n\n<\/code><\/pre>\n        ",
            "href": "material\/GridTileBar\/title.html",
            "name": "title",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "memberOf": "material.GridTileBar",
            "params": []
        },
        {
            "desc": "<p>A widget to display after the title.<\/p>\n<p>Typically an <a href=\"widgets\/Icon-class.html\">Icon<\/a> or an <a href=\"material\/IconButton-class.html\">IconButton<\/a> widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget trailing\n\n<\/code><\/pre>\n        ",
            "href": "material\/GridTileBar\/trailing.html",
            "name": "trailing",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "memberOf": "material.GridTileBar",
            "params": []
        }
    ]
}