{
    "name": "rendering.RevealedOffset",
    "extends": [],
    "memberOf": "rendering",
    "events": [],
    "methods": [
        {
            "name": "RevealedOffset",
            "type": "",
            "desc": "<p>Instantiates a return value for <a href=\"rendering\/RenderAbstractViewport\/getOffsetToReveal.html\">RenderAbstractViewport.getOffsetToReveal<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RevealedOffset",
            "sig": "",
            "params": [
                {
                    "name": "offset",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "rect",
                    "type": "dart:ui.Rect",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "rendering\/RevealedOffset\/RevealedOffset.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const RevealedOffset({\n  @required this.offset,\n  @required this.rect,\n}) : assert(offset != null),\n     assert(rect != null);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RevealedOffset",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "rendering\/RevealedOffset\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  return '$runtimeType(offset: $offset, rect: $rect)';\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "offset",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>Offset for the viewport to reveal a specific element in the viewport.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"rendering\/RenderAbstractViewport\/getOffsetToReveal.html\">RenderAbstractViewport.getOffsetToReveal<\/a>, which calculates this\nvalue for a specific element.<\/li><\/ul>",
            "memberOf": "rendering.RevealedOffset",
            "isConstant": false,
            "href": "rendering\/RevealedOffset\/offset.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double offset\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "rect",
            "type": "dart:ui.Rect",
            "types": [],
            "desc": "<p>The <a href=\"dart-ui\/Rect-class.html\">Rect<\/a> in the outer coordinate system of the viewport at which the\nto-be-revealed element would be located if the viewport's offset is set\nto <a href=\"rendering\/RevealedOffset\/offset.html\">offset<\/a>.<\/p>\n<p>A viewport usually has two coordinate systems and works as an adapter\nbetween the two:<\/p>\n<p>The inner coordinate system has its origin at the top left corner of the\ncontent that moves inside the viewport. The origin of this coordinate\nsystem usually moves around relative to the leading edge of the viewport\nwhen the viewport offset changes.<\/p>\n<p>The outer coordinate system has its origin at the top left corner of the\nvisible part of the viewport. This origin stays at the same position\nregardless of the current viewport offset.<\/p>\n<p>In other words: <a href=\"rendering\/RevealedOffset\/rect.html\">rect<\/a> describes where the revealed element would be\nlocated relative to the top left corner of the visible part of the\nviewport if the viewport's offset is set to <a href=\"rendering\/RevealedOffset\/offset.html\">offset<\/a>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"rendering\/RenderAbstractViewport\/getOffsetToReveal.html\">RenderAbstractViewport.getOffsetToReveal<\/a>, which calculates this\nvalue for a specific element.<\/li><\/ul>",
            "memberOf": "rendering.RevealedOffset",
            "isConstant": false,
            "href": "rendering\/RevealedOffset\/rect.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Rect rect\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "rendering\/RevealedOffset-class.html",
    "desc": "<p>Return value for <a href=\"rendering\/RenderAbstractViewport\/getOffsetToReveal.html\">RenderAbstractViewport.getOffsetToReveal<\/a>.<\/p>\n<p>It indicates the <a href=\"rendering\/RevealedOffset\/offset.html\">offset<\/a> required to reveal an element in a viewport and\nthe <a href=\"rendering\/RevealedOffset\/rect.html\">rect<\/a> position said element would have in the viewport at that\n<a href=\"rendering\/RevealedOffset\/offset.html\">offset<\/a>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "RevealedOffset"
}