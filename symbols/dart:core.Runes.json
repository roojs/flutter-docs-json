{
    "desc": "<p>The runes (integer Unicode code points) of a <a href=\"dart-core\/String-class.html\">String<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-core\/Runes-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:core",
    "name": "dart:core.Runes",
    "shortname": "Runes",
    "extends": [
        "dart:core.int",
        "dart:core.Iterable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Runes(this.string);<\/code><\/pre>\n    ",
            "href": "dart-core\/Runes\/Runes.html",
            "isDeprecated": "0",
            "type": "",
            "name": "Runes",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:core.Runes",
            "params": [
                {
                    "name": "string",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.String"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns a new <code>Iterator<\/code> that allows iterating the elements of this\n<code>Iterable<\/code>.<\/p>\n<p>Iterable classes may specify the iteration order of their elements\n(for example <a href=\"dart-core\/List-class.html\">List<\/a> always iterate in index order),\nor they may leave it unspecified (for example a hash-based <a href=\"dart-core\/Set-class.html\">Set<\/a>\nmay iterate in any order).<\/p>\n<p>Each time <code>iterator<\/code> is read, it returns a new iterator,\nwhich can be used to iterate through all the elements again.\nThe iterators of the same iterable can be stepped through independently,\nbut should return the same elements in the same order,\nas long as the underlying collection isn't changed.<\/p>\n<p>Modifying the collection may cause new iterators to produce\ndifferent elements, and may change the order of existing elements.\nA <a href=\"dart-core\/List-class.html\">List<\/a> specifies its iteration order precisely,\nso modifying the list changes the iteration order predictably.\nA hash-based <a href=\"dart-core\/Set-class.html\">Set<\/a> may change its iteration order completely\nwhen adding a new element to the set.<\/p>\n<p>Modifying the underlying collection after creating the new iterator\nmay cause an error the next time <a href=\"dart-core\/Iterator\/moveNext.html\">Iterator.moveNext<\/a> is called\non that iterator.\nAny <em>modifiable<\/em> iterable class should specify which operations will\nbreak iteration.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">RuneIterator get iterator =&gt; new RuneIterator(string);<\/code><\/pre>\n        ",
            "href": "dart-core\/Runes\/iterator.html",
            "name": "iterator",
            "isDeprecated": false,
            "type": "dart:core.RuneIterator",
            "memberOf": "dart:core.Runes",
            "params": []
        },
        {
            "desc": "<p>Returns the last element.<\/p>\n<p>Throws a <a href=\"dart-core\/StateError-class.html\">StateError<\/a> if <code>this<\/code> is empty.\nOtherwise may iterate through the elements and returns the last one\nseen.\nSome iterables may have more efficient ways to find the last element\n(for example a list can directly access the last element,\nwithout iterating through the previous ones).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get last {\n  if (string.length == 0) {\n    throw new StateError('No elements.');\n  }\n  int length = string.length;\n  int code = string.codeUnitAt(length - 1);\n  if (_isTrailSurrogate(code) &amp;&amp; string.length &gt; 1) {\n    int previousCode = string.codeUnitAt(length - 2);\n    if (_isLeadSurrogate(previousCode)) {\n      return _combineSurrogatePair(previousCode, code);\n    }\n  }\n  return code;\n}<\/code><\/pre>\n        ",
            "href": "dart-core\/Runes\/last.html",
            "name": "last",
            "isDeprecated": false,
            "type": "dart:core.int",
            "memberOf": "dart:core.Runes",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String string\n\n<\/code><\/pre>\n        ",
            "href": "dart-core\/Runes\/string.html",
            "name": "string",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "dart:core.Runes",
            "params": []
        }
    ]
}