{
    "desc": "<p>A modal route that replaces the entire screen.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "widgets\/PageRoute-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "widgets",
    "name": "widgets.PageRoute",
    "shortname": "PageRoute",
    "extends": [
        "widgets.ModalRoute",
        "widgets.TransitionRoute",
        "widgets.OverlayRoute",
        "widgets.Route",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [
        "cupertino.CupertinoPageRoute",
        "material.MaterialPageRoute",
        "widgets.PageRouteBuilder"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a modal route that replaces the entire screen.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">PageRoute({\n  RouteSettings settings,\n  this.fullscreenDialog = false,\n}) : super(settings: settings);<\/code><\/pre>\n    ",
            "href": "widgets\/PageRoute\/PageRoute.html",
            "isDeprecated": false,
            "type": "",
            "name": "PageRoute",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.PageRoute",
            "params": [
                {
                    "name": "fullscreenDialog",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "settings",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.RouteSettings"
                }
            ]
        },
        {
            "desc": "<p>Returns true if <code>previousRoute<\/code> should animate when this route\nis pushed on top of it or when then this route is popped off of it.<\/p>\n<p>Subclasses can override this method to restrict the set of routes they\nneed to coordinate transitions with.<\/p>\n<p>If true, and <code>previousRoute.canTransitionTo()<\/code> is true, then the\nprevious route's <a href=\"widgets\/ModalRoute\/buildTransitions.html\">buildTransitions<\/a> <code>secondaryAnimation<\/code> will\nrun from 0.0 - 1.0 when this route is pushed on top of\nit. Similarly, if this route is popped off of <code>previousRoute<\/code>\nthe previous route's <code>secondaryAnimation<\/code> will run from 1.0 - 0.0.<\/p>\n<p>If false, then the previous route's <a href=\"widgets\/ModalRoute\/buildTransitions.html\">buildTransitions<\/a>\n<code>secondaryAnimation<\/code> value will be kAlwaysDismissedAnimation. In\nother words <code>previousRoute<\/code> will not animate when this route is\npushed on top of it or when then this route is popped off of it.<\/p>\n<p>Returns true by default.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/PageRoute\/canTransitionTo.html\">canTransitionTo<\/a>, which must be true for <code>previousRoute<\/code> for its\n<a href=\"widgets\/ModalRoute\/buildTransitions.html\">buildTransitions<\/a> <code>secondaryAnimation<\/code> to run.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool canTransitionFrom(TransitionRoute&lt;dynamic&gt; previousRoute) =&gt; previousRoute is PageRoute;<\/code><\/pre>\n    ",
            "href": "widgets\/PageRoute\/canTransitionFrom.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "canTransitionFrom",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.PageRoute",
            "params": [
                {
                    "name": "previousRoute",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.TransitionRoute"
                }
            ]
        },
        {
            "desc": "<p>Returns true if this route supports a transition animation that runs\nwhen <code>nextRoute<\/code> is pushed on top of it or when <code>nextRoute<\/code> is popped\noff of it.<\/p>\n<p>Subclasses can override this method to restrict the set of routes they\nneed to coordinate transitions with.<\/p>\n<p>If true, and <code>nextRoute.canTransitionFrom()<\/code> is true, then the\n<a href=\"widgets\/ModalRoute\/buildTransitions.html\">buildTransitions<\/a> <code>secondaryAnimation<\/code> will run from 0.0 - 1.0\nwhen <code>nextRoute<\/code> is pushed on top of this one.  Similarly, if\nthe <code>nextRoute<\/code> is popped off of this route, the\n<code>secondaryAnimation<\/code> will run from 1.0 - 0.0.<\/p>\n<p>If false, this route's <a href=\"widgets\/ModalRoute\/buildTransitions.html\">buildTransitions<\/a> <code>secondaryAnimation<\/code> parameter\nvalue will be <a href=\"animation\/kAlwaysDismissedAnimation-constant.html\">kAlwaysDismissedAnimation<\/a>. In other words, this route\nwill not animate when when <code>nextRoute<\/code> is pushed on top of it or when\n<code>nextRoute<\/code> is popped off of it.<\/p>\n<p>Returns true by default.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/PageRoute\/canTransitionFrom.html\">canTransitionFrom<\/a>, which must be true for <code>nextRoute<\/code> for the\n<a href=\"widgets\/ModalRoute\/buildTransitions.html\">buildTransitions<\/a> <code>secondaryAnimation<\/code> to run.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool canTransitionTo(TransitionRoute&lt;dynamic&gt; nextRoute) =&gt; nextRoute is PageRoute;<\/code><\/pre>\n    ",
            "href": "widgets\/PageRoute\/canTransitionTo.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "canTransitionTo",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.PageRoute",
            "params": [
                {
                    "name": "nextRoute",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.TransitionRoute"
                }
            ]
        },
        {
            "desc": "<p>Called to create the animation controller that will drive the transitions to\nthis route from the previous one, and back to the previous route from this\none.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nAnimationController createAnimationController() {\n  final AnimationController controller = super.createAnimationController();\n  if (settings.isInitialRoute)\n    controller.value = 1.0;\n  return controller;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/PageRoute\/createAnimationController.html",
            "isDeprecated": false,
            "type": "animation.AnimationController",
            "name": "createAnimationController",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.PageRoute",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Whether you can dismiss this route by tapping the modal barrier.<\/p>\n<p>The modal barrier is the scrim that is rendered behind each route, which\ngenerally prevents the user from interacting with the route below the\ncurrent route, and normally partially obscures such routes.<\/p>\n<p>For example, when a dialog is on the screen, the page below the dialog is\nusually darkened by the modal barrier.<\/p>\n<p>If <a href=\"widgets\/PageRoute\/barrierDismissible.html\">barrierDismissible<\/a> is true, then tapping this barrier will cause the\ncurrent route to be popped (see <a href=\"widgets\/Navigator\/pop.html\">Navigator.pop<\/a>) with null as the value.<\/p>\n<p>If <a href=\"widgets\/PageRoute\/barrierDismissible.html\">barrierDismissible<\/a> is false, then tapping the barrier has no effect.<\/p>\n<p>If this getter would ever start returning a different color,\n<a href=\"widgets\/ModalRoute\/changedInternalState.html\">changedInternalState<\/a> should be invoked so that the change can take\neffect.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/ModalRoute\/barrierColor.html\">barrierColor<\/a>, which controls the color of the scrim for this route.<\/li>\n<li>\n<a href=\"widgets\/ModalBarrier-class.html\">ModalBarrier<\/a>, the widget that implements this feature.<\/li>\n<\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get barrierDismissible =&gt; false;<\/code><\/pre>\n        ",
            "href": "widgets\/PageRoute\/barrierDismissible.html",
            "name": "barrierDismissible",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.PageRoute",
            "params": []
        },
        {
            "desc": "<p>Whether this page route is a full-screen dialog.<\/p>\n<p>In Material and Cupertino, being fullscreen has the effects of making\nthe app bars have a close button instead of a back button. On\niOS, dialogs transitions animate differently and are also not closeable\nwith the back swipe gesture.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool fullscreenDialog\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/PageRoute\/fullscreenDialog.html",
            "name": "fullscreenDialog",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.PageRoute",
            "params": []
        },
        {
            "desc": "<p>Whether the route obscures previous routes when the transition is complete.<\/p>\n<p>When an opaque route's entrance transition is complete, the routes behind\nthe opaque route will not be built to save resources.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get opaque =&gt; true;<\/code><\/pre>\n        ",
            "href": "widgets\/PageRoute\/opaque.html",
            "name": "opaque",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.PageRoute",
            "params": []
        }
    ]
}