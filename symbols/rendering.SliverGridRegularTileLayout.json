{
    "desc": "<p>A <a href=\"rendering\/SliverGridLayout-class.html\">SliverGridLayout<\/a> that uses equally sized and spaced tiles.<\/p>\n<p>Rather that providing a grid with a <a href=\"rendering\/SliverGridLayout-class.html\">SliverGridLayout<\/a> directly, you instead\nprovide the grid a <a href=\"rendering\/SliverGridDelegate-class.html\">SliverGridDelegate<\/a>, which can compute a\n<a href=\"rendering\/SliverGridLayout-class.html\">SliverGridLayout<\/a> given the current <a href=\"rendering\/SliverConstraints-class.html\">SliverConstraints<\/a>.<\/p>\n<p>This layout is used by <a href=\"rendering\/SliverGridDelegateWithFixedCrossAxisCount-class.html\">SliverGridDelegateWithFixedCrossAxisCount<\/a> and\n<a href=\"rendering\/SliverGridDelegateWithMaxCrossAxisExtent-class.html\">SliverGridDelegateWithMaxCrossAxisExtent<\/a>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"rendering\/SliverGridDelegateWithFixedCrossAxisCount-class.html\">SliverGridDelegateWithFixedCrossAxisCount<\/a>, which uses this layout.<\/li>\n<li>\n<a href=\"rendering\/SliverGridDelegateWithMaxCrossAxisExtent-class.html\">SliverGridDelegateWithMaxCrossAxisExtent<\/a>, which uses this layout.<\/li>\n<li>\n<a href=\"rendering\/SliverGridLayout-class.html\">SliverGridLayout<\/a>, which represents an arbitrary tile layout.<\/li>\n<li>\n<a href=\"rendering\/SliverGridGeometry-class.html\">SliverGridGeometry<\/a>, which represents the size and position of a single\ntile in a grid.<\/li>\n<li>\n<a href=\"rendering\/SliverGridDelegate\/getLayout.html\">SliverGridDelegate.getLayout<\/a>, which returns this object to describe the\ndelegate's layout.<\/li>\n<li>\n<a href=\"rendering\/RenderSliverGrid-class.html\">RenderSliverGrid<\/a>, which uses this class during its\n<a href=\"rendering\/RenderSliverGrid\/performLayout.html\">RenderSliverGrid.performLayout<\/a> method.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "rendering\/SliverGridRegularTileLayout-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "rendering",
    "name": "rendering.SliverGridRegularTileLayout",
    "shortname": "SliverGridRegularTileLayout",
    "extends": [
        "rendering.SliverGridLayout",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a layout that uses equally sized and spaced tiles.<\/p>\n<p>All of the arguments must not be null and must not be negative. The\n<code>crossAxisCount<\/code> argument must be greater than zero.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SliverGridRegularTileLayout({\n  @required this.crossAxisCount,\n  @required this.mainAxisStride,\n  @required this.crossAxisStride,\n  @required this.childMainAxisExtent,\n  @required this.childCrossAxisExtent,\n  @required this.reverseCrossAxis,\n}) : assert(crossAxisCount != null &amp;&amp; crossAxisCount &gt; 0),\n     assert(mainAxisStride != null &amp;&amp; mainAxisStride &gt;= 0),\n     assert(crossAxisStride != null &amp;&amp; crossAxisStride &gt;= 0),\n     assert(childMainAxisExtent != null &amp;&amp; childMainAxisExtent &gt;= 0),\n     assert(childCrossAxisExtent != null &amp;&amp; childCrossAxisExtent &gt;= 0),\n     assert(reverseCrossAxis != null);<\/code><\/pre>\n    ",
            "href": "rendering\/SliverGridRegularTileLayout\/SliverGridRegularTileLayout.html",
            "isDeprecated": false,
            "type": "",
            "name": "SliverGridRegularTileLayout",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": [
                {
                    "name": "childCrossAxisExtent",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "childMainAxisExtent",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "crossAxisCount",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "crossAxisStride",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "mainAxisStride",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "reverseCrossAxis",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                }
            ]
        },
        {
            "desc": "<p>The scroll extent needed to fully display all the tiles if there are\n<code>childCount<\/code> children in total.<\/p>\n<p>The child count will never be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble computeMaxScrollOffset(int childCount) {\n  assert(childCount != null);\n  final int mainAxisCount = ((childCount - 1) ~\/ crossAxisCount) + 1;\n  final double mainAxisSpacing = mainAxisStride - childMainAxisExtent;\n  return mainAxisStride * mainAxisCount - mainAxisSpacing;\n}<\/code><\/pre>\n    ",
            "href": "rendering\/SliverGridRegularTileLayout\/computeMaxScrollOffset.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "computeMaxScrollOffset",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": [
                {
                    "name": "childCount",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>The size and position of the child with the given index.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nSliverGridGeometry getGeometryForChildIndex(int index) {\n  final double crossAxisStart = (index % crossAxisCount) * crossAxisStride;\n  return SliverGridGeometry(\n    scrollOffset: (index ~\/ crossAxisCount) * mainAxisStride,\n    crossAxisOffset: _getOffsetFromStartInCrossAxis(crossAxisStart),\n    mainAxisExtent: childMainAxisExtent,\n    crossAxisExtent: childCrossAxisExtent,\n  );\n}<\/code><\/pre>\n    ",
            "href": "rendering\/SliverGridRegularTileLayout\/getGeometryForChildIndex.html",
            "isDeprecated": false,
            "type": "rendering.SliverGridGeometry",
            "name": "getGeometryForChildIndex",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": [
                {
                    "name": "index",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>The maximum child index that is visible at (or before) this scroll offset.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint getMaxChildIndexForScrollOffset(double scrollOffset) {\n  if (mainAxisStride &gt; 0.0) {\n    final int mainAxisCount = (scrollOffset \/ mainAxisStride).ceil();\n    return math.max(0, crossAxisCount * mainAxisCount - 1);\n  }\n  return 0;\n}<\/code><\/pre>\n    ",
            "href": "rendering\/SliverGridRegularTileLayout\/getMaxChildIndexForScrollOffset.html",
            "isDeprecated": false,
            "type": "dart:core.int",
            "name": "getMaxChildIndexForScrollOffset",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": [
                {
                    "name": "scrollOffset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>The minimum child index that is visible at (or after) this scroll offset.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint getMinChildIndexForScrollOffset(double scrollOffset) {\n  return mainAxisStride &gt; 0.0 ? crossAxisCount * (scrollOffset ~\/ mainAxisStride) : 0;\n}<\/code><\/pre>\n    ",
            "href": "rendering\/SliverGridRegularTileLayout\/getMinChildIndexForScrollOffset.html",
            "isDeprecated": false,
            "type": "dart:core.int",
            "name": "getMinChildIndexForScrollOffset",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": [
                {
                    "name": "scrollOffset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The number of pixels from the leading edge of one tile to the trailing\nedge of the same tile in the cross axis.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double childCrossAxisExtent\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/SliverGridRegularTileLayout\/childCrossAxisExtent.html",
            "name": "childCrossAxisExtent",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": []
        },
        {
            "desc": "<p>The number of pixels from the leading edge of one tile to the trailing\nedge of the same tile in the main axis.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double childMainAxisExtent\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/SliverGridRegularTileLayout\/childMainAxisExtent.html",
            "name": "childMainAxisExtent",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": []
        },
        {
            "desc": "<p>The number of children in the cross axis.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int crossAxisCount\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/SliverGridRegularTileLayout\/crossAxisCount.html",
            "name": "crossAxisCount",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": []
        },
        {
            "desc": "<p>The number of pixels from the leading edge of one tile to the leading edge\nof the next tile in the cross axis.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double crossAxisStride\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/SliverGridRegularTileLayout\/crossAxisStride.html",
            "name": "crossAxisStride",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": []
        },
        {
            "desc": "<p>The number of pixels from the leading edge of one tile to the leading edge\nof the next tile in the main axis.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double mainAxisStride\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/SliverGridRegularTileLayout\/mainAxisStride.html",
            "name": "mainAxisStride",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": []
        },
        {
            "desc": "<p>Whether the children should be placed in the opposite order of increasing\ncoordinates in the cross axis.<\/p>\n<p>For example, if the cross axis is horizontal, the children are placed from\nleft to right when <a href=\"rendering\/SliverGridRegularTileLayout\/reverseCrossAxis.html\">reverseCrossAxis<\/a> is false and from right to left when\n<a href=\"rendering\/SliverGridRegularTileLayout\/reverseCrossAxis.html\">reverseCrossAxis<\/a> is true.<\/p>\n<p>Typically set to the return value of <a href=\"painting\/axisDirectionIsReversed.html\">axisDirectionIsReversed<\/a> applied to\nthe <a href=\"rendering\/SliverConstraints\/crossAxisDirection.html\">SliverConstraints.crossAxisDirection<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool reverseCrossAxis\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/SliverGridRegularTileLayout\/reverseCrossAxis.html",
            "name": "reverseCrossAxis",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "rendering.SliverGridRegularTileLayout",
            "params": []
        }
    ]
}