{
    "desc": "<p>A <a href=\"package-web_socket_channel_web_socket_channel\/WebSocketChannel-class.html\">WebSocketChannel<\/a> that communicates using a <code>dart:io<\/code> <a href=\"dart-io\/WebSocket-class.html\">WebSocket<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "web_socket_channel.io\/IOWebSocketChannel-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "web_socket_channel.io",
    "name": "web_socket_channel.io.IOWebSocketChannel",
    "shortname": "IOWebSocketChannel",
    "extends": [
        "stream_channel.StreamChannelMixin",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a channel wrapping <code>socket<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">IOWebSocketChannel(WebSocket socket)\n    : _webSocket = socket,\n      stream = socket.handleError(\n          (error) =&gt; throw new WebSocketChannelException.from(error)),\n      sink = new _IOWebSocketSink(socket);<\/code><\/pre>\n    ",
            "href": "web_socket_channel.io\/IOWebSocketChannel\/IOWebSocketChannel.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "web_socket_channel.io.IOWebSocketChannel",
            "params": [
                {
                    "name": "socket",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:io.WebSocket"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The <a href=\"https:\/\/tools.ietf.org\/html\/rfc6455#section-7.1.5\">close code<\/a> set when the WebSocket connection is closed.<\/p>\n<p>Before the connection has been closed, this will be <code>null<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get closeCode =&gt; _webSocket?.closeCode;<\/code><\/pre>\n        ",
            "href": "web_socket_channel.io\/IOWebSocketChannel\/closeCode.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "web_socket_channel.io.IOWebSocketChannel",
            "params": []
        },
        {
            "desc": "<p>The <a href=\"https:\/\/tools.ietf.org\/html\/rfc6455#section-7.1.6\">close reason<\/a> set when the WebSocket connection is closed.<\/p>\n<p>Before the connection has been closed, this will be <code>null<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get closeReason =&gt; _webSocket?.closeReason;<\/code><\/pre>\n        ",
            "href": "web_socket_channel.io\/IOWebSocketChannel\/closeReason.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "web_socket_channel.io.IOWebSocketChannel",
            "params": []
        },
        {
            "desc": "<p>The subprotocol selected by the server.<\/p>\n<p>For a client socket, this is initially <code>null<\/code>. After the WebSocket\nconnection is established the value is set to the subprotocol selected by\nthe server. If no subprotocol is negotiated the value will remain <code>null<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get protocol =&gt; _webSocket?.protocol;<\/code><\/pre>\n        ",
            "href": "web_socket_channel.io\/IOWebSocketChannel\/protocol.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "web_socket_channel.io.IOWebSocketChannel",
            "params": []
        },
        {
            "desc": "<p>The sink for sending values to the other endpoint.<\/p>\n<p>This supports additional arguments to <a href=\"package-web_socket_channel_web_socket_channel\/WebSocketSink\/close.html\">WebSocketSink.close<\/a> that provide\nthe remote endpoint reasons for closing the connection.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final WebSocketSink sink\n\n<\/code><\/pre>\n        ",
            "href": "web_socket_channel.io\/IOWebSocketChannel\/sink.html",
            "isDeprecated": "0",
            "type": "web_socket_channel.WebSocketSink",
            "memberOf": "web_socket_channel.io.IOWebSocketChannel",
            "params": []
        },
        {
            "desc": "<p>The single-subscription stream that emits values from the other endpoint.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Stream stream\n\n<\/code><\/pre>\n        ",
            "href": "web_socket_channel.io\/IOWebSocketChannel\/stream.html",
            "isDeprecated": "0",
            "type": "dart:async.Stream",
            "memberOf": "web_socket_channel.io.IOWebSocketChannel",
            "params": []
        }
    ]
}