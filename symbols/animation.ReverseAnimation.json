{
    "name": "animation.ReverseAnimation",
    "extends": [
        "dart:core.double",
        "animation.Animation",
        "foundation.Listenable",
        "dart:core.Object"
    ],
    "memberOf": "animation",
    "events": [],
    "methods": [
        {
            "name": "ReverseAnimation",
            "type": "",
            "desc": "<p>Creates a reverse animation.<\/p>\n<p>The parent argument must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "animation.ReverseAnimation",
            "sig": "",
            "params": [
                {
                    "name": "parent",
                    "type": "animation.Animation<dart:core.double>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "animation.Animation",
                        "dart:core.double"
                    ]
                }
            ],
            "isConstructor": true,
            "href": "animation\/ReverseAnimation\/ReverseAnimation.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ReverseAnimation(this.parent)\n  : assert(parent != null);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "addListener",
            "type": "",
            "desc": "<p>Calls the listener every time the value of the animation changes.<\/p>\n<p>Listeners can be removed with <a href=\"animation\/ReverseAnimation\/removeListener.html\">removeListener<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "animation.ReverseAnimation",
            "sig": "",
            "params": [
                {
                    "name": "listener",
                    "type": "dart:ui.VoidCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "animation\/ReverseAnimation\/addListener.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid addListener(VoidCallback listener) {\n  didRegisterListener();\n  parent.addListener(listener);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "didStartListening",
            "type": "",
            "desc": "<p>Called when the number of listeners changes from zero to one.<\/p>\n    ",
            "static": false,
            "memberOf": "animation.ReverseAnimation",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "animation\/ReverseAnimation\/didStartListening.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid didStartListening() {\n  parent.addStatusListener(_statusChangeHandler);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "didStopListening",
            "type": "",
            "desc": "<p>Called when the number of listeners changes from one to zero.<\/p>\n    ",
            "static": false,
            "memberOf": "animation.ReverseAnimation",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "animation\/ReverseAnimation\/didStopListening.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid didStopListening() {\n  parent.removeStatusListener(_statusChangeHandler);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "removeListener",
            "type": "",
            "desc": "<p>Stop calling the listener every time the value of the animation changes.<\/p>\n<p>Listeners can be added with <a href=\"animation\/ReverseAnimation\/addListener.html\">addListener<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "animation.ReverseAnimation",
            "sig": "",
            "params": [
                {
                    "name": "listener",
                    "type": "dart:ui.VoidCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "animation\/ReverseAnimation\/removeListener.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid removeListener(VoidCallback listener) {\n  parent.removeListener(listener);\n  didUnregisterListener();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "animation.ReverseAnimation",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "animation\/ReverseAnimation\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  return '$parent\\u27AA$runtimeType';\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "parent",
            "type": "animation.Animation<dart:core.double>",
            "types": [
                "animation.Animation",
                "dart:core.double"
            ],
            "desc": "<p>The animation whose value and direction this animation is reversing.<\/p>\n        ",
            "memberOf": "animation.ReverseAnimation",
            "isConstant": false,
            "href": "animation\/ReverseAnimation\/parent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Animation&lt;double&gt; parent\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "status",
            "type": "animation.AnimationStatus",
            "types": [],
            "desc": "<p>The current status of this animation.<\/p>\n        ",
            "memberOf": "animation.ReverseAnimation",
            "isConstant": false,
            "href": "animation\/ReverseAnimation\/status.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nAnimationStatus get status =&gt; _reverseStatus(parent.status);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "value",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The current value of the animation.<\/p>\n        ",
            "memberOf": "animation.ReverseAnimation",
            "isConstant": false,
            "href": "animation\/ReverseAnimation\/value.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble get value =&gt; 1.0 - parent.value;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "animation\/ReverseAnimation-class.html",
    "desc": "<p>An animation that is the reverse of another animation.<\/p>\n<p>If the parent animation is running forward from 0.0 to 1.0, this animation\nis running in reverse from 1.0 to 0.0.<\/p>\n<p>Using a <a href=\"animation\/ReverseAnimation-class.html\">ReverseAnimation<\/a> is different from simply using a <a href=\"animation\/Tween-class.html\">Tween<\/a> with a\nbegin of 1.0 and an end of 0.0 because the tween does not change the status\nor direction of the animation.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"animation\/Curve\/flipped.html\">Curve.flipped<\/a> and <a href=\"animation\/FlippedCurve-class.html\">FlippedCurve<\/a>, which provide a similar effect but on\n<a href=\"animation\/Curve-class.html\">Curve<\/a>s.<\/li>\n<li>\n<a href=\"animation\/CurvedAnimation-class.html\">CurvedAnimation<\/a>, which can take separate curves for when the animation\nis going forward than for when it is going in reverse.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "ReverseAnimation"
}