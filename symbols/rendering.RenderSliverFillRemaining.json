{
    "desc": "<p>A sliver that contains a single box child that fills the remaining space in\nthe viewport.<\/p>\n<p><a href=\"rendering\/RenderSliverFillRemaining-class.html\">RenderSliverFillRemaining<\/a> sizes its child to fill the viewport in the\ncross axis and to fill the remaining space in the viewport in the main axis.<\/p>\n<p>Typically this will be the last sliver in a viewport, since (by definition)\nthere is never any room for anything beyond this sliver.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"rendering\/RenderSliverFillViewport-class.html\">RenderSliverFillViewport<\/a>, which sizes its children based on the\nsize of the viewport, regardless of what else is in the scroll view.<\/li>\n<li>\n<a href=\"rendering\/RenderSliverList-class.html\">RenderSliverList<\/a>, which shows a list of variable-sized children in a\nviewport.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "rendering\/RenderSliverFillRemaining-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "rendering",
    "name": "rendering.RenderSliverFillRemaining",
    "shortname": "RenderSliverFillRemaining",
    "extends": [
        "rendering.RenderSliverSingleBoxAdapter",
        "rendering.RenderSliver",
        "rendering.RenderObject",
        "foundation.AbstractNode",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a <a href=\"rendering\/RenderSliver-class.html\">RenderSliver<\/a> that wraps a <a href=\"rendering\/RenderBox-class.html\">RenderBox<\/a> which is sized to fit\nthe remaining space in the viewport.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RenderSliverFillRemaining({\n  RenderBox child,\n}) : super(child: child);<\/code><\/pre>\n    ",
            "href": "rendering\/RenderSliverFillRemaining\/RenderSliverFillRemaining.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "rendering.RenderSliverFillRemaining",
            "params": [
                {
                    "name": "child",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "rendering.RenderBox"
                }
            ]
        },
        {
            "desc": "<p>Do the work of computing the layout for this render object.<\/p>\n<p>Do not call this function directly: call <a href=\"rendering\/RenderObject\/layout.html\">layout<\/a> instead. This function\nis called by <a href=\"rendering\/RenderObject\/layout.html\">layout<\/a> when there is actually work to be done by this\nrender object during layout. The layout constraints provided by your\nparent are available via the <a href=\"rendering\/RenderSliver\/constraints.html\">constraints<\/a> getter.<\/p>\n<p>If <a href=\"rendering\/RenderObject\/sizedByParent.html\">sizedByParent<\/a> is true, then this function should not actually change\nthe dimensions of this render object. Instead, that work should be done by\n<a href=\"rendering\/RenderSliver\/performResize.html\">performResize<\/a>. If <a href=\"rendering\/RenderObject\/sizedByParent.html\">sizedByParent<\/a> is false, then this function should\nboth change the dimensions of this render object and instruct its children\nto layout.<\/p>\n<p>In implementing this function, you must call <a href=\"rendering\/RenderObject\/layout.html\">layout<\/a> on each of your\nchildren, passing true for parentUsesSize if your layout information is\ndependent on your child's layout information. Passing true for\nparentUsesSize ensures that this render object will undergo layout if the\nchild undergoes layout. Otherwise, the child can change its layout\ninformation without informing this render object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid performLayout() {\n  final double extent = constraints.remainingPaintExtent - math.min(constraints.overlap, 0.0);\n  if (child != null)\n    child.layout(constraints.asBoxConstraints(minExtent: extent, maxExtent: extent), parentUsesSize: true);\n  final double paintedChildSize = calculatePaintOffset(constraints, from: 0.0, to: extent);\n  assert(paintedChildSize.isFinite);\n  assert(paintedChildSize &gt;= 0.0);\n  geometry = SliverGeometry(\n    scrollExtent: constraints.viewportMainAxisExtent,\n    paintExtent: paintedChildSize,\n    maxPaintExtent: paintedChildSize,\n    hasVisualOverflow: extent &gt; constraints.remainingPaintExtent || constraints.scrollOffset &gt; 0.0,\n  );\n  if (child != null)\n    setChildParentData(child, constraints, geometry);\n}<\/code><\/pre>\n    ",
            "href": "rendering\/RenderSliverFillRemaining\/performLayout.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.RenderSliverFillRemaining",
            "params": []
        }
    ],
    "props": []
}