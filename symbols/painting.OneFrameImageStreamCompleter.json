{
    "desc": "<p>Manages the loading of <a href=\"dart-ui\/Image-class.html\">dart:ui.Image<\/a> objects for static <a href=\"painting\/ImageStream-class.html\">ImageStream<\/a>s (those\nwith only one frame).<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "painting\/OneFrameImageStreamCompleter-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "painting",
    "name": "painting.OneFrameImageStreamCompleter",
    "shortname": "OneFrameImageStreamCompleter",
    "extends": [
        "painting.ImageStreamCompleter",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a manager for one-frame <a href=\"painting\/ImageStream-class.html\">ImageStream<\/a>s.<\/p>\n<p>The image resource awaits the given <a href=\"dart-async\/Future-class.html\">Future<\/a>. When the future resolves,\nit notifies the <a href=\"painting\/ImageListener.html\">ImageListener<\/a>s that have been registered with\n<a href=\"painting\/ImageStreamCompleter\/addListener.html\">addListener<\/a>.<\/p>\n<p>The <a href=\"foundation\/InformationCollector.html\">InformationCollector<\/a>, if provided, is invoked if the given <a href=\"dart-async\/Future-class.html\">Future<\/a>\nresolves with an error, and can be used to supplement the reported error\nmessage (for example, giving the image's URL).<\/p>\n<p>Errors are reported using <a href=\"painting\/ImageStreamCompleter\/reportError.html\">FlutterError.reportError<\/a> with the <code>silent<\/code>\nargument on <a href=\"foundation\/FlutterErrorDetails-class.html\">FlutterErrorDetails<\/a> set to true, meaning that by default the\nmessage is only dumped to the console in debug mode (see <a href=\"foundation\/FlutterErrorDetails\/FlutterErrorDetails.html\">new\nFlutterErrorDetails<\/a>).<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">OneFrameImageStreamCompleter(Future&lt;ImageInfo&gt; image, { InformationCollector informationCollector })\n    : assert(image != null) {\n  image.then&lt;void&gt;(setImage, onError: (dynamic error, StackTrace stack) {\n    reportError(\n      context: 'resolving a single-frame image stream',\n      exception: error,\n      stack: stack,\n      informationCollector: informationCollector,\n      silent: true,\n    );\n  });\n}<\/code><\/pre>\n    ",
            "href": "painting\/OneFrameImageStreamCompleter\/OneFrameImageStreamCompleter.html",
            "isDeprecated": false,
            "type": "",
            "name": "OneFrameImageStreamCompleter",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "painting.OneFrameImageStreamCompleter",
            "params": [
                {
                    "name": "image",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:async.Future<painting.ImageInfo>"
                },
                {
                    "name": "informationCollector",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.InformationCollector"
                }
            ]
        }
    ],
    "props": []
}