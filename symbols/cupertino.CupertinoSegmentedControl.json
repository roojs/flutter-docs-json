{
    "name": "cupertino.CupertinoSegmentedControl",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "cupertino",
    "events": [
        {
            "name": "onValueChanged",
            "type": "foundation.ValueChanged",
            "desc": "<p>The callback that is called when a new option is tapped.<\/p>\n<p>This attribute must not be null.<\/p>\n<p>The segmented control passes the newly selected widget's associated key\nto the callback but does not actually change state until the parent\nwidget rebuilds the segmented control with the new <a href=\"cupertino\/CupertinoSegmentedControl\/groupValue.html\">groupValue<\/a>.<\/p>\n<p>The callback provided to <a href=\"cupertino\/CupertinoSegmentedControl\/onValueChanged.html\">onValueChanged<\/a> should update the state of\nthe parent <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> using the <a href=\"widgets\/State\/setState.html\">State.setState<\/a> method, so that\nthe parent gets rebuilt; for example:<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">class SegmentedControlExample extends StatefulWidget {\n  @override\n  State createState() =&gt; SegmentedControlExampleState();\n}\n\nclass SegmentedControlExampleState extends State&lt;SegmentedControlExample&gt; {\n  final Map&lt;int, Widget&gt; children = const {\n    0: Text('Child 1'),\n    1: Text('Child 2'),\n  };\n\n  int currentValue;\n\n  @override\n  Widget build(BuildContext context) {\n    return Container(\n      child: CupertinoSegmentedControl&lt;int&gt;(\n        children: children,\n        onValueChanged: (int newValue) {\n          setState(() {\n            currentValue = newValue;\n          });\n        },\n        groupValue: currentValue,\n      ),\n    );\n  }\n}<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n        ",
            "static": false,
            "memberOf": "",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "cupertino\/CupertinoSegmentedControl\/onValueChanged.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueChanged&lt;T&gt; onValueChanged\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false,
            "isConstant": false
        }
    ],
    "methods": [
        {
            "name": "CupertinoSegmentedControl",
            "type": "",
            "desc": "<p>Creates an iOS-style segmented control bar.<\/p>\n<p>The <code>children<\/code> and <code>onValueChanged<\/code> arguments must not be null. The\n<code>children<\/code> argument must be an ordered <a href=\"dart-core\/Map-class.html\">Map<\/a> such as a <a href=\"dart-collection\/LinkedHashMap-class.html\">LinkedHashMap<\/a>.\nFurther, the length of the <code>children<\/code> list must be greater than one.<\/p>\n<p>Each widget value in the map of <code>children<\/code> must have an associated key\nthat uniquely identifies this widget. This key is what will be returned\nin the <code>onValueChanged<\/code> callback when a new value from the <code>children<\/code> map\nis selected.<\/p>\n<p>The <code>groupValue<\/code> is the currently selected value for the segmented control.\nIf no <code>groupValue<\/code> is provided, or the <code>groupValue<\/code> is null, no widget will\nappear as selected. The <code>groupValue<\/code> must be either null or one of the keys\nin the <code>children<\/code> map.<\/p>\n    ",
            "static": false,
            "memberOf": "cupertino.CupertinoSegmentedControl",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "children",
                    "type": "dart:core.Map<widgets.Widget>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Map",
                        "widgets.Widget"
                    ]
                },
                {
                    "name": "onValueChanged",
                    "type": "foundation.ValueChanged",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "groupValue",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "unselectedColor",
                    "type": "dart:ui.Color",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "selectedColor",
                    "type": "dart:ui.Color",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "borderColor",
                    "type": "dart:ui.Color",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "pressedColor",
                    "type": "dart:ui.Color",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "cupertino\/CupertinoSegmentedControl\/CupertinoSegmentedControl.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">CupertinoSegmentedControl({\n  Key key,\n  @required this.children,\n  @required this.onValueChanged,\n  this.groupValue,\n  this.unselectedColor,\n  this.selectedColor,\n  this.borderColor,\n  this.pressedColor,\n}) : assert(children != null),\n     assert(children.length &gt;= 2),\n     assert(onValueChanged != null),\n     assert(\n       groupValue == null || children.keys.any((T child) =&gt; child == groupValue),\n       'The groupValue must be either null or one of the keys in the children map.',\n     ),\n     super(key: key);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "createState",
            "type": "",
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"cupertino\/CupertinoSegmentedControl\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "static": false,
            "memberOf": "cupertino.CupertinoSegmentedControl",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "cupertino\/CupertinoSegmentedControl\/createState.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_SegmentedControlState&lt;T&gt; createState() =&gt; _SegmentedControlState&lt;T&gt;();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "borderColor",
            "type": "dart:ui.Color",
            "types": [],
            "desc": "<p>The color used as the border around each widget.<\/p>\n<p>Defaults to <a href=\"cupertino\/CupertinoTheme-class.html\">CupertinoTheme<\/a>'s <code>primaryColor<\/code> if null.<\/p>\n        ",
            "memberOf": "cupertino.CupertinoSegmentedControl",
            "isConstant": false,
            "href": "cupertino\/CupertinoSegmentedControl\/borderColor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color borderColor\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "children",
            "type": "dart:core.Map<widgets.Widget>",
            "types": [
                "dart:core.Map",
                "widgets.Widget"
            ],
            "desc": "<p>The identifying keys and corresponding widget values in the\nsegmented control.<\/p>\n<p>The map must have more than one entry.\nThis attribute must be an ordered <a href=\"dart-core\/Map-class.html\">Map<\/a> such as a <a href=\"dart-collection\/LinkedHashMap-class.html\">LinkedHashMap<\/a>.<\/p>\n        ",
            "memberOf": "cupertino.CupertinoSegmentedControl",
            "isConstant": false,
            "href": "cupertino\/CupertinoSegmentedControl\/children.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Map&lt;T, Widget&gt; children\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "groupValue",
            "type": "",
            "types": [],
            "desc": "<p>The identifier of the widget that is currently selected.<\/p>\n<p>This must be one of the keys in the <a href=\"dart-core\/Map-class.html\">Map<\/a> of <a href=\"cupertino\/CupertinoSegmentedControl\/children.html\">children<\/a>.\nIf this attribute is null, no widget will be initially selected.<\/p>\n        ",
            "memberOf": "cupertino.CupertinoSegmentedControl",
            "isConstant": false,
            "href": "cupertino\/CupertinoSegmentedControl\/groupValue.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final T groupValue\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "pressedColor",
            "type": "dart:ui.Color",
            "types": [],
            "desc": "<p>The color used to fill the background of the widget the user is\ntemporarily interacting with through a long press or drag.<\/p>\n<p>Defaults to the selectedColor at 20% opacity if null.<\/p>\n        ",
            "memberOf": "cupertino.CupertinoSegmentedControl",
            "isConstant": false,
            "href": "cupertino\/CupertinoSegmentedControl\/pressedColor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color pressedColor\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "selectedColor",
            "type": "dart:ui.Color",
            "types": [],
            "desc": "<p>The color used to fill the background of the selected widget and as the text\ncolor of unselected widgets.<\/p>\n<p>Defaults to <a href=\"cupertino\/CupertinoTheme-class.html\">CupertinoTheme<\/a>'s <code>primaryColor<\/code> if null.<\/p>\n        ",
            "memberOf": "cupertino.CupertinoSegmentedControl",
            "isConstant": false,
            "href": "cupertino\/CupertinoSegmentedControl\/selectedColor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color selectedColor\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "unselectedColor",
            "type": "dart:ui.Color",
            "types": [],
            "desc": "<p>The color used to fill the backgrounds of unselected widgets and as the\ntext color of the selected widget.<\/p>\n<p>Defaults to <a href=\"cupertino\/CupertinoTheme-class.html\">CupertinoTheme<\/a>'s <code>primaryContrastingColor<\/code> if null.<\/p>\n        ",
            "memberOf": "cupertino.CupertinoSegmentedControl",
            "isConstant": false,
            "href": "cupertino\/CupertinoSegmentedControl\/unselectedColor.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color unselectedColor\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "cupertino\/CupertinoSegmentedControl-class.html",
    "desc": "<p>An iOS-style segmented control.<\/p>\n<p>Displays the widgets provided in the <a href=\"dart-core\/Map-class.html\">Map<\/a> of <a href=\"cupertino\/CupertinoSegmentedControl\/children.html\">children<\/a> in a\nhorizontal list. Used to select between a number of mutually exclusive\noptions. When one option in the segmented control is selected, the other\noptions in the segmented control cease to be selected.<\/p>\n<p>A segmented control can feature any <a href=\"widgets\/Widget-class.html\">Widget<\/a> as one of the values in its\n<a href=\"dart-core\/Map-class.html\">Map<\/a> of <a href=\"cupertino\/CupertinoSegmentedControl\/children.html\">children<\/a>. The type T is the type of the keys used\nto identify each widget and determine which widget is selected. As\nrequired by the <a href=\"dart-core\/Map-class.html\">Map<\/a> class, keys must be of consistent types\nand must be comparable. The ordering of the keys will determine the order\nof the widgets in the segmented control.<\/p>\n<p>When the state of the segmented control changes, the widget calls the\n<a href=\"cupertino\/CupertinoSegmentedControl\/onValueChanged.html\">onValueChanged<\/a> callback. The map key associated with the newly selected\nwidget is returned in the <a href=\"cupertino\/CupertinoSegmentedControl\/onValueChanged.html\">onValueChanged<\/a> callback. Typically, widgets\nthat use a segmented control will listen for the <a href=\"cupertino\/CupertinoSegmentedControl\/onValueChanged.html\">onValueChanged<\/a> callback\nand rebuild the segmented control with a new <a href=\"cupertino\/CupertinoSegmentedControl\/groupValue.html\">groupValue<\/a> to update which\noption is currently selected.<\/p>\n<p>The <a href=\"cupertino\/CupertinoSegmentedControl\/children.html\">children<\/a> will be displayed in the order of the keys in the <a href=\"dart-core\/Map-class.html\">Map<\/a>.\nThe height of the segmented control is determined by the height of the\ntallest widget provided as a value in the <a href=\"dart-core\/Map-class.html\">Map<\/a> of <a href=\"cupertino\/CupertinoSegmentedControl\/children.html\">children<\/a>.\nThe width of each child in the segmented control will be equal to the width\nof widest child, unless the combined width of the children is wider than\nthe available horizontal space. In this case, the available horizontal space\nis divided by the number of provided <a href=\"cupertino\/CupertinoSegmentedControl\/children.html\">children<\/a> to determine the width of\neach widget. The selection area for each of the widgets in the <a href=\"dart-core\/Map-class.html\">Map<\/a> of\n<a href=\"cupertino\/CupertinoSegmentedControl\/children.html\">children<\/a> will then be expanded to fill the calculated space, so each\nwidget will appear to have the same dimensions.<\/p>\n<p>A segmented control may optionally be created with custom colors. The\n<a href=\"cupertino\/CupertinoSegmentedControl\/unselectedColor.html\">unselectedColor<\/a>, <a href=\"cupertino\/CupertinoSegmentedControl\/selectedColor.html\">selectedColor<\/a>, <a href=\"cupertino\/CupertinoSegmentedControl\/borderColor.html\">borderColor<\/a>, and <a href=\"cupertino\/CupertinoSegmentedControl\/pressedColor.html\">pressedColor<\/a>\narguments can be used to override the segmented control's colors from\n<a href=\"cupertino\/CupertinoTheme-class.html\">CupertinoTheme<\/a> defaults.<\/p>\n<p>See also:<\/p>\n<ul><li><a href=\"https:\/\/developer.apple.com\/design\/human-interface-guidelines\/ios\/controls\/segmented-controls\/\">developer.apple.com\/design\/human-interface-guidelines\/ios\/controls\/segmented-controls\/<\/a><\/li><\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "CupertinoSegmentedControl"
}