{
    "name": "widgets.ProxyElement",
    "extends": [
        "widgets.ComponentElement",
        "widgets.Element",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "ProxyElement",
            "type": "",
            "desc": "<p>Initializes fields for subclasses.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.ProxyElement",
            "sig": "",
            "params": [
                {
                    "name": "widget",
                    "type": "widgets.ProxyWidget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/ProxyElement\/ProxyElement.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ProxyElement(ProxyWidget widget) : super(widget);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "build",
            "type": "widgets.Widget",
            "desc": "<p>Subclasses should override this function to actually call the appropriate\n<code>build<\/code> function (e.g., <a href=\"widgets\/ProxyElement\/build.html\">StatelessWidget.build<\/a> or <a href=\"widgets\/ProxyElement\/build.html\">State.build<\/a>) for\ntheir widget.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.ProxyElement",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "widgets\/ProxyElement\/build.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build() =&gt; widget.child;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "notifyClients",
            "type": "",
            "desc": "<p>Notify other objects that the widget associated with this element has\nchanged.<\/p>\n<p>Called during <a href=\"widgets\/ProxyElement\/update.html\">update<\/a> (via <a href=\"widgets\/ProxyElement\/updated.html\">updated<\/a>) after changing the widget\nassociated with this element but before rebuilding this element.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.ProxyElement",
            "sig": "",
            "params": [
                {
                    "name": "oldWidget",
                    "type": "widgets.ProxyWidget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/ProxyElement\/notifyClients.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@protected\nvoid notifyClients(covariant ProxyWidget oldWidget);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "update",
            "type": "",
            "desc": "<p>Change the widget used to configure this element.<\/p>\n<p>The framework calls this function when the parent wishes to use a\ndifferent widget to configure this element. The new widget is guaranteed\nto have the same <a href=\"dart-core\/Object\/runtimeType.html\">runtimeType<\/a> as the old widget.<\/p>\n<p>This function is called only during the \"active\" lifecycle state.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.ProxyElement",
            "sig": "",
            "params": [
                {
                    "name": "newWidget",
                    "type": "widgets.ProxyWidget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/ProxyElement\/update.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid update(ProxyWidget newWidget) {\n  final ProxyWidget oldWidget = widget;\n  assert(widget != null);\n  assert(widget != newWidget);\n  super.update(newWidget);\n  assert(widget == newWidget);\n  updated(oldWidget);\n  _dirty = true;\n  rebuild();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "updated",
            "type": "",
            "desc": "<p>Called during build when the <a href=\"widgets\/ProxyElement\/widget.html\">widget<\/a> has changed.<\/p>\n<p>By default, calls <a href=\"widgets\/ProxyElement\/notifyClients.html\">notifyClients<\/a>. Subclasses may override this method to\navoid calling <a href=\"widgets\/ProxyElement\/notifyClients.html\">notifyClients<\/a> unnecessarily (e.g. if the old and new\nwidgets are equivalent).<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.ProxyElement",
            "sig": "",
            "params": [
                {
                    "name": "oldWidget",
                    "type": "widgets.ProxyWidget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/ProxyElement\/updated.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@protected\nvoid updated(covariant ProxyWidget oldWidget) {\n  notifyClients(oldWidget);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "widget",
            "type": "widgets.ProxyWidget",
            "types": [],
            "desc": "<p>The configuration for this element.<\/p>\n        ",
            "memberOf": "widgets.ProxyElement",
            "isConstant": false,
            "href": "widgets\/ProxyElement\/widget.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nProxyWidget get widget =&gt; super.widget;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "widgets.InheritedElement",
        "widgets.InheritedModelElement",
        "widgets.ParentDataElement"
    ],
    "realImplementors": [
        "widgets.InheritedElement",
        "widgets.InheritedModelElement",
        "widgets.ParentDataElement"
    ],
    "cn": [],
    "href": "widgets\/ProxyElement-class.html",
    "desc": "<p>An <a href=\"widgets\/Element-class.html\">Element<\/a> that uses a <a href=\"widgets\/ProxyWidget-class.html\">ProxyWidget<\/a> as its configuration.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "ProxyElement"
}