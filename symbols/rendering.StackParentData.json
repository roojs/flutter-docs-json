{
    "desc": "<p>Parent data for use with <a href=\"rendering\/RenderStack-class.html\">RenderStack<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "rendering\/StackParentData-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "rendering",
    "name": "rendering.StackParentData",
    "shortname": "StackParentData",
    "extends": [
        "rendering.RenderBox",
        "rendering.ContainerBoxParentData",
        "rendering.BoxParentData",
        "rendering.ParentData",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "rendering\/StackParentData\/StackParentData.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "rendering.StackParentData",
            "params": []
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  final List&lt;String&gt; values = &lt;String&gt;[];\n  if (top != null)\n    values.add('top=$top');\n  if (right != null)\n    values.add('right=$right');\n  if (bottom != null)\n    values.add('bottom=$bottom');\n  if (left != null)\n    values.add('left=$left');\n  if (width != null)\n    values.add('width=$width');\n  if (height != null)\n    values.add('height=$height');\n  if (values.isEmpty)\n    values.add('not positioned');\n  values.add(super.toString());\n  return values.join('; ');\n}<\/code><\/pre>\n    ",
            "href": "rendering\/StackParentData\/toString.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.StackParentData",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The distance by which the child's bottom edge is inset from the bottom of the stack.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double bottom\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/StackParentData\/bottom.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "rendering.StackParentData",
            "params": []
        },
        {
            "desc": "<p>The child's height.<\/p>\n<p>Ignored if both top and bottom are non-null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double height\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/StackParentData\/height.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "rendering.StackParentData",
            "params": []
        },
        {
            "desc": "<p>Whether this child is considered positioned.<\/p>\n<p>A child is positioned if any of the top, right, bottom, or left properties\nare non-null. Positioned children do not factor into determining the size\nof the stack but are instead placed relative to the non-positioned\nchildren in the stack.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isPositioned =&gt; top != null || right != null || bottom != null || left != null || width != null || height != null;<\/code><\/pre>\n        ",
            "href": "rendering\/StackParentData\/isPositioned.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "rendering.StackParentData",
            "params": []
        },
        {
            "desc": "<p>The distance by which the child's left edge is inset from the left of the stack.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double left\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/StackParentData\/left.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "rendering.StackParentData",
            "params": []
        },
        {
            "desc": "<p>Get or set the current values in terms of a RelativeRect object.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">RelativeRect get rect =&gt; RelativeRect.fromLTRB(left, top, right, bottom);<\/code><\/pre>\n        ",
            "href": "rendering\/StackParentData\/rect.html",
            "isDeprecated": "0",
            "type": "rendering.RelativeRect",
            "memberOf": "rendering.StackParentData",
            "params": []
        },
        {
            "desc": "<p>The distance by which the child's right edge is inset from the right of the stack.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double right\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/StackParentData\/right.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "rendering.StackParentData",
            "params": []
        },
        {
            "desc": "<p>The distance by which the child's top edge is inset from the top of the stack.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double top\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/StackParentData\/top.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "rendering.StackParentData",
            "params": []
        },
        {
            "desc": "<p>The child's width.<\/p>\n<p>Ignored if both left and right are non-null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double width\n\n<\/code><\/pre>\n        ",
            "href": "rendering\/StackParentData\/width.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "rendering.StackParentData",
            "params": []
        }
    ]
}