{
    "desc": "<p>Scrolls a scroll view as the user drags their finger across the screen.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/DragScrollActivity-class.html\">DragScrollActivity<\/a>, which is the activity the scroll view performs\nwhile a drag is underway.<\/li><\/ul>",
    "dtype": "class",
    "example": "",
    "href": "widgets\/ScrollDragController-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.ScrollDragController",
    "shortname": "ScrollDragController",
    "extends": [],
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>Called when <a href=\"widgets\/ScrollDragController\/dispose.html\">dispose<\/a> is called.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final VoidCallback onDragCanceled\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ScrollDragController\/onDragCanceled.html",
            "isDeprecated": false,
            "type": "dart:ui.VoidCallback",
            "name": "onDragCanceled",
            "memberOf": "widgets.ScrollDragController",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates an object that scrolls a scroll view as the user drags their\nfinger across the screen.<\/p>\n<p>The <code>delegate<\/code> and <code>details<\/code> arguments must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ScrollDragController({\n  @required ScrollActivityDelegate delegate,\n  @required DragStartDetails details,\n  this.onDragCanceled,\n  this.carriedVelocity,\n  this.motionStartDistanceThreshold,\n}) : assert(delegate != null),\n     assert(details != null),\n     assert(\n       motionStartDistanceThreshold == null || motionStartDistanceThreshold &gt; 0.0,\n       'motionStartDistanceThreshold must be a positive number or null'\n     ),\n     _delegate = delegate,\n     _lastDetails = details,\n     _retainMomentum = carriedVelocity != null &amp;&amp; carriedVelocity != 0.0,\n     _lastNonStationaryTimestamp = details.sourceTimeStamp,\n     _offsetSinceLastStop = motionStartDistanceThreshold == null ? null : 0.0;<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollDragController\/ScrollDragController.html",
            "isDeprecated": false,
            "type": "",
            "name": "ScrollDragController",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.ScrollDragController",
            "params": [
                {
                    "name": "carriedVelocity",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.ScrollActivityDelegate"
                },
                {
                    "name": "details",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "gestures.DragStartDetails"
                },
                {
                    "name": "motionStartDistanceThreshold",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "onDragCanceled",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.VoidCallback"
                }
            ]
        },
        {
            "desc": "<p>The input from the pointer is no longer directed towards this receiver.<\/p>\n<p>For example, the user might have been interrupted by a system-modal dialog\nin the middle of the drag.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid cancel() {\n  delegate.goBallistic(0.0);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollDragController\/cancel.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "cancel",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollDragController",
            "params": []
        },
        {
            "desc": "<p>Called by the delegate when it is no longer sending events to this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@mustCallSuper\nvoid dispose() {\n  _lastDetails = null;\n  if (onDragCanceled != null)\n    onDragCanceled();\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollDragController\/dispose.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "dispose",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollDragController",
            "params": []
        },
        {
            "desc": "<p>The pointer is no longer in contact with the screen.<\/p>\n<p>The velocity at which the pointer was moving when it stopped contacting\nthe screen is available in the <code>details<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid end(DragEndDetails details) {\n  assert(details.primaryVelocity != null);\n  \/\/ We negate the velocity here because if the touch is moving downwards,\n  \/\/ the scroll has to move upwards. It's the same reason that update()\n  \/\/ above negates the delta before applying it to the scroll offset.\n  double velocity = -details.primaryVelocity;\n  if (_reversed) \/\/ e.g. an AxisDirection.up scrollable\n    velocity = -velocity;\n  _lastDetails = details;\n\n  \/\/ Build momentum only if dragging in the same direction.\n  if (_retainMomentum &amp;&amp; velocity.sign == carriedVelocity.sign)\n    velocity += carriedVelocity;\n  delegate.goBallistic(velocity);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollDragController\/end.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "end",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollDragController",
            "params": [
                {
                    "name": "details",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "gestures.DragEndDetails"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; describeIdentity(this);<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollDragController\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollDragController",
            "params": []
        },
        {
            "desc": "<p>The pointer has moved.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid update(DragUpdateDetails details) {\n  assert(details.primaryDelta != null);\n  _lastDetails = details;\n  double offset = details.primaryDelta;\n  if (offset != 0.0) {\n    _lastNonStationaryTimestamp = details.sourceTimeStamp;\n  }\n  \/\/ By default, iOS platforms carries momentum and has a start threshold\n  \/\/ (configured in [BouncingScrollPhysics]). The 2 operations below are\n  \/\/ no-ops on Android.\n  _maybeLoseMomentum(offset, details.sourceTimeStamp);\n  offset = _adjustForScrollStartThreshold(offset, details.sourceTimeStamp);\n  if (offset == 0.0) {\n    return;\n  }\n  if (_reversed) \/\/ e.g. an AxisDirection.up scrollable\n    offset = -offset;\n  delegate.applyUserOffset(offset);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollDragController\/update.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "update",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollDragController",
            "params": [
                {
                    "name": "details",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "gestures.DragUpdateDetails"
                }
            ]
        },
        {
            "desc": "<p>Updates the controller's link to the <a href=\"widgets\/ScrollActivityDelegate-class.html\">ScrollActivityDelegate<\/a>.<\/p>\n<p>This should only be called when a controller is being moved from a defunct\n(or about-to-be defunct) <a href=\"widgets\/ScrollActivityDelegate-class.html\">ScrollActivityDelegate<\/a> object to a new one.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void updateDelegate(ScrollActivityDelegate value) {\n  assert(_delegate != value);\n  _delegate = value;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollDragController\/updateDelegate.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "updateDelegate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollDragController",
            "params": [
                {
                    "name": "value",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.ScrollActivityDelegate"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Velocity that was present from a previous <a href=\"widgets\/ScrollActivity-class.html\">ScrollActivity<\/a> when this drag\nbegan.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double carriedVelocity\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ScrollDragController\/carriedVelocity.html",
            "name": "carriedVelocity",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.ScrollDragController",
            "params": []
        },
        {
            "desc": "<p>The object that will actuate the scroll view as the user drags.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ScrollActivityDelegate get delegate =&gt; _delegate;<\/code><\/pre>\n        ",
            "href": "widgets\/ScrollDragController\/delegate.html",
            "name": "delegate",
            "isDeprecated": false,
            "type": "widgets.ScrollActivityDelegate",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.ScrollDragController",
            "params": []
        },
        {
            "desc": "<p>Maximum amount of time interval the drag can have consecutive stationary\npointer update events before losing the momentum carried from a previous\nscroll activity.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const Duration momentumRetainStationaryDurationThreshold =\n    Duration(milliseconds: 20)\n\n<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollDragController\/momentumRetainStationaryDurationThreshold-constant.html",
            "name": "momentumRetainStationaryDurationThreshold",
            "isDeprecated": false,
            "type": "dart:core.Duration",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "widgets.ScrollDragController",
            "params": []
        },
        {
            "desc": "<p>Amount of pixels in either direction the drag has to move by to start\nscroll movement again after each time scrolling came to a stop.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double motionStartDistanceThreshold\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ScrollDragController\/motionStartDistanceThreshold.html",
            "name": "motionStartDistanceThreshold",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.ScrollDragController",
            "params": []
        },
        {
            "desc": "<p>Maximum amount of time interval the drag can have consecutive stationary\npointer update events before needing to break the\n<a href=\"widgets\/ScrollDragController\/motionStartDistanceThreshold.html\">motionStartDistanceThreshold<\/a> to start motion again.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const Duration motionStoppedDurationThreshold =\n    Duration(milliseconds: 50)\n\n<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollDragController\/motionStoppedDurationThreshold-constant.html",
            "name": "motionStoppedDurationThreshold",
            "isDeprecated": false,
            "type": "dart:core.Duration",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "widgets.ScrollDragController",
            "params": []
        }
    ]
}