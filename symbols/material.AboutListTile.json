{
    "desc": "<p>A <a href=\"material\/ListTile-class.html\">ListTile<\/a> that shows an about box.<\/p>\n<p>This widget is often added to an app's <a href=\"material\/Drawer-class.html\">Drawer<\/a>. When tapped it shows\nan about box dialog with <a href=\"material\/showAboutDialog.html\">showAboutDialog<\/a>.<\/p>\n<p>The about box will include a button that shows licenses for software used by\nthe application. The licenses shown are those returned by the\n<a href=\"foundation\/LicenseRegistry-class.html\">LicenseRegistry<\/a> API, which can be used to add more licenses to the list.<\/p>\n<p>If your application does not have a <a href=\"material\/Drawer-class.html\">Drawer<\/a>, you should provide an\naffordance to call <a href=\"material\/showAboutDialog.html\">showAboutDialog<\/a> or (at least) <a href=\"material\/showLicensePage.html\">showLicensePage<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "material\/AboutListTile-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.AboutListTile",
    "shortname": "AboutListTile",
    "extends": [
        "widgets.StatelessWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a list tile for showing an about box.<\/p>\n<p>The arguments are all optional. The application name, if omitted, will be\nderived from the nearest <a href=\"widgets\/Title-class.html\">Title<\/a> widget. The version, icon, and legalese\nvalues default to the empty string.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const AboutListTile({\n  Key key,\n  this.icon = const Icon(null),\n  this.child,\n  this.applicationName,\n  this.applicationVersion,\n  this.applicationIcon,\n  this.applicationLegalese,\n  this.aboutBoxChildren,\n}) : super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/AboutListTile\/AboutListTile.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.AboutListTile",
            "params": [
                {
                    "name": "aboutBoxChildren",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<widgets.Widget>"
                },
                {
                    "name": "applicationIcon",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "applicationLegalese",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "applicationName",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "applicationVersion",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.String"
                },
                {
                    "name": "child",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "icon",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                }
            ]
        },
        {
            "desc": "<p>Describes the part of the user interface represented by this widget.<\/p>\n<p>The framework calls this method when this widget is inserted into the\ntree in a given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> and when the dependencies of this widget\nchange (e.g., an <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> referenced by this widget changes).<\/p>\n<p>The framework replaces the subtree below this widget with the widget\nreturned by this method, either by updating the existing subtree or by\nremoving the subtree and inflating a new subtree, depending on whether the\nwidget returned by this method can update the root of the existing\nsubtree, as determined by calling <a href=\"widgets\/Widget\/canUpdate.html\">Widget.canUpdate<\/a>.<\/p>\n<p>Typically implementations return a newly created constellation of widgets\nthat are configured with information from this widget's constructor and\nfrom the given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>.<\/p>\n<p>The given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> contains information about the location in the\ntree at which this widget is being built. For example, the context\nprovides the set of inherited widgets for this location in the tree. A\ngiven widget might be built with multiple different <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>\narguments over time if the widget is moved around the tree or if the\nwidget is inserted into the tree in multiple places at once.<\/p>\n<p>The implementation of this method must only depend on:<\/p>\n<ul>\n<li>the fields of the widget, which themselves must not change over time,\nand<\/li>\n<li>any ambient state obtained from the <code>context<\/code> using\n<a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a>.<\/li>\n<\/ul>\n<p>If a widget's <a href=\"material\/AboutListTile\/build.html\">build<\/a> method is to depend on anything else, use a\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> instead.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, which contains the discussion on performance considerations.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  assert(debugCheckHasMaterial(context));\n  assert(debugCheckHasMaterialLocalizations(context));\n  return ListTile(\n    leading: icon,\n    title: child ??\n      Text(MaterialLocalizations.of(context).aboutListTileTitle(applicationName ?? _defaultApplicationName(context))),\n    onTap: () {\n      showAboutDialog(\n        context: context,\n        applicationName: applicationName,\n        applicationVersion: applicationVersion,\n        applicationIcon: applicationIcon,\n        applicationLegalese: applicationLegalese,\n        children: aboutBoxChildren,\n      );\n    },\n  );\n}<\/code><\/pre>\n    ",
            "href": "material\/AboutListTile\/build.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.AboutListTile",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Widgets to add to the <a href=\"material\/AboutDialog-class.html\">AboutDialog<\/a> after the name, version, and legalese.<\/p>\n<p>This could include a link to a Web site, some descriptive text, credits,\nor other information to show in the about box.<\/p>\n<p>Defaults to nothing.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;Widget&gt; aboutBoxChildren\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutListTile\/aboutBoxChildren.html",
            "isDeprecated": "0",
            "type": "dart:core.List<widgets.Widget>",
            "memberOf": "material.AboutListTile",
            "params": []
        },
        {
            "desc": "<p>The icon to show next to the application name in the <a href=\"material\/AboutDialog-class.html\">AboutDialog<\/a>.<\/p>\n<p>By default no icon is shown.<\/p>\n<p>Typically this will be an <a href=\"widgets\/ImageIcon-class.html\">ImageIcon<\/a> widget. It should honor the\n<a href=\"widgets\/IconTheme-class.html\">IconTheme<\/a>'s <a href=\"widgets\/IconThemeData\/size.html\">IconThemeData.size<\/a>.<\/p>\n<p>This is not necessarily the same as the icon shown on the drawer item\nitself, which is controlled by the <a href=\"material\/AboutListTile\/icon.html\">icon<\/a> property.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget applicationIcon\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutListTile\/applicationIcon.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.AboutListTile",
            "params": []
        },
        {
            "desc": "<p>A string to show in small print in the <a href=\"material\/AboutDialog-class.html\">AboutDialog<\/a>.<\/p>\n<p>Typically this is a copyright notice.<\/p>\n<p>Defaults to the empty string.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String applicationLegalese\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutListTile\/applicationLegalese.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "material.AboutListTile",
            "params": []
        },
        {
            "desc": "<p>The name of the application.<\/p>\n<p>This string is used in the default label for this drawer item (see\n<a href=\"material\/AboutListTile\/child.html\">child<\/a>) and as the caption of the <a href=\"material\/AboutDialog-class.html\">AboutDialog<\/a> that is shown.<\/p>\n<p>Defaults to the value of <a href=\"widgets\/Title\/title.html\">Title.title<\/a>, if a <a href=\"widgets\/Title-class.html\">Title<\/a> widget can be found.\nOtherwise, defaults to <a href=\"dart-io\/Platform\/resolvedExecutable.html\">Platform.resolvedExecutable<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String applicationName\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutListTile\/applicationName.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "material.AboutListTile",
            "params": []
        },
        {
            "desc": "<p>The version of this build of the application.<\/p>\n<p>This string is shown under the application name in the <a href=\"material\/AboutDialog-class.html\">AboutDialog<\/a>.<\/p>\n<p>Defaults to the empty string.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String applicationVersion\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutListTile\/applicationVersion.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "material.AboutListTile",
            "params": []
        },
        {
            "desc": "<p>The label to show on this drawer item.<\/p>\n<p>Defaults to a text widget that says \"About Foo\" where \"Foo\" is the\napplication name specified by <a href=\"material\/AboutListTile\/applicationName.html\">applicationName<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutListTile\/child.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.AboutListTile",
            "params": []
        },
        {
            "desc": "<p>The icon to show for this drawer item.<\/p>\n<p>By default no icon is shown.<\/p>\n<p>This is not necessarily the same as the image shown in the dialog box\nitself; which is controlled by the <a href=\"material\/AboutListTile\/applicationIcon.html\">applicationIcon<\/a> property.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget icon\n\n<\/code><\/pre>\n        ",
            "href": "material\/AboutListTile\/icon.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.AboutListTile",
            "params": []
        }
    ]
}