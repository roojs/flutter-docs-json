{
    "desc": "<p>An activity that animates a scroll view based on a physics <a href=\"physics\/Simulation-class.html\">Simulation<\/a>.<\/p>\n<p>A <a href=\"widgets\/BallisticScrollActivity-class.html\">BallisticScrollActivity<\/a> is typically used when the user lifts their\nfinger off the screen to continue the scrolling gesture with the current velocity.<\/p>\n<p><a href=\"widgets\/BallisticScrollActivity-class.html\">BallisticScrollActivity<\/a> is also used to restore a scroll view to a valid\nscroll offset when the geometry of the scroll view changes. In these\nsituations, the <a href=\"physics\/Simulation-class.html\">Simulation<\/a> typically starts with a zero velocity.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/DrivenScrollActivity-class.html\">DrivenScrollActivity<\/a>, which animates a scroll view based on a set of\nanimation parameters.<\/li><\/ul>",
    "dtype": "class",
    "example": "",
    "href": "widgets\/BallisticScrollActivity-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "widgets",
    "name": "widgets.BallisticScrollActivity",
    "shortname": "BallisticScrollActivity",
    "extends": [
        "widgets.ScrollActivity",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates an activity that animates a scroll view based on a <code>simulation<\/code>.<\/p>\n<p>The <code>delegate<\/code>, <code>simulation<\/code>, and <code>vsync<\/code> arguments must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">BallisticScrollActivity(\n  ScrollActivityDelegate delegate,\n  Simulation simulation,\n  TickerProvider vsync,\n) : super(delegate) {\n  _controller = AnimationController.unbounded(\n    debugLabel: '$runtimeType',\n    vsync: vsync,\n  )\n    ..addListener(_tick)\n    ..animateWith(simulation)\n     .whenComplete(_end); \/\/ won't trigger if we dispose _controller first\n}<\/code><\/pre>\n    ",
            "href": "widgets\/BallisticScrollActivity\/BallisticScrollActivity.html",
            "isDeprecated": false,
            "type": "",
            "name": "BallisticScrollActivity",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.BallisticScrollActivity",
            "params": [
                {
                    "name": "delegate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.ScrollActivityDelegate"
                },
                {
                    "name": "simulation",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "physics.Simulation"
                },
                {
                    "name": "vsync",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "scheduler.TickerProvider"
                }
            ]
        },
        {
            "desc": "<p>Move the position to the given location.<\/p>\n<p>If the new position was fully applied, returns true. If there was any\noverflow, returns false.<\/p>\n<p>The default implementation calls <a href=\"widgets\/ScrollActivityDelegate\/setPixels.html\">ScrollActivityDelegate.setPixels<\/a>\nand returns true if the overflow was zero.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@protected\nbool applyMoveTo(double value) {\n  return delegate.setPixels(value) == 0.0;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/BallisticScrollActivity\/applyMoveTo.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "applyMoveTo",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.BallisticScrollActivity",
            "params": [
                {
                    "name": "value",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Called when the scroll view that is performing this activity changes its metrics.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid applyNewDimensions() {\n  delegate.goBallistic(velocity);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/BallisticScrollActivity\/applyNewDimensions.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "applyNewDimensions",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.BallisticScrollActivity",
            "params": []
        },
        {
            "desc": "<p>Dispatch an <a href=\"widgets\/OverscrollNotification-class.html\">OverscrollNotification<\/a> with the given metrics and overscroll.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid dispatchOverscrollNotification(ScrollMetrics metrics, BuildContext context, double overscroll) {\n  OverscrollNotification(metrics: metrics, context: context, overscroll: overscroll, velocity: velocity).dispatch(context);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/BallisticScrollActivity\/dispatchOverscrollNotification.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "dispatchOverscrollNotification",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.BallisticScrollActivity",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "metrics",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.ScrollMetrics"
                },
                {
                    "name": "overscroll",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Called when the scroll view stops performing this activity.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid dispose() {\n  _controller.dispose();\n  super.dispose();\n}<\/code><\/pre>\n    ",
            "href": "widgets\/BallisticScrollActivity\/dispose.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "dispose",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.BallisticScrollActivity",
            "params": []
        },
        {
            "desc": "<p>Called by the <a href=\"widgets\/ScrollActivityDelegate-class.html\">ScrollActivityDelegate<\/a> when it has changed type (for\nexample, when changing from an Android-style scroll position to an\niOS-style scroll position). If this activity can differ between the two\nmodes, then it should tell the position to restart that activity\nappropriately.<\/p>\n<p>For example, <a href=\"widgets\/BallisticScrollActivity-class.html\">BallisticScrollActivity<\/a>'s implementation calls\n<a href=\"widgets\/ScrollActivityDelegate\/goBallistic.html\">ScrollActivityDelegate.goBallistic<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid resetActivity() {\n  delegate.goBallistic(velocity);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/BallisticScrollActivity\/resetActivity.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "resetActivity",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.BallisticScrollActivity",
            "params": []
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  return '${describeIdentity(this)}($_controller)';\n}<\/code><\/pre>\n    ",
            "href": "widgets\/BallisticScrollActivity\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.BallisticScrollActivity",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Whether performing this activity constitutes scrolling.<\/p>\n<p>Used, for example, to determine whether the user scroll direction is\n<a href=\"rendering\/ScrollDirection-class.html\">ScrollDirection.idle<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get isScrolling =&gt; true;<\/code><\/pre>\n        ",
            "href": "widgets\/BallisticScrollActivity\/isScrolling.html",
            "name": "isScrolling",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.BallisticScrollActivity",
            "params": []
        },
        {
            "desc": "<p>Whether the scroll view should ignore pointer events while performing this\nactivity.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get shouldIgnorePointer =&gt; true;<\/code><\/pre>\n        ",
            "href": "widgets\/BallisticScrollActivity\/shouldIgnorePointer.html",
            "name": "shouldIgnorePointer",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.BallisticScrollActivity",
            "params": []
        },
        {
            "desc": "<p>If applicable, the velocity at which the scroll offset is currently\nindependently changing (i.e. without external stimuli such as a dragging\ngestures) in logical pixels per second for this activity.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble get velocity =&gt; _controller.velocity;<\/code><\/pre>\n        ",
            "href": "widgets\/BallisticScrollActivity\/velocity.html",
            "name": "velocity",
            "isDeprecated": false,
            "type": "dart:core.double",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.BallisticScrollActivity",
            "params": []
        }
    ]
}