{
    "desc": "<p>A widget that applies a mask generated by a <a href=\"dart-ui\/Shader-class.html\">Shader<\/a> to its child.<\/p>\n<p>For example, <a href=\"widgets\/ShaderMask-class.html\">ShaderMask<\/a> can be used to gradually fade out the edge\nof a child by using a <a href=\"dart-ui\/Gradient\/Gradient.linear.html\">new ui.Gradient.linear<\/a> mask.<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n<div class=\"snippet-description\">\nThis example makes the text look like it is on fire:\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">ShaderMask(\n  shaderCallback: (Rect bounds) {\n    return RadialGradient(\n      center: Alignment.topLeft,\n      radius: 1.0,\n      colors: &lt;Color&gt;[Colors.yellow, Colors.deepOrange.shade900],\n      tileMode: TileMode.mirror,\n    ).createShader(bounds);\n  },\n  child: const Text('I\u2019m burning the memories'),\n)<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/Opacity-class.html\">Opacity<\/a>, which can apply a uniform alpha effect to its child.<\/li>\n<li>\n<a href=\"widgets\/CustomPaint-class.html\">CustomPaint<\/a>, which lets you draw directly on the canvas.<\/li>\n<li>\n<a href=\"widgets\/DecoratedBox-class.html\">DecoratedBox<\/a>, for another approach at decorating child widgets.<\/li>\n<li>\n<a href=\"widgets\/BackdropFilter-class.html\">BackdropFilter<\/a>, which applies an image filter to the background.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "widgets\/ShaderMask-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "widgets",
    "name": "widgets.ShaderMask",
    "shortname": "ShaderMask",
    "extends": [
        "widgets.SingleChildRenderObjectWidget",
        "widgets.RenderObjectWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>Called to create the <a href=\"dart-ui\/Shader-class.html\">dart:ui.Shader<\/a> that generates the mask.<\/p>\n<p>The shader callback is called with the current size of the child so that\nit can customize the shader to the size and location of the child.<\/p>\n<p>Typically this will use a <a href=\"painting\/LinearGradient-class.html\">LinearGradient<\/a>, <a href=\"painting\/RadialGradient-class.html\">RadialGradient<\/a>, or\n<a href=\"painting\/SweepGradient-class.html\">SweepGradient<\/a> to create the <a href=\"dart-ui\/Shader-class.html\">dart:ui.Shader<\/a>, though the\n<a href=\"dart-ui\/ImageShader-class.html\">dart:ui.ImageShader<\/a> class could also be used.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ShaderCallback shaderCallback\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ShaderMask\/shaderCallback.html",
            "isDeprecated": false,
            "type": "rendering.ShaderCallback",
            "name": "shaderCallback",
            "memberOf": "widgets.ShaderMask",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a widget that applies a mask generated by a <a href=\"dart-ui\/Shader-class.html\">Shader<\/a> to its child.<\/p>\n<p>The <code>shaderCallback<\/code> and <code>blendMode<\/code> arguments must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const ShaderMask({\n  Key key,\n  @required this.shaderCallback,\n  this.blendMode = BlendMode.modulate,\n  Widget child,\n}) : assert(shaderCallback != null),\n     assert(blendMode != null),\n     super(key: key, child: child);<\/code><\/pre>\n    ",
            "href": "widgets\/ShaderMask\/ShaderMask.html",
            "isDeprecated": false,
            "type": "",
            "name": "ShaderMask",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.ShaderMask",
            "params": [
                {
                    "name": "blendMode",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.BlendMode"
                },
                {
                    "name": "child",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "key",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "shaderCallback",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "rendering.ShaderCallback"
                }
            ]
        },
        {
            "desc": "<p>Creates an instance of the <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> class that this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> represents, using the configuration described by this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a>.<\/p>\n<p>This method should not do anything with the children of the render object.\nThat should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/mount.html\">RenderObjectElement.mount<\/a> in the object rendered by this object's\n<a href=\"widgets\/SingleChildRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/mount.html\">SingleChildRenderObjectElement.mount<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nRenderShaderMask createRenderObject(BuildContext context) {\n  return RenderShaderMask(\n    shaderCallback: shaderCallback,\n    blendMode: blendMode,\n  );\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ShaderMask\/createRenderObject.html",
            "isDeprecated": false,
            "type": "rendering.RenderShaderMask",
            "name": "createRenderObject",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ShaderMask",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>Copies the configuration described by this <a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> to the\ngiven <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a>, which will be of the same type as returned by this\nobject's <a href=\"widgets\/ShaderMask\/createRenderObject.html\">createRenderObject<\/a>.<\/p>\n<p>This method should not do anything to update the children of the render\nobject. That should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/update.html\">RenderObjectElement.update<\/a> in the object rendered by this object's\n<a href=\"widgets\/SingleChildRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/update.html\">SingleChildRenderObjectElement.update<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid updateRenderObject(BuildContext context, RenderShaderMask renderObject) {\n  renderObject\n    ..shaderCallback = shaderCallback\n    ..blendMode = blendMode;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ShaderMask\/updateRenderObject.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "updateRenderObject",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ShaderMask",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "renderObject",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "rendering.RenderShaderMask"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The <a href=\"dart-ui\/BlendMode-class.html\">BlendMode<\/a> to use when applying the shader to the child.<\/p>\n<p>The default, <a href=\"dart-ui\/BlendMode-class.html\">BlendMode.modulate<\/a>, is useful for applying an alpha blend\nto the child. Other blend modes can be used to create other effects.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final BlendMode blendMode\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ShaderMask\/blendMode.html",
            "name": "blendMode",
            "isDeprecated": false,
            "type": "dart:ui.BlendMode",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "widgets.ShaderMask",
            "params": []
        }
    ]
}