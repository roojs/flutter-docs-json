{
    "name": "rendering.RenderSliverBoxChildManager",
    "extends": [],
    "memberOf": "rendering",
    "events": [],
    "methods": [
        {
            "name": "RenderSliverBoxChildManager",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "rendering.RenderSliverBoxChildManager",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "rendering\/RenderSliverBoxChildManager\/RenderSliverBoxChildManager.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "createChild",
            "type": "",
            "desc": "<p>Called during layout when a new child is needed. The child should be\ninserted into the child list in the appropriate position, after the\n<code>after<\/code> child (at the start of the list if <code>after<\/code> is null). Its index and\nscroll offsets will automatically be set appropriately.<\/p>\n<p>The <code>index<\/code> argument gives the index of the child to show. It is possible\nfor negative indices to be requested. For example: if the user scrolls\nfrom child 0 to child 10, and then those children get much smaller, and\nthen the user scrolls back up again, this method will eventually be asked\nto produce a child for index -1.<\/p>\n<p>If no child corresponds to <code>index<\/code>, then do nothing.<\/p>\n<p>Which child is indicated by index zero depends on the <a href=\"rendering\/GrowthDirection-class.html\">GrowthDirection<\/a>\nspecified in the <a href=\"rendering\/RenderSliver\/constraints.html\">RenderSliverMultiBoxAdaptor.constraints<\/a>. For example\nif the children are the alphabet, then if\n<a href=\"rendering\/SliverConstraints\/growthDirection.html\">SliverConstraints.growthDirection<\/a> is <a href=\"rendering\/GrowthDirection-class.html\">GrowthDirection.forward<\/a> then\nindex zero is A, and index 25 is Z. On the other hand if\n<a href=\"rendering\/SliverConstraints\/growthDirection.html\">SliverConstraints.growthDirection<\/a> is <a href=\"rendering\/GrowthDirection-class.html\">GrowthDirection.reverse<\/a>\nthen index zero is Z, and index 25 is A.<\/p>\n<p>During a call to <a href=\"rendering\/RenderSliverBoxChildManager\/createChild.html\">createChild<\/a> it is valid to remove other children from\nthe <a href=\"rendering\/RenderSliverMultiBoxAdaptor-class.html\">RenderSliverMultiBoxAdaptor<\/a> object if they were not created during\nthis frame and have not yet been updated during this frame. It is not\nvalid to add any other children to this render object.<\/p>\n<p>If this method does not create a child for a given <code>index<\/code> greater than or\nequal to zero, then <code>computeMaxScrollOffset<\/code> must be able to return a\nprecise value.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RenderSliverBoxChildManager",
            "sig": "",
            "params": [
                {
                    "name": "index",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "after",
                    "type": "rendering.RenderBox",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "rendering\/RenderSliverBoxChildManager\/createChild.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void createChild(int index, { @required RenderBox after });<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "debugAssertChildListLocked",
            "type": "dart:core.bool",
            "desc": "<p>In debug mode, asserts that this manager is not expecting any\nmodifications to the <a href=\"rendering\/RenderSliverMultiBoxAdaptor-class.html\">RenderSliverMultiBoxAdaptor<\/a>'s child list.<\/p>\n<p>This function always returns true.<\/p>\n<p>The manager is not required to track whether it is expecting modifications\nto the <a href=\"rendering\/RenderSliverMultiBoxAdaptor-class.html\">RenderSliverMultiBoxAdaptor<\/a>'s child list and can simply return\ntrue without making any assertions.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RenderSliverBoxChildManager",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "rendering\/RenderSliverBoxChildManager\/debugAssertChildListLocked.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool debugAssertChildListLocked() =&gt; true;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "didAdoptChild",
            "type": "",
            "desc": "<p>Called during <a href=\"rendering\/RenderSliverMultiBoxAdaptor\/adoptChild.html\">RenderSliverMultiBoxAdaptor.adoptChild<\/a>.<\/p>\n<p>Subclasses must ensure that the <a href=\"rendering\/SliverMultiBoxAdaptorParentData\/index.html\">SliverMultiBoxAdaptorParentData.index<\/a>\nfield of the child's <a href=\"rendering\/RenderObject\/parentData.html\">RenderObject.parentData<\/a> accurately reflects the\nchild's index in the child list after this function returns.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RenderSliverBoxChildManager",
            "sig": "",
            "params": [
                {
                    "name": "child",
                    "type": "rendering.RenderBox",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "rendering\/RenderSliverBoxChildManager\/didAdoptChild.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void didAdoptChild(RenderBox child);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "didFinishLayout",
            "type": "",
            "desc": "<p>Called at the end of layout to indicate that layout is now complete.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RenderSliverBoxChildManager",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "rendering\/RenderSliverBoxChildManager\/didFinishLayout.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void didFinishLayout() { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "didStartLayout",
            "type": "",
            "desc": "<p>Called at the beginning of layout to indicate that layout is about to\noccur.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RenderSliverBoxChildManager",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "rendering\/RenderSliverBoxChildManager\/didStartLayout.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void didStartLayout() { }<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "estimateMaxScrollOffset",
            "type": "dart:core.double",
            "desc": "<p>Called to estimate the total scrollable extents of this object.<\/p>\n<p>Must return the total distance from the start of the child with the\nearliest possible index to the end of the child with the last possible\nindex.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RenderSliverBoxChildManager",
            "sig": "",
            "params": [
                {
                    "name": "constraints",
                    "type": "rendering.SliverConstraints",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "firstIndex",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "lastIndex",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "leadingScrollOffset",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "trailingScrollOffset",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "rendering\/RenderSliverBoxChildManager\/estimateMaxScrollOffset.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double estimateMaxScrollOffset(\n  SliverConstraints constraints, {\n  int firstIndex,\n  int lastIndex,\n  double leadingScrollOffset,\n  double trailingScrollOffset,\n});<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "removeChild",
            "type": "",
            "desc": "<p>Remove the given child from the child list.<\/p>\n<p>Called by <a href=\"rendering\/RenderSliverMultiBoxAdaptor\/collectGarbage.html\">RenderSliverMultiBoxAdaptor.collectGarbage<\/a>, which itself is\ncalled from <a href=\"rendering\/RenderObject\/performLayout.html\">RenderSliverMultiBoxAdaptor.performLayout<\/a>.<\/p>\n<p>The index of the given child can be obtained using the\n<a href=\"rendering\/RenderSliverMultiBoxAdaptor\/indexOf.html\">RenderSliverMultiBoxAdaptor.indexOf<\/a> method, which reads it from the\n<a href=\"rendering\/SliverMultiBoxAdaptorParentData\/index.html\">SliverMultiBoxAdaptorParentData.index<\/a> field of the child's\n<a href=\"rendering\/RenderObject\/parentData.html\">RenderObject.parentData<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RenderSliverBoxChildManager",
            "sig": "",
            "params": [
                {
                    "name": "child",
                    "type": "rendering.RenderBox",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "rendering\/RenderSliverBoxChildManager\/removeChild.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void removeChild(RenderBox child);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "setDidUnderflow",
            "type": "",
            "desc": "<p>Called during layout to indicate whether this object provided insufficient\nchildren for the <a href=\"rendering\/RenderSliverMultiBoxAdaptor-class.html\">RenderSliverMultiBoxAdaptor<\/a> to fill the\n<a href=\"rendering\/SliverConstraints\/remainingPaintExtent.html\">SliverConstraints.remainingPaintExtent<\/a>.<\/p>\n<p>Typically called unconditionally at the start of layout with false and\nthen later called with true when the <a href=\"rendering\/RenderSliverMultiBoxAdaptor-class.html\">RenderSliverMultiBoxAdaptor<\/a>\nfails to create a child required to fill the\n<a href=\"rendering\/SliverConstraints\/remainingPaintExtent.html\">SliverConstraints.remainingPaintExtent<\/a>.<\/p>\n<p>Useful for subclasses to determine whether newly added children could\naffect the visible contents of the <a href=\"rendering\/RenderSliverMultiBoxAdaptor-class.html\">RenderSliverMultiBoxAdaptor<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.RenderSliverBoxChildManager",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "rendering\/RenderSliverBoxChildManager\/setDidUnderflow.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setDidUnderflow(bool value);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "childCount",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>Called to obtain a precise measure of the total number of children.<\/p>\n<p>Must return the number that is one greater than the greatest <code>index<\/code> for\nwhich <code>createChild<\/code> will actually create a child.<\/p>\n<p>This is used when <a href=\"rendering\/RenderSliverBoxChildManager\/createChild.html\">createChild<\/a> cannot add a child for a positive <code>index<\/code>,\nto determine the precise dimensions of the sliver. It must return an\naccurate and precise non-null value. It will not be called if\n<a href=\"rendering\/RenderSliverBoxChildManager\/createChild.html\">createChild<\/a> is always able to create a child (e.g. for an infinite\nlist).<\/p>\n        ",
            "memberOf": "rendering.RenderSliverBoxChildManager",
            "isConstant": false,
            "href": "rendering\/RenderSliverBoxChildManager\/childCount.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get childCount;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "rendering\/RenderSliverBoxChildManager-class.html",
    "desc": "<p>A delegate used by <a href=\"rendering\/RenderSliverMultiBoxAdaptor-class.html\">RenderSliverMultiBoxAdaptor<\/a> to manage its children.<\/p>\n<p><a href=\"rendering\/RenderSliverMultiBoxAdaptor-class.html\">RenderSliverMultiBoxAdaptor<\/a> objects reify their children lazily to avoid\nspending resources on children that are not visible in the viewport. This\ndelegate lets these objects create and remove children as well as estimate\nthe total scroll offset extent occupied by the full child list.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "RenderSliverBoxChildManager"
}