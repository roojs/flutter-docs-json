{
    "desc": "<p>A sliver widget implementing the iOS-style pull to refresh content control.<\/p>\n<p>When inserted as the first sliver in a scroll view or behind other slivers\nthat still lets the scrollable overscroll in front of this sliver (such as\nthe <a href=\"cupertino\/CupertinoSliverNavigationBar-class.html\">CupertinoSliverNavigationBar<\/a>, this widget will:<\/p>\n<ul>\n<li>Let the user draw inside the overscrolled area via the passed in <a href=\"cupertino\/CupertinoSliverRefreshControl\/builder.html\">builder<\/a>.<\/li>\n<li>Trigger the provided <a href=\"cupertino\/CupertinoSliverRefreshControl\/onRefresh.html\">onRefresh<\/a> function when overscrolled far enough to\npass <a href=\"cupertino\/CupertinoSliverRefreshControl\/refreshTriggerPullDistance.html\">refreshTriggerPullDistance<\/a>.<\/li>\n<li>Continue to hold <a href=\"cupertino\/CupertinoSliverRefreshControl\/refreshIndicatorExtent.html\">refreshIndicatorExtent<\/a> amount of space for the <a href=\"cupertino\/CupertinoSliverRefreshControl\/builder.html\">builder<\/a>\nto keep drawing inside of as the <a href=\"dart-async\/Future-class.html\">Future<\/a> returned by <a href=\"cupertino\/CupertinoSliverRefreshControl\/onRefresh.html\">onRefresh<\/a> processes.<\/li>\n<li>Scroll away once the <a href=\"cupertino\/CupertinoSliverRefreshControl\/onRefresh.html\">onRefresh<\/a> <a href=\"dart-async\/Future-class.html\">Future<\/a> completes.<\/li>\n<\/ul>\n<p>The <a href=\"cupertino\/CupertinoSliverRefreshControl\/builder.html\">builder<\/a> function will be informed of the current <a href=\"cupertino\/RefreshIndicatorMode-class.html\">RefreshIndicatorMode<\/a>\nwhen invoking it, except in the <a href=\"cupertino\/RefreshIndicatorMode-class.html\">RefreshIndicatorMode.inactive<\/a> state when\nno space is available and nothing needs to be built. The <a href=\"cupertino\/CupertinoSliverRefreshControl\/builder.html\">builder<\/a> function\nwill otherwise be continuously invoked as the amount of space available\nchanges from overscroll, as the sliver scrolls away after the <a href=\"cupertino\/CupertinoSliverRefreshControl\/onRefresh.html\">onRefresh<\/a>\ntask is done, etc.<\/p>\n<p>Only one refresh can be triggered until the previous refresh has completed\nand the indicator sliver has retracted at least 90% of the way back.<\/p>\n<p>Can only be used in downward-scrolling vertical lists that overscrolls. In\nother words, refreshes can't be triggered with lists using\n<a href=\"widgets\/ClampingScrollPhysics-class.html\">ClampingScrollPhysics<\/a>.<\/p>\n<p>In a typical application, this sliver should be inserted between the app bar\nsliver such as <a href=\"cupertino\/CupertinoSliverNavigationBar-class.html\">CupertinoSliverNavigationBar<\/a> and your main scrollable\ncontent's sliver.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/CustomScrollView-class.html\">CustomScrollView<\/a>, a typical sliver holding scroll view this control\nshould go into.<\/li>\n<li><a href=\"https:\/\/developer.apple.com\/ios\/human-interface-guidelines\/controls\/refresh-content-controls\/\">developer.apple.com\/ios\/human-interface-guidelines\/controls\/refresh-content-controls\/<\/a><\/li>\n<li>\n<a href=\"material\/RefreshIndicator-class.html\">RefreshIndicator<\/a>, a Material Design version of the pull-to-refresh\nparadigm. This widget works differently than <a href=\"material\/RefreshIndicator-class.html\">RefreshIndicator<\/a> because\ninstead of being an overlay on top of the scrollable, the\n<a href=\"cupertino\/CupertinoSliverRefreshControl-class.html\">CupertinoSliverRefreshControl<\/a> is part of the scrollable and actively occupies\nscrollable space.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "cupertino\/CupertinoSliverRefreshControl-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "cupertino",
    "name": "cupertino.CupertinoSliverRefreshControl",
    "shortname": "CupertinoSliverRefreshControl",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>A builder that's called as this sliver's size changes, and as the state\nchanges.<\/p>\n<p>A default simple Twitter-style pull-to-refresh indicator is provided if\nnot specified.<\/p>\n<p>Can be set to null, in which case nothing will be drawn in the overscrolled\nspace.<\/p>\n<p>Will not be called when the available space is zero such as before any\noverscroll.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final RefreshControlIndicatorBuilder builder\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoSliverRefreshControl\/builder.html",
            "isDeprecated": false,
            "type": "cupertino.RefreshControlIndicatorBuilder",
            "name": "builder",
            "memberOf": "cupertino.CupertinoSliverRefreshControl",
            "params": []
        },
        {
            "desc": "<p>Callback invoked when pulled by <a href=\"cupertino\/CupertinoSliverRefreshControl\/refreshTriggerPullDistance.html\">refreshTriggerPullDistance<\/a>.<\/p>\n<p>If provided, must return a <a href=\"dart-async\/Future-class.html\">Future<\/a> which will keep the indicator in the\n<a href=\"cupertino\/RefreshIndicatorMode-class.html\">RefreshIndicatorMode.refresh<\/a> state until the <a href=\"dart-async\/Future-class.html\">Future<\/a> completes.<\/p>\n<p>Can be null, in which case a single frame of <a href=\"cupertino\/RefreshIndicatorMode-class.html\">RefreshIndicatorMode.armed<\/a>\nstate will be drawn before going immediately to the <a href=\"cupertino\/RefreshIndicatorMode-class.html\">RefreshIndicatorMode.done<\/a>\nwhere the sliver will start retracting.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final RefreshCallback onRefresh\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoSliverRefreshControl\/onRefresh.html",
            "isDeprecated": false,
            "type": "cupertino.RefreshCallback",
            "name": "onRefresh",
            "memberOf": "cupertino.CupertinoSliverRefreshControl",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Create a new refresh control for inserting into a list of slivers.<\/p>\n<p>The <code>refreshTriggerPullDistance<\/code> and <code>refreshIndicatorExtent<\/code> arguments\nmust not be null and must be &gt;= 0.<\/p>\n<p>The <code>builder<\/code> argument may be null, in which case no indicator UI will be\nshown but the <code>onRefresh<\/code> will still be invoked. By default, <code>builder<\/code>\nshows a <a href=\"cupertino\/CupertinoActivityIndicator-class.html\">CupertinoActivityIndicator<\/a>.<\/p>\n<p>The <code>onRefresh<\/code> argument will be called when pulled far enough to trigger\na refresh.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const CupertinoSliverRefreshControl({\n  Key key,\n  this.refreshTriggerPullDistance = _defaultRefreshTriggerPullDistance,\n  this.refreshIndicatorExtent = _defaultRefreshIndicatorExtent,\n  this.builder = buildSimpleRefreshIndicator,\n  this.onRefresh,\n}) : assert(refreshTriggerPullDistance != null),\n     assert(refreshTriggerPullDistance &gt; 0.0),\n     assert(refreshIndicatorExtent != null),\n     assert(refreshIndicatorExtent &gt;= 0.0),\n     assert(\n       refreshTriggerPullDistance &gt;= refreshIndicatorExtent,\n       'The refresh indicator cannot take more space in its final state '\n       'than the amount initially created by overscrolling.'\n     ),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoSliverRefreshControl\/CupertinoSliverRefreshControl.html",
            "isDeprecated": false,
            "type": "",
            "name": "CupertinoSliverRefreshControl",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "cupertino.CupertinoSliverRefreshControl",
            "params": [
                {
                    "name": "builder",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "cupertino.RefreshControlIndicatorBuilder"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "onRefresh",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "cupertino.RefreshCallback"
                },
                {
                    "name": "refreshIndicatorExtent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "refreshTriggerPullDistance",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Builds a simple refresh indicator that fades in a bottom aligned down\narrow before the refresh is triggered, a <a href=\"cupertino\/CupertinoActivityIndicator-class.html\">CupertinoActivityIndicator<\/a>\nduring the refresh and fades the <a href=\"cupertino\/CupertinoActivityIndicator-class.html\">CupertinoActivityIndicator<\/a> away when\nthe refresh is done.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Widget buildSimpleRefreshIndicator(\n  BuildContext context,\n  RefreshIndicatorMode refreshState,\n  double pulledExtent,\n  double refreshTriggerPullDistance,\n  double refreshIndicatorExtent,\n) {\n  const Curve opacityCurve = Interval(0.4, 0.8, curve: Curves.easeInOut);\n  return Align(\n    alignment: Alignment.bottomCenter,\n    child: Padding(\n      padding: const EdgeInsets.only(bottom: 16.0),\n      child: refreshState == RefreshIndicatorMode.drag\n          ? Opacity(\n              opacity: opacityCurve.transform(\n                min(pulledExtent \/ refreshTriggerPullDistance, 1.0)\n              ),\n              child: const Icon(\n                CupertinoIcons.down_arrow,\n                color: CupertinoColors.inactiveGray,\n                size: 36.0,\n              ),\n            )\n          : Opacity(\n              opacity: opacityCurve.transform(\n                min(pulledExtent \/ refreshIndicatorExtent, 1.0)\n              ),\n              child: const CupertinoActivityIndicator(radius: 14.0),\n            ),\n    ),\n  );\n}<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoSliverRefreshControl\/buildSimpleRefreshIndicator.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "buildSimpleRefreshIndicator",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoSliverRefreshControl",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "pulledExtent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "refreshIndicatorExtent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "refreshState",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "cupertino.RefreshIndicatorMode"
                },
                {
                    "name": "refreshTriggerPullDistance",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"cupertino\/CupertinoSliverRefreshControl\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_CupertinoSliverRefreshControlState createState() =&gt; _CupertinoSliverRefreshControlState();<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoSliverRefreshControl\/createState.html",
            "isDeprecated": false,
            "type": "<_CupertinoSliverRefreshControlState>",
            "name": "createState",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoSliverRefreshControl",
            "params": []
        },
        {
            "desc": "<p>Retrieve the current state of the CupertinoSliverRefreshControl. The same as the\nstate that gets passed into the <a href=\"cupertino\/CupertinoSliverRefreshControl\/builder.html\">builder<\/a> function. Used for testing.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@visibleForTesting\nstatic RefreshIndicatorMode state(BuildContext context) {\n  final _CupertinoSliverRefreshControlState state\n      = context.ancestorStateOfType(const TypeMatcher&lt;_CupertinoSliverRefreshControlState&gt;());\n  return state.refreshState;\n}<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoSliverRefreshControl\/state.html",
            "isDeprecated": false,
            "type": "cupertino.RefreshIndicatorMode",
            "name": "state",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoSliverRefreshControl",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The amount of space the refresh indicator sliver will keep holding while\n<a href=\"cupertino\/CupertinoSliverRefreshControl\/onRefresh.html\">onRefresh<\/a>'s <a href=\"dart-async\/Future-class.html\">Future<\/a> is still running.<\/p>\n<p>Must not be null and must be positive, but can be 0.0, in which case the\nsliver will start retracting back to 0.0 as soon as the refresh is started.\nDefaults to 60px when not specified.<\/p>\n<p>Must be smaller than <a href=\"cupertino\/CupertinoSliverRefreshControl\/refreshTriggerPullDistance.html\">refreshTriggerPullDistance<\/a>, since the sliver\nshouldn't grow further after triggering the refresh.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double refreshIndicatorExtent\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoSliverRefreshControl\/refreshIndicatorExtent.html",
            "name": "refreshIndicatorExtent",
            "isDeprecated": false,
            "type": "dart:core.double",
            "memberOf": "cupertino.CupertinoSliverRefreshControl",
            "params": []
        },
        {
            "desc": "<p>The amount of overscroll the scrollable must be dragged to trigger a reload.<\/p>\n<p>Must not be null, must be larger than 0.0 and larger than\n<a href=\"cupertino\/CupertinoSliverRefreshControl\/refreshIndicatorExtent.html\">refreshIndicatorExtent<\/a>. Defaults to 100px when not specified.<\/p>\n<p>When overscrolled past this distance, <a href=\"cupertino\/CupertinoSliverRefreshControl\/onRefresh.html\">onRefresh<\/a> will be called if not\nnull and the <a href=\"cupertino\/CupertinoSliverRefreshControl\/builder.html\">builder<\/a> will build in the <a href=\"cupertino\/RefreshIndicatorMode-class.html\">RefreshIndicatorMode.armed<\/a> state.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double refreshTriggerPullDistance\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoSliverRefreshControl\/refreshTriggerPullDistance.html",
            "name": "refreshTriggerPullDistance",
            "isDeprecated": false,
            "type": "dart:core.double",
            "memberOf": "cupertino.CupertinoSliverRefreshControl",
            "params": []
        }
    ]
}