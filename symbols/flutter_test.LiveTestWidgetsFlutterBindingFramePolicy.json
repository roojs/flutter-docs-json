{
    "desc": "<p>Available policies for how a <a href=\"flutter_test\/LiveTestWidgetsFlutterBinding-class.html\">LiveTestWidgetsFlutterBinding<\/a> should paint\nframes.<\/p>\n<p>These values are set on the binding's\n<a href=\"flutter_test\/LiveTestWidgetsFlutterBinding\/framePolicy.html\">LiveTestWidgetsFlutterBinding.framePolicy<\/a> property. The default is\n<a href=\"flutter_test\/LiveTestWidgetsFlutterBindingFramePolicy-class.html\">fadePointers<\/a>.<\/p>\n    ",
    "dtype": "enum",
    "example": "",
    "href": "flutter_test\/LiveTestWidgetsFlutterBindingFramePolicy-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "flutter_test",
    "name": "flutter_test.LiveTestWidgetsFlutterBindingFramePolicy",
    "shortname": "LiveTestWidgetsFlutterBindingFramePolicy",
    "extends": [],
    "is_enum": true,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [],
    "props": [
        {
            "desc": "\n          <p>Ignore any request to schedule a frame.<\/p>\n<p>This is intended to be used by benchmarks (hence the name) that drive the\npipeline directly. It tells the binding to entirely ignore requests for a\nframe to be scheduled, while still allowing frames that are pumped\ndirectly to run (either by using <a href=\"flutter_test\/WidgetTester\/pumpBenchmark.html\">WidgetTester.pumpBenchmark<\/a> or invoking\n<a href=\"dart-ui\/Window\/onBeginFrame.html\">Window.onBeginFrame<\/a> and <a href=\"dart-ui\/Window\/onDrawFrame.html\">Window.onDrawFrame<\/a>).<\/p>\n<p>The <a href=\"scheduler\/SchedulerBinding\/hasScheduledFrame.html\">SchedulerBinding.hasScheduledFrame<\/a> property will never be true in\nthis mode. This can cause unexpected effects. For instance,\n<a href=\"flutter_test\/WidgetTester\/pumpAndSettle.html\">WidgetTester.pumpAndSettle<\/a> does not function in this mode, as it relies\non the <a href=\"scheduler\/SchedulerBinding\/hasScheduledFrame.html\">SchedulerBinding.hasScheduledFrame<\/a> property to determine when the\napplication has \"settled\".<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const LiveTestWidgetsFlutterBindingFramePolicy(3)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "benchmark",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "flutter_test.LiveTestWidgetsFlutterBindingFramePolicy",
            "params": []
        },
        {
            "desc": "\n          <p>Show pumped frames, and additionally schedule and run frames to fade\nout the pointer crosshairs and other debugging information shown by\nthe binding.<\/p>\n<p>This can result in additional frames being pumped beyond those that\nthe test itself requests, which can cause differences in behavior.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const LiveTestWidgetsFlutterBindingFramePolicy(1)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "fadePointers",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "flutter_test.LiveTestWidgetsFlutterBindingFramePolicy",
            "params": []
        },
        {
            "desc": "\n          <p>Show every frame that the framework requests, even if the frames are not\nexplicitly pumped.<\/p>\n<p>This can help with orienting the developer when looking at\nheavily-animated situations, and will almost certainly result in\nadditional frames being pumped beyond those that the test itself requests,\nwhich can cause differences in behavior.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const LiveTestWidgetsFlutterBindingFramePolicy(2)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "fullyLive",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "flutter_test.LiveTestWidgetsFlutterBindingFramePolicy",
            "params": []
        },
        {
            "desc": "\n          <p>Strictly show only frames that are explicitly pumped. This most closely\nmatches the behavior of tests when run under <code>flutter test<\/code>.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const LiveTestWidgetsFlutterBindingFramePolicy(0)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "onlyPumps",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "flutter_test.LiveTestWidgetsFlutterBindingFramePolicy",
            "params": []
        },
        {
            "desc": "\n          <p>A constant List of the values in this enum, in order of their declaration.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const List&lt;<wbr><span class=\"type-parameter\">LiveTestWidgetsFlutterBindingFramePolicy<\/span>&gt;<\/wbr><\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "values",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "flutter_test.LiveTestWidgetsFlutterBindingFramePolicy",
            "params": []
        }
    ]
}