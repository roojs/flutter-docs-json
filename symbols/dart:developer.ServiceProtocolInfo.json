{
    "name": "dart:developer.ServiceProtocolInfo",
    "extends": [],
    "memberOf": "dart:developer",
    "events": [],
    "methods": [
        {
            "name": "ServiceProtocolInfo",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:developer.ServiceProtocolInfo",
            "sig": "",
            "params": [
                {
                    "name": "serverUri",
                    "type": "dart:core.Uri",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-developer\/ServiceProtocolInfo\/ServiceProtocolInfo.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ServiceProtocolInfo(this.serverUri);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:developer.ServiceProtocolInfo",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-developer\/ServiceProtocolInfo\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() {\n  if (serverUri != null) {\n    return 'Dart VM Service Protocol v$majorVersion.$minorVersion '\n        'listening on $serverUri';\n  } else {\n    return 'Dart VM Service Protocol v$majorVersion.$minorVersion';\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "majorVersion",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The major version of the protocol. If the running Dart environment does\nnot support the service protocol, this is 0.<\/p>\n        ",
            "memberOf": "dart:developer.ServiceProtocolInfo",
            "isConstant": false,
            "href": "dart-developer\/ServiceProtocolInfo\/majorVersion.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int majorVersion = _getServiceMajorVersion()\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "minorVersion",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The minor version of the protocol. If the running Dart environment does\nnot support the service protocol, this is 0.<\/p>\n        ",
            "memberOf": "dart:developer.ServiceProtocolInfo",
            "isConstant": false,
            "href": "dart-developer\/ServiceProtocolInfo\/minorVersion.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int minorVersion = _getServiceMinorVersion()\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "serverUri",
            "type": "dart:core.Uri",
            "types": [],
            "desc": "<p>The Uri to access the service. If the web server is not running, this\nwill be null.<\/p>\n        ",
            "memberOf": "dart:developer.ServiceProtocolInfo",
            "isConstant": false,
            "href": "dart-developer\/ServiceProtocolInfo\/serverUri.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Uri serverUri\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-developer\/ServiceProtocolInfo-class.html",
    "desc": "<p>Service protocol is the protocol that a client like the Observatory\ncould use to access the services provided by the Dart VM for\ndebugging and inspecting Dart programs. This class encapsulates the\nversion number and Uri for accessing this service.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "ServiceProtocolInfo"
}