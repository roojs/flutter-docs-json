{
    "name": "collection.IterableEquality",
    "extends": [],
    "memberOf": "collection",
    "events": [],
    "methods": [
        {
            "name": "IterableEquality",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "collection.IterableEquality",
            "sig": "",
            "params": [
                {
                    "name": "elementEquality",
                    "type": "collection.Equality",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-collection_collection\/IterableEquality\/IterableEquality.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const IterableEquality(\n    [Equality&lt;E&gt; elementEquality = const DefaultEquality()])\n    : _elementEquality = elementEquality;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "equals",
            "type": "dart:core.bool",
            "desc": "<p>Compare two elements for being equal.<\/p>\n<p>This should be a proper equality relation.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.IterableEquality",
            "sig": "",
            "params": [
                {
                    "name": "elements1",
                    "type": "dart:core.Iterable",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "elements2",
                    "type": "dart:core.Iterable",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/IterableEquality\/equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool equals(Iterable&lt;E&gt; elements1, Iterable&lt;E&gt; elements2) {\n  if (identical(elements1, elements2)) return true;\n  if (elements1 == null || elements2 == null) return false;\n  var it1 = elements1.iterator;\n  var it2 = elements2.iterator;\n  while (true) {\n    bool hasNext = it1.moveNext();\n    if (hasNext != it2.moveNext()) return false;\n    if (!hasNext) return true;\n    if (!_elementEquality.equals(it1.current, it2.current)) return false;\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "hash",
            "type": "dart:core.int",
            "desc": "<p>Get a hashcode of an element.<\/p>\n<p>The hashcode should be compatible with <a href=\"package-collection_collection\/IterableEquality\/equals.html\">equals<\/a>, so that if\n<code>equals(a, b)<\/code> then <code>hash(a) == hash(b)<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.IterableEquality",
            "sig": "",
            "params": [
                {
                    "name": "elements",
                    "type": "dart:core.Iterable",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/IterableEquality\/hash.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">int hash(Iterable&lt;E&gt; elements) {\n  if (elements == null) return null.hashCode;\n  \/\/ Jenkins's one-at-a-time hash function.\n  int hash = 0;\n  for (E element in elements) {\n    int c = _elementEquality.hash(element);\n    hash = (hash + c) &amp; _HASH_MASK;\n    hash = (hash + (hash &lt;&lt; 10)) &amp; _HASH_MASK;\n    hash ^= (hash &gt;&gt; 6);\n  }\n  hash = (hash + (hash &lt;&lt; 3)) &amp; _HASH_MASK;\n  hash ^= (hash &gt;&gt; 11);\n  hash = (hash + (hash &lt;&lt; 15)) &amp; _HASH_MASK;\n  return hash;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "isValidKey",
            "type": "dart:core.bool",
            "desc": "<p>Test whether an object is a valid argument to <a href=\"package-collection_collection\/IterableEquality\/equals.html\">equals<\/a> and <a href=\"package-collection_collection\/IterableEquality\/hash.html\">hash<\/a>.<\/p>\n<p>Some implementations may be restricted to only work on specific types\nof objects.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.IterableEquality",
            "sig": "",
            "params": [
                {
                    "name": "o",
                    "type": "dart:core.Object",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/IterableEquality\/isValidKey.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool isValidKey(Object o) =&gt; o is Iterable&lt;E&gt;;<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "package-collection_collection\/IterableEquality-class.html",
    "desc": "<p>Equality on iterables.<\/p>\n<p>Two iterables are equal if they have the same elements in the same order.<\/p>\n<p>The <a href=\"package-collection_collection\/IterableEquality\/equals.html\">equals<\/a> and <a href=\"package-collection_collection\/IterableEquality\/hash.html\">hash<\/a> methods accepts <code>null<\/code> values,\neven if the <a href=\"package-collection_collection\/IterableEquality\/isValidKey.html\">isValidKey<\/a> returns <code>false<\/code> for <code>null<\/code>.\nThe <a href=\"package-collection_collection\/IterableEquality\/hash.html\">hash<\/a> of <code>null<\/code> is <code>null.hashCode<\/code>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "IterableEquality"
}