{
    "desc": "<p>The element at the root of the tree.<\/p>\n<p>Only root elements may have their owner set explicitly. All other\nelements inherit their owner from their parent.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "widgets\/RootRenderObjectElement-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.RootRenderObjectElement",
    "shortname": "RootRenderObjectElement",
    "extends": [
        "widgets.RenderObjectElement",
        "widgets.Element",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Initializes fields for subclasses.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RootRenderObjectElement(RenderObjectWidget widget) : super(widget);<\/code><\/pre>\n    ",
            "href": "widgets\/RootRenderObjectElement\/RootRenderObjectElement.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.RootRenderObjectElement",
            "params": [
                {
                    "name": "widget",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.RenderObjectWidget"
                }
            ]
        },
        {
            "desc": "<p>Set the owner of the element. The owner will be propagated to all the\ndescendants of this element.<\/p>\n<p>The owner manages the dirty elements list.<\/p>\n<p>The <a href=\"widgets\/WidgetsBinding-mixin.html\">WidgetsBinding<\/a> introduces the primary owner,\n<a href=\"widgets\/WidgetsBinding\/buildOwner.html\">WidgetsBinding.buildOwner<\/a>, and assigns it to the widget tree in the call\nto <a href=\"widgets\/runApp.html\">runApp<\/a>. The binding is responsible for driving the build pipeline by\ncalling the build owner's <a href=\"widgets\/BuildOwner\/buildScope.html\">BuildOwner.buildScope<\/a> method. See\n<a href=\"widgets\/WidgetsBinding\/drawFrame.html\">WidgetsBinding.drawFrame<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void assignOwner(BuildOwner owner) {\n  _owner = owner;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/RootRenderObjectElement\/assignOwner.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.RootRenderObjectElement",
            "params": [
                {
                    "name": "owner",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildOwner"
                }
            ]
        },
        {
            "desc": "<p>Add this element to the tree in the given slot of the given parent.<\/p>\n<p>The framework calls this function when a newly created element is added to\nthe tree for the first time. Use this method to initialize state that\ndepends on having a parent. State that is independent of the parent can\nmore easily be initialized in the constructor.<\/p>\n<p>This method transitions the element from the \"initial\" lifecycle state to\nthe \"active\" lifecycle state.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid mount(Element parent, dynamic newSlot) {\n  \/\/ Root elements should never have parents.\n  assert(parent == null);\n  assert(newSlot == null);\n  super.mount(parent, newSlot);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/RootRenderObjectElement\/mount.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.RootRenderObjectElement",
            "params": [
                {
                    "name": "newSlot",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<dynamic>"
                },
                {
                    "name": "parent",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.Element"
                }
            ]
        }
    ],
    "props": []
}