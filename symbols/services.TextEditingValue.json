{
    "name": "services.TextEditingValue",
    "extends": [],
    "memberOf": "services",
    "events": [],
    "methods": [
        {
            "name": "operator ==",
            "type": "dart:core.bool",
            "desc": "<p>The equality operator.<\/p>\n<p>The default behavior for all <a href=\"dart-core\/Object-class.html\">Object<\/a>s is to return true if and\nonly if <code>this<\/code> and <code>other<\/code> are the same object.<\/p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:<\/p>\n<ul>\n<li>\n<p>Total: It must return a boolean for all arguments. It should never throw\nor return <code>null<\/code>.<\/p>\n<\/li>\n<li>\n<p>Reflexive: For all objects <code>o<\/code>, <code>o == o<\/code> must be true.<\/p>\n<\/li>\n<li>\n<p>Symmetric: For all objects <code>o1<\/code> and <code>o2<\/code>, <code>o1 == o2<\/code> and <code>o2 == o1<\/code> must\neither both be true, or both be false.<\/p>\n<\/li>\n<li>\n<p>Transitive: For all objects <code>o1<\/code>, <code>o2<\/code>, and <code>o3<\/code>, if <code>o1 == o2<\/code> and\n<code>o2 == o3<\/code> are true, then <code>o1 == o3<\/code> must be true.<\/p>\n<\/li>\n<\/ul>\n<p>The method should also be consistent over time,\nso whether two objects are equal should only change\nif at least one of the objects was modified.<\/p>\n<p>If a subclass overrides the equality operator it should override\nthe <a href=\"services\/TextEditingValue\/hashCode.html\">hashCode<\/a> method as well to maintain consistency.<\/p>\n    ",
            "static": false,
            "memberOf": "services.TextEditingValue",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "services\/TextEditingValue\/operator_equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool operator ==(dynamic other) {\n  if (identical(this, other))\n    return true;\n  if (other is! TextEditingValue)\n    return false;\n  final TextEditingValue typedOther = other;\n  return typedOther.text == text\n      &amp;&amp; typedOther.selection == selection\n      &amp;&amp; typedOther.composing == composing;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "TextEditingValue",
            "type": "",
            "desc": "<p>Creates information for editing a run of text.<\/p>\n<p>The selection and composing range must be within the text.<\/p>\n<p>The <code>text<\/code>, <code>selection<\/code>, and <code>composing<\/code> arguments must not be null but\neach have default values.<\/p>\n    ",
            "static": false,
            "memberOf": "services.TextEditingValue",
            "sig": "",
            "params": [
                {
                    "name": "text",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "selection",
                    "type": "services.TextSelection",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "composing",
                    "type": "services.TextRange",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "services\/TextEditingValue\/TextEditingValue.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const TextEditingValue({\n  this.text = '',\n  this.selection = const TextSelection.collapsed(offset: -1),\n  this.composing = TextRange.empty,\n}) : assert(text != null),\n     assert(selection != null),\n     assert(composing != null);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "copyWith",
            "type": "services.TextEditingValue",
            "desc": "<p>Creates a copy of this value but with the given fields replaced with the new values.<\/p>\n    ",
            "static": false,
            "memberOf": "services.TextEditingValue",
            "sig": "",
            "params": [
                {
                    "name": "text",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "selection",
                    "type": "services.TextSelection",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "composing",
                    "type": "services.TextRange",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "services\/TextEditingValue\/copyWith.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">TextEditingValue copyWith({\n  String text,\n  TextSelection selection,\n  TextRange composing,\n}) {\n  return TextEditingValue(\n    text: text ?? this.text,\n    selection: selection ?? this.selection,\n    composing: composing ?? this.composing,\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "TextEditingValue.fromJSON",
            "type": "",
            "desc": "<p>Creates an instance of this class from a JSON object.<\/p>\n    ",
            "static": false,
            "memberOf": "services.TextEditingValue",
            "sig": "",
            "params": [
                {
                    "name": "encoded",
                    "type": "dart:core.Map<dart:core.String>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.Map",
                        "dart:core.String"
                    ]
                }
            ],
            "isConstructor": true,
            "href": "services\/TextEditingValue\/TextEditingValue.fromJSON.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory TextEditingValue.fromJSON(Map&lt;String, dynamic&gt; encoded) {\n  return TextEditingValue(\n    text: encoded['text'],\n    selection: TextSelection(\n      baseOffset: encoded['selectionBase'] ?? -1,\n      extentOffset: encoded['selectionExtent'] ?? -1,\n      affinity: _toTextAffinity(encoded['selectionAffinity']) ?? TextAffinity.downstream,\n      isDirectional: encoded['selectionIsDirectional'] ?? false,\n    ),\n    composing: TextRange(\n      start: encoded['composingBase'] ?? -1,\n      end: encoded['composingExtent'] ?? -1,\n    ),\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toJSON",
            "type": "dart:core.Map<dart:core.String>",
            "desc": "<p>Returns a representation of this object as a JSON object.<\/p>\n    ",
            "static": false,
            "memberOf": "services.TextEditingValue",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "services\/TextEditingValue\/toJSON.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Map&lt;String, dynamic&gt; toJSON() {\n  return &lt;String, dynamic&gt;{\n    'text': text,\n    'selectionBase': selection.baseOffset,\n    'selectionExtent': selection.extentOffset,\n    'selectionAffinity': selection.affinity.toString(),\n    'selectionIsDirectional': selection.isDirectional,\n    'composingBase': composing.start,\n    'composingExtent': composing.end,\n  };\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "dart:core.Map",
                "dart:core.String"
            ]
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "services.TextEditingValue",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "services\/TextEditingValue\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; '$runtimeType(text: \\u2524$text\\u251C, selection: $selection, composing: $composing)';<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "composing",
            "type": "services.TextRange",
            "types": [],
            "desc": "<p>The range of text that is still being composed.<\/p>\n        ",
            "memberOf": "services.TextEditingValue",
            "isConstant": false,
            "href": "services\/TextEditingValue\/composing.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextRange composing\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "type": "",
            "href": "services\/TextEditingValue\/empty-constant.html",
            "desc": "<p>A value that corresponds to the empty string with no selection and no composing range.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const TextEditingValue empty = TextEditingValue()\n\n<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "name": "empty",
            "memberOf": "services.TextEditingValue"
        },
        {
            "name": "hashCode",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"services\/TextEditingValue\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"services\/TextEditingValue\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"services\/TextEditingValue\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"services\/TextEditingValue\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"services\/TextEditingValue\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"services\/TextEditingValue\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "memberOf": "services.TextEditingValue",
            "isConstant": false,
            "href": "services\/TextEditingValue\/hashCode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get hashCode =&gt; hashValues(\n  text.hashCode,\n  selection.hashCode,\n  composing.hashCode,\n);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "selection",
            "type": "services.TextSelection",
            "types": [],
            "desc": "<p>The range of text that is currently selected.<\/p>\n        ",
            "memberOf": "services.TextEditingValue",
            "isConstant": false,
            "href": "services\/TextEditingValue\/selection.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextSelection selection\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "text",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The current text being edited.<\/p>\n        ",
            "memberOf": "services.TextEditingValue",
            "isConstant": false,
            "href": "services\/TextEditingValue\/text.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String text\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [
        "widgets.TextEditingController"
    ],
    "realImplementors": [
        "widgets.TextEditingController"
    ],
    "cn": [],
    "href": "services\/TextEditingValue-class.html",
    "desc": "<p>The current text, selection, and composing state for editing a run of text.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "TextEditingValue"
}