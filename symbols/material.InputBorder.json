{
    "desc": "<p>Defines the appearance of an <a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a>'s border.<\/p>\n<p>An input decorator's border is specified by <a href=\"material\/InputDecoration\/border.html\">InputDecoration.border<\/a>.<\/p>\n<p>The border is drawn relative to the input decorator's \"container\" which\nis the optionally filled area above the decorator's helper, error,\nand counter.<\/p>\n<p>Input border's are decorated with a line whose weight and color are defined\nby <a href=\"material\/InputBorder\/borderSide.html\">borderSide<\/a>. The input decorator's renderer animates the input border's\nappearance in response to state changes, like gaining or losing the focus,\nby creating new copies of its input border with <a href=\"material\/InputBorder\/copyWith.html\">copyWith<\/a>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/UnderlineInputBorder-class.html\">UnderlineInputBorder<\/a>, the default <a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a> border which\ndraws a horizontal line at the bottom of the input decorator's container.<\/li>\n<li>\n<a href=\"material\/OutlineInputBorder-class.html\">OutlineInputBorder<\/a>, an <a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a> border which draws a\nrounded rectangle around the input decorator's container.<\/li>\n<li>\n<a href=\"material\/InputDecoration-class.html\">InputDecoration<\/a>, which is used to configure an <a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a>.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/InputBorder-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.InputBorder",
    "shortname": "InputBorder",
    "extends": [
        "painting.ShapeBorder",
        "dart:core.Object"
    ],
    "realImplementors": [
        "material.OutlineInputBorder",
        "material.UnderlineInputBorder"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a border for an <a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a>.<\/p>\n<p>The <code>borderSide<\/code> parameter must not be null. Applications typically do\nnot specify a <code>borderSide<\/code> parameter because the input decorator\nsubstitutes its own, using <a href=\"material\/InputBorder\/copyWith.html\">copyWith<\/a>, based on the current theme and\n<a href=\"material\/InputDecorator\/isFocused.html\">InputDecorator.isFocused<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const InputBorder({\n  this.borderSide = BorderSide.none,\n}) : assert(borderSide != null);<\/code><\/pre>\n    ",
            "href": "material\/InputBorder\/InputBorder.html",
            "isDeprecated": false,
            "type": "",
            "name": "InputBorder",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.InputBorder",
            "params": [
                {
                    "name": "borderSide",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "painting.BorderSide"
                }
            ]
        },
        {
            "desc": "<p>Creates a copy of this input border with the specified <code>borderSide<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">InputBorder copyWith({ BorderSide borderSide });<\/code><\/pre>\n    ",
            "href": "material\/InputBorder\/copyWith.html",
            "isDeprecated": false,
            "type": "material.InputBorder",
            "name": "copyWith",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.InputBorder",
            "params": [
                {
                    "name": "borderSide",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "painting.BorderSide"
                }
            ]
        },
        {
            "desc": "<p>Paint this input border on <code>canvas<\/code>.<\/p>\n<p>The <code>rect<\/code> parameter bounds the <a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a>'s container.<\/p>\n<p>The additional <code>gap<\/code> parameters reflect the state of the <a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a>'s\nfloating label. When an input decorator gains the focus, its label\nanimates upwards, to make room for the input child. The <code>gapStart<\/code> and\n<code>gapExtent<\/code> parameters define a floating label width interval, and\n<code>gapPercentage<\/code> defines the animation's progress (0.0 to 1.0).<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid paint(\n  Canvas canvas,\n  Rect rect, {\n  double gapStart,\n  double gapExtent = 0.0,\n  double gapPercentage = 0.0,\n  TextDirection textDirection,\n});<\/code><\/pre>\n    ",
            "href": "material\/InputBorder\/paint.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "paint",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.InputBorder",
            "params": [
                {
                    "name": "canvas",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.Canvas"
                },
                {
                    "name": "gapExtent",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "gapPercentage",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "gapStart",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "rect",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.Rect"
                },
                {
                    "name": "textDirection",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.TextDirection"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Defines the border line's color and weight.<\/p>\n<p>The <a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a> creates copies of its input border, using <a href=\"material\/InputBorder\/copyWith.html\">copyWith<\/a>,\nbased on the current theme and <a href=\"material\/InputDecorator\/isFocused.html\">InputDecorator.isFocused<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final BorderSide borderSide\n\n<\/code><\/pre>\n        ",
            "href": "material\/InputBorder\/borderSide.html",
            "name": "borderSide",
            "isDeprecated": false,
            "type": "painting.BorderSide",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.InputBorder",
            "params": []
        },
        {
            "desc": "<p>True if this border will enclose the <a href=\"material\/InputDecorator-class.html\">InputDecorator<\/a>'s container.<\/p>\n<p>This property affects the alignment of container's contents. For example\nwhen an input decorator is configured with an <a href=\"material\/OutlineInputBorder-class.html\">OutlineInputBorder<\/a> its\nlabel is centered with its container.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isOutline;<\/code><\/pre>\n        ",
            "href": "material\/InputBorder\/isOutline.html",
            "name": "isOutline",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.InputBorder",
            "params": []
        },
        {
            "desc": "<p>No input border.<\/p>\n<p>Use this value with <a href=\"material\/InputDecoration\/border.html\">InputDecoration.border<\/a> to specify that no border\nshould be drawn. The <code>InputDecoration.shrinkWrap<\/code> constructor sets\nits border to this value.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const InputBorder none = _NoInputBorder()\n\n<\/code><\/pre>\n    ",
            "href": "material\/InputBorder\/none-constant.html",
            "name": "none",
            "isDeprecated": false,
            "type": "material.InputBorder",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "material.InputBorder",
            "params": []
        }
    ]
}