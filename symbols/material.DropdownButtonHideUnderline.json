{
    "desc": "<p>An inherited widget that causes any descendant <a href=\"material\/DropdownButton-class.html\">DropdownButton<\/a>\nwidgets to not include their regular underline.<\/p>\n<p>This is used by <a href=\"material\/DataTable-class.html\">DataTable<\/a> to remove the underline from any\n<a href=\"material\/DropdownButton-class.html\">DropdownButton<\/a> widgets placed within material data tables, as\nrequired by the material design specification.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "material\/DropdownButtonHideUnderline-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.DropdownButtonHideUnderline",
    "shortname": "DropdownButtonHideUnderline",
    "extends": [
        "widgets.InheritedWidget",
        "widgets.ProxyWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a <a href=\"material\/DropdownButtonHideUnderline-class.html\">DropdownButtonHideUnderline<\/a>. A non-null <code>child<\/code> must\nbe given.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const DropdownButtonHideUnderline({\n  Key key,\n  @required Widget child,\n}) : assert(child != null),\n     super(key: key, child: child);<\/code><\/pre>\n    ",
            "href": "material\/DropdownButtonHideUnderline\/DropdownButtonHideUnderline.html",
            "isDeprecated": false,
            "type": "",
            "name": "DropdownButtonHideUnderline",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.DropdownButtonHideUnderline",
            "params": [
                {
                    "name": "child",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "key",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                }
            ]
        },
        {
            "desc": "<p>Returns whether the underline of <a href=\"material\/DropdownButton-class.html\">DropdownButton<\/a> widgets should\nbe hidden.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static bool at(BuildContext context) {\n  return context.inheritFromWidgetOfExactType(DropdownButtonHideUnderline) != null;\n}<\/code><\/pre>\n    ",
            "href": "material\/DropdownButtonHideUnderline\/at.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "at",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.DropdownButtonHideUnderline",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>Whether the framework should notify widgets that inherit from this widget.<\/p>\n<p>When this widget is rebuilt, sometimes we need to rebuild the widgets that\ninherit from this widget but sometimes we do not. For example, if the data\nheld by this widget is the same as the data held by <code>oldWidget<\/code>, then we\ndo not need to rebuild the widgets that inherited the data held by\n<code>oldWidget<\/code>.<\/p>\n<p>The framework distinguishes these cases by calling this function with the\nwidget that previously occupied this location in the tree as an argument.\nThe given widget is guaranteed to have the same <a href=\"dart-core\/Object\/runtimeType.html\">runtimeType<\/a> as this\nobject.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool updateShouldNotify(DropdownButtonHideUnderline oldWidget) =&gt; false;<\/code><\/pre>\n    ",
            "href": "material\/DropdownButtonHideUnderline\/updateShouldNotify.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "updateShouldNotify",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.DropdownButtonHideUnderline",
            "params": [
                {
                    "name": "oldWidget",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "material.DropdownButtonHideUnderline"
                }
            ]
        }
    ],
    "props": []
}