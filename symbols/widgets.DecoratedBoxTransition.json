{
    "desc": "<p>Animated version of a <a href=\"widgets\/DecoratedBox-class.html\">DecoratedBox<\/a> that animates the different properties\nof its <a href=\"painting\/Decoration-class.html\">Decoration<\/a>.<\/p>\n<p>Here's an illustration of the <a href=\"widgets\/DecoratedBoxTransition-class.html\">DecoratedBoxTransition<\/a> widget, with it's\n<a href=\"widgets\/DecoratedBoxTransition\/decoration.html\">decoration<\/a> animated by a <a href=\"animation\/CurvedAnimation-class.html\">CurvedAnimation<\/a> set to <a href=\"animation\/Curves\/decelerate-constant.html\">Curves.decelerate<\/a>:<\/p>\n<div style=\"position: relative;\">\n  <div id=\"animation_1_play_button_\" onclick=\"if (animation_1.paused) {\n                  animation_1.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_1.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:300px;\n              height:378px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_1\" style=\"width:300px; height:378px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_1_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_1_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/widgets\/decorated_box_transition.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/DecoratedBox-class.html\">DecoratedBox<\/a>, which also draws a <a href=\"painting\/Decoration-class.html\">Decoration<\/a> but is not animated.<\/li>\n<li>\n<a href=\"widgets\/AnimatedContainer-class.html\">AnimatedContainer<\/a>, a more full-featured container that also animates on\ndecoration using an internal animation.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "widgets\/DecoratedBoxTransition-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.DecoratedBoxTransition",
    "shortname": "DecoratedBoxTransition",
    "extends": [
        "widgets.AnimatedWidget",
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates an animated <a href=\"widgets\/DecoratedBox-class.html\">DecoratedBox<\/a> whose <a href=\"painting\/Decoration-class.html\">Decoration<\/a> animation updates\nthe widget.<\/p>\n<p>The <code>decoration<\/code> and <code>position<\/code> must not be null.<\/p>\n<p>See also:<\/p>\n<ul><li><a href=\"widgets\/DecoratedBox\/DecoratedBox.html\">new DecoratedBox<\/a><\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const DecoratedBoxTransition({\n  Key key,\n  @required this.decoration,\n  this.position = DecorationPosition.background,\n  @required this.child,\n}) : assert(decoration != null),\n     assert(child != null),\n     super(key: key, listenable: decoration);<\/code><\/pre>\n    ",
            "href": "widgets\/DecoratedBoxTransition\/DecoratedBoxTransition.html",
            "isDeprecated": false,
            "type": "",
            "name": "DecoratedBoxTransition",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.DecoratedBoxTransition",
            "params": [
                {
                    "name": "child",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "decoration",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "animation.Animation<painting.Decoration>"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "position",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "rendering.DecorationPosition"
                }
            ]
        },
        {
            "desc": "<p>Override this method to build widgets that depend on the state of the\nlistenable (e.g., the current value of the animation).<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  return DecoratedBox(\n    decoration: decoration.value,\n    position: position,\n    child: child,\n  );\n}<\/code><\/pre>\n    ",
            "href": "widgets\/DecoratedBoxTransition\/build.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "build",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.DecoratedBoxTransition",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The widget below this widget in the tree.<\/p>\n<p>This widget can only have one child. To lay out multiple children, let this\nwidget's child be a widget such as <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Stack-class.html\">Stack<\/a>, which have a\n<code>children<\/code> property, and then provide the children to that widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/DecoratedBoxTransition\/child.html",
            "name": "child",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "memberOf": "widgets.DecoratedBoxTransition",
            "params": []
        },
        {
            "desc": "<p>Animation of the decoration to paint.<\/p>\n<p>Can be created using a <a href=\"widgets\/DecorationTween-class.html\">DecorationTween<\/a> interpolating typically between\ntwo <a href=\"painting\/BoxDecoration-class.html\">BoxDecoration<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Animation&lt;Decoration&gt; decoration\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/DecoratedBoxTransition\/decoration.html",
            "name": "decoration",
            "isDeprecated": false,
            "type": "animation.Animation<painting.Decoration>",
            "memberOf": "widgets.DecoratedBoxTransition",
            "params": []
        },
        {
            "desc": "<p>Whether to paint the box decoration behind or in front of the child.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final DecorationPosition position\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/DecoratedBoxTransition\/position.html",
            "name": "position",
            "isDeprecated": false,
            "type": "rendering.DecorationPosition",
            "memberOf": "widgets.DecoratedBoxTransition",
            "params": []
        }
    ]
}