{
    "desc": "<p>An action the user has requested the text input control to perform.<\/p>\n<p>Each action represents a logical meaning, and also configures the soft\nkeyboard to display a certain kind of action button. The visual appearance\nof the action button might differ between versions of the same OS.<\/p>\n<p>Despite the logical meaning of each action, choosing a particular\n<a href=\"services\/TextInputAction-class.html\">TextInputAction<\/a> does not necessarily cause any specific behavior to\nhappen. It is up to the developer to ensure that the behavior that occurs\nwhen an action button is pressed is appropriate for the action button chosen.<\/p>\n<p>For example: If the user presses the keyboard action button on iOS when it\nreads \"Emergency Call\", the result should not be a focus change to the next\nTextField. This behavior is not logically appropriate for a button that says\n\"Emergency Call\".<\/p>\n<p>See <a href=\"widgets\/EditableText-class.html\">EditableText<\/a> for more information about customizing action button\nbehavior.<\/p>\n<p>Most <a href=\"services\/TextInputAction-class.html\">TextInputAction<\/a>s are supported equally by both Android and iOS.\nHowever, there is not a complete, direct mapping between Android's IME input\ntypes and iOS's keyboard return types. Therefore, some <a href=\"services\/TextInputAction-class.html\">TextInputAction<\/a>s\nare inappropriate for one of the platforms. If a developer chooses an\ninappropriate <a href=\"services\/TextInputAction-class.html\">TextInputAction<\/a> when running in debug mode, an error will be\nthrown. If the same thing is done in release mode, then instead of sending\nthe inappropriate value, Android will use \"unspecified\" on the platform\nside and iOS will use \"default\" on the platform side.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"services\/TextInput-class.html\">TextInput<\/a>, which configures the platform's keyboard setup.<\/li>\n<li>\n<a href=\"widgets\/EditableText-class.html\">EditableText<\/a>, which invokes callbacks when the action button is pressed.<\/li>\n<\/ul>",
    "dtype": "enum",
    "example": "",
    "href": "services\/TextInputAction-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "services",
    "name": "services.TextInputAction",
    "shortname": "TextInputAction",
    "extends": [],
    "is_enum": true,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [],
    "props": [
        {
            "desc": "\n          <p>Logical meaning: In iOS apps, it is common for a \"Back\" button and\n\"Continue\" button to appear at the top of the screen. However, when the\nkeyboard is open, these buttons are often hidden off-screen. Therefore,\nthe purpose of the \"Continue\" return key on iOS is to make the \"Continue\"\nbutton available when the user is entering text.<\/p>\n<p>Historical context aside, <a href=\"services\/TextInputAction-class.html\">TextInputAction.continueAction<\/a> can be used any\ntime that the term \"Continue\" seems most appropriate for the given action.<\/p>\n<p>Android: Android does not have an IME input type of \"continue.\" It is\ninappropriate to choose this <a href=\"services\/TextInputAction-class.html\">TextInputAction<\/a> when running on Android.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeyContinue\". The title displayed in the\naction button is \"Continue\". This action is only available on iOS 9.0+.<\/p>\n<p>The reason that this value has \"Action\" post-fixed to it is because\n\"continue\" is a reserved word in Dart, as well as many other languages.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(8)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "continueAction",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: The user is done providing input to a group of inputs\n(like a form). Some kind of finalization behavior should now take place.<\/p>\n<p>Android: Corresponds to Android's \"IME_ACTION_DONE\". The OS displays a\nbutton that represents completion, e.g., a checkmark button.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeyDone\". The title displayed in the\naction button is \"Done\".<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(2)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "done",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: Initiate a call to emergency services.<\/p>\n<p>Android: Android does not have an IME input type of \"emergencyCall.\" It is\ninappropriate to choose this <a href=\"services\/TextInputAction-class.html\">TextInputAction<\/a> when running on Android.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeyEmergencyCall\". The title displayed\nin the action button is \"Emergency Call\".<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(11)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "emergencyCall",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: The user has entered some text that represents a\ndestination, e.g., a restaurant name. The \"go\" button is intended to take\nthe user to a part of the app that corresponds to this destination.<\/p>\n<p>Android: Corresponds to Android's \"IME_ACTION_GO\". The OS displays a\nbutton that represents taking \"the user to the target of the text they\ntyped\", e.g., a right-facing arrow button.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeyGo\". The title displayed in the\naction button is \"Go\".<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(3)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "go",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: The user wants to join something, e.g., a wireless\nnetwork.<\/p>\n<p>Android: Android does not have an IME input type of \"join.\" It is\ninappropriate to choose this <a href=\"services\/TextInputAction-class.html\">TextInputAction<\/a> when running on Android.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeyJoin\". The title displayed in the\naction button is \"Join\".<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(9)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "join",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: Insert a newline character in the focused text input,\ne.g., <a href=\"material\/TextField-class.html\">TextField<\/a>.<\/p>\n<p>Android: Corresponds to Android's \"IME_ACTION_NONE\". The OS displays a\nbutton that represents a new line, e.g., a carriage return button.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeyDefault\". The title displayed in the\naction button is \"return\".<\/p>\n<p>The term <a href=\"services\/TextInputAction-class.html\">TextInputAction.newline<\/a> exists in Flutter but not in Android\nor iOS. The reason for introducing this term is so that developers can\nachieve the common result of inserting new lines without needing to\nunderstand the various IME actions on Android and return keys on iOS.\nThus, <a href=\"services\/TextInputAction-class.html\">TextInputAction.newline<\/a> is a convenience term that alleviates the\nneed to understand the underlying platforms to achieve this common behavior.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(12)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "newline",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: The user is done with the current input source and wants\nto move to the next one.<\/p>\n<p>Android: Corresponds to Android's \"IME_ACTION_NEXT\". The OS displays a\nbutton that represents moving forward, e.g., a right-facing arrow button.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeyNext\". The title displayed in the\naction button is \"Next\".<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(6)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "next",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: There is no relevant input action for the current input\nsource, e.g., <a href=\"material\/TextField-class.html\">TextField<\/a>.<\/p>\n<p>Android: Corresponds to Android's \"IME_ACTION_NONE\". The keyboard setup\nis decided by the OS. The keyboard will likely show a return key.<\/p>\n<p>iOS: iOS does not have a keyboard return type of \"none.\" It is\ninappropriate to choose this <a href=\"services\/TextInputAction-class.html\">TextInputAction<\/a> when running on iOS.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(0)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "none",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: The user wishes to return to the previous input source\nin the group, e.g., a form with multiple <a href=\"material\/TextField-class.html\">TextField<\/a>s.<\/p>\n<p>Android: Corresponds to Android's \"IME_ACTION_PREVIOUS\". The OS displays a\nbutton that represents moving backward, e.g., a left-facing arrow button.<\/p>\n<p>iOS: iOS does not have a keyboard return type of \"previous.\" It is\ninappropriate to choose this <a href=\"services\/TextInputAction-class.html\">TextInputAction<\/a> when running on iOS.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(7)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "previous",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: The user wants routing options, e.g., driving directions.<\/p>\n<p>Android: Android does not have an IME input type of \"route.\" It is\ninappropriate to choose this <a href=\"services\/TextInputAction-class.html\">TextInputAction<\/a> when running on Android.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeyRoute\". The title displayed in the\naction button is \"Route\".<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(10)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "route",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: Execute a search query.<\/p>\n<p>Android: Corresponds to Android's \"IME_ACTION_SEARCH\". The OS displays a\nbutton that represents a search, e.g., a magnifying glass button.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeySearch\". The title displayed in the\naction button is \"Search\".<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(4)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "search",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: Sends something that the user has composed, e.g., an\nemail or a text message.<\/p>\n<p>Android: Corresponds to Android's \"IME_ACTION_SEND\". The OS displays a\nbutton that represents sending something, e.g., a paper plane button.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeySend\". The title displayed in the\naction button is \"Send\".<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(5)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "send",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>Logical meaning: Let the OS decide which action is most appropriate.<\/p>\n<p>Android: Corresponds to Android's \"IME_ACTION_UNSPECIFIED\". The OS chooses\nwhich keyboard action to display. The decision will likely be a done\nbutton or a return key.<\/p>\n<p>iOS: Corresponds to iOS's \"UIReturnKeyDefault\". The title displayed in\nthe action button is \"return\".<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const TextInputAction(1)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "unspecified",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        },
        {
            "desc": "\n          <p>A constant List of the values in this enum, in order of their declaration.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const List&lt;<wbr><span class=\"type-parameter\">TextInputAction<\/span>&gt;<\/wbr><\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "values",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "services.TextInputAction",
            "params": []
        }
    ]
}