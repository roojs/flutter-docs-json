{
    "desc": "<p>A <a href=\"quiver.cache\/Cache-class.html\">Cache<\/a> that's backed by a <a href=\"dart-core\/Map-class.html\">Map<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "quiver.cache\/MapCache-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "quiver.cache",
    "name": "quiver.cache.MapCache",
    "shortname": "MapCache",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a new <a href=\"quiver.cache\/MapCache-class.html\">MapCache<\/a>, optionally using <code>map<\/code> as the backing <a href=\"dart-core\/Map-class.html\">Map<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">MapCache({Map&lt;K, V&gt; map}) : _map = map != null ? map : new HashMap&lt;K, V&gt;();<\/code><\/pre>\n    ",
            "href": "quiver.cache\/MapCache\/MapCache.html",
            "isDeprecated": false,
            "type": "",
            "name": "MapCache",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "quiver.cache.MapCache",
            "params": [
                {
                    "name": "map",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.Map"
                }
            ]
        },
        {
            "desc": "<p>Returns the value associated with <code>key<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;V&gt; get(K key, {Loader&lt;K, V&gt; ifAbsent}) async {\n  if (_map.containsKey(key)) {\n    return _map[key];\n  }\n  \/\/ If this key is already loading then return the existing future.\n  if (_outstanding.containsKey(key)) {\n    return _outstanding[key];\n  }\n  if (ifAbsent != null) {\n    var futureOr = ifAbsent(key);\n    _outstanding[key] = futureOr;\n    var v = await futureOr;\n    _map[key] = v;\n    _outstanding.remove(key);\n    return v;\n  }\n  return null;\n}<\/code><\/pre>\n    ",
            "href": "quiver.cache\/MapCache\/get.html",
            "isDeprecated": false,
            "type": "dart:async.Future",
            "name": "get",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.cache.MapCache",
            "params": [
                {
                    "name": "ifAbsent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "quiver.cache.Loader"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<K>"
                }
            ]
        },
        {
            "desc": "<p>Removes the value associated with <code>key<\/code>. The Future completes with null\nwhen the operation is complete.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;Null&gt; invalidate(K key) async {\n  _map.remove(key);\n}<\/code><\/pre>\n    ",
            "href": "quiver.cache\/MapCache\/invalidate.html",
            "isDeprecated": false,
            "type": "dart:async.Future<dart:core.Null>",
            "name": "invalidate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.cache.MapCache",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<K>"
                }
            ]
        },
        {
            "desc": "<p>Sets the value associated with <code>key<\/code>. The Future completes with null when\nthe operation is complete.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;Null&gt; set(K key, V value) async {\n  _map[key] = value;\n}<\/code><\/pre>\n    ",
            "href": "quiver.cache\/MapCache\/set.html",
            "isDeprecated": false,
            "type": "dart:async.Future<dart:core.Null>",
            "name": "set",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.cache.MapCache",
            "params": [
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<K>"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<V>"
                }
            ]
        }
    ],
    "props": []
}