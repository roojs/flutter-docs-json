{
    "desc": "<p>An option used in a <a href=\"material\/SimpleDialog-class.html\">SimpleDialog<\/a>.<\/p>\n<p>A simple dialog offers the user a choice between several options. This\nwidget is commonly used to represent each of the options. If the user\nselects this option, the widget will call the <a href=\"material\/SimpleDialogOption\/onPressed.html\">onPressed<\/a> callback, which\ntypically uses <a href=\"widgets\/Navigator\/pop.html\">Navigator.pop<\/a> to close the dialog.<\/p>\n<p>The padding on a <a href=\"material\/SimpleDialogOption-class.html\">SimpleDialogOption<\/a> is configured to combine with the\ndefault <a href=\"material\/SimpleDialog\/contentPadding.html\">SimpleDialog.contentPadding<\/a> so that each option ends up 8 pixels\nfrom the other vertically, with 20 pixels of spacing between the dialog's\ntitle and the first option, and 24 pixels of spacing between the last option\nand the bottom of the dialog.<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">SimpleDialogOption(\n  onPressed: () { Navigator.pop(context, Department.treasury); },\n  child: const Text('Treasury department'),\n)<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/SimpleDialog-class.html\">SimpleDialog<\/a>, for a dialog in which to use this widget.<\/li>\n<li>\n<a href=\"material\/showDialog.html\">showDialog<\/a>, which actually displays the dialog and returns its result.<\/li>\n<li>\n<a href=\"material\/FlatButton-class.html\">FlatButton<\/a>, which are commonly used as actions in other kinds of\ndialogs, such as <a href=\"material\/AlertDialog-class.html\">AlertDialog<\/a>s.<\/li>\n<li><a href=\"https:\/\/material.io\/design\/components\/dialogs.html#simple-dialog\">material.io\/design\/components\/dialogs.html#simple-dialog<\/a><\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/SimpleDialogOption-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "material",
    "name": "material.SimpleDialogOption",
    "shortname": "SimpleDialogOption",
    "extends": [
        "widgets.StatelessWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>The callback that is called when this option is selected.<\/p>\n<p>If this is set to null, the option cannot be selected.<\/p>\n<p>When used in a <a href=\"material\/SimpleDialog-class.html\">SimpleDialog<\/a>, this will typically call <a href=\"widgets\/Navigator\/pop.html\">Navigator.pop<\/a>\nwith a value for <a href=\"material\/showDialog.html\">showDialog<\/a> to complete its future with.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final VoidCallback onPressed\n\n<\/code><\/pre>\n        ",
            "href": "material\/SimpleDialogOption\/onPressed.html",
            "isDeprecated": false,
            "type": "dart:ui.VoidCallback",
            "name": "onPressed",
            "memberOf": "material.SimpleDialogOption",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates an option for a <a href=\"material\/SimpleDialog-class.html\">SimpleDialog<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SimpleDialogOption({\n  Key key,\n  this.onPressed,\n  this.child,\n}) : super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/SimpleDialogOption\/SimpleDialogOption.html",
            "isDeprecated": false,
            "type": "",
            "name": "SimpleDialogOption",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.SimpleDialogOption",
            "params": [
                {
                    "name": "child",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "key",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "onPressed",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.VoidCallback"
                }
            ]
        },
        {
            "desc": "<p>Describes the part of the user interface represented by this widget.<\/p>\n<p>The framework calls this method when this widget is inserted into the\ntree in a given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> and when the dependencies of this widget\nchange (e.g., an <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> referenced by this widget changes).<\/p>\n<p>The framework replaces the subtree below this widget with the widget\nreturned by this method, either by updating the existing subtree or by\nremoving the subtree and inflating a new subtree, depending on whether the\nwidget returned by this method can update the root of the existing\nsubtree, as determined by calling <a href=\"widgets\/Widget\/canUpdate.html\">Widget.canUpdate<\/a>.<\/p>\n<p>Typically implementations return a newly created constellation of widgets\nthat are configured with information from this widget's constructor and\nfrom the given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>.<\/p>\n<p>The given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> contains information about the location in the\ntree at which this widget is being built. For example, the context\nprovides the set of inherited widgets for this location in the tree. A\ngiven widget might be built with multiple different <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>\narguments over time if the widget is moved around the tree or if the\nwidget is inserted into the tree in multiple places at once.<\/p>\n<p>The implementation of this method must only depend on:<\/p>\n<ul>\n<li>the fields of the widget, which themselves must not change over time,\nand<\/li>\n<li>any ambient state obtained from the <code>context<\/code> using\n<a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a>.<\/li>\n<\/ul>\n<p>If a widget's <a href=\"material\/SimpleDialogOption\/build.html\">build<\/a> method is to depend on anything else, use a\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> instead.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, which contains the discussion on performance considerations.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  return InkWell(\n    onTap: onPressed,\n    child: Padding(\n      padding: const EdgeInsets.symmetric(vertical: 8.0, horizontal: 24.0),\n      child: child,\n    ),\n  );\n}<\/code><\/pre>\n    ",
            "href": "material\/SimpleDialogOption\/build.html",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "name": "build",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SimpleDialogOption",
            "params": [
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The widget below this widget in the tree.<\/p>\n<p>Typically a <a href=\"widgets\/Text-class.html\">Text<\/a> widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "href": "material\/SimpleDialogOption\/child.html",
            "name": "child",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.SimpleDialogOption",
            "params": []
        }
    ]
}