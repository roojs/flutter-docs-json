{
    "name": "collection.MapEquality",
    "extends": [],
    "memberOf": "collection",
    "events": [],
    "methods": [
        {
            "name": "MapEquality",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "collection.MapEquality",
            "sig": "",
            "params": [
                {
                    "name": "keys",
                    "type": "collection.Equality",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "values",
                    "type": "collection.Equality",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-collection_collection\/MapEquality\/MapEquality.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const MapEquality(\n    {Equality&lt;K&gt; keys: const DefaultEquality(),\n    Equality&lt;V&gt; values: const DefaultEquality()})\n    : _keyEquality = keys,\n      _valueEquality = values;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "equals",
            "type": "dart:core.bool",
            "desc": "<p>Compare two elements for being equal.<\/p>\n<p>This should be a proper equality relation.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.MapEquality",
            "sig": "",
            "params": [
                {
                    "name": "map1",
                    "type": "dart:core.Map",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "map2",
                    "type": "dart:core.Map",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/MapEquality\/equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool equals(Map&lt;K, V&gt; map1, Map&lt;K, V&gt; map2) {\n  if (identical(map1, map2)) return true;\n  if (map1 == null || map2 == null) return false;\n  int length = map1.length;\n  if (length != map2.length) return false;\n  Map&lt;_MapEntry, int&gt; equalElementCounts = new HashMap();\n  for (K key in map1.keys) {\n    _MapEntry entry = new _MapEntry(this, key, map1[key]);\n    int count = equalElementCounts[entry];\n    if (count == null) count = 0;\n    equalElementCounts[entry] = count + 1;\n  }\n  for (K key in map2.keys) {\n    _MapEntry entry = new _MapEntry(this, key, map2[key]);\n    int count = equalElementCounts[entry];\n    if (count == null || count == 0) return false;\n    equalElementCounts[entry] = count - 1;\n  }\n  return true;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "hash",
            "type": "dart:core.int",
            "desc": "<p>Get a hashcode of an element.<\/p>\n<p>The hashcode should be compatible with <a href=\"package-collection_collection\/MapEquality\/equals.html\">equals<\/a>, so that if\n<code>equals(a, b)<\/code> then <code>hash(a) == hash(b)<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.MapEquality",
            "sig": "",
            "params": [
                {
                    "name": "map",
                    "type": "dart:core.Map",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/MapEquality\/hash.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">int hash(Map&lt;K, V&gt; map) {\n  if (map == null) return null.hashCode;\n  int hash = 0;\n  for (K key in map.keys) {\n    int keyHash = _keyEquality.hash(key);\n    int valueHash = _valueEquality.hash(map[key]);\n    hash = (hash + 3 * keyHash + 7 * valueHash) &amp; _HASH_MASK;\n  }\n  hash = (hash + (hash &lt;&lt; 3)) &amp; _HASH_MASK;\n  hash ^= (hash &gt;&gt; 11);\n  hash = (hash + (hash &lt;&lt; 15)) &amp; _HASH_MASK;\n  return hash;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "isValidKey",
            "type": "dart:core.bool",
            "desc": "<p>Test whether an object is a valid argument to <a href=\"package-collection_collection\/MapEquality\/equals.html\">equals<\/a> and <a href=\"package-collection_collection\/MapEquality\/hash.html\">hash<\/a>.<\/p>\n<p>Some implementations may be restricted to only work on specific types\nof objects.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.MapEquality",
            "sig": "",
            "params": [
                {
                    "name": "o",
                    "type": "dart:core.Object",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-collection_collection\/MapEquality\/isValidKey.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool isValidKey(Object o) =&gt; o is Map&lt;K, V&gt;;<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "package-collection_collection\/MapEquality-class.html",
    "desc": "<p>Equality on maps.<\/p>\n<p>Two maps are equal if they have the same number of entries, and if the\nentries of the two maps are pairwise equal on both key and value.<\/p>\n<p>The <a href=\"package-collection_collection\/MapEquality\/equals.html\">equals<\/a> and <a href=\"package-collection_collection\/MapEquality\/hash.html\">hash<\/a> methods accepts <code>null<\/code> values,\neven if the <a href=\"package-collection_collection\/MapEquality\/isValidKey.html\">isValidKey<\/a> returns <code>false<\/code> for <code>null<\/code>.\nThe <a href=\"package-collection_collection\/MapEquality\/hash.html\">hash<\/a> of <code>null<\/code> is <code>null.hashCode<\/code>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "MapEquality"
}