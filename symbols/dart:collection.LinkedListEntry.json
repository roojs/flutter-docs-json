{
    "name": "dart:collection.LinkedListEntry",
    "extends": [],
    "memberOf": "dart:collection",
    "events": [],
    "methods": [
        {
            "name": "LinkedListEntry",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:collection.LinkedListEntry",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "dart-collection\/LinkedListEntry\/LinkedListEntry.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "insertAfter",
            "type": "",
            "desc": "<p>Insert an element after this element in this element's linked list.<\/p>\n<p>This entry must be in a linked list when this method is called.\nThe <code>entry<\/code> must not be in a linked list.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:collection.LinkedListEntry",
            "sig": "",
            "params": [
                {
                    "name": "entry",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "dart-collection\/LinkedListEntry\/insertAfter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void insertAfter(E entry) {\n  _list._insertBefore(_next, entry, updateFirst: false);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "insertBefore",
            "type": "",
            "desc": "<p>Insert an element before this element in this element's linked list.<\/p>\n<p>This entry must be in a linked list when this method is called.\nThe <code>entry<\/code> must not be in a linked list.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:collection.LinkedListEntry",
            "sig": "",
            "params": [
                {
                    "name": "entry",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "dart-collection\/LinkedListEntry\/insertBefore.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void insertBefore(E entry) {\n  _list._insertBefore(this, entry, updateFirst: true);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "unlink",
            "type": "",
            "desc": "<p>Unlink the element from its linked list.<\/p>\n<p>The entry must currently be in a linked list when this method is called.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:collection.LinkedListEntry",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-collection\/LinkedListEntry\/unlink.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void unlink() {\n  _list._unlink(this);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "list",
            "type": "dart:collection.LinkedList",
            "types": [],
            "desc": "<p>Get the linked list containing this element.<\/p>\n<p>Returns <code>null<\/code> if this entry is not currently in any list.<\/p>\n        ",
            "memberOf": "dart:collection.LinkedListEntry",
            "isConstant": false,
            "href": "dart-collection\/LinkedListEntry\/list.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">LinkedList&lt;E&gt; get list =&gt; _list;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "next",
            "type": "",
            "types": [],
            "desc": "<p>Return the successor of this element in its linked list.<\/p>\n<p>Returns <code>null<\/code> if there is no successor in the linked list, or if this\nentry is not currently in any list.<\/p>\n        ",
            "memberOf": "dart:collection.LinkedListEntry",
            "isConstant": false,
            "href": "dart-collection\/LinkedListEntry\/next.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">E get next {\n  if (_list == null || identical(_list.first, _next)) return null;\n  return _next;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "previous",
            "type": "",
            "types": [],
            "desc": "<p>Return the predecessor of this element in its linked list.<\/p>\n<p>Returns <code>null<\/code> if there is no predecessor in the linked list, or if this\nentry is not currently in any list.<\/p>\n        ",
            "memberOf": "dart:collection.LinkedListEntry",
            "isConstant": false,
            "href": "dart-collection\/LinkedListEntry\/previous.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">E get previous {\n  if (_list == null || identical(this, _list.first)) return null;\n  return _previous;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-collection\/LinkedListEntry-class.html",
    "desc": "<p>An object that can be an element in a <a href=\"dart-collection\/LinkedList-class.html\">LinkedList<\/a>.<\/p>\n<p>All elements of a <code>LinkedList<\/code> must extend this class.\nThe class provides the internal links that link elements together\nin the <code>LinkedList<\/code>, and a reference to the linked list itself\nthat an element is currently part of.<\/p>\n<p>An entry can be in at most one linked list at a time.\nWhile an entry is in a linked list, the <a href=\"dart-collection\/LinkedListEntry\/list.html\">list<\/a> property points to that\nlinked list, and otherwise the <code>list<\/code> property is <code>null<\/code>.<\/p>\n<p>When created, an entry is not in any linked list.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "LinkedListEntry"
}