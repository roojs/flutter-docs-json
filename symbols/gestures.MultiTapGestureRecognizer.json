{
    "desc": "<p>Recognizes taps on a per-pointer basis.<\/p>\n<p><a href=\"gestures\/MultiTapGestureRecognizer-class.html\">MultiTapGestureRecognizer<\/a> considers each sequence of pointer events that\ncould constitute a tap independently of other pointers: For example, down-1,\ndown-2, up-1, up-2 produces two taps, on up-1 and up-2.<\/p>\n<p>See also:<\/p>\n<ul><li><a href=\"gestures\/TapGestureRecognizer-class.html\">TapGestureRecognizer<\/a><\/li><\/ul>",
    "dtype": "class",
    "example": "",
    "href": "gestures\/MultiTapGestureRecognizer-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "gestures",
    "name": "gestures.MultiTapGestureRecognizer",
    "shortname": "MultiTapGestureRecognizer",
    "extends": [
        "gestures.GestureRecognizer",
        "gestures.GestureArenaMember",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>A pointer that might cause a tap is still in contact with the screen at a\nparticular location after <a href=\"gestures\/MultiTapGestureRecognizer\/longTapDelay.html\">longTapDelay<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">GestureMultiTapDownCallback onLongTapDown\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/MultiTapGestureRecognizer\/onLongTapDown.html",
            "isDeprecated": false,
            "type": "gestures.GestureMultiTapDownCallback",
            "name": "onLongTapDown",
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>A tap has occurred.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">GestureMultiTapCallback onTap\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/MultiTapGestureRecognizer\/onTap.html",
            "isDeprecated": false,
            "type": "gestures.GestureMultiTapCallback",
            "name": "onTap",
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>The pointer that previously triggered <a href=\"gestures\/MultiTapGestureRecognizer\/onTapDown.html\">onTapDown<\/a> will not end up causing\na tap.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">GestureMultiTapCancelCallback onTapCancel\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/MultiTapGestureRecognizer\/onTapCancel.html",
            "isDeprecated": false,
            "type": "gestures.GestureMultiTapCancelCallback",
            "name": "onTapCancel",
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>A pointer that might cause a tap has contacted the screen at a particular\nlocation.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">GestureMultiTapDownCallback onTapDown\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/MultiTapGestureRecognizer\/onTapDown.html",
            "isDeprecated": false,
            "type": "gestures.GestureMultiTapDownCallback",
            "name": "onTapDown",
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>A pointer that will trigger a tap has stopped contacting the screen at a\nparticular location.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">GestureMultiTapUpCallback onTapUp\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/MultiTapGestureRecognizer\/onTapUp.html",
            "isDeprecated": false,
            "type": "gestures.GestureMultiTapUpCallback",
            "name": "onTapUp",
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a multi-tap gesture recognizer.<\/p>\n<p>The <code>longTapDelay<\/code> defaults to <a href=\"dart-core\/Duration\/zero-constant.html\">Duration.zero<\/a>, which means\n<a href=\"gestures\/MultiTapGestureRecognizer\/onLongTapDown.html\">onLongTapDown<\/a> is called immediately after <a href=\"gestures\/MultiTapGestureRecognizer\/onTapDown.html\">onTapDown<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">MultiTapGestureRecognizer({\n  this.longTapDelay = Duration.zero,\n  Object debugOwner,\n  PointerDeviceKind kind,\n}) : super(debugOwner: debugOwner, kind: kind);<\/code><\/pre>\n    ",
            "href": "gestures\/MultiTapGestureRecognizer\/MultiTapGestureRecognizer.html",
            "isDeprecated": false,
            "type": "",
            "name": "MultiTapGestureRecognizer",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": [
                {
                    "name": "debugOwner",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.Object"
                },
                {
                    "name": "kind",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.PointerDeviceKind"
                },
                {
                    "name": "longTapDelay",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.Duration"
                }
            ]
        },
        {
            "desc": "<p>Called when this member wins the arena for the given pointer id.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid acceptGesture(int pointer) {\n  assert(_gestureMap.containsKey(pointer));\n  _gestureMap[pointer].accept();\n}<\/code><\/pre>\n    ",
            "href": "gestures\/MultiTapGestureRecognizer\/acceptGesture.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "acceptGesture",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": [
                {
                    "name": "pointer",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Registers a new pointer that's been checked to be allowed by this gesture\nrecognizer.<\/p>\n<p>Subclasses of <a href=\"gestures\/GestureRecognizer-class.html\">GestureRecognizer<\/a> are supposed to override this method\ninstead of <a href=\"gestures\/GestureRecognizer\/addPointer.html\">addPointer<\/a> because <a href=\"gestures\/GestureRecognizer\/addPointer.html\">addPointer<\/a> will be called for each\npointer being added while <a href=\"gestures\/MultiTapGestureRecognizer\/addAllowedPointer.html\">addAllowedPointer<\/a> is only called for pointers\nthat are allowed by this recognizer.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid addAllowedPointer(PointerEvent event) {\n  assert(!_gestureMap.containsKey(event.pointer));\n  _gestureMap[event.pointer] = _TapGesture(\n    gestureRecognizer: this,\n    event: event,\n    longTapDelay: longTapDelay,\n  );\n  if (onTapDown != null)\n    invokeCallback&lt;void&gt;('onTapDown', () =&gt; onTapDown(event.pointer, TapDownDetails(globalPosition: event.position)));\n}<\/code><\/pre>\n    ",
            "href": "gestures\/MultiTapGestureRecognizer\/addAllowedPointer.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "addAllowedPointer",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": [
                {
                    "name": "event",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "gestures.PointerEvent"
                }
            ]
        },
        {
            "desc": "<p>Releases any resources used by the object.<\/p>\n<p>This method is called by the owner of this gesture recognizer\nwhen the object is no longer needed (e.g. when a gesture\nrecognizer is being unregistered from a <a href=\"widgets\/GestureDetector-class.html\">GestureDetector<\/a>, the\nGestureDetector widget calls this method).<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid dispose() {\n  final List&lt;_TapGesture&gt; localGestures = List&lt;_TapGesture&gt;.from(_gestureMap.values);\n  for (_TapGesture gesture in localGestures)\n    gesture.cancel();\n  \/\/ Rejection of each gesture should cause it to be removed from our map\n  assert(_gestureMap.isEmpty);\n  super.dispose();\n}<\/code><\/pre>\n    ",
            "href": "gestures\/MultiTapGestureRecognizer\/dispose.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "dispose",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>Called when this member loses the arena for the given pointer id.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid rejectGesture(int pointer) {\n  assert(_gestureMap.containsKey(pointer));\n  _gestureMap[pointer].reject();\n  assert(!_gestureMap.containsKey(pointer));\n}<\/code><\/pre>\n    ",
            "href": "gestures\/MultiTapGestureRecognizer\/rejectGesture.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "rejectGesture",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": [
                {
                    "name": "pointer",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns a very short pretty description of the gesture that the\nrecognizer looks for, like 'tap' or 'horizontal drag'.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString get debugDescription =&gt; 'multitap';<\/code><\/pre>\n        ",
            "href": "gestures\/MultiTapGestureRecognizer\/debugDescription.html",
            "name": "debugDescription",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": []
        },
        {
            "desc": "<p>The amount of time between <a href=\"gestures\/MultiTapGestureRecognizer\/onTapDown.html\">onTapDown<\/a> and <a href=\"gestures\/MultiTapGestureRecognizer\/onLongTapDown.html\">onLongTapDown<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Duration longTapDelay\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/MultiTapGestureRecognizer\/longTapDelay.html",
            "name": "longTapDelay",
            "isDeprecated": false,
            "type": "dart:core.Duration",
            "memberOf": "gestures.MultiTapGestureRecognizer",
            "params": []
        }
    ]
}