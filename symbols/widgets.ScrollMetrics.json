{
    "name": "widgets.ScrollMetrics",
    "extends": [],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "ScrollMetrics",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "widgets.ScrollMetrics",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "widgets\/ScrollMetrics\/ScrollMetrics.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "copyWith",
            "type": "widgets.ScrollMetrics",
            "desc": "<p>Creates a <a href=\"widgets\/ScrollMetrics-class.html\">ScrollMetrics<\/a> that has the same properties as this object.<\/p>\n<p>This is useful if this object is mutable, but you want to get a snapshot\nof the current state.<\/p>\n<p>The named arguments allow the values to be adjusted in the process. This\nis useful to examine hypothetical situations, for example \"would applying\nthis delta unmodified take the position <a href=\"widgets\/ScrollMetrics\/outOfRange.html\">outOfRange<\/a>?\".<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.ScrollMetrics",
            "sig": "",
            "params": [
                {
                    "name": "minScrollExtent",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "maxScrollExtent",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "pixels",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "viewportDimension",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "axisDirection",
                    "type": "painting.AxisDirection",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/ScrollMetrics\/copyWith.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ScrollMetrics copyWith({\n  double minScrollExtent,\n  double maxScrollExtent,\n  double pixels,\n  double viewportDimension,\n  AxisDirection axisDirection,\n}) {\n  return FixedScrollMetrics(\n    minScrollExtent: minScrollExtent ?? this.minScrollExtent,\n    maxScrollExtent: maxScrollExtent ?? this.maxScrollExtent,\n    pixels: pixels ?? this.pixels,\n    viewportDimension: viewportDimension ?? this.viewportDimension,\n    axisDirection: axisDirection ?? this.axisDirection,\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "atEdge",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the <a href=\"widgets\/ScrollMetrics\/pixels.html\">pixels<\/a> value is exactly at the <a href=\"widgets\/ScrollMetrics\/minScrollExtent.html\">minScrollExtent<\/a> or the\n<a href=\"widgets\/ScrollMetrics\/maxScrollExtent.html\">maxScrollExtent<\/a>.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/atEdge.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get atEdge =&gt; pixels == minScrollExtent || pixels == maxScrollExtent;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "axis",
            "type": "painting.Axis",
            "types": [],
            "desc": "<p>The axis in which the scroll view scrolls.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/axis.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Axis get axis =&gt; axisDirectionToAxis(axisDirection);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "axisDirection",
            "type": "painting.AxisDirection",
            "types": [],
            "desc": "<p>The direction in which the scroll view scrolls.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/axisDirection.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">AxisDirection get axisDirection;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "extentAfter",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The quantity of content conceptually \"below\" the currently visible content\nof the viewport in the scrollable. This is the content below the content\ndescribed by <a href=\"widgets\/ScrollMetrics\/extentInside.html\">extentInside<\/a>.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/extentAfter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get extentAfter =&gt; math.max(maxScrollExtent - pixels, 0.0);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "extentBefore",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The quantity of content conceptually \"above\" the currently visible content\nof the viewport in the scrollable. This is the content above the content\ndescribed by <a href=\"widgets\/ScrollMetrics\/extentInside.html\">extentInside<\/a>.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/extentBefore.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get extentBefore =&gt; math.max(pixels - minScrollExtent, 0.0);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "extentInside",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The quantity of visible content.<\/p>\n<p>If <a href=\"widgets\/ScrollMetrics\/extentBefore.html\">extentBefore<\/a> and <a href=\"widgets\/ScrollMetrics\/extentAfter.html\">extentAfter<\/a> are non-zero, then this is typically\nthe height of the viewport. It could be less if there is less content\nvisible than the size of the viewport.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/extentInside.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get extentInside {\n  return math.min(pixels, maxScrollExtent) -\n         math.max(pixels, minScrollExtent) +\n         math.min(viewportDimension, maxScrollExtent - minScrollExtent);\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "maxScrollExtent",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The maximum in-range value for <a href=\"widgets\/ScrollMetrics\/pixels.html\">pixels<\/a>.<\/p>\n<p>The actual <a href=\"widgets\/ScrollMetrics\/pixels.html\">pixels<\/a> value might be <a href=\"widgets\/ScrollMetrics\/outOfRange.html\">outOfRange<\/a>.<\/p>\n<p>This value can be infinity, if the scroll is unbounded.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/maxScrollExtent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get maxScrollExtent;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "minScrollExtent",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The minimum in-range value for <a href=\"widgets\/ScrollMetrics\/pixels.html\">pixels<\/a>.<\/p>\n<p>The actual <a href=\"widgets\/ScrollMetrics\/pixels.html\">pixels<\/a> value might be <a href=\"widgets\/ScrollMetrics\/outOfRange.html\">outOfRange<\/a>.<\/p>\n<p>This value can be negative infinity, if the scroll is unbounded.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/minScrollExtent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get minScrollExtent;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "outOfRange",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the <a href=\"widgets\/ScrollMetrics\/pixels.html\">pixels<\/a> value is outside the <a href=\"widgets\/ScrollMetrics\/minScrollExtent.html\">minScrollExtent<\/a> and\n<a href=\"widgets\/ScrollMetrics\/maxScrollExtent.html\">maxScrollExtent<\/a>.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/outOfRange.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get outOfRange =&gt; pixels &lt; minScrollExtent || pixels &gt; maxScrollExtent;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "pixels",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The current scroll position, in logical pixels along the <a href=\"widgets\/ScrollMetrics\/axisDirection.html\">axisDirection<\/a>.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/pixels.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get pixels;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "viewportDimension",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The extent of the viewport along the <a href=\"widgets\/ScrollMetrics\/axisDirection.html\">axisDirection<\/a>.<\/p>\n        ",
            "memberOf": "widgets.ScrollMetrics",
            "isConstant": false,
            "href": "widgets\/ScrollMetrics\/viewportDimension.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get viewportDimension;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "widgets.FixedExtentMetrics",
        "widgets.FixedScrollMetrics",
        "widgets.PageMetrics"
    ],
    "realImplementors": [
        "widgets.FixedExtentMetrics",
        "widgets.FixedScrollMetrics",
        "widgets.PageMetrics"
    ],
    "cn": [],
    "href": "widgets\/ScrollMetrics-class.html",
    "desc": "<p>A description of a <a href=\"widgets\/Scrollable-class.html\">Scrollable<\/a>'s contents, useful for modeling the state\nof its viewport.<\/p>\n<p>This class defines a current position, <a href=\"widgets\/ScrollMetrics\/pixels.html\">pixels<\/a>, and a range of values\nconsidered \"in bounds\" for that position. The range has a minimum value at\n<a href=\"widgets\/ScrollMetrics\/minScrollExtent.html\">minScrollExtent<\/a> and a maximum value at <a href=\"widgets\/ScrollMetrics\/maxScrollExtent.html\">maxScrollExtent<\/a> (inclusive). The\nviewport scrolls in the direction and axis described by <a href=\"widgets\/ScrollMetrics\/axisDirection.html\">axisDirection<\/a>\nand <a href=\"widgets\/ScrollMetrics\/axis.html\">axis<\/a>.<\/p>\n<p>The <a href=\"widgets\/ScrollMetrics\/outOfRange.html\">outOfRange<\/a> getter will return true if <a href=\"widgets\/ScrollMetrics\/pixels.html\">pixels<\/a> is outside this defined\nrange. The <a href=\"widgets\/ScrollMetrics\/atEdge.html\">atEdge<\/a> getter will return true if the <a href=\"widgets\/ScrollMetrics\/pixels.html\">pixels<\/a> position equals\neither the <a href=\"widgets\/ScrollMetrics\/minScrollExtent.html\">minScrollExtent<\/a> or the <a href=\"widgets\/ScrollMetrics\/maxScrollExtent.html\">maxScrollExtent<\/a>.<\/p>\n<p>The dimensions of the viewport in the given <a href=\"widgets\/ScrollMetrics\/axis.html\">axis<\/a> are described by\n<a href=\"widgets\/ScrollMetrics\/viewportDimension.html\">viewportDimension<\/a>.<\/p>\n<p>The above values are also exposed in terms of <a href=\"widgets\/ScrollMetrics\/extentBefore.html\">extentBefore<\/a>,\n<a href=\"widgets\/ScrollMetrics\/extentInside.html\">extentInside<\/a>, and <a href=\"widgets\/ScrollMetrics\/extentAfter.html\">extentAfter<\/a>, which may be more useful for use cases\nsuch as scroll bars; for example, see <a href=\"material\/Scrollbar-class.html\">Scrollbar<\/a>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/FixedScrollMetrics-class.html\">FixedScrollMetrics<\/a>, which is an immutable object that implements this\ninterface.<\/li><\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "ScrollMetrics"
}