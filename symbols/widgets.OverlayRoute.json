{
    "name": "widgets.OverlayRoute",
    "extends": [
        "widgets.Route",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "OverlayRoute",
            "type": "",
            "desc": "<p>Creates a route that knows how to interact with an <a href=\"widgets\/Overlay-class.html\">Overlay<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.OverlayRoute",
            "sig": "",
            "params": [
                {
                    "name": "settings",
                    "type": "widgets.RouteSettings",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/OverlayRoute\/OverlayRoute.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">OverlayRoute({\n  RouteSettings settings,\n}) : super(settings: settings);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "createOverlayEntries",
            "type": "dart:core.Iterable<widgets.OverlayEntry>",
            "desc": "<p>Subclasses should override this getter to return the builders for the overlay.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.OverlayRoute",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "widgets\/OverlayRoute\/createOverlayEntries.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Iterable&lt;OverlayEntry&gt; createOverlayEntries();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "dart:core.Iterable",
                "widgets.OverlayEntry"
            ]
        },
        {
            "name": "didPop",
            "type": "dart:core.bool",
            "desc": "<p>A request was made to pop this route. If the route can handle it\ninternally (e.g. because it has its own stack of internal state) then\nreturn false, otherwise return true (by return the value of calling\n<code>super.didPop<\/code>). Returning false will prevent the default behavior of\n<a href=\"widgets\/NavigatorState\/pop.html\">NavigatorState.pop<\/a>.<\/p>\n<p>When this function returns true, the navigator removes this route from\nthe history but does not yet call <a href=\"widgets\/OverlayRoute\/dispose.html\">dispose<\/a>. Instead, it is the route's\nresponsibility to call <a href=\"widgets\/NavigatorState\/finalizeRoute.html\">NavigatorState.finalizeRoute<\/a>, which will in turn\ncall <a href=\"widgets\/OverlayRoute\/dispose.html\">dispose<\/a> on the route. This sequence lets the route perform an\nexit animation (or some other visual effect) after being popped but prior\nto being disposed.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.OverlayRoute",
            "sig": "",
            "params": [
                {
                    "name": "result",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "widgets\/OverlayRoute\/didPop.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool didPop(T result) {\n  final bool returnValue = super.didPop(result);\n  assert(returnValue);\n  if (finishedWhenPopped)\n    navigator.finalizeRoute(this);\n  return returnValue;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "dispose",
            "type": "",
            "desc": "<p>The route should remove its overlays and free any other resources.<\/p>\n<p>This route is no longer referenced by the navigator.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.OverlayRoute",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "widgets\/OverlayRoute\/dispose.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid dispose() {\n  for (OverlayEntry entry in _overlayEntries)\n    entry.remove();\n  _overlayEntries.clear();\n  super.dispose();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "install",
            "type": "",
            "desc": "<p>Called when the route is inserted into the navigator.<\/p>\n<p>Use this to populate <a href=\"widgets\/OverlayRoute\/overlayEntries.html\">overlayEntries<\/a> and add them to the overlay\n(accessible as <code>Navigator.overlay<\/code>). (The reason the <a href=\"widgets\/Route-class.html\">Route<\/a> is\nresponsible for doing this, rather than the <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>, is that the\n<a href=\"widgets\/Route-class.html\">Route<\/a> will be responsible for <em>removing<\/em> the entries and this way it's\nsymmetric.)<\/p>\n<p>The <code>insertionPoint<\/code> argument will be null if this is the first route\ninserted. Otherwise, it indicates the overlay entry to place immediately\nbelow the first overlay for this route.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.OverlayRoute",
            "sig": "",
            "params": [
                {
                    "name": "insertionPoint",
                    "type": "widgets.OverlayEntry",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/OverlayRoute\/install.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid install(OverlayEntry insertionPoint) {\n  assert(_overlayEntries.isEmpty);\n  _overlayEntries.addAll(createOverlayEntries());\n  navigator.overlay?.insertAll(_overlayEntries, above: insertionPoint);\n  super.install(insertionPoint);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "finishedWhenPopped",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Controls whether <a href=\"widgets\/OverlayRoute\/didPop.html\">didPop<\/a> calls <a href=\"widgets\/NavigatorState\/finalizeRoute.html\">NavigatorState.finalizeRoute<\/a>.<\/p>\n<p>If true, this route removes its overlay entries during <a href=\"widgets\/OverlayRoute\/didPop.html\">didPop<\/a>.\nSubclasses can override this getter if they want to delay finalization\n(for example to animate the route's exit before removing it from the\noverlay).<\/p>\n<p>Subclasses that return false from <a href=\"widgets\/OverlayRoute\/finishedWhenPopped.html\">finishedWhenPopped<\/a> are responsible for\ncalling <a href=\"widgets\/NavigatorState\/finalizeRoute.html\">NavigatorState.finalizeRoute<\/a> themselves.<\/p>\n        ",
            "memberOf": "widgets.OverlayRoute",
            "isConstant": false,
            "href": "widgets\/OverlayRoute\/finishedWhenPopped.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@protected\nbool get finishedWhenPopped =&gt; true;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "overlayEntries",
            "type": "dart:core.List<widgets.OverlayEntry>",
            "types": [
                "dart:core.List",
                "widgets.OverlayEntry"
            ],
            "desc": "<p>The entries this route has placed in the overlay.<\/p>\n        ",
            "memberOf": "widgets.OverlayRoute",
            "isConstant": false,
            "href": "widgets\/OverlayRoute\/overlayEntries.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nList&lt;OverlayEntry&gt; get overlayEntries =&gt; _overlayEntries;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "cupertino.CupertinoPageRoute",
        "material.MaterialPageRoute",
        "widgets.ModalRoute",
        "widgets.PageRoute",
        "widgets.PageRouteBuilder",
        "widgets.PopupRoute",
        "widgets.TransitionRoute"
    ],
    "realImplementors": [
        "cupertino.CupertinoPageRoute",
        "material.MaterialPageRoute"
    ],
    "cn": [],
    "href": "widgets\/OverlayRoute-class.html",
    "desc": "<p>A route that displays widgets in the <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>'s <a href=\"widgets\/Overlay-class.html\">Overlay<\/a>.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "OverlayRoute"
}