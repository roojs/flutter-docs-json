{
    "name": "dart:ui.OffsetBase",
    "extends": [],
    "memberOf": "dart:ui",
    "events": [],
    "methods": [
        {
            "name": "operator <",
            "type": "dart:core.bool",
            "desc": "<p>Less-than operator. Compares an <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> or <a href=\"dart-ui\/Size-class.html\">Size<\/a> to another <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> or\n<a href=\"dart-ui\/Size-class.html\">Size<\/a>, and returns true if both the horizontal and vertical values of the\nleft-hand-side operand are smaller than the horizontal and vertical values\nof the right-hand-side operand respectively. Returns false otherwise.<\/p>\n<p>This is a partial ordering. It is possible for two values to be neither\nless, nor greater than, nor equal to, another.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.OffsetBase",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:ui.OffsetBase",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/OffsetBase\/operator_less.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool operator &lt;(OffsetBase other) =&gt; _dx &lt; other._dx &amp;&amp; _dy &lt; other._dy;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator <=",
            "type": "dart:core.bool",
            "desc": "<p>Less-than-or-equal-to operator. Compares an <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> or <a href=\"dart-ui\/Size-class.html\">Size<\/a> to another\n<a href=\"dart-ui\/Offset-class.html\">Offset<\/a> or <a href=\"dart-ui\/Size-class.html\">Size<\/a>, and returns true if both the horizontal and vertical\nvalues of the left-hand-side operand are smaller than or equal to the\nhorizontal and vertical values of the right-hand-side operand\nrespectively. Returns false otherwise.<\/p>\n<p>This is a partial ordering. It is possible for two values to be neither\nless, nor greater than, nor equal to, another.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.OffsetBase",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:ui.OffsetBase",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/OffsetBase\/operator_less_equal.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool operator &lt;=(OffsetBase other) =&gt; _dx &lt;= other._dx &amp;&amp; _dy &lt;= other._dy;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator ==",
            "type": "dart:core.bool",
            "desc": "<p>Equality operator. Compares an <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> or <a href=\"dart-ui\/Size-class.html\">Size<\/a> to another <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> or\n<a href=\"dart-ui\/Size-class.html\">Size<\/a>, and returns true if the horizontal and vertical values of the\nleft-hand-side operand are equal to the horizontal and vertical values of\nthe right-hand-side operand respectively. Returns false otherwise.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.OffsetBase",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/OffsetBase\/operator_equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool operator ==(dynamic other) {\n  if (other is! OffsetBase)\n    return false;\n  final OffsetBase typedOther = other;\n  return _dx == typedOther._dx &amp;&amp;\n         _dy == typedOther._dy;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator >",
            "type": "dart:core.bool",
            "desc": "<p>Greater-than operator. Compares an <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> or <a href=\"dart-ui\/Size-class.html\">Size<\/a> to another <a href=\"dart-ui\/Offset-class.html\">Offset<\/a>\nor <a href=\"dart-ui\/Size-class.html\">Size<\/a>, and returns true if both the horizontal and vertical values of\nthe left-hand-side operand are bigger than the horizontal and vertical\nvalues of the right-hand-side operand respectively. Returns false\notherwise.<\/p>\n<p>This is a partial ordering. It is possible for two values to be neither\nless, nor greater than, nor equal to, another.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.OffsetBase",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:ui.OffsetBase",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/OffsetBase\/operator_greater.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool operator &gt;(OffsetBase other) =&gt; _dx &gt; other._dx &amp;&amp; _dy &gt; other._dy;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator >=",
            "type": "dart:core.bool",
            "desc": "<p>Greater-than-or-equal-to operator. Compares an <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> or <a href=\"dart-ui\/Size-class.html\">Size<\/a> to\nanother <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> or <a href=\"dart-ui\/Size-class.html\">Size<\/a>, and returns true if both the horizontal and\nvertical values of the left-hand-side operand are bigger than or equal to\nthe horizontal and vertical values of the right-hand-side operand\nrespectively. Returns false otherwise.<\/p>\n<p>This is a partial ordering. It is possible for two values to be neither\nless, nor greater than, nor equal to, another.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.OffsetBase",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "dart:ui.OffsetBase",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-ui\/OffsetBase\/operator_greater_equal.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool operator &gt;=(OffsetBase other) =&gt; _dx &gt;= other._dx &amp;&amp; _dy &gt;= other._dy;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "OffsetBase",
            "type": "",
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n<p>The first argument sets the horizontal component, and the second the\nvertical component.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.OffsetBase",
            "sig": "",
            "params": [
                {
                    "name": "_dx",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "_dy",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-ui\/OffsetBase\/OffsetBase.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const OffsetBase(this._dx, this._dy);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:ui.OffsetBase",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-ui\/OffsetBase\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; '$runtimeType(${_dx?.toStringAsFixed(1)}, ${_dy?.toStringAsFixed(1)})';<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "hashCode",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"dart-ui\/OffsetBase\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"dart-ui\/OffsetBase\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"dart-ui\/OffsetBase\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"dart-ui\/OffsetBase\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"dart-ui\/OffsetBase\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"dart-ui\/OffsetBase\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "memberOf": "dart:ui.OffsetBase",
            "isConstant": false,
            "href": "dart-ui\/OffsetBase\/hashCode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get hashCode =&gt; hashValues(_dx, _dy);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "isFinite",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether both components are finite (neither infinite nor NaN).<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"dart-ui\/OffsetBase\/isInfinite.html\">isInfinite<\/a>, which returns true if either component is equal to\npositive infinity.<\/li><\/ul>",
            "memberOf": "dart:ui.OffsetBase",
            "isConstant": false,
            "href": "dart-ui\/OffsetBase\/isFinite.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isFinite =&gt; _dx.isFinite &amp;&amp; _dy.isFinite;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "isInfinite",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Returns true if either component is <a href=\"dart-core\/double\/infinity-constant.html\">double.infinity<\/a>, and false if both\nare finite (or negative infinity, or NaN).<\/p>\n<p>This is different than comparing for equality with an instance that has\n<em>both<\/em> components set to <a href=\"dart-core\/double\/infinity-constant.html\">double.infinity<\/a>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"dart-ui\/OffsetBase\/isFinite.html\">isFinite<\/a>, which is true if both components are finite (and not NaN).<\/li><\/ul>",
            "memberOf": "dart:ui.OffsetBase",
            "isConstant": false,
            "href": "dart-ui\/OffsetBase\/isInfinite.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isInfinite =&gt; _dx &gt;= double.infinity || _dy &gt;= double.infinity;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "dart:ui.Offset",
        "dart:ui.Size"
    ],
    "realImplementors": [
        "dart:ui.Offset",
        "dart:ui.Size"
    ],
    "cn": [],
    "href": "dart-ui\/OffsetBase-class.html",
    "desc": "<p>Base class for <a href=\"dart-ui\/Size-class.html\">Size<\/a> and <a href=\"dart-ui\/Offset-class.html\">Offset<\/a>, which are both ways to describe\na distance as a two-dimensional axis-aligned vector.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "OffsetBase"
}