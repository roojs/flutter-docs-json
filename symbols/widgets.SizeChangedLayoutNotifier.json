{
    "desc": "<p>A widget that automatically dispatches a <a href=\"widgets\/SizeChangedLayoutNotification-class.html\">SizeChangedLayoutNotification<\/a>\nwhen the layout dimensions of its child change.<\/p>\n<p>The notification is not sent for the initial layout (since the size doesn't\nchange in that case, it's just established).<\/p>\n<p>To listen for the notification dispatched by this widget, use a\n<a href=\"widgets\/NotificationListener-class.html\">NotificationListener&lt;SizeChangedLayoutNotification&gt;<\/a>.<\/p>\n<p>The <a href=\"material\/Material-class.html\">Material<\/a> class listens for <a href=\"widgets\/LayoutChangedNotification-class.html\">LayoutChangedNotification<\/a>s, including\n<a href=\"widgets\/SizeChangedLayoutNotification-class.html\">SizeChangedLayoutNotification<\/a>s, to repaint <a href=\"material\/InkResponse-class.html\">InkResponse<\/a> and <a href=\"material\/InkWell-class.html\">InkWell<\/a> ink\neffects. When a widget is likely to change size, wrapping it in a\n<a href=\"widgets\/SizeChangedLayoutNotifier-class.html\">SizeChangedLayoutNotifier<\/a> will cause the ink effects to correctly repaint\nwhen the child changes size.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/Notification-class.html\">Notification<\/a>, the base class for notifications that bubble through the\nwidget tree.<\/li><\/ul>",
    "dtype": "class",
    "example": null,
    "href": "widgets\/SizeChangedLayoutNotifier-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.SizeChangedLayoutNotifier",
    "shortname": "SizeChangedLayoutNotifier",
    "extends": [
        "widgets.SingleChildRenderObjectWidget",
        "widgets.RenderObjectWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a <a href=\"widgets\/SizeChangedLayoutNotifier-class.html\">SizeChangedLayoutNotifier<\/a> that dispatches layout changed\nnotifications when <code>child<\/code> changes layout size.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SizeChangedLayoutNotifier({\n  Key key,\n  Widget child,\n}) : super(key: key, child: child);<\/code><\/pre>\n    ",
            "href": "widgets\/SizeChangedLayoutNotifier\/SizeChangedLayoutNotifier.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.SizeChangedLayoutNotifier",
            "params": [
                {
                    "name": "child",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                }
            ]
        },
        {
            "desc": "<p>Creates an instance of the <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> class that this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> represents, using the configuration described by this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a>.<\/p>\n<p>This method should not do anything with the children of the render object.\nThat should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/mount.html\">RenderObjectElement.mount<\/a> in the object rendered by this object's\n<a href=\"widgets\/SingleChildRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/mount.html\">SingleChildRenderObjectElement.mount<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_RenderSizeChangedWithCallback createRenderObject(BuildContext context) {\n  return _RenderSizeChangedWithCallback(\n    onLayoutChangedCallback: () {\n      SizeChangedLayoutNotification().dispatch(context);\n    }\n  );\n}<\/code><\/pre>\n    ",
            "href": "widgets\/SizeChangedLayoutNotifier\/createRenderObject.html",
            "isDeprecated": "0",
            "type": "<_RenderSizeChangedWithCallback>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.SizeChangedLayoutNotifier",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": []
}