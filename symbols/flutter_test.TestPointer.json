{
    "desc": "<p>A class for generating coherent artificial pointer events.<\/p>\n<p>You can use this to manually simulate individual events, but the simplest\nway to generate coherent gestures is to use <a href=\"flutter_test\/TestGesture-class.html\">TestGesture<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "flutter_test\/TestPointer-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "flutter_test",
    "name": "flutter_test.TestPointer",
    "shortname": "TestPointer",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a <a href=\"flutter_test\/TestPointer-class.html\">TestPointer<\/a>. By default, the pointer identifier used is 1,\nhowever this can be overridden by providing an argument to the\nconstructor.<\/p>\n<p>Multiple <a href=\"flutter_test\/TestPointer-class.html\">TestPointer<\/a>s created with the same pointer identifier will\ninterfere with each other if they are used in parallel.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">TestPointer([this.pointer = 1, this.kind = PointerDeviceKind.touch])\n    : assert(kind != null),\n      assert(pointer != null);<\/code><\/pre>\n    ",
            "href": "flutter_test\/TestPointer\/TestPointer.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "flutter_test.TestPointer",
            "params": [
                {
                    "name": "kind",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.PointerDeviceKind"
                },
                {
                    "name": "pointer",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Create a <a href=\"gestures\/PointerCancelEvent-class.html\">PointerCancelEvent<\/a>.<\/p>\n<p>By default, the time stamp on the event is <a href=\"dart-core\/Duration\/zero-constant.html\">Duration.zero<\/a>. You can give a\nspecific time stamp by passing the <code>timeStamp<\/code> argument.<\/p>\n<p>The object is no longer usable after this method has been called.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">PointerCancelEvent cancel({Duration timeStamp = Duration.zero}) {\n  assert(isDown);\n  _isDown = false;\n  return PointerCancelEvent(\n    timeStamp: timeStamp,\n    kind: kind,\n    pointer: pointer,\n    position: location,\n  );\n}<\/code><\/pre>\n    ",
            "href": "flutter_test\/TestPointer\/cancel.html",
            "isDeprecated": "0",
            "type": "gestures.PointerCancelEvent",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "flutter_test.TestPointer",
            "params": [
                {
                    "name": "timeStamp",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Duration"
                }
            ]
        },
        {
            "desc": "<p>Create a <a href=\"gestures\/PointerDownEvent-class.html\">PointerDownEvent<\/a> at the given location.<\/p>\n<p>By default, the time stamp on the event is <a href=\"dart-core\/Duration\/zero-constant.html\">Duration.zero<\/a>. You can give a\nspecific time stamp by passing the <code>timeStamp<\/code> argument.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">PointerDownEvent down(Offset newLocation, {Duration timeStamp = Duration.zero}) {\n  assert(!isDown);\n  _isDown = true;\n  _location = newLocation;\n  return PointerDownEvent(\n    timeStamp: timeStamp,\n    kind: kind,\n    pointer: pointer,\n    position: location,\n  );\n}<\/code><\/pre>\n    ",
            "href": "flutter_test\/TestPointer\/down.html",
            "isDeprecated": "0",
            "type": "gestures.PointerDownEvent",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "flutter_test.TestPointer",
            "params": [
                {
                    "name": "newLocation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                },
                {
                    "name": "timeStamp",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Duration"
                }
            ]
        },
        {
            "desc": "<p>Create a <a href=\"gestures\/PointerHoverEvent-class.html\">PointerHoverEvent<\/a> to the given location.<\/p>\n<p>By default, the time stamp on the event is <a href=\"dart-core\/Duration\/zero-constant.html\">Duration.zero<\/a>. You can give a\nspecific time stamp by passing the <code>timeStamp<\/code> argument.<\/p>\n<p><a href=\"flutter_test\/TestPointer\/isDown.html\">isDown<\/a> must be false, since hover events can't be sent when the pointer\nis up.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">PointerHoverEvent hover(\n  Offset newLocation, {\n  Duration timeStamp = Duration.zero,\n}) {\n  assert(newLocation != null);\n  assert(timeStamp != null);\n  assert(\n      !isDown,\n      'Hover events can only be generated when the pointer is up. To '\n      'simulate movement when the pointer is down, use move() instead.');\n  assert(kind != PointerDeviceKind.touch, \"Touch pointers can't generate hover events\");\n  final Offset delta = location != null ?  newLocation - location : Offset.zero;\n  _location = newLocation;\n  return PointerHoverEvent(\n    timeStamp: timeStamp,\n    kind: kind,\n    position: newLocation,\n    delta: delta,\n  );\n}<\/code><\/pre>\n    ",
            "href": "flutter_test\/TestPointer\/hover.html",
            "isDeprecated": "0",
            "type": "gestures.PointerHoverEvent",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "flutter_test.TestPointer",
            "params": [
                {
                    "name": "newLocation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                },
                {
                    "name": "timeStamp",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Duration"
                }
            ]
        },
        {
            "desc": "<p>Create a <a href=\"gestures\/PointerMoveEvent-class.html\">PointerMoveEvent<\/a> to the given location.<\/p>\n<p>By default, the time stamp on the event is <a href=\"dart-core\/Duration\/zero-constant.html\">Duration.zero<\/a>. You can give a\nspecific time stamp by passing the <code>timeStamp<\/code> argument.<\/p>\n<p><a href=\"flutter_test\/TestPointer\/isDown.html\">isDown<\/a> must be true when this is called, since move events can only\nbe generated when the pointer is down.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">PointerMoveEvent move(Offset newLocation, {Duration timeStamp = Duration.zero}) {\n  assert(\n      isDown,\n      'Move events can only be generated when the pointer is down. To '\n      'create a movement event simulating a pointer move when the pointer is '\n      'up, use hover() instead.');\n  final Offset delta = newLocation - location;\n  _location = newLocation;\n  return PointerMoveEvent(\n    timeStamp: timeStamp,\n    kind: kind,\n    pointer: pointer,\n    position: newLocation,\n    delta: delta,\n  );\n}<\/code><\/pre>\n    ",
            "href": "flutter_test\/TestPointer\/move.html",
            "isDeprecated": "0",
            "type": "gestures.PointerMoveEvent",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "flutter_test.TestPointer",
            "params": [
                {
                    "name": "newLocation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                },
                {
                    "name": "timeStamp",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Duration"
                }
            ]
        },
        {
            "desc": "<p>Create a <a href=\"gestures\/PointerScrollEvent-class.html\">PointerScrollEvent<\/a> (e.g., scroll wheel scroll; not finger-drag\nscroll) with the given delta.<\/p>\n<p>By default, the time stamp on the event is <a href=\"dart-core\/Duration\/zero-constant.html\">Duration.zero<\/a>. You can give a\nspecific time stamp by passing the <code>timeStamp<\/code> argument.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">PointerScrollEvent scroll(\n  Offset scrollDelta, {\n  Duration timeStamp = Duration.zero,\n}) {\n  assert(scrollDelta != null);\n  assert(timeStamp != null);\n  assert(kind != PointerDeviceKind.touch, \"Touch pointers can't generate pointer signal events\");\n  return PointerScrollEvent(\n    timeStamp: timeStamp,\n    kind: kind,\n    position: location,\n    scrollDelta: scrollDelta,\n  );\n}<\/code><\/pre>\n    ",
            "href": "flutter_test\/TestPointer\/scroll.html",
            "isDeprecated": "0",
            "type": "gestures.PointerScrollEvent",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "flutter_test.TestPointer",
            "params": [
                {
                    "name": "scrollDelta",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                },
                {
                    "name": "timeStamp",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Duration"
                }
            ]
        },
        {
            "desc": "<p>If a custom event is created outside of this class, this function is used\nto set the <a href=\"flutter_test\/TestPointer\/isDown.html\">isDown<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool setDownInfo(PointerEvent event, Offset newLocation) {\n  _location = newLocation;\n  switch (event.runtimeType) {\n    case PointerDownEvent:\n      assert(!isDown);\n      _isDown = true;\n      break;\n    case PointerUpEvent:\n    case PointerCancelEvent:\n      assert(isDown);\n      _isDown = false;\n      break;\n    default: break;\n  }\n  return isDown;\n}<\/code><\/pre>\n    ",
            "href": "flutter_test\/TestPointer\/setDownInfo.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "flutter_test.TestPointer",
            "params": [
                {
                    "name": "event",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "gestures.PointerEvent"
                },
                {
                    "name": "newLocation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                }
            ]
        },
        {
            "desc": "<p>Create a <a href=\"gestures\/PointerUpEvent-class.html\">PointerUpEvent<\/a>.<\/p>\n<p>By default, the time stamp on the event is <a href=\"dart-core\/Duration\/zero-constant.html\">Duration.zero<\/a>. You can give a\nspecific time stamp by passing the <code>timeStamp<\/code> argument.<\/p>\n<p>The object is no longer usable after this method has been called.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">PointerUpEvent up({Duration timeStamp = Duration.zero}) {\n  assert(isDown);\n  _isDown = false;\n  return PointerUpEvent(\n    timeStamp: timeStamp,\n    kind: kind,\n    pointer: pointer,\n    position: location,\n  );\n}<\/code><\/pre>\n    ",
            "href": "flutter_test\/TestPointer\/up.html",
            "isDeprecated": "0",
            "type": "gestures.PointerUpEvent",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "flutter_test.TestPointer",
            "params": [
                {
                    "name": "timeStamp",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Duration"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Whether the pointer simulated by this object is currently down.<\/p>\n<p>A pointer is released (goes up) by calling <a href=\"flutter_test\/TestPointer\/up.html\">up<\/a> or <a href=\"flutter_test\/TestPointer\/cancel.html\">cancel<\/a>.<\/p>\n<p>Once a pointer is released, it can no longer generate events.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isDown =&gt; _isDown;<\/code><\/pre>\n        ",
            "href": "flutter_test\/TestPointer\/isDown.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "flutter_test.TestPointer",
            "params": []
        },
        {
            "desc": "<p>The kind of pointer device to simulate. Defaults to\n<a href=\"dart-ui\/PointerDeviceKind-class.html\">PointerDeviceKind.touch<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final PointerDeviceKind kind\n\n<\/code><\/pre>\n        ",
            "href": "flutter_test\/TestPointer\/kind.html",
            "isDeprecated": "0",
            "type": "dart:ui.PointerDeviceKind",
            "memberOf": "flutter_test.TestPointer",
            "params": []
        },
        {
            "desc": "<p>The position of the last event sent by this object.<\/p>\n<p>If no event has ever been sent by this object, returns null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Offset get location =&gt; _location;<\/code><\/pre>\n        ",
            "href": "flutter_test\/TestPointer\/location.html",
            "isDeprecated": "0",
            "type": "dart:ui.Offset",
            "memberOf": "flutter_test.TestPointer",
            "params": []
        },
        {
            "desc": "<p>The pointer identifier used for events generated by this object.<\/p>\n<p>Set when the object is constructed. Defaults to 1.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int pointer\n\n<\/code><\/pre>\n        ",
            "href": "flutter_test\/TestPointer\/pointer.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "flutter_test.TestPointer",
            "params": []
        }
    ]
}