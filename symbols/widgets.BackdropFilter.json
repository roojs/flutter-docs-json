{
    "name": "widgets.BackdropFilter",
    "extends": [
        "widgets.SingleChildRenderObjectWidget",
        "widgets.RenderObjectWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "BackdropFilter",
            "type": "",
            "desc": "<p>Creates a backdrop filter.<\/p>\n<p>The <code>filter<\/code> argument must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.BackdropFilter",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "filter",
                    "type": "dart:ui.ImageFilter",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "child",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/BackdropFilter\/BackdropFilter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const BackdropFilter({\n  Key key,\n  @required this.filter,\n  Widget child,\n}) : assert(filter != null),\n     super(key: key, child: child);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "createRenderObject",
            "type": "rendering.RenderBackdropFilter",
            "desc": "<p>Creates an instance of the <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> class that this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> represents, using the configuration described by this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a>.<\/p>\n<p>This method should not do anything with the children of the render object.\nThat should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/mount.html\">RenderObjectElement.mount<\/a> in the object rendered by this object's\n<a href=\"widgets\/SingleChildRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/mount.html\">SingleChildRenderObjectElement.mount<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.BackdropFilter",
            "sig": "",
            "params": [
                {
                    "name": "context",
                    "type": "widgets.BuildContext",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/BackdropFilter\/createRenderObject.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nRenderBackdropFilter createRenderObject(BuildContext context) {\n  return RenderBackdropFilter(filter: filter);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "updateRenderObject",
            "type": "",
            "desc": "<p>Copies the configuration described by this <a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> to the\ngiven <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a>, which will be of the same type as returned by this\nobject's <a href=\"widgets\/BackdropFilter\/createRenderObject.html\">createRenderObject<\/a>.<\/p>\n<p>This method should not do anything to update the children of the render\nobject. That should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/update.html\">RenderObjectElement.update<\/a> in the object rendered by this object's\n<a href=\"widgets\/SingleChildRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/update.html\">SingleChildRenderObjectElement.update<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.BackdropFilter",
            "sig": "",
            "params": [
                {
                    "name": "context",
                    "type": "widgets.BuildContext",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "renderObject",
                    "type": "rendering.RenderBackdropFilter",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/BackdropFilter\/updateRenderObject.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid updateRenderObject(BuildContext context, RenderBackdropFilter renderObject) {\n  renderObject.filter = filter;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "filter",
            "type": "dart:ui.ImageFilter",
            "types": [],
            "desc": "<p>The image filter to apply to the existing painted content before painting the child.<\/p>\n<p>For example, consider using <a href=\"dart-ui\/ImageFilter\/ImageFilter.blur.html\">ImageFilter.blur<\/a> to create a backdrop\nblur effect<\/p>\n        ",
            "memberOf": "widgets.BackdropFilter",
            "isConstant": false,
            "href": "widgets\/BackdropFilter\/filter.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ui.ImageFilter filter\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "widgets\/BackdropFilter-class.html",
    "desc": "<p>A widget that applies a filter to the existing painted content and then\npaints <a href=\"widgets\/SingleChildRenderObjectWidget\/child.html\">child<\/a>.<\/p>\n<p>The filter will be applied to all the area within its parent or ancestor\nwidget's clip. If there's no clip, the filter will be applied to the full\nscreen.<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n<div class=\"snippet-description\">\nIf the <a href=\"widgets\/BackdropFilter-class.html\">BackdropFilter<\/a> needs to be applied to an area that exactly matches\nits child, wraps the <a href=\"widgets\/BackdropFilter-class.html\">BackdropFilter<\/a> with a clip widget that clips exactly\nto that child.\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">Stack(\n  fit: StackFit.expand,\n  children: &lt;Widget&gt;[\n    Text('0' * 10000),\n    Center(\n      child: ClipRect(  \/\/ &lt;-- clips to the 200x200 [Container] below\n        child: BackdropFilter(\n          filter: ui.ImageFilter.blur(\n            sigmaX: 5.0,\n            sigmaY: 5.0,\n          ),\n          child: Container(\n            alignment: Alignment.center,\n            width: 200.0,\n            height: 200.0,\n            child: Text('Hello World'),\n          ),\n        ),\n      ),\n    ),\n  ],\n)<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<p>This effect is relatively expensive, especially if the filter is non-local,\nsuch as a blur.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/DecoratedBox-class.html\">DecoratedBox<\/a>, which draws a background under (or over) a widget.<\/li>\n<li>\n<a href=\"widgets\/Opacity-class.html\">Opacity<\/a>, which changes the opacity of the widget itself.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "BackdropFilter"
}