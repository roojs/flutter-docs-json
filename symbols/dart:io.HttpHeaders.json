{
    "desc": "<p>Headers for HTTP requests and responses.<\/p>\n<p>In some situations, headers are immutable:<\/p>\n<ul>\n<li>\n<p>HttpRequest and HttpClientResponse always have immutable headers.<\/p>\n<\/li>\n<li>\n<p>HttpResponse and HttpClientRequest have immutable headers\nfrom the moment the body is written to.<\/p>\n<\/li>\n<\/ul>\n<p>In these situations, the mutating methods throw exceptions.<\/p>\n<p>For all operations on HTTP headers the header name is\ncase-insensitive.<\/p>\n<p>To set the value of a header use the <code>set()<\/code> method:<\/p>\n<pre class=\"language-dart\"><code>request.headers.set(HttpHeaders.cacheControlHeader,\n                    'max-age=3600, must-revalidate');\n<\/code><\/pre>\n<p>To retrieve the value of a header use the <code>value()<\/code> method:<\/p>\n<pre class=\"language-dart\"><code>print(request.headers.value(HttpHeaders.userAgentHeader));\n<\/code><\/pre>\n<p>An HttpHeaders object holds a list of values for each name\nas the standard allows. In most cases a name holds only a single value,\nThe most common mode of operation is to use <code>set()<\/code> for setting a value,\nand <code>value()<\/code> for retrieving a value.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "dart-io\/HttpHeaders-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:io",
    "name": "dart:io.HttpHeaders",
    "shortname": "HttpHeaders",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": null,
            "href": "dart-io\/HttpHeaders\/HttpHeaders.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        },
        {
            "desc": "<p>Adds a header value. The header named <code>name<\/code> will have the value\n<code>value<\/code> added to its list of values. Some headers are single\nvalued, and for these adding a value will replace the previous\nvalue. If the value is of type DateTime a HTTP date format will be\napplied. If the value is a <code>List<\/code> each element of the list will\nbe added separately. For all other types the default <code>toString<\/code>\nmethod will be used.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(String name, Object value);<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpHeaders\/add.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpHeaders",
            "params": [
                {
                    "name": "name",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        },
        {
            "desc": "<p>Remove all headers. Some headers have system supplied values and\nfor these the system supplied values will still be added to the\ncollection of values for the header.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void clear();<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpHeaders\/clear.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        },
        {
            "desc": "<p>Enumerates the headers, applying the function <code>f<\/code> to each\nheader. The header name passed in <code>name<\/code> will be all lower\ncase.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void forEach(void f(String name, List&lt;String&gt; values));<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpHeaders\/forEach.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpHeaders",
            "params": [
                {
                    "name": "name",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                },
                {
                    "name": "values",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.String>"
                }
            ]
        },
        {
            "desc": "<p>Disables folding for the header named <code>name<\/code> when sending the HTTP\nheader. By default, multiple header values are folded into a\nsingle header line by separating the values with commas. The\n'set-cookie' header has folding disabled by default.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void noFolding(String name);<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpHeaders\/noFolding.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpHeaders",
            "params": [
                {
                    "name": "name",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Removes a specific value for a header name. Some headers have\nsystem supplied values and for these the system supplied values\nwill still be added to the collection of values for the header.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void remove(String name, Object value);<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpHeaders\/remove.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpHeaders",
            "params": [
                {
                    "name": "name",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        },
        {
            "desc": "<p>Removes all values for the specified header name. Some headers\nhave system supplied values and for these the system supplied\nvalues will still be added to the collection of values for the\nheader.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void removeAll(String name);<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpHeaders\/removeAll.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpHeaders",
            "params": [
                {
                    "name": "name",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Sets a header. The header named <code>name<\/code> will have all its values\ncleared before the value <code>value<\/code> is added as its value.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void set(String name, Object value);<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpHeaders\/set.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpHeaders",
            "params": [
                {
                    "name": "name",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                },
                {
                    "name": "value",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Object"
                }
            ]
        },
        {
            "desc": "<p>Convenience method for the value for a single valued header. If\nthere is no header with the provided name, <code>null<\/code> will be\nreturned. If the header has more than one value an exception is\nthrown.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String value(String name);<\/code><\/pre>\n    ",
            "href": "dart-io\/HttpHeaders\/value.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:io.HttpHeaders",
            "params": [
                {
                    "name": "name",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Gets and sets the chunked transfer encoding header value.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool chunkedTransferEncoding\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpHeaders\/chunkedTransferEncoding.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the content length header value.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int contentLength\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpHeaders\/contentLength.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the content type. Note that the content type in the\nheader will only be updated if this field is set\ndirectly. Mutating the returned current value will have no\neffect.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ContentType contentType\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpHeaders\/contentType.html",
            "isDeprecated": "0",
            "type": "dart:io.ContentType",
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the date. The value of this property will\nreflect the 'date' header.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">DateTime date\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpHeaders\/date.html",
            "isDeprecated": "0",
            "type": "dart:core.DateTime",
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the expiry date. The value of this property will\nreflect the 'expires' header.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">DateTime expires\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpHeaders\/expires.html",
            "isDeprecated": "0",
            "type": "dart:core.DateTime",
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the host part of the 'host' header for the\nconnection.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String host\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpHeaders\/host.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the \"if-modified-since\" date. The value of this property will\nreflect the \"if-modified-since\" header.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">DateTime ifModifiedSince\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpHeaders\/ifModifiedSince.html",
            "isDeprecated": "0",
            "type": "dart:core.DateTime",
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the persistent connection header value.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool persistentConnection\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpHeaders\/persistentConnection.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        },
        {
            "desc": "<p>Gets and sets the port part of the 'host' header for the\nconnection.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int port\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpHeaders\/port.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "dart:io.HttpHeaders",
            "params": []
        }
    ]
}