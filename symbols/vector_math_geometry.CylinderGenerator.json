{
    "name": "vector_math_geometry.CylinderGenerator",
    "extends": [
        "vector_math_geometry.GeometryGenerator",
        "dart:core.Object"
    ],
    "memberOf": "vector_math_geometry",
    "events": [],
    "methods": [
        {
            "name": "CylinderGenerator",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.CylinderGenerator",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "vector_math_geometry\/CylinderGenerator\/CylinderGenerator.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "createCylinder",
            "type": "vector_math_geometry.MeshGeometry",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.CylinderGenerator",
            "sig": "",
            "params": [
                {
                    "name": "topRadius",
                    "type": "dart:core.num",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "bottomRadius",
                    "type": "dart:core.num",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "height",
                    "type": "dart:core.num",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "segments",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "flags",
                    "type": "vector_math_geometry.GeometryGeneratorFlags",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "filters",
                    "type": "dart:core.List<vector_math_geometry.GeometryFilter>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "dart:core.List",
                        "vector_math_geometry.GeometryFilter"
                    ]
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/CylinderGenerator\/createCylinder.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">MeshGeometry createCylinder(num topRadius, num bottomRadius, num height,\n    {int segments: 16,\n    GeometryGeneratorFlags flags,\n    List&lt;GeometryFilter&gt; filters}) {\n  _topRadius = topRadius.toDouble();\n  _bottomRadius = bottomRadius.toDouble();\n  _height = height.toDouble();\n  _segments = segments;\n\n  return createGeometry(flags: flags, filters: filters);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "generateIndices",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.CylinderGenerator",
            "sig": "",
            "params": [
                {
                    "name": "indices",
                    "type": "dart:typed_data.Uint16List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/CylinderGenerator\/generateIndices.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateIndices(Uint16List indices) {\n  int i = 0;\n\n  \/\/ Sides\n  int base1 = 0;\n  final int base2 = _segments + 1;\n  for (int x = 0; x &lt; _segments; ++x) {\n    indices[i++] = base1 + x;\n    indices[i++] = base1 + x + 1;\n    indices[i++] = base2 + x;\n\n    indices[i++] = base1 + x + 1;\n    indices[i++] = base2 + x + 1;\n    indices[i++] = base2 + x;\n  }\n\n  \/\/ Top cap\n  base1 = (_segments + 1) * 2;\n  for (int x = 1; x &lt; _segments - 1; ++x) {\n    indices[i++] = base1;\n    indices[i++] = base1 + x + 1;\n    indices[i++] = base1 + x;\n  }\n\n  \/\/ Bottom cap\n  base1 = (_segments + 1) * 2 + _segments;\n  for (int x = 1; x &lt; _segments - 1; ++x) {\n    indices[i++] = base1;\n    indices[i++] = base1 + x;\n    indices[i++] = base1 + x + 1;\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "generateVertexPositions",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.CylinderGenerator",
            "sig": "",
            "params": [
                {
                    "name": "positions",
                    "type": "vector_math_lists.Vector3List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "indices",
                    "type": "dart:typed_data.Uint16List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/CylinderGenerator\/generateVertexPositions.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateVertexPositions(Vector3List positions, Uint16List indices) {\n  int i = 0;\n\n  \/\/ Top\n  for (int x = 0; x &lt;= _segments; ++x) {\n    final double u = x \/ _segments;\n\n    positions[i++] = new Vector3(_topRadius * math.cos(u * math.pi * 2.0),\n        _height * 0.5, _topRadius * math.sin(u * math.pi * 2.0));\n  }\n\n  \/\/ Bottom\n  for (int x = 0; x &lt;= _segments; ++x) {\n    final double u = x \/ _segments;\n\n    positions[i++] = new Vector3(_bottomRadius * math.cos(u * math.pi * 2.0),\n        _height * -0.5, _bottomRadius * math.sin(u * math.pi * 2.0));\n  }\n\n  \/\/ Top cap\n  for (int x = 0; x &lt; _segments; ++x) {\n    final double u = x \/ _segments;\n\n    positions[i++] = new Vector3(_topRadius * math.cos(u * math.pi * 2.0),\n        _height * 0.5, _topRadius * math.sin(u * math.pi * 2.0));\n  }\n\n  \/\/ Bottom cap\n  for (int x = 0; x &lt; _segments; ++x) {\n    final double u = x \/ _segments;\n\n    positions[i++] = new Vector3(_bottomRadius * math.cos(u * math.pi * 2.0),\n        _height * -0.5, _bottomRadius * math.sin(u * math.pi * 2.0));\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "generateVertexTexCoords",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "vector_math_geometry.CylinderGenerator",
            "sig": "",
            "params": [
                {
                    "name": "texCoords",
                    "type": "vector_math_lists.Vector2List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "positions",
                    "type": "vector_math_lists.Vector3List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "indices",
                    "type": "dart:typed_data.Uint16List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "vector_math_geometry\/CylinderGenerator\/generateVertexTexCoords.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateVertexTexCoords(\n    Vector2List texCoords, Vector3List positions, Uint16List indices) {\n  int i = 0;\n\n  \/\/ Cylinder top\n  for (int x = 0; x &lt;= _segments; ++x) {\n    final double u = 1.0 - (x \/ _segments);\n    texCoords[i++] = new Vector2(u, 0.0);\n  }\n\n  \/\/ Cylinder bottom\n  for (int x = 0; x &lt;= _segments; ++x) {\n    final double u = 1.0 - (x \/ _segments);\n    texCoords[i++] = new Vector2(u, 1.0);\n  }\n\n  \/\/ Top cap\n  for (int x = 0; x &lt; _segments; ++x) {\n    final double r = (x \/ _segments) * math.pi * 2.0;\n    texCoords[i++] =\n        new Vector2((math.cos(r) * 0.5 + 0.5), (math.sin(r) * 0.5 + 0.5));\n  }\n\n  \/\/ Bottom cap\n  for (int x = 0; x &lt; _segments; ++x) {\n    final double r = (x \/ _segments) * math.pi * 2.0;\n    texCoords[i++] =\n        new Vector2((math.cos(r) * 0.5 + 0.5), (math.sin(r) * 0.5 + 0.5));\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "indexCount",
            "type": "dart:core.int",
            "types": [],
            "desc": "",
            "memberOf": "vector_math_geometry.CylinderGenerator",
            "isConstant": false,
            "href": "vector_math_geometry\/CylinderGenerator\/indexCount.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get indexCount =&gt; (_segments * 6) + ((_segments - 2) * 6);<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "vertexCount",
            "type": "dart:core.int",
            "types": [],
            "desc": "",
            "memberOf": "vector_math_geometry.CylinderGenerator",
            "isConstant": false,
            "href": "vector_math_geometry\/CylinderGenerator\/vertexCount.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get vertexCount =&gt; ((_segments + 1) * 2) + (_segments * 2);<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "vector_math_geometry\/CylinderGenerator-class.html",
    "desc": "",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "CylinderGenerator"
}