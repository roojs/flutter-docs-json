{
    "name": "semantics.AnnounceSemanticsEvent",
    "extends": [
        "semantics.SemanticsEvent",
        "dart:core.Object"
    ],
    "memberOf": "semantics",
    "events": [],
    "methods": [
        {
            "name": "AnnounceSemanticsEvent",
            "type": "",
            "desc": "<p>Constructs an event that triggers an announcement by the platform.<\/p>\n    ",
            "static": false,
            "memberOf": "semantics.AnnounceSemanticsEvent",
            "sig": "",
            "params": [
                {
                    "name": "message",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textDirection",
                    "type": "dart:ui.TextDirection",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "semantics\/AnnounceSemanticsEvent\/AnnounceSemanticsEvent.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const AnnounceSemanticsEvent(this.message, this.textDirection)\n  : assert(message != null),\n    assert(textDirection != null),\n    super('announce');<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "getDataMap",
            "type": "dart:core.Map<dart:core.String>",
            "desc": "<p>Returns the event's data object.<\/p>\n    ",
            "static": false,
            "memberOf": "semantics.AnnounceSemanticsEvent",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "semantics\/AnnounceSemanticsEvent\/getDataMap.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nMap&lt;String, dynamic&gt; getDataMap() {\n  return &lt;String, dynamic&gt;{\n    'message': message,\n    'textDirection': textDirection.index,\n  };\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "dart:core.Map",
                "dart:core.String"
            ]
        }
    ],
    "props": [
        {
            "name": "message",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The message to announce.<\/p>\n<p>This property must not be null.<\/p>\n        ",
            "memberOf": "semantics.AnnounceSemanticsEvent",
            "isConstant": false,
            "href": "semantics\/AnnounceSemanticsEvent\/message.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String message\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "textDirection",
            "type": "dart:ui.TextDirection",
            "types": [],
            "desc": "<p>Text direction for <a href=\"semantics\/AnnounceSemanticsEvent\/message.html\">message<\/a>.<\/p>\n<p>This property must not be null.<\/p>\n        ",
            "memberOf": "semantics.AnnounceSemanticsEvent",
            "isConstant": false,
            "href": "semantics\/AnnounceSemanticsEvent\/textDirection.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextDirection textDirection\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "semantics\/AnnounceSemanticsEvent-class.html",
    "desc": "<p>An event for a semantic announcement.<\/p>\n<p>This should be used for announcement that are not seamlessly announced by\nthe system as a result of a UI state change.<\/p>\n<p>For example a camera application can use this method to make accessibility\nannouncements regarding objects in the viewfinder.<\/p>\n<p>When possible, prefer using mechanisms like <a href=\"widgets\/Semantics-class.html\">Semantics<\/a> to implicitly\ntrigger announcements over using this event.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "AnnounceSemanticsEvent"
}