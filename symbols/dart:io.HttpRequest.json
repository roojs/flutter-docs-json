{
    "desc": "<p>A server-side object\nthat contains the content of and information about an HTTP request.<\/p>\n<p><strong>Note<\/strong>: Check out the\n<a href=\"https:\/\/pub.dartlang.org\/packages\/http_server\">http_server<\/a>\npackage, which makes working with the low-level\ndart:io HTTP server subsystem easier.<\/p>\n<p><code>HttpRequest<\/code> objects are generated by an <a href=\"dart-io\/HttpServer-class.html\">HttpServer<\/a>,\nwhich listens for HTTP requests on a specific host and port.\nFor each request received, the HttpServer, which is a <a href=\"dart-async\/Stream-class.html\">Stream<\/a>,\ngenerates an <code>HttpRequest<\/code> object and adds it to the stream.<\/p>\n<p>An <code>HttpRequest<\/code> object delivers the body content of the request\nas a stream of byte lists.\nThe object also contains information about the request,\nsuch as the method, URI, and headers.<\/p>\n<p>In the following code, an HttpServer listens\nfor HTTP requests. When the server receives a request,\nit uses the HttpRequest object's <code>method<\/code> property to dispatch requests.<\/p>\n<pre class=\"language-dart\"><code>final HOST = InternetAddress.loopbackIPv4;\nfinal PORT = 80;\n\nHttpServer.bind(HOST, PORT).then((_server) {\n  _server.listen((HttpRequest request) {\n    switch (request.method) {\n      case 'GET':\n        handleGetRequest(request);\n        break;\n      case 'POST':\n        ...\n    }\n  },\n  onError: handleError);    \/\/ listen() failed.\n}).catchError(handleError);\n<\/code><\/pre>\n<p>An HttpRequest object provides access to the associated <a href=\"dart-io\/HttpResponse-class.html\">HttpResponse<\/a>\nobject through the response property.\nThe server writes its response to the body of the HttpResponse object.\nFor example, here's a function that responds to a request:<\/p>\n<pre class=\"language-dart\"><code>void handleGetRequest(HttpRequest req) {\n  HttpResponse res = req.response;\n  res.write('Received request ${req.method}: ${req.uri.path}');\n  res.close();\n}\n<\/code><\/pre>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-io\/HttpRequest-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "dart:io",
    "name": "dart:io.HttpRequest",
    "shortname": "HttpRequest",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "",
            "example": "",
            "href": "dart-io\/HttpRequest\/HttpRequest.html",
            "isDeprecated": false,
            "type": "",
            "name": "HttpRequest",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The client certificate of the client making the request.<\/p>\n<p>This value is null if the connection is not a secure TLS or SSL connection,\nor if the server does not request a client certificate, or if the client\ndoes not provide one.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">X509Certificate get certificate;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/certificate.html",
            "name": "certificate",
            "isDeprecated": false,
            "type": "dart:io.X509Certificate",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>Information about the client connection.<\/p>\n<p>Returns <code>null<\/code> if the socket is not available.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HttpConnectionInfo get connectionInfo;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/connectionInfo.html",
            "name": "connectionInfo",
            "isDeprecated": false,
            "type": "dart:io.HttpConnectionInfo",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>The content length of the request body.<\/p>\n<p>If the size of the request body is not known in advance,\nthis value is -1.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get contentLength;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/contentLength.html",
            "name": "contentLength",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>The cookies in the request, from the Cookie headers.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;Cookie&gt; get cookies;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/cookies.html",
            "name": "cookies",
            "isDeprecated": false,
            "type": "dart:core.List<dart:io.Cookie>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>The request headers.<\/p>\n<p>The returned <a href=\"dart-io\/HttpHeaders-class.html\">HttpHeaders<\/a> are immutable.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HttpHeaders get headers;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/headers.html",
            "name": "headers",
            "isDeprecated": false,
            "type": "dart:io.HttpHeaders",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>The method, such as 'GET' or 'POST', for the request.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get method;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/method.html",
            "name": "method",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>The persistent connection state signaled by the client.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get persistentConnection;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/persistentConnection.html",
            "name": "persistentConnection",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>The HTTP protocol version used in the request,\neither \"1.0\" or \"1.1\".<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get protocolVersion;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/protocolVersion.html",
            "name": "protocolVersion",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>The requested URI for the request.<\/p>\n<p>The returned URI is reconstructed by using http-header fields, to access\notherwise lost information, e.g. host and scheme.<\/p>\n<p>To reconstruct the scheme, first 'X-Forwarded-Proto' is checked, and then\nfalling back to server type.<\/p>\n<p>To reconstruct the host, first 'X-Forwarded-Host' is checked, then 'Host'\nand finally calling back to server.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Uri get requestedUri;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/requestedUri.html",
            "name": "requestedUri",
            "isDeprecated": false,
            "type": "dart:core.Uri",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>The <a href=\"dart-io\/HttpResponse-class.html\">HttpResponse<\/a> object, used for sending back the response to the\nclient.<\/p>\n<p>If the <a href=\"dart-io\/HttpRequest\/contentLength.html\">contentLength<\/a> of the body isn't 0, and the body isn't being read,\nany write calls on the <a href=\"dart-io\/HttpResponse-class.html\">HttpResponse<\/a> automatically drain the request\nbody.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HttpResponse get response;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/response.html",
            "name": "response",
            "isDeprecated": false,
            "type": "dart:io.HttpResponse",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>The session for the given request.<\/p>\n<p>If the session is\nbeing initialized by this call, <code>isNew<\/code> is true for the returned\nsession.\nSee <a href=\"dart-io\/HttpServer\/sessionTimeout.html\">HttpServer.sessionTimeout<\/a> on how to change default timeout.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">HttpSession get session;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/session.html",
            "name": "session",
            "isDeprecated": false,
            "type": "dart:io.HttpSession",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        },
        {
            "desc": "<p>The URI for the request.<\/p>\n<p>This provides access to the\npath and query string for the request.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Uri get uri;<\/code><\/pre>\n        ",
            "href": "dart-io\/HttpRequest\/uri.html",
            "name": "uri",
            "isDeprecated": false,
            "type": "dart:core.Uri",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.HttpRequest",
            "params": []
        }
    ]
}