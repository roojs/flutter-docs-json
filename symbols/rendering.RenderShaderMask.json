{
    "desc": "<p>Applies a mask generated by a <a href=\"dart-ui\/Shader-class.html\">Shader<\/a> to its child.<\/p>\n<p>For example, <a href=\"rendering\/RenderShaderMask-class.html\">RenderShaderMask<\/a> can be used to gradually fade out the edge\nof a child by using a <a href=\"dart-ui\/Gradient\/Gradient.linear.html\">new ui.Gradient.linear<\/a> mask.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "rendering\/RenderShaderMask-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "rendering",
    "name": "rendering.RenderShaderMask",
    "shortname": "RenderShaderMask",
    "extends": [
        "rendering.RenderProxyBox",
        "rendering.RenderBox",
        "rendering.RenderObject",
        "foundation.AbstractNode",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>Called to creates the <a href=\"dart-ui\/Shader-class.html\">Shader<\/a> that generates the mask.<\/p>\n<p>The shader callback is called with the current size of the child so that\nit can customize the shader to the size and location of the child.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">\/\/ TODO(abarth): Use the delegate pattern here to avoid generating spurious\n\/\/ repaints when the ShaderCallback changes identity.\nShaderCallback get shaderCallback =&gt; _shaderCallback;<\/code><\/pre>\n        ",
            "href": "rendering\/RenderShaderMask\/shaderCallback.html",
            "isDeprecated": false,
            "type": "rendering.ShaderCallback",
            "name": "shaderCallback",
            "memberOf": "rendering.RenderShaderMask",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a render object that applies a mask generated by a <a href=\"dart-ui\/Shader-class.html\">Shader<\/a> to its child.<\/p>\n<p>The <code>shaderCallback<\/code> and <code>blendMode<\/code> arguments must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">RenderShaderMask({\n  RenderBox child,\n  @required ShaderCallback shaderCallback,\n  BlendMode blendMode = BlendMode.modulate,\n}) : assert(shaderCallback != null),\n     assert(blendMode != null),\n     _shaderCallback = shaderCallback,\n     _blendMode = blendMode,\n     super(child);<\/code><\/pre>\n    ",
            "href": "rendering\/RenderShaderMask\/RenderShaderMask.html",
            "isDeprecated": false,
            "type": "",
            "name": "RenderShaderMask",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "rendering.RenderShaderMask",
            "params": [
                {
                    "name": "blendMode",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.BlendMode"
                },
                {
                    "name": "child",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "rendering.RenderBox"
                },
                {
                    "name": "shaderCallback",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "rendering.ShaderCallback"
                }
            ]
        },
        {
            "desc": "<p>Paint this render object into the given context at the given offset.<\/p>\n<p>Subclasses should override this method to provide a visual appearance\nfor themselves. The render object's local coordinate system is\naxis-aligned with the coordinate system of the context's canvas and the\nrender object's local origin (i.e, x=0 and y=0) is placed at the given\noffset in the context's canvas.<\/p>\n<p>Do not call this function directly. If you wish to paint yourself, call\n<a href=\"rendering\/RenderObject\/markNeedsPaint.html\">markNeedsPaint<\/a> instead to schedule a call to this function. If you wish\nto paint one of your children, call <a href=\"rendering\/PaintingContext\/paintChild.html\">PaintingContext.paintChild<\/a> on the\ngiven <code>context<\/code>.<\/p>\n<p>When painting one of your children (via a paint child function on the\ngiven context), the current canvas held by the context might change\nbecause draw operations before and after painting children might need to\nbe recorded on separate compositing layers.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid paint(PaintingContext context, Offset offset) {\n  if (child != null) {\n    assert(needsCompositing);\n    context.pushLayer(\n      ShaderMaskLayer(\n        shader: _shaderCallback(offset &amp; size),\n        maskRect: offset &amp; size,\n        blendMode: _blendMode,\n      ),\n      super.paint,\n      offset,\n    );\n  }\n}<\/code><\/pre>\n    ",
            "href": "rendering\/RenderShaderMask\/paint.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "paint",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.RenderShaderMask",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "rendering.PaintingContext"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Whether this render object always needs compositing.<\/p>\n<p>Override this in subclasses to indicate that your paint function always\ncreates at least one composited layer. For example, videos should return\ntrue if they use hardware decoders.<\/p>\n<p>You must call <a href=\"rendering\/RenderObject\/markNeedsCompositingBitsUpdate.html\">markNeedsCompositingBitsUpdate<\/a> if the value of this getter\nchanges. (This is implied when <a href=\"rendering\/RenderObject\/adoptChild.html\">adoptChild<\/a> or <a href=\"rendering\/RenderObject\/dropChild.html\">dropChild<\/a> are called.)<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool get alwaysNeedsCompositing =&gt; child != null;<\/code><\/pre>\n        ",
            "href": "rendering\/RenderShaderMask\/alwaysNeedsCompositing.html",
            "name": "alwaysNeedsCompositing",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "rendering.RenderShaderMask",
            "params": []
        },
        {
            "desc": "<p>The <a href=\"dart-ui\/BlendMode-class.html\">BlendMode<\/a> to use when applying the shader to the child.<\/p>\n<p>The default, <a href=\"dart-ui\/BlendMode-class.html\">BlendMode.modulate<\/a>, is useful for applying an alpha blend\nto the child. Other blend modes can be used to create other effects.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">BlendMode get blendMode =&gt; _blendMode;<\/code><\/pre>\n        ",
            "href": "rendering\/RenderShaderMask\/blendMode.html",
            "name": "blendMode",
            "isDeprecated": false,
            "type": "dart:ui.BlendMode",
            "memberOf": "rendering.RenderShaderMask",
            "params": []
        }
    ]
}