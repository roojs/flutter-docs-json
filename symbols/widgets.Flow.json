{
    "desc": "<p>A widget that sizes and positions children efficiently, according to the\nlogic in a <a href=\"rendering\/FlowDelegate-class.html\">FlowDelegate<\/a>.<\/p>\n<p>Flow layouts are optimized for repositioning children using transformation\nmatrices.<\/p>\n<p>The flow container is sized independently from the children by the\n<a href=\"rendering\/FlowDelegate\/getSize.html\">FlowDelegate.getSize<\/a> function of the delegate. The children are then sized\nindependently given the constraints from the\n<a href=\"rendering\/FlowDelegate\/getConstraintsForChild.html\">FlowDelegate.getConstraintsForChild<\/a> function.<\/p>\n<p>Rather than positioning the children during layout, the children are\npositioned using transformation matrices during the paint phase using the\nmatrices from the <a href=\"rendering\/FlowDelegate\/paintChildren.html\">FlowDelegate.paintChildren<\/a> function. The children can be\nrepositioned efficiently by simply repainting the flow, which happens\nwithout the children being laid out again (contrast this with a <a href=\"widgets\/Stack-class.html\">Stack<\/a>,\nwhich does the sizing and positioning together during layout).<\/p>\n<p>The most efficient way to trigger a repaint of the flow is to supply an\nanimation to the constructor of the <a href=\"rendering\/FlowDelegate-class.html\">FlowDelegate<\/a>. The flow will listen to\nthis animation and repaint whenever the animation ticks, avoiding both the\nbuild and layout phases of the pipeline.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/Wrap-class.html\">Wrap<\/a>, which provides the layout model that some other frameworks call\n\"flow\", and is otherwise unrelated to <a href=\"widgets\/Flow-class.html\">Flow<\/a>.<\/li>\n<li>\n<a href=\"rendering\/FlowDelegate-class.html\">FlowDelegate<\/a>, which controls the visual presentation of the children.<\/li>\n<li>\n<a href=\"widgets\/Stack-class.html\">Stack<\/a>, which arranges children relative to the edges of the container.<\/li>\n<li>\n<a href=\"widgets\/CustomSingleChildLayout-class.html\">CustomSingleChildLayout<\/a>, which uses a delegate to control the layout of\na single child.<\/li>\n<li>\n<a href=\"widgets\/CustomMultiChildLayout-class.html\">CustomMultiChildLayout<\/a>, which uses a delegate to position multiple\nchildren.<\/li>\n<li>The <a href=\"https:\/\/flutter.io\/widgets\/layout\/\">catalog of layout widgets<\/a>.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "widgets\/Flow-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.Flow",
    "shortname": "Flow",
    "extends": [
        "widgets.MultiChildRenderObjectWidget",
        "widgets.RenderObjectWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a flow layout.<\/p>\n<p>Wraps each of the given children in a <a href=\"widgets\/RepaintBoundary-class.html\">RepaintBoundary<\/a> to avoid\nrepainting the children when the flow repaints.<\/p>\n<p>The <code>delegate<\/code> argument must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Flow({\n  Key key,\n  @required this.delegate,\n  List&lt;Widget&gt; children = const &lt;Widget&gt;[],\n}) : assert(delegate != null),\n     super(key: key, children: RepaintBoundary.wrapAll(children));<\/code><\/pre>\n    ",
            "href": "widgets\/Flow\/Flow.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.Flow",
            "params": [
                {
                    "name": "children",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<widgets.Widget>"
                },
                {
                    "name": "delegate",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "rendering.FlowDelegate"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                }
            ]
        },
        {
            "desc": "<p>Creates an instance of the <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a> class that this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> represents, using the configuration described by this\n<a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a>.<\/p>\n<p>This method should not do anything with the children of the render object.\nThat should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/mount.html\">RenderObjectElement.mount<\/a> in the object rendered by this object's\n<a href=\"widgets\/MultiChildRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/mount.html\">SingleChildRenderObjectElement.mount<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nRenderFlow createRenderObject(BuildContext context) =&gt; RenderFlow(delegate: delegate);<\/code><\/pre>\n    ",
            "href": "widgets\/Flow\/createRenderObject.html",
            "isDeprecated": "0",
            "type": "rendering.RenderFlow",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.Flow",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>Copies the configuration described by this <a href=\"widgets\/RenderObjectWidget-class.html\">RenderObjectWidget<\/a> to the\ngiven <a href=\"rendering\/RenderObject-class.html\">RenderObject<\/a>, which will be of the same type as returned by this\nobject's <a href=\"widgets\/Flow\/createRenderObject.html\">createRenderObject<\/a>.<\/p>\n<p>This method should not do anything to update the children of the render\nobject. That should instead be handled by the method that overrides\n<a href=\"widgets\/RenderObjectElement\/update.html\">RenderObjectElement.update<\/a> in the object rendered by this object's\n<a href=\"widgets\/MultiChildRenderObjectWidget\/createElement.html\">createElement<\/a> method. See, for example,\n<a href=\"widgets\/SingleChildRenderObjectElement\/update.html\">SingleChildRenderObjectElement.update<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid updateRenderObject(BuildContext context, RenderFlow renderObject) {\n  renderObject\n    ..delegate = delegate;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/Flow\/updateRenderObject.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.Flow",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "renderObject",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "rendering.RenderFlow"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The delegate that controls the transformation matrices of the children.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final FlowDelegate delegate\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/Flow\/delegate.html",
            "isDeprecated": "0",
            "type": "rendering.FlowDelegate",
            "memberOf": "widgets.Flow",
            "params": []
        }
    ]
}