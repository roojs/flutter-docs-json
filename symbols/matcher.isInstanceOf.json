{
    "name": "matcher.isInstanceOf",
    "extends": [
        "matcher.TypeMatcher",
        "matcher.Matcher",
        "dart:core.Object"
    ],
    "memberOf": "matcher",
    "events": [],
    "methods": [
        {
            "name": "isInstanceOf",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "matcher.isInstanceOf",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "package-matcher_matcher\/isInstanceOf\/isInstanceOf.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const isInstanceOf();<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "package-matcher_matcher\/isInstanceOf-class.html",
    "desc": "<p><strong>DEPRECATED<\/strong> Use <a href=\"package-matcher_matcher\/TypeMatcher-class.html\">TypeMatcher<\/a> instead.<\/p>\n<p>Returns a matcher that matches if an object is an instance\nof <code>T<\/code> (or a subtype).<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "isInstanceOf"
}