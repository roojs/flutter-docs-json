{
    "type": "",
    "name": "material.SnackBarClosedReason",
    "extends": [],
    "memberOf": "material",
    "events": [],
    "methods": [
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "material.SnackBarClosedReason",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "material\/SnackBarClosedReason\/toString.html",
            "example": "",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": true,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "material\/SnackBarClosedReason-class.html",
    "desc": "<p>Specify how a <a href=\"material\/SnackBar-class.html\">SnackBar<\/a> was closed.<\/p>\n<p>The <a href=\"material\/ScaffoldState\/showSnackBar.html\">ScaffoldState.showSnackBar<\/a> function returns a\n<a href=\"material\/ScaffoldFeatureController-class.html\">ScaffoldFeatureController<\/a>. The value of the controller's closed property\nis a Future that resolves to a SnackBarClosedReason. Applications that need\nto know how a snackbar was closed can use this value.<\/p>\n<p>Example:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">Scaffold.of(context).showSnackBar(\n  SnackBar( ... )\n).closed.then((SnackBarClosedReason reason) {\n   ...\n});\n<\/code><\/pre>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "enum",
    "shortname": "SnackBarClosedReason"
}