{
    "desc": "<p>4D Matrix.\nValues are stored in column major order.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "vector_math_64\/Matrix4-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "vector_math_64",
    "name": "vector_math_64.Matrix4",
    "shortname": "Matrix4",
    "extends": [],
    "realImplementors": [
        "painting.TransformProperty",
        "widgets.Matrix4Tween"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Constructs a new mat4.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory Matrix4(\n        double arg0,\n        double arg1,\n        double arg2,\n        double arg3,\n        double arg4,\n        double arg5,\n        double arg6,\n        double arg7,\n        double arg8,\n        double arg9,\n        double arg10,\n        double arg11,\n        double arg12,\n        double arg13,\n        double arg14,\n        double arg15) =&gt;\n    new Matrix4.zero()\n      ..setValues(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9,\n          arg10, arg11, arg12, arg13, arg14, arg15);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/Matrix4.html",
            "isDeprecated": false,
            "type": "",
            "name": "Matrix4",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg0",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg1",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg10",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg11",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg12",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg13",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg14",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg15",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg2",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg3",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg4",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg5",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg6",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg7",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg8",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg9",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Returns the component wise absolute value of this.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix4 absolute() {\n  final Matrix4 r = new Matrix4.zero();\n  final Float64List rStorage = r._m4storage;\n  rStorage[0] = _m4storage[0].abs();\n  rStorage[1] = _m4storage[1].abs();\n  rStorage[2] = _m4storage[2].abs();\n  rStorage[3] = _m4storage[3].abs();\n  rStorage[4] = _m4storage[4].abs();\n  rStorage[5] = _m4storage[5].abs();\n  rStorage[6] = _m4storage[6].abs();\n  rStorage[7] = _m4storage[7].abs();\n  rStorage[8] = _m4storage[8].abs();\n  rStorage[9] = _m4storage[9].abs();\n  rStorage[10] = _m4storage[10].abs();\n  rStorage[11] = _m4storage[11].abs();\n  rStorage[12] = _m4storage[12].abs();\n  rStorage[13] = _m4storage[13].abs();\n  rStorage[14] = _m4storage[14].abs();\n  rStorage[15] = _m4storage[15].abs();\n  return r;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/absolute.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix4",
            "name": "absolute",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns absolute error between <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> and <code>correct<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double absoluteError(Matrix4 correct) {\n  final double this_norm = infinityNorm();\n  final double correct_norm = correct.infinityNorm();\n  final double diff_norm = (this_norm - correct_norm).abs();\n  return diff_norm;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/absoluteError.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "absoluteError",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "correct",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Rotates <code>arg<\/code> by the absolute rotation of <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>\nReturns <code>arg<\/code>.\nPrimarily used by AABB transformation code.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 absoluteRotate(Vector3 arg) {\n  final double m00 = _m4storage[0].abs();\n  final double m01 = _m4storage[4].abs();\n  final double m02 = _m4storage[8].abs();\n  final double m10 = _m4storage[1].abs();\n  final double m11 = _m4storage[5].abs();\n  final double m12 = _m4storage[9].abs();\n  final double m20 = _m4storage[2].abs();\n  final double m21 = _m4storage[6].abs();\n  final double m22 = _m4storage[10].abs();\n  final Float64List argStorage = arg._v3storage;\n  final double x = argStorage[0];\n  final double y = argStorage[1];\n  final double z = argStorage[2];\n  argStorage[0] = x * m00 + y * m01 + z * m02 + 0.0 * 0.0;\n  argStorage[1] = x * m10 + y * m11 + z * m12 + 0.0 * 0.0;\n  argStorage[2] = x * m20 + y * m21 + z * m22 + 0.0 * 0.0;\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/absoluteRotate.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "absoluteRotate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Adds <code>o<\/code> to <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(Matrix4 o) {\n  final Float64List oStorage = o._m4storage;\n  _m4storage[0] = _m4storage[0] + oStorage[0];\n  _m4storage[1] = _m4storage[1] + oStorage[1];\n  _m4storage[2] = _m4storage[2] + oStorage[2];\n  _m4storage[3] = _m4storage[3] + oStorage[3];\n  _m4storage[4] = _m4storage[4] + oStorage[4];\n  _m4storage[5] = _m4storage[5] + oStorage[5];\n  _m4storage[6] = _m4storage[6] + oStorage[6];\n  _m4storage[7] = _m4storage[7] + oStorage[7];\n  _m4storage[8] = _m4storage[8] + oStorage[8];\n  _m4storage[9] = _m4storage[9] + oStorage[9];\n  _m4storage[10] = _m4storage[10] + oStorage[10];\n  _m4storage[11] = _m4storage[11] + oStorage[11];\n  _m4storage[12] = _m4storage[12] + oStorage[12];\n  _m4storage[13] = _m4storage[13] + oStorage[13];\n  _m4storage[14] = _m4storage[14] + oStorage[14];\n  _m4storage[15] = _m4storage[15] + oStorage[15];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/add.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "add",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "o",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Multiply <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> to each set of xyz values in <code>array<\/code> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;double&gt; applyToVector3Array(List&lt;double&gt; array, [int offset = 0]) {\n  for (int i = 0, j = offset; i &lt; array.length; i += 3, j += 3) {\n    final Vector3 v = new Vector3.array(array, j)..applyMatrix4(this);\n    array[j] = v.storage[0];\n    array[j + 1] = v.storage[1];\n    array[j + 2] = v.storage[2];\n  }\n\n  return array;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/applyToVector3Array.html",
            "isDeprecated": false,
            "type": "dart:core.List<dart:core.double>",
            "name": "applyToVector3Array",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "array",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.double>"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Clone matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix4 clone() =&gt; new Matrix4.copy(this);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/clone.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix4",
            "name": "clone",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Copies elements from <code>array<\/code> into <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void copyFromArray(List&lt;double&gt; array, [int offset = 0]) {\n  final int i = offset;\n  _m4storage[15] = array[i + 15];\n  _m4storage[14] = array[i + 14];\n  _m4storage[13] = array[i + 13];\n  _m4storage[12] = array[i + 12];\n  _m4storage[11] = array[i + 11];\n  _m4storage[10] = array[i + 10];\n  _m4storage[9] = array[i + 9];\n  _m4storage[8] = array[i + 8];\n  _m4storage[7] = array[i + 7];\n  _m4storage[6] = array[i + 6];\n  _m4storage[5] = array[i + 5];\n  _m4storage[4] = array[i + 4];\n  _m4storage[3] = array[i + 3];\n  _m4storage[2] = array[i + 2];\n  _m4storage[1] = array[i + 1];\n  _m4storage[0] = array[i + 0];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/copyFromArray.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "copyFromArray",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "array",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.double>"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Copy into <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix4 copyInto(Matrix4 arg) {\n  final Float64List argStorage = arg._m4storage;\n  argStorage[0] = _m4storage[0];\n  argStorage[1] = _m4storage[1];\n  argStorage[2] = _m4storage[2];\n  argStorage[3] = _m4storage[3];\n  argStorage[4] = _m4storage[4];\n  argStorage[5] = _m4storage[5];\n  argStorage[6] = _m4storage[6];\n  argStorage[7] = _m4storage[7];\n  argStorage[8] = _m4storage[8];\n  argStorage[9] = _m4storage[9];\n  argStorage[10] = _m4storage[10];\n  argStorage[11] = _m4storage[11];\n  argStorage[12] = _m4storage[12];\n  argStorage[13] = _m4storage[13];\n  argStorage[14] = _m4storage[14];\n  argStorage[15] = _m4storage[15];\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/copyInto.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix4",
            "name": "copyInto",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Copies <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> into <code>array<\/code> starting at <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void copyIntoArray(List&lt;num&gt; array, [int offset = 0]) {\n  final int i = offset;\n  array[i + 15] = _m4storage[15];\n  array[i + 14] = _m4storage[14];\n  array[i + 13] = _m4storage[13];\n  array[i + 12] = _m4storage[12];\n  array[i + 11] = _m4storage[11];\n  array[i + 10] = _m4storage[10];\n  array[i + 9] = _m4storage[9];\n  array[i + 8] = _m4storage[8];\n  array[i + 7] = _m4storage[7];\n  array[i + 6] = _m4storage[6];\n  array[i + 5] = _m4storage[5];\n  array[i + 4] = _m4storage[4];\n  array[i + 3] = _m4storage[3];\n  array[i + 2] = _m4storage[2];\n  array[i + 1] = _m4storage[1];\n  array[i + 0] = _m4storage[0];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/copyIntoArray.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "copyIntoArray",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "array",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.num>"
                },
                {
                    "name": "offset",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Set this matrix to be the inverse of <code>arg<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double copyInverse(Matrix4 arg) {\n  final Float64List argStorage = arg._m4storage;\n  final double a00 = argStorage[0];\n  final double a01 = argStorage[1];\n  final double a02 = argStorage[2];\n  final double a03 = argStorage[3];\n  final double a10 = argStorage[4];\n  final double a11 = argStorage[5];\n  final double a12 = argStorage[6];\n  final double a13 = argStorage[7];\n  final double a20 = argStorage[8];\n  final double a21 = argStorage[9];\n  final double a22 = argStorage[10];\n  final double a23 = argStorage[11];\n  final double a30 = argStorage[12];\n  final double a31 = argStorage[13];\n  final double a32 = argStorage[14];\n  final double a33 = argStorage[15];\n  final double b00 = a00 * a11 - a01 * a10;\n  final double b01 = a00 * a12 - a02 * a10;\n  final double b02 = a00 * a13 - a03 * a10;\n  final double b03 = a01 * a12 - a02 * a11;\n  final double b04 = a01 * a13 - a03 * a11;\n  final double b05 = a02 * a13 - a03 * a12;\n  final double b06 = a20 * a31 - a21 * a30;\n  final double b07 = a20 * a32 - a22 * a30;\n  final double b08 = a20 * a33 - a23 * a30;\n  final double b09 = a21 * a32 - a22 * a31;\n  final double b10 = a21 * a33 - a23 * a31;\n  final double b11 = a22 * a33 - a23 * a32;\n  final double det =\n      (b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06);\n  if (det == 0.0) {\n    setFrom(arg);\n    return 0.0;\n  }\n  final double invDet = 1.0 \/ det;\n  _m4storage[0] = (a11 * b11 - a12 * b10 + a13 * b09) * invDet;\n  _m4storage[1] = (-a01 * b11 + a02 * b10 - a03 * b09) * invDet;\n  _m4storage[2] = (a31 * b05 - a32 * b04 + a33 * b03) * invDet;\n  _m4storage[3] = (-a21 * b05 + a22 * b04 - a23 * b03) * invDet;\n  _m4storage[4] = (-a10 * b11 + a12 * b08 - a13 * b07) * invDet;\n  _m4storage[5] = (a00 * b11 - a02 * b08 + a03 * b07) * invDet;\n  _m4storage[6] = (-a30 * b05 + a32 * b02 - a33 * b01) * invDet;\n  _m4storage[7] = (a20 * b05 - a22 * b02 + a23 * b01) * invDet;\n  _m4storage[8] = (a10 * b10 - a11 * b08 + a13 * b06) * invDet;\n  _m4storage[9] = (-a00 * b10 + a01 * b08 - a03 * b06) * invDet;\n  _m4storage[10] = (a30 * b04 - a31 * b02 + a33 * b00) * invDet;\n  _m4storage[11] = (-a20 * b04 + a21 * b02 - a23 * b00) * invDet;\n  _m4storage[12] = (-a10 * b09 + a11 * b07 - a12 * b06) * invDet;\n  _m4storage[13] = (a00 * b09 - a01 * b07 + a02 * b06) * invDet;\n  _m4storage[14] = (-a30 * b03 + a31 * b01 - a32 * b00) * invDet;\n  _m4storage[15] = (a20 * b03 - a21 * b01 + a22 * b00) * invDet;\n  return det;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/copyInverse.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "copyInverse",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Copies the rotation matrix from this homogeneous transformation matrix\ninto <code>rotation<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void copyRotation(Matrix3 rotation) {\n  final Float64List rStorage = rotation._m3storage;\n  rStorage[0] = _m4storage[0];\n  rStorage[1] = _m4storage[1];\n  rStorage[2] = _m4storage[2];\n  rStorage[3] = _m4storage[4];\n  rStorage[4] = _m4storage[5];\n  rStorage[5] = _m4storage[6];\n  rStorage[6] = _m4storage[8];\n  rStorage[7] = _m4storage[9];\n  rStorage[8] = _m4storage[10];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/copyRotation.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "copyRotation",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "rotation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Decomposes <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> into <code>translation<\/code>, <code>rotation<\/code> and <code>scale<\/code> components.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void decompose(Vector3 translation, Quaternion rotation, Vector3 scale) {\n  final Vector3 v = new Vector3.zero();\n  double sx =\n      (v..setValues(_m4storage[0], _m4storage[1], _m4storage[2])).length;\n  final double sy =\n      (v..setValues(_m4storage[4], _m4storage[5], _m4storage[6])).length;\n  final double sz =\n      (v..setValues(_m4storage[8], _m4storage[9], _m4storage[10])).length;\n\n  if (determinant() &lt; 0) {\n    sx = -sx;\n  }\n\n  translation._v3storage[0] = _m4storage[12];\n  translation._v3storage[1] = _m4storage[13];\n  translation._v3storage[2] = _m4storage[14];\n\n  final double invSX = 1.0 \/ sx;\n  final double invSY = 1.0 \/ sy;\n  final double invSZ = 1.0 \/ sz;\n\n  final Matrix4 m = new Matrix4.copy(this);\n  m._m4storage[0] *= invSX;\n  m._m4storage[1] *= invSX;\n  m._m4storage[2] *= invSX;\n  m._m4storage[4] *= invSY;\n  m._m4storage[5] *= invSY;\n  m._m4storage[6] *= invSY;\n  m._m4storage[8] *= invSZ;\n  m._m4storage[9] *= invSZ;\n  m._m4storage[10] *= invSZ;\n\n  rotation.setFromRotation(m.getRotation());\n\n  scale._v3storage[0] = sx;\n  scale._v3storage[1] = sy;\n  scale._v3storage[2] = sz;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/decompose.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "decompose",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "rotation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Quaternion"
                },
                {
                    "name": "scale",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "translation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Returns the determinant of this matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double determinant() {\n  final double det2_01_01 =\n      _m4storage[0] * _m4storage[5] - _m4storage[1] * _m4storage[4];\n  final double det2_01_02 =\n      _m4storage[0] * _m4storage[6] - _m4storage[2] * _m4storage[4];\n  final double det2_01_03 =\n      _m4storage[0] * _m4storage[7] - _m4storage[3] * _m4storage[4];\n  final double det2_01_12 =\n      _m4storage[1] * _m4storage[6] - _m4storage[2] * _m4storage[5];\n  final double det2_01_13 =\n      _m4storage[1] * _m4storage[7] - _m4storage[3] * _m4storage[5];\n  final double det2_01_23 =\n      _m4storage[2] * _m4storage[7] - _m4storage[3] * _m4storage[6];\n  final double det3_201_012 = _m4storage[8] * det2_01_12 -\n      _m4storage[9] * det2_01_02 +\n      _m4storage[10] * det2_01_01;\n  final double det3_201_013 = _m4storage[8] * det2_01_13 -\n      _m4storage[9] * det2_01_03 +\n      _m4storage[11] * det2_01_01;\n  final double det3_201_023 = _m4storage[8] * det2_01_23 -\n      _m4storage[10] * det2_01_03 +\n      _m4storage[11] * det2_01_02;\n  final double det3_201_123 = _m4storage[9] * det2_01_23 -\n      _m4storage[10] * det2_01_13 +\n      _m4storage[11] * det2_01_12;\n  return -det3_201_123 * _m4storage[12] +\n      det3_201_023 * _m4storage[13] -\n      det3_201_013 * _m4storage[14] +\n      det3_201_012 * _m4storage[15];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/determinant.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "determinant",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns the dot product of column <code>j<\/code> and <code>v<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double dotColumn(int j, Vector4 v) {\n  final Float64List vStorage = v._v4storage;\n  return _m4storage[j * 4] * vStorage[0] +\n      _m4storage[j * 4 + 1] * vStorage[1] +\n      _m4storage[j * 4 + 2] * vStorage[2] +\n      _m4storage[j * 4 + 3] * vStorage[3];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/dotColumn.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "dotColumn",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "j",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "v",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                }
            ]
        },
        {
            "desc": "<p>Returns the dot product of row <code>i<\/code> and <code>v<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double dotRow(int i, Vector4 v) {\n  final Float64List vStorage = v._v4storage;\n  return _m4storage[i] * vStorage[0] +\n      _m4storage[4 + i] * vStorage[1] +\n      _m4storage[8 + i] * vStorage[2] +\n      _m4storage[12 + i] * vStorage[3];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/dotRow.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "dotRow",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "i",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "v",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                }
            ]
        },
        {
            "desc": "<p>Value at <code>row<\/code>, <code>col<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double entry(int row, int col) {\n  assert((row &gt;= 0) &amp;&amp; (row &lt; dimension));\n  assert((col &gt;= 0) &amp;&amp; (col &lt; dimension));\n\n  return _m4storage[index(row, col)];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/entry.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "entry",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "col",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "row",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Gets the <code>column<\/code> of the matrix<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector4 getColumn(int column) {\n  final Vector4 r = new Vector4.zero();\n  final Float64List rStorage = r._v4storage;\n  final int entry = column * 4;\n  rStorage[3] = _m4storage[entry + 3];\n  rStorage[2] = _m4storage[entry + 2];\n  rStorage[1] = _m4storage[entry + 1];\n  rStorage[0] = _m4storage[entry + 0];\n  return r;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/getColumn.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector4",
            "name": "getColumn",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "column",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Returns the max scale value of the 3 axes.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double getMaxScaleOnAxis() {\n  final double scaleXSq = _m4storage[0] * _m4storage[0] +\n      _m4storage[1] * _m4storage[1] +\n      _m4storage[2] * _m4storage[2];\n  final double scaleYSq = _m4storage[4] * _m4storage[4] +\n      _m4storage[5] * _m4storage[5] +\n      _m4storage[6] * _m4storage[6];\n  final double scaleZSq = _m4storage[8] * _m4storage[8] +\n      _m4storage[9] * _m4storage[9] +\n      _m4storage[10] * _m4storage[10];\n  return math.sqrt(math.max(scaleXSq, math.max(scaleYSq, scaleZSq)));\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/getMaxScaleOnAxis.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "getMaxScaleOnAxis",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns the normal matrix from this homogeneous transformation matrix. The normal\nmatrix is the transpose of the inverse of the top-left 3x3 part of this 4x4 matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix3 getNormalMatrix() =&gt; new Matrix3.identity()..copyNormalMatrix(this);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/getNormalMatrix.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix3",
            "name": "getNormalMatrix",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns the rotation matrix from this homogeneous transformation matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix3 getRotation() {\n  final Matrix3 r = new Matrix3.zero();\n  copyRotation(r);\n  return r;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/getRotation.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix3",
            "name": "getRotation",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Gets the <code>row<\/code> of the matrix<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector4 getRow(int row) {\n  final Vector4 r = new Vector4.zero();\n  final Float64List rStorage = r._v4storage;\n  rStorage[0] = _m4storage[index(row, 0)];\n  rStorage[1] = _m4storage[index(row, 1)];\n  rStorage[2] = _m4storage[index(row, 2)];\n  rStorage[3] = _m4storage[index(row, 3)];\n  return r;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/getRow.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector4",
            "name": "getRow",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "row",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Returns the translation vector from this homogeneous transformation matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 getTranslation() {\n  final double z = _m4storage[14];\n  final double y = _m4storage[13];\n  final double x = _m4storage[12];\n  return new Vector3(x, y, z);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/getTranslation.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "getTranslation",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Return index in storage for <code>row<\/code>, <code>col<\/code> value.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">int index(int row, int col) =&gt; (col * 4) + row;<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/index.html",
            "isDeprecated": false,
            "type": "dart:core.int",
            "name": "index",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "col",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "row",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Returns infinity norm of the matrix. Used for numerical analysis.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double infinityNorm() {\n  double norm = 0.0;\n  {\n    double row_norm = 0.0;\n    row_norm += _m4storage[0].abs();\n    row_norm += _m4storage[1].abs();\n    row_norm += _m4storage[2].abs();\n    row_norm += _m4storage[3].abs();\n    norm = row_norm &gt; norm ? row_norm : norm;\n  }\n  {\n    double row_norm = 0.0;\n    row_norm += _m4storage[4].abs();\n    row_norm += _m4storage[5].abs();\n    row_norm += _m4storage[6].abs();\n    row_norm += _m4storage[7].abs();\n    norm = row_norm &gt; norm ? row_norm : norm;\n  }\n  {\n    double row_norm = 0.0;\n    row_norm += _m4storage[8].abs();\n    row_norm += _m4storage[9].abs();\n    row_norm += _m4storage[10].abs();\n    row_norm += _m4storage[11].abs();\n    norm = row_norm &gt; norm ? row_norm : norm;\n  }\n  {\n    double row_norm = 0.0;\n    row_norm += _m4storage[12].abs();\n    row_norm += _m4storage[13].abs();\n    row_norm += _m4storage[14].abs();\n    row_norm += _m4storage[15].abs();\n    norm = row_norm &gt; norm ? row_norm : norm;\n  }\n  return norm;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/infinityNorm.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "infinityNorm",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Invert <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double invert() =&gt; copyInverse(this);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/invert.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "invert",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double invertRotation() {\n  final double det = determinant();\n  if (det == 0.0) {\n    return 0.0;\n  }\n  final double invDet = 1.0 \/ det;\n  double ix;\n  double iy;\n  double iz;\n  double jx;\n  double jy;\n  double jz;\n  double kx;\n  double ky;\n  double kz;\n  ix = invDet *\n      (_m4storage[5] * _m4storage[10] - _m4storage[6] * _m4storage[9]);\n  iy = invDet *\n      (_m4storage[2] * _m4storage[9] - _m4storage[1] * _m4storage[10]);\n  iz = invDet *\n      (_m4storage[1] * _m4storage[6] - _m4storage[2] * _m4storage[5]);\n  jx = invDet *\n      (_m4storage[6] * _m4storage[8] - _m4storage[4] * _m4storage[10]);\n  jy = invDet *\n      (_m4storage[0] * _m4storage[10] - _m4storage[2] * _m4storage[8]);\n  jz = invDet *\n      (_m4storage[2] * _m4storage[4] - _m4storage[0] * _m4storage[6]);\n  kx = invDet *\n      (_m4storage[4] * _m4storage[9] - _m4storage[5] * _m4storage[8]);\n  ky = invDet *\n      (_m4storage[1] * _m4storage[8] - _m4storage[0] * _m4storage[9]);\n  kz = invDet *\n      (_m4storage[0] * _m4storage[5] - _m4storage[1] * _m4storage[4]);\n  _m4storage[0] = ix;\n  _m4storage[1] = iy;\n  _m4storage[2] = iz;\n  _m4storage[4] = jx;\n  _m4storage[5] = jy;\n  _m4storage[6] = jz;\n  _m4storage[8] = kx;\n  _m4storage[9] = ky;\n  _m4storage[10] = kz;\n  return det;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/invertRotation.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "invertRotation",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Is <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> the identity matrix?<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool isIdentity() =&gt;\n    _m4storage[0] == 1.0 \/\/ col 1\n    &amp;&amp;\n    _m4storage[1] == 0.0 &amp;&amp;\n    _m4storage[2] == 0.0 &amp;&amp;\n    _m4storage[3] == 0.0 &amp;&amp;\n    _m4storage[4] == 0.0 \/\/ col 2\n    &amp;&amp;\n    _m4storage[5] == 1.0 &amp;&amp;\n    _m4storage[6] == 0.0 &amp;&amp;\n    _m4storage[7] == 0.0 &amp;&amp;\n    _m4storage[8] == 0.0 \/\/ col 3\n    &amp;&amp;\n    _m4storage[9] == 0.0 &amp;&amp;\n    _m4storage[10] == 1.0 &amp;&amp;\n    _m4storage[11] == 0.0 &amp;&amp;\n    _m4storage[12] == 0.0 \/\/ col 4\n    &amp;&amp;\n    _m4storage[13] == 0.0 &amp;&amp;\n    _m4storage[14] == 0.0 &amp;&amp;\n    _m4storage[15] == 1.0;<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/isIdentity.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "isIdentity",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Is <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> the zero matrix?<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool isZero() =&gt;\n    _m4storage[0] == 0.0 \/\/ col 1\n    &amp;&amp;\n    _m4storage[1] == 0.0 &amp;&amp;\n    _m4storage[2] == 0.0 &amp;&amp;\n    _m4storage[3] == 0.0 &amp;&amp;\n    _m4storage[4] == 0.0 \/\/ col 2\n    &amp;&amp;\n    _m4storage[5] == 0.0 &amp;&amp;\n    _m4storage[6] == 0.0 &amp;&amp;\n    _m4storage[7] == 0.0 &amp;&amp;\n    _m4storage[8] == 0.0 \/\/ col 3\n    &amp;&amp;\n    _m4storage[9] == 0.0 &amp;&amp;\n    _m4storage[10] == 0.0 &amp;&amp;\n    _m4storage[11] == 0.0 &amp;&amp;\n    _m4storage[12] == 0.0 \/\/ col 4\n    &amp;&amp;\n    _m4storage[13] == 0.0 &amp;&amp;\n    _m4storage[14] == 0.0 &amp;&amp;\n    _m4storage[15] == 0.0;<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/isZero.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "isZero",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Multiply <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> by a translation from the left.\nThe translation can be specified with a  <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a>, <a href=\"vector_math_64\/Vector4-class.html\">Vector4<\/a>, or x, y, z.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void leftTranslate(dynamic x, [double y = 0.0, double z = 0.0]) {\n  double tx;\n  double ty;\n  double tz;\n  final double tw = x is Vector4 ? x.w : 1.0;\n  if (x is Vector3) {\n    tx = x.x;\n    ty = x.y;\n    tz = x.z;\n  } else if (x is Vector4) {\n    tx = x.x;\n    ty = x.y;\n    tz = x.z;\n  } else if (x is double) {\n    tx = x;\n    ty = y;\n    tz = z;\n  }\n\n  \/\/ Column 1\n  _m4storage[0] += tx * _m4storage[3];\n  _m4storage[1] += ty * _m4storage[3];\n  _m4storage[2] += tz * _m4storage[3];\n  _m4storage[3] = tw * _m4storage[3];\n\n  \/\/ Column 2\n  _m4storage[4] += tx * _m4storage[7];\n  _m4storage[5] += ty * _m4storage[7];\n  _m4storage[6] += tz * _m4storage[7];\n  _m4storage[7] = tw * _m4storage[7];\n\n  \/\/ Column 3\n  _m4storage[8] += tx * _m4storage[11];\n  _m4storage[9] += ty * _m4storage[11];\n  _m4storage[10] += tz * _m4storage[11];\n  _m4storage[11] = tw * _m4storage[11];\n\n  \/\/ Column 4\n  _m4storage[12] += tx * _m4storage[15];\n  _m4storage[13] += ty * _m4storage[15];\n  _m4storage[14] += tz * _m4storage[15];\n  _m4storage[15] = tw * _m4storage[15];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/leftTranslate.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "leftTranslate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "x",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<dynamic>"
                },
                {
                    "name": "y",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "z",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Multiply a copy of <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> with <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix4 multiplied(Matrix4 arg) =&gt; clone()..multiply(arg);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/multiplied.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix4",
            "name": "multiplied",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Multiply <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> by <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void multiply(Matrix4 arg) {\n  final double m00 = _m4storage[0];\n  final double m01 = _m4storage[4];\n  final double m02 = _m4storage[8];\n  final double m03 = _m4storage[12];\n  final double m10 = _m4storage[1];\n  final double m11 = _m4storage[5];\n  final double m12 = _m4storage[9];\n  final double m13 = _m4storage[13];\n  final double m20 = _m4storage[2];\n  final double m21 = _m4storage[6];\n  final double m22 = _m4storage[10];\n  final double m23 = _m4storage[14];\n  final double m30 = _m4storage[3];\n  final double m31 = _m4storage[7];\n  final double m32 = _m4storage[11];\n  final double m33 = _m4storage[15];\n  final Float64List argStorage = arg._m4storage;\n  final double n00 = argStorage[0];\n  final double n01 = argStorage[4];\n  final double n02 = argStorage[8];\n  final double n03 = argStorage[12];\n  final double n10 = argStorage[1];\n  final double n11 = argStorage[5];\n  final double n12 = argStorage[9];\n  final double n13 = argStorage[13];\n  final double n20 = argStorage[2];\n  final double n21 = argStorage[6];\n  final double n22 = argStorage[10];\n  final double n23 = argStorage[14];\n  final double n30 = argStorage[3];\n  final double n31 = argStorage[7];\n  final double n32 = argStorage[11];\n  final double n33 = argStorage[15];\n  _m4storage[0] = (m00 * n00) + (m01 * n10) + (m02 * n20) + (m03 * n30);\n  _m4storage[4] = (m00 * n01) + (m01 * n11) + (m02 * n21) + (m03 * n31);\n  _m4storage[8] = (m00 * n02) + (m01 * n12) + (m02 * n22) + (m03 * n32);\n  _m4storage[12] = (m00 * n03) + (m01 * n13) + (m02 * n23) + (m03 * n33);\n  _m4storage[1] = (m10 * n00) + (m11 * n10) + (m12 * n20) + (m13 * n30);\n  _m4storage[5] = (m10 * n01) + (m11 * n11) + (m12 * n21) + (m13 * n31);\n  _m4storage[9] = (m10 * n02) + (m11 * n12) + (m12 * n22) + (m13 * n32);\n  _m4storage[13] = (m10 * n03) + (m11 * n13) + (m12 * n23) + (m13 * n33);\n  _m4storage[2] = (m20 * n00) + (m21 * n10) + (m22 * n20) + (m23 * n30);\n  _m4storage[6] = (m20 * n01) + (m21 * n11) + (m22 * n21) + (m23 * n31);\n  _m4storage[10] = (m20 * n02) + (m21 * n12) + (m22 * n22) + (m23 * n32);\n  _m4storage[14] = (m20 * n03) + (m21 * n13) + (m22 * n23) + (m23 * n33);\n  _m4storage[3] = (m30 * n00) + (m31 * n10) + (m32 * n20) + (m33 * n30);\n  _m4storage[7] = (m30 * n01) + (m31 * n11) + (m32 * n21) + (m33 * n31);\n  _m4storage[11] = (m30 * n02) + (m31 * n12) + (m32 * n22) + (m33 * n32);\n  _m4storage[15] = (m30 * n03) + (m31 * n13) + (m32 * n23) + (m33 * n33);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/multiply.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "multiply",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Multiply <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> with a transposed <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void multiplyTranspose(Matrix4 arg) {\n  final double m00 = _m4storage[0];\n  final double m01 = _m4storage[4];\n  final double m02 = _m4storage[8];\n  final double m03 = _m4storage[12];\n  final double m10 = _m4storage[1];\n  final double m11 = _m4storage[5];\n  final double m12 = _m4storage[9];\n  final double m13 = _m4storage[13];\n  final double m20 = _m4storage[2];\n  final double m21 = _m4storage[6];\n  final double m22 = _m4storage[10];\n  final double m23 = _m4storage[14];\n  final double m30 = _m4storage[3];\n  final double m31 = _m4storage[7];\n  final double m32 = _m4storage[11];\n  final double m33 = _m4storage[15];\n  final Float64List argStorage = arg._m4storage;\n  _m4storage[0] = (m00 * argStorage[0]) +\n      (m01 * argStorage[4]) +\n      (m02 * argStorage[8]) +\n      (m03 * argStorage[12]);\n  _m4storage[4] = (m00 * argStorage[1]) +\n      (m01 * argStorage[5]) +\n      (m02 * argStorage[9]) +\n      (m03 * argStorage[13]);\n  _m4storage[8] = (m00 * argStorage[2]) +\n      (m01 * argStorage[6]) +\n      (m02 * argStorage[10]) +\n      (m03 * argStorage[14]);\n  _m4storage[12] = (m00 * argStorage[3]) +\n      (m01 * argStorage[7]) +\n      (m02 * argStorage[11]) +\n      (m03 * argStorage[15]);\n  _m4storage[1] = (m10 * argStorage[0]) +\n      (m11 * argStorage[4]) +\n      (m12 * argStorage[8]) +\n      (m13 * argStorage[12]);\n  _m4storage[5] = (m10 * argStorage[1]) +\n      (m11 * argStorage[5]) +\n      (m12 * argStorage[9]) +\n      (m13 * argStorage[13]);\n  _m4storage[9] = (m10 * argStorage[2]) +\n      (m11 * argStorage[6]) +\n      (m12 * argStorage[10]) +\n      (m13 * argStorage[14]);\n  _m4storage[13] = (m10 * argStorage[3]) +\n      (m11 * argStorage[7]) +\n      (m12 * argStorage[11]) +\n      (m13 * argStorage[15]);\n  _m4storage[2] = (m20 * argStorage[0]) +\n      (m21 * argStorage[4]) +\n      (m22 * argStorage[8]) +\n      (m23 * argStorage[12]);\n  _m4storage[6] = (m20 * argStorage[1]) +\n      (m21 * argStorage[5]) +\n      (m22 * argStorage[9]) +\n      (m23 * argStorage[13]);\n  _m4storage[10] = (m20 * argStorage[2]) +\n      (m21 * argStorage[6]) +\n      (m22 * argStorage[10]) +\n      (m23 * argStorage[14]);\n  _m4storage[14] = (m20 * argStorage[3]) +\n      (m21 * argStorage[7]) +\n      (m22 * argStorage[11]) +\n      (m23 * argStorage[15]);\n  _m4storage[3] = (m30 * argStorage[0]) +\n      (m31 * argStorage[4]) +\n      (m32 * argStorage[8]) +\n      (m33 * argStorage[12]);\n  _m4storage[7] = (m30 * argStorage[1]) +\n      (m31 * argStorage[5]) +\n      (m32 * argStorage[9]) +\n      (m33 * argStorage[13]);\n  _m4storage[11] = (m30 * argStorage[2]) +\n      (m31 * argStorage[6]) +\n      (m32 * argStorage[10]) +\n      (m33 * argStorage[14]);\n  _m4storage[15] = (m30 * argStorage[3]) +\n      (m31 * argStorage[7]) +\n      (m32 * argStorage[11]) +\n      (m33 * argStorage[15]);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/multiplyTranspose.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "multiplyTranspose",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Negate <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void negate() {\n  _m4storage[0] = -_m4storage[0];\n  _m4storage[1] = -_m4storage[1];\n  _m4storage[2] = -_m4storage[2];\n  _m4storage[3] = -_m4storage[3];\n  _m4storage[4] = -_m4storage[4];\n  _m4storage[5] = -_m4storage[5];\n  _m4storage[6] = -_m4storage[6];\n  _m4storage[7] = -_m4storage[7];\n  _m4storage[8] = -_m4storage[8];\n  _m4storage[9] = -_m4storage[9];\n  _m4storage[10] = -_m4storage[10];\n  _m4storage[11] = -_m4storage[11];\n  _m4storage[12] = -_m4storage[12];\n  _m4storage[13] = -_m4storage[13];\n  _m4storage[14] = -_m4storage[14];\n  _m4storage[15] = -_m4storage[15];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/negate.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "negate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Transform <code>arg<\/code> of type <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a> using the perspective transformation\ndefined by <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 perspectiveTransform(Vector3 arg) {\n  final Float64List argStorage = arg._v3storage;\n  final double x_ = (_m4storage[0] * argStorage[0]) +\n      (_m4storage[4] * argStorage[1]) +\n      (_m4storage[8] * argStorage[2]) +\n      _m4storage[12];\n  final double y_ = (_m4storage[1] * argStorage[0]) +\n      (_m4storage[5] * argStorage[1]) +\n      (_m4storage[9] * argStorage[2]) +\n      _m4storage[13];\n  final double z_ = (_m4storage[2] * argStorage[0]) +\n      (_m4storage[6] * argStorage[1]) +\n      (_m4storage[10] * argStorage[2]) +\n      _m4storage[14];\n  final double w_ = 1.0 \/\n      ((_m4storage[3] * argStorage[0]) +\n          (_m4storage[7] * argStorage[1]) +\n          (_m4storage[11] * argStorage[2]) +\n          _m4storage[15]);\n  argStorage[0] = x_ * w_;\n  argStorage[1] = y_ * w_;\n  argStorage[2] = z_ * w_;\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/perspectiveTransform.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "perspectiveTransform",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Returns relative error between <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> and <code>correct<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double relativeError(Matrix4 correct) {\n  final Matrix4 diff = correct - this;\n  final double correct_norm = correct.infinityNorm();\n  final double diff_norm = diff.infinityNorm();\n  return diff_norm \/ correct_norm;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/relativeError.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "relativeError",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "correct",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Rotate this <code>angle<\/code> radians around <code>axis<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void rotate(Vector3 axis, double angle) {\n  final double len = axis.length;\n  final Float64List axisStorage = axis._v3storage;\n  final double x = axisStorage[0] \/ len;\n  final double y = axisStorage[1] \/ len;\n  final double z = axisStorage[2] \/ len;\n  final double c = math.cos(angle);\n  final double s = math.sin(angle);\n  final double C = 1.0 - c;\n  final double m11 = x * x * C + c;\n  final double m12 = x * y * C - z * s;\n  final double m13 = x * z * C + y * s;\n  final double m21 = y * x * C + z * s;\n  final double m22 = y * y * C + c;\n  final double m23 = y * z * C - x * s;\n  final double m31 = z * x * C - y * s;\n  final double m32 = z * y * C + x * s;\n  final double m33 = z * z * C + c;\n  final double t1 =\n      _m4storage[0] * m11 + _m4storage[4] * m21 + _m4storage[8] * m31;\n  final double t2 =\n      _m4storage[1] * m11 + _m4storage[5] * m21 + _m4storage[9] * m31;\n  final double t3 =\n      _m4storage[2] * m11 + _m4storage[6] * m21 + _m4storage[10] * m31;\n  final double t4 =\n      _m4storage[3] * m11 + _m4storage[7] * m21 + _m4storage[11] * m31;\n  final double t5 =\n      _m4storage[0] * m12 + _m4storage[4] * m22 + _m4storage[8] * m32;\n  final double t6 =\n      _m4storage[1] * m12 + _m4storage[5] * m22 + _m4storage[9] * m32;\n  final double t7 =\n      _m4storage[2] * m12 + _m4storage[6] * m22 + _m4storage[10] * m32;\n  final double t8 =\n      _m4storage[3] * m12 + _m4storage[7] * m22 + _m4storage[11] * m32;\n  final double t9 =\n      _m4storage[0] * m13 + _m4storage[4] * m23 + _m4storage[8] * m33;\n  final double t10 =\n      _m4storage[1] * m13 + _m4storage[5] * m23 + _m4storage[9] * m33;\n  final double t11 =\n      _m4storage[2] * m13 + _m4storage[6] * m23 + _m4storage[10] * m33;\n  final double t12 =\n      _m4storage[3] * m13 + _m4storage[7] * m23 + _m4storage[11] * m33;\n  _m4storage[0] = t1;\n  _m4storage[1] = t2;\n  _m4storage[2] = t3;\n  _m4storage[3] = t4;\n  _m4storage[4] = t5;\n  _m4storage[5] = t6;\n  _m4storage[6] = t7;\n  _m4storage[7] = t8;\n  _m4storage[8] = t9;\n  _m4storage[9] = t10;\n  _m4storage[10] = t11;\n  _m4storage[11] = t12;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/rotate.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "rotate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "angle",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "axis",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Rotate <code>arg<\/code> of type <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a> using the rotation defined by <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 rotate3(Vector3 arg) {\n  final Float64List argStorage = arg._v3storage;\n  final double x_ = (_m4storage[0] * argStorage[0]) +\n      (_m4storage[4] * argStorage[1]) +\n      (_m4storage[8] * argStorage[2]);\n  final double y_ = (_m4storage[1] * argStorage[0]) +\n      (_m4storage[5] * argStorage[1]) +\n      (_m4storage[9] * argStorage[2]);\n  final double z_ = (_m4storage[2] * argStorage[0]) +\n      (_m4storage[6] * argStorage[1]) +\n      (_m4storage[10] * argStorage[2]);\n  argStorage[0] = x_;\n  argStorage[1] = y_;\n  argStorage[2] = z_;\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/rotate3.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "rotate3",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Rotate this <code>angle<\/code> radians around X<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void rotateX(double angle) {\n  final double cosAngle = math.cos(angle);\n  final double sinAngle = math.sin(angle);\n  final double t1 = _m4storage[4] * cosAngle + _m4storage[8] * sinAngle;\n  final double t2 = _m4storage[5] * cosAngle + _m4storage[9] * sinAngle;\n  final double t3 = _m4storage[6] * cosAngle + _m4storage[10] * sinAngle;\n  final double t4 = _m4storage[7] * cosAngle + _m4storage[11] * sinAngle;\n  final double t5 = _m4storage[4] * -sinAngle + _m4storage[8] * cosAngle;\n  final double t6 = _m4storage[5] * -sinAngle + _m4storage[9] * cosAngle;\n  final double t7 = _m4storage[6] * -sinAngle + _m4storage[10] * cosAngle;\n  final double t8 = _m4storage[7] * -sinAngle + _m4storage[11] * cosAngle;\n  _m4storage[4] = t1;\n  _m4storage[5] = t2;\n  _m4storage[6] = t3;\n  _m4storage[7] = t4;\n  _m4storage[8] = t5;\n  _m4storage[9] = t6;\n  _m4storage[10] = t7;\n  _m4storage[11] = t8;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/rotateX.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "rotateX",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "angle",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Rotate this matrix <code>angle<\/code> radians around Y<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void rotateY(double angle) {\n  final double cosAngle = math.cos(angle);\n  final double sinAngle = math.sin(angle);\n  final double t1 = _m4storage[0] * cosAngle + _m4storage[8] * -sinAngle;\n  final double t2 = _m4storage[1] * cosAngle + _m4storage[9] * -sinAngle;\n  final double t3 = _m4storage[2] * cosAngle + _m4storage[10] * -sinAngle;\n  final double t4 = _m4storage[3] * cosAngle + _m4storage[11] * -sinAngle;\n  final double t5 = _m4storage[0] * sinAngle + _m4storage[8] * cosAngle;\n  final double t6 = _m4storage[1] * sinAngle + _m4storage[9] * cosAngle;\n  final double t7 = _m4storage[2] * sinAngle + _m4storage[10] * cosAngle;\n  final double t8 = _m4storage[3] * sinAngle + _m4storage[11] * cosAngle;\n  _m4storage[0] = t1;\n  _m4storage[1] = t2;\n  _m4storage[2] = t3;\n  _m4storage[3] = t4;\n  _m4storage[8] = t5;\n  _m4storage[9] = t6;\n  _m4storage[10] = t7;\n  _m4storage[11] = t8;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/rotateY.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "rotateY",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "angle",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Rotate this matrix <code>angle<\/code> radians around Z<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void rotateZ(double angle) {\n  final double cosAngle = math.cos(angle);\n  final double sinAngle = math.sin(angle);\n  final double t1 = _m4storage[0] * cosAngle + _m4storage[4] * sinAngle;\n  final double t2 = _m4storage[1] * cosAngle + _m4storage[5] * sinAngle;\n  final double t3 = _m4storage[2] * cosAngle + _m4storage[6] * sinAngle;\n  final double t4 = _m4storage[3] * cosAngle + _m4storage[7] * sinAngle;\n  final double t5 = _m4storage[0] * -sinAngle + _m4storage[4] * cosAngle;\n  final double t6 = _m4storage[1] * -sinAngle + _m4storage[5] * cosAngle;\n  final double t7 = _m4storage[2] * -sinAngle + _m4storage[6] * cosAngle;\n  final double t8 = _m4storage[3] * -sinAngle + _m4storage[7] * cosAngle;\n  _m4storage[0] = t1;\n  _m4storage[1] = t2;\n  _m4storage[2] = t3;\n  _m4storage[3] = t4;\n  _m4storage[4] = t5;\n  _m4storage[5] = t6;\n  _m4storage[6] = t7;\n  _m4storage[7] = t8;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/rotateZ.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "rotateZ",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "angle",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Rotate a copy of <code>arg<\/code> of type <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a> using the rotation defined by\n<a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>. If a <code>out<\/code> parameter is supplied, the copy is stored in <code>out<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 rotated3(Vector3 arg, [Vector3 out]) {\n  if (out == null) {\n    out = new Vector3.copy(arg);\n  } else {\n    out.setFrom(arg);\n  }\n  return rotate3(out);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/rotated3.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "rotated3",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "out",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Scale this matrix by a <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a>, <a href=\"vector_math_64\/Vector4-class.html\">Vector4<\/a>, or x,y,z<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void scale(dynamic x, [double y, double z]) {\n  double sx;\n  double sy;\n  double sz;\n  final double sw = x is Vector4 ? x.w : 1.0;\n  if (x is Vector3) {\n    sx = x.x;\n    sy = x.y;\n    sz = x.z;\n  } else if (x is Vector4) {\n    sx = x.x;\n    sy = x.y;\n    sz = x.z;\n  } else if (x is double) {\n    sx = x;\n    sy = y ?? x;\n    sz = z ?? x;\n  }\n  _m4storage[0] *= sx;\n  _m4storage[1] *= sx;\n  _m4storage[2] *= sx;\n  _m4storage[3] *= sx;\n  _m4storage[4] *= sy;\n  _m4storage[5] *= sy;\n  _m4storage[6] *= sy;\n  _m4storage[7] *= sy;\n  _m4storage[8] *= sz;\n  _m4storage[9] *= sz;\n  _m4storage[10] *= sz;\n  _m4storage[11] *= sz;\n  _m4storage[12] *= sw;\n  _m4storage[13] *= sw;\n  _m4storage[14] *= sw;\n  _m4storage[15] *= sw;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/scale.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "scale",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "x",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<dynamic>"
                },
                {
                    "name": "y",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "z",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Converts into Adjugate matrix and scales by <code>scale<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void scaleAdjoint(double scale) {\n  \/\/ Adapted from code by Richard Carling.\n  final double a1 = _m4storage[0];\n  final double b1 = _m4storage[4];\n  final double c1 = _m4storage[8];\n  final double d1 = _m4storage[12];\n  final double a2 = _m4storage[1];\n  final double b2 = _m4storage[5];\n  final double c2 = _m4storage[9];\n  final double d2 = _m4storage[13];\n  final double a3 = _m4storage[2];\n  final double b3 = _m4storage[6];\n  final double c3 = _m4storage[10];\n  final double d3 = _m4storage[14];\n  final double a4 = _m4storage[3];\n  final double b4 = _m4storage[7];\n  final double c4 = _m4storage[11];\n  final double d4 = _m4storage[15];\n  _m4storage[0] = (b2 * (c3 * d4 - c4 * d3) -\n          c2 * (b3 * d4 - b4 * d3) +\n          d2 * (b3 * c4 - b4 * c3)) *\n      scale;\n  _m4storage[1] = -(a2 * (c3 * d4 - c4 * d3) -\n          c2 * (a3 * d4 - a4 * d3) +\n          d2 * (a3 * c4 - a4 * c3)) *\n      scale;\n  _m4storage[2] = (a2 * (b3 * d4 - b4 * d3) -\n          b2 * (a3 * d4 - a4 * d3) +\n          d2 * (a3 * b4 - a4 * b3)) *\n      scale;\n  _m4storage[3] = -(a2 * (b3 * c4 - b4 * c3) -\n          b2 * (a3 * c4 - a4 * c3) +\n          c2 * (a3 * b4 - a4 * b3)) *\n      scale;\n  _m4storage[4] = -(b1 * (c3 * d4 - c4 * d3) -\n          c1 * (b3 * d4 - b4 * d3) +\n          d1 * (b3 * c4 - b4 * c3)) *\n      scale;\n  _m4storage[5] = (a1 * (c3 * d4 - c4 * d3) -\n          c1 * (a3 * d4 - a4 * d3) +\n          d1 * (a3 * c4 - a4 * c3)) *\n      scale;\n  _m4storage[6] = -(a1 * (b3 * d4 - b4 * d3) -\n          b1 * (a3 * d4 - a4 * d3) +\n          d1 * (a3 * b4 - a4 * b3)) *\n      scale;\n  _m4storage[7] = (a1 * (b3 * c4 - b4 * c3) -\n          b1 * (a3 * c4 - a4 * c3) +\n          c1 * (a3 * b4 - a4 * b3)) *\n      scale;\n  _m4storage[8] = (b1 * (c2 * d4 - c4 * d2) -\n          c1 * (b2 * d4 - b4 * d2) +\n          d1 * (b2 * c4 - b4 * c2)) *\n      scale;\n  _m4storage[9] = -(a1 * (c2 * d4 - c4 * d2) -\n          c1 * (a2 * d4 - a4 * d2) +\n          d1 * (a2 * c4 - a4 * c2)) *\n      scale;\n  _m4storage[10] = (a1 * (b2 * d4 - b4 * d2) -\n          b1 * (a2 * d4 - a4 * d2) +\n          d1 * (a2 * b4 - a4 * b2)) *\n      scale;\n  _m4storage[11] = -(a1 * (b2 * c4 - b4 * c2) -\n          b1 * (a2 * c4 - a4 * c2) +\n          c1 * (a2 * b4 - a4 * b2)) *\n      scale;\n  _m4storage[12] = -(b1 * (c2 * d3 - c3 * d2) -\n          c1 * (b2 * d3 - b3 * d2) +\n          d1 * (b2 * c3 - b3 * c2)) *\n      scale;\n  _m4storage[13] = (a1 * (c2 * d3 - c3 * d2) -\n          c1 * (a2 * d3 - a3 * d2) +\n          d1 * (a2 * c3 - a3 * c2)) *\n      scale;\n  _m4storage[14] = -(a1 * (b2 * d3 - b3 * d2) -\n          b1 * (a2 * d3 - a3 * d2) +\n          d1 * (a2 * b3 - a3 * b2)) *\n      scale;\n  _m4storage[15] = (a1 * (b2 * c3 - b3 * c2) -\n          b1 * (a2 * c3 - a3 * c2) +\n          c1 * (a2 * b3 - a3 * b2)) *\n      scale;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/scaleAdjoint.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "scaleAdjoint",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "scale",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Create a copy of <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> scaled by a <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a>, <a href=\"vector_math_64\/Vector4-class.html\">Vector4<\/a> or <code>x<\/code>,<code>y<\/code>, and\n<code>z<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix4 scaled(dynamic x, [double y, double z]) =&gt; clone()..scale(x, y, z);<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/scaled.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix4",
            "name": "scaled",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "x",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<dynamic>"
                },
                {
                    "name": "y",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "z",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Assigns the <code>column<\/code> of the matrix <code>arg<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setColumn(int column, Vector4 arg) {\n  final int entry = column * 4;\n  final Float64List argStorage = arg._v4storage;\n  _m4storage[entry + 3] = argStorage[3];\n  _m4storage[entry + 2] = argStorage[2];\n  _m4storage[entry + 1] = argStorage[1];\n  _m4storage[entry + 0] = argStorage[0];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setColumn.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setColumn",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                },
                {
                    "name": "column",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Sets the entire matrix to the column values.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setColumns(Vector4 arg0, Vector4 arg1, Vector4 arg2, Vector4 arg3) {\n  final Float64List arg0Storage = arg0._v4storage;\n  final Float64List arg1Storage = arg1._v4storage;\n  final Float64List arg2Storage = arg2._v4storage;\n  final Float64List arg3Storage = arg3._v4storage;\n  _m4storage[0] = arg0Storage[0];\n  _m4storage[1] = arg0Storage[1];\n  _m4storage[2] = arg0Storage[2];\n  _m4storage[3] = arg0Storage[3];\n  _m4storage[4] = arg1Storage[0];\n  _m4storage[5] = arg1Storage[1];\n  _m4storage[6] = arg1Storage[2];\n  _m4storage[7] = arg1Storage[3];\n  _m4storage[8] = arg2Storage[0];\n  _m4storage[9] = arg2Storage[1];\n  _m4storage[10] = arg2Storage[2];\n  _m4storage[11] = arg2Storage[3];\n  _m4storage[12] = arg3Storage[0];\n  _m4storage[13] = arg3Storage[1];\n  _m4storage[14] = arg3Storage[2];\n  _m4storage[15] = arg3Storage[3];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setColumns.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setColumns",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg0",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                },
                {
                    "name": "arg1",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                },
                {
                    "name": "arg2",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                },
                {
                    "name": "arg3",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                }
            ]
        },
        {
            "desc": "<p>Sets the diagonal of the matrix to be <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setDiagonal(Vector4 arg) {\n  final Float64List argStorage = arg._v4storage;\n  _m4storage[0] = argStorage[0];\n  _m4storage[5] = argStorage[1];\n  _m4storage[10] = argStorage[2];\n  _m4storage[15] = argStorage[3];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setDiagonal.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setDiagonal",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                }
            ]
        },
        {
            "desc": "<p>Set value at <code>row<\/code>, <code>col<\/code> to be <code>v<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setEntry(int row, int col, double v) {\n  assert((row &gt;= 0) &amp;&amp; (row &lt; dimension));\n  assert((col &gt;= 0) &amp;&amp; (col &lt; dimension));\n\n  _m4storage[index(row, col)] = v;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setEntry.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setEntry",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "col",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "row",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "v",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Sets the entire matrix to the matrix in <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setFrom(Matrix4 arg) {\n  final Float64List argStorage = arg._m4storage;\n  _m4storage[15] = argStorage[15];\n  _m4storage[14] = argStorage[14];\n  _m4storage[13] = argStorage[13];\n  _m4storage[12] = argStorage[12];\n  _m4storage[11] = argStorage[11];\n  _m4storage[10] = argStorage[10];\n  _m4storage[9] = argStorage[9];\n  _m4storage[8] = argStorage[8];\n  _m4storage[7] = argStorage[7];\n  _m4storage[6] = argStorage[6];\n  _m4storage[5] = argStorage[5];\n  _m4storage[4] = argStorage[4];\n  _m4storage[3] = argStorage[3];\n  _m4storage[2] = argStorage[2];\n  _m4storage[1] = argStorage[1];\n  _m4storage[0] = argStorage[0];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setFrom.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setFrom",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Sets the matrix from translation <code>arg0<\/code> and rotation <code>arg1<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setFromTranslationRotation(Vector3 arg0, Quaternion arg1) {\n  final Float64List arg1Storage = arg1._qStorage;\n  final double x = arg1Storage[0];\n  final double y = arg1Storage[1];\n  final double z = arg1Storage[2];\n  final double w = arg1Storage[3];\n  final double x2 = x + x;\n  final double y2 = y + y;\n  final double z2 = z + z;\n  final double xx = x * x2;\n  final double xy = x * y2;\n  final double xz = x * z2;\n  final double yy = y * y2;\n  final double yz = y * z2;\n  final double zz = z * z2;\n  final double wx = w * x2;\n  final double wy = w * y2;\n  final double wz = w * z2;\n\n  final Float64List arg0Storage = arg0._v3storage;\n  _m4storage[0] = 1.0 - (yy + zz);\n  _m4storage[1] = xy + wz;\n  _m4storage[2] = xz - wy;\n  _m4storage[3] = 0.0;\n  _m4storage[4] = xy - wz;\n  _m4storage[5] = 1.0 - (xx + zz);\n  _m4storage[6] = yz + wx;\n  _m4storage[7] = 0.0;\n  _m4storage[8] = xz + wy;\n  _m4storage[9] = yz - wx;\n  _m4storage[10] = 1.0 - (xx + yy);\n  _m4storage[11] = 0.0;\n  _m4storage[12] = arg0Storage[0];\n  _m4storage[13] = arg0Storage[1];\n  _m4storage[14] = arg0Storage[2];\n  _m4storage[15] = 1.0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setFromTranslationRotation.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setFromTranslationRotation",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg0",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "arg1",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Quaternion"
                }
            ]
        },
        {
            "desc": "<p>Sets the matrix from <code>translation<\/code>, <code>rotation<\/code> and <code>scale<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setFromTranslationRotationScale(\n    Vector3 translation, Quaternion rotation, Vector3 scale) {\n  setFromTranslationRotation(translation, rotation);\n  this.scale(scale);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setFromTranslationRotationScale.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setFromTranslationRotationScale",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "rotation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Quaternion"
                },
                {
                    "name": "scale",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "translation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Makes <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> into the identity matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setIdentity() {\n  _m4storage[0] = 1.0;\n  _m4storage[1] = 0.0;\n  _m4storage[2] = 0.0;\n  _m4storage[3] = 0.0;\n  _m4storage[4] = 0.0;\n  _m4storage[5] = 1.0;\n  _m4storage[6] = 0.0;\n  _m4storage[7] = 0.0;\n  _m4storage[8] = 0.0;\n  _m4storage[9] = 0.0;\n  _m4storage[10] = 1.0;\n  _m4storage[11] = 0.0;\n  _m4storage[12] = 0.0;\n  _m4storage[13] = 0.0;\n  _m4storage[14] = 0.0;\n  _m4storage[15] = 1.0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setIdentity.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setIdentity",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setOuter(Vector4 u, Vector4 v) {\n  final Float64List uStorage = u._v4storage;\n  final Float64List vStorage = v._v4storage;\n  _m4storage[0] = uStorage[0] * vStorage[0];\n  _m4storage[1] = uStorage[0] * vStorage[1];\n  _m4storage[2] = uStorage[0] * vStorage[2];\n  _m4storage[3] = uStorage[0] * vStorage[3];\n  _m4storage[4] = uStorage[1] * vStorage[0];\n  _m4storage[5] = uStorage[1] * vStorage[1];\n  _m4storage[6] = uStorage[1] * vStorage[2];\n  _m4storage[7] = uStorage[1] * vStorage[3];\n  _m4storage[8] = uStorage[2] * vStorage[0];\n  _m4storage[9] = uStorage[2] * vStorage[1];\n  _m4storage[10] = uStorage[2] * vStorage[2];\n  _m4storage[11] = uStorage[2] * vStorage[3];\n  _m4storage[12] = uStorage[3] * vStorage[0];\n  _m4storage[13] = uStorage[3] * vStorage[1];\n  _m4storage[14] = uStorage[3] * vStorage[2];\n  _m4storage[15] = uStorage[3] * vStorage[3];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setOuter.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setOuter",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "u",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                },
                {
                    "name": "v",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                }
            ]
        },
        {
            "desc": "<p>Sets the rotation matrix in this homogeneous transformation matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setRotation(Matrix3 r) {\n  final Float64List rStorage = r._m3storage;\n  _m4storage[0] = rStorage[0];\n  _m4storage[1] = rStorage[1];\n  _m4storage[2] = rStorage[2];\n  _m4storage[4] = rStorage[3];\n  _m4storage[5] = rStorage[4];\n  _m4storage[6] = rStorage[5];\n  _m4storage[8] = rStorage[6];\n  _m4storage[9] = rStorage[7];\n  _m4storage[10] = rStorage[8];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setRotation.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setRotation",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "r",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Sets the upper 3x3 to a rotation of <code>radians<\/code> around X<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setRotationX(double radians) {\n  final double c = math.cos(radians);\n  final double s = math.sin(radians);\n  _m4storage[0] = 1.0;\n  _m4storage[1] = 0.0;\n  _m4storage[2] = 0.0;\n  _m4storage[4] = 0.0;\n  _m4storage[5] = c;\n  _m4storage[6] = s;\n  _m4storage[8] = 0.0;\n  _m4storage[9] = -s;\n  _m4storage[10] = c;\n  _m4storage[3] = 0.0;\n  _m4storage[7] = 0.0;\n  _m4storage[11] = 0.0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setRotationX.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setRotationX",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "radians",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Sets the upper 3x3 to a rotation of <code>radians<\/code> around Y<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setRotationY(double radians) {\n  final double c = math.cos(radians);\n  final double s = math.sin(radians);\n  _m4storage[0] = c;\n  _m4storage[1] = 0.0;\n  _m4storage[2] = -s;\n  _m4storage[4] = 0.0;\n  _m4storage[5] = 1.0;\n  _m4storage[6] = 0.0;\n  _m4storage[8] = s;\n  _m4storage[9] = 0.0;\n  _m4storage[10] = c;\n  _m4storage[3] = 0.0;\n  _m4storage[7] = 0.0;\n  _m4storage[11] = 0.0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setRotationY.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setRotationY",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "radians",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Sets the upper 3x3 to a rotation of <code>radians<\/code> around Z<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setRotationZ(double radians) {\n  final double c = math.cos(radians);\n  final double s = math.sin(radians);\n  _m4storage[0] = c;\n  _m4storage[1] = s;\n  _m4storage[2] = 0.0;\n  _m4storage[4] = -s;\n  _m4storage[5] = c;\n  _m4storage[6] = 0.0;\n  _m4storage[8] = 0.0;\n  _m4storage[9] = 0.0;\n  _m4storage[10] = 1.0;\n  _m4storage[3] = 0.0;\n  _m4storage[7] = 0.0;\n  _m4storage[11] = 0.0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setRotationZ.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setRotationZ",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "radians",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Assigns the <code>row<\/code> of the matrix <code>arg<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setRow(int row, Vector4 arg) {\n  final Float64List argStorage = arg._v4storage;\n  _m4storage[index(row, 0)] = argStorage[0];\n  _m4storage[index(row, 1)] = argStorage[1];\n  _m4storage[index(row, 2)] = argStorage[2];\n  _m4storage[index(row, 3)] = argStorage[3];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setRow.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setRow",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                },
                {
                    "name": "row",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Sets the translation vector in this homogeneous transformation matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setTranslation(Vector3 t) {\n  final Float64List tStorage = t._v3storage;\n  final double z = tStorage[2];\n  final double y = tStorage[1];\n  final double x = tStorage[0];\n  _m4storage[14] = z;\n  _m4storage[13] = y;\n  _m4storage[12] = x;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setTranslation.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setTranslation",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "t",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Sets the translation vector in this homogeneous transformation matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setTranslationRaw(double x, double y, double z) {\n  _m4storage[14] = z;\n  _m4storage[13] = y;\n  _m4storage[12] = x;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setTranslationRaw.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setTranslationRaw",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "x",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "y",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "z",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Sets the upper 2x2 of the matrix to be <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setUpper2x2(Matrix2 arg) {\n  final Float64List argStorage = arg._m2storage;\n  _m4storage[0] = argStorage[0];\n  _m4storage[1] = argStorage[1];\n  _m4storage[4] = argStorage[2];\n  _m4storage[5] = argStorage[3];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setUpper2x2.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setUpper2x2",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix2"
                }
            ]
        },
        {
            "desc": "<p>Sets the matrix with specified values.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setValues(\n    double arg0,\n    double arg1,\n    double arg2,\n    double arg3,\n    double arg4,\n    double arg5,\n    double arg6,\n    double arg7,\n    double arg8,\n    double arg9,\n    double arg10,\n    double arg11,\n    double arg12,\n    double arg13,\n    double arg14,\n    double arg15) {\n  _m4storage[15] = arg15;\n  _m4storage[14] = arg14;\n  _m4storage[13] = arg13;\n  _m4storage[12] = arg12;\n  _m4storage[11] = arg11;\n  _m4storage[10] = arg10;\n  _m4storage[9] = arg9;\n  _m4storage[8] = arg8;\n  _m4storage[7] = arg7;\n  _m4storage[6] = arg6;\n  _m4storage[5] = arg5;\n  _m4storage[4] = arg4;\n  _m4storage[3] = arg3;\n  _m4storage[2] = arg2;\n  _m4storage[1] = arg1;\n  _m4storage[0] = arg0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setValues.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setValues",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg0",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg1",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg10",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg11",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg12",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg13",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg14",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg15",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg2",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg3",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg4",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg5",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg6",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg7",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg8",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "arg9",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Zeros <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void setZero() {\n  _m4storage[0] = 0.0;\n  _m4storage[1] = 0.0;\n  _m4storage[2] = 0.0;\n  _m4storage[3] = 0.0;\n  _m4storage[4] = 0.0;\n  _m4storage[5] = 0.0;\n  _m4storage[6] = 0.0;\n  _m4storage[7] = 0.0;\n  _m4storage[8] = 0.0;\n  _m4storage[9] = 0.0;\n  _m4storage[10] = 0.0;\n  _m4storage[11] = 0.0;\n  _m4storage[12] = 0.0;\n  _m4storage[13] = 0.0;\n  _m4storage[14] = 0.0;\n  _m4storage[15] = 0.0;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/setZero.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "setZero",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Solve <code>A<\/code> * <code>x<\/code> = <code>b<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void solve(Matrix4 A, Vector4 x, Vector4 b) {\n  final double a00 = A._m4storage[0];\n  final double a01 = A._m4storage[1];\n  final double a02 = A._m4storage[2];\n  final double a03 = A._m4storage[3];\n  final double a10 = A._m4storage[4];\n  final double a11 = A._m4storage[5];\n  final double a12 = A._m4storage[6];\n  final double a13 = A._m4storage[7];\n  final double a20 = A._m4storage[8];\n  final double a21 = A._m4storage[9];\n  final double a22 = A._m4storage[10];\n  final double a23 = A._m4storage[11];\n  final double a30 = A._m4storage[12];\n  final double a31 = A._m4storage[13];\n  final double a32 = A._m4storage[14];\n  final double a33 = A._m4storage[15];\n  final double b00 = a00 * a11 - a01 * a10;\n  final double b01 = a00 * a12 - a02 * a10;\n  final double b02 = a00 * a13 - a03 * a10;\n  final double b03 = a01 * a12 - a02 * a11;\n  final double b04 = a01 * a13 - a03 * a11;\n  final double b05 = a02 * a13 - a03 * a12;\n  final double b06 = a20 * a31 - a21 * a30;\n  final double b07 = a20 * a32 - a22 * a30;\n  final double b08 = a20 * a33 - a23 * a30;\n  final double b09 = a21 * a32 - a22 * a31;\n  final double b10 = a21 * a33 - a23 * a31;\n  final double b11 = a22 * a33 - a23 * a32;\n\n  final double bX = b.storage[0];\n  final double bY = b.storage[1];\n  final double bZ = b.storage[2];\n  final double bW = b.storage[3];\n\n  double det =\n      b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (det != 0.0) {\n    det = 1.0 \/ det;\n  }\n\n  x\n    ..x = det *\n        ((a11 * b11 - a12 * b10 + a13 * b09) * bX -\n            (a10 * b11 - a12 * b08 + a13 * b07) * bY +\n            (a10 * b10 - a11 * b08 + a13 * b06) * bZ -\n            (a10 * b09 - a11 * b07 + a12 * b06) * bW)\n    ..y = det *\n        -((a01 * b11 - a02 * b10 + a03 * b09) * bX -\n            (a00 * b11 - a02 * b08 + a03 * b07) * bY +\n            (a00 * b10 - a01 * b08 + a03 * b06) * bZ -\n            (a00 * b09 - a01 * b07 + a02 * b06) * bW)\n    ..z = det *\n        ((a31 * b05 - a32 * b04 + a33 * b03) * bX -\n            (a30 * b05 - a32 * b02 + a33 * b01) * bY +\n            (a30 * b04 - a31 * b02 + a33 * b00) * bZ -\n            (a30 * b03 - a31 * b01 + a32 * b00) * bW)\n    ..w = det *\n        -((a21 * b05 - a22 * b04 + a23 * b03) * bX -\n            (a20 * b05 - a22 * b02 + a23 * b01) * bY +\n            (a20 * b04 - a21 * b02 + a23 * b00) * bZ -\n            (a20 * b03 - a21 * b01 + a22 * b00) * bW);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/solve.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "solve",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "A",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                },
                {
                    "name": "b",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                },
                {
                    "name": "x",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                }
            ]
        },
        {
            "desc": "<p>Solve <code>A<\/code> * <code>x<\/code> = <code>b<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void solve2(Matrix4 A, Vector2 x, Vector2 b) {\n  final double a11 = A.entry(0, 0);\n  final double a12 = A.entry(0, 1);\n  final double a21 = A.entry(1, 0);\n  final double a22 = A.entry(1, 1);\n  final double bx = b.x - A._m4storage[8];\n  final double by = b.y - A._m4storage[9];\n  double det = a11 * a22 - a12 * a21;\n\n  if (det != 0.0) {\n    det = 1.0 \/ det;\n  }\n\n  x\n    ..x = det * (a22 * bx - a12 * by)\n    ..y = det * (a11 * by - a21 * bx);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/solve2.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "solve2",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "A",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                },
                {
                    "name": "b",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector2"
                },
                {
                    "name": "x",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector2"
                }
            ]
        },
        {
            "desc": "<p>Solve <code>A<\/code> * <code>x<\/code> = <code>b<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void solve3(Matrix4 A, Vector3 x, Vector3 b) {\n  final double A0x = A.entry(0, 0);\n  final double A0y = A.entry(1, 0);\n  final double A0z = A.entry(2, 0);\n  final double A1x = A.entry(0, 1);\n  final double A1y = A.entry(1, 1);\n  final double A1z = A.entry(2, 1);\n  final double A2x = A.entry(0, 2);\n  final double A2y = A.entry(1, 2);\n  final double A2z = A.entry(2, 2);\n  final double bx = b.x - A._m4storage[12];\n  final double by = b.y - A._m4storage[13];\n  final double bz = b.z - A._m4storage[14];\n  double rx, ry, rz;\n  double det;\n\n  \/\/ Column1 cross Column 2\n  rx = A1y * A2z - A1z * A2y;\n  ry = A1z * A2x - A1x * A2z;\n  rz = A1x * A2y - A1y * A2x;\n\n  \/\/ A.getColumn(0).dot(x)\n  det = A0x * rx + A0y * ry + A0z * rz;\n  if (det != 0.0) {\n    det = 1.0 \/ det;\n  }\n\n  \/\/ b dot [Column1 cross Column 2]\n  final double x_ = det * (bx * rx + by * ry + bz * rz);\n\n  \/\/ Column2 cross b\n  rx = -(A2y * bz - A2z * by);\n  ry = -(A2z * bx - A2x * bz);\n  rz = -(A2x * by - A2y * bx);\n  \/\/ Column0 dot -[Column2 cross b (Column3)]\n  final double y_ = det * (A0x * rx + A0y * ry + A0z * rz);\n\n  \/\/ b cross Column 1\n  rx = -(by * A1z - bz * A1y);\n  ry = -(bz * A1x - bx * A1z);\n  rz = -(bx * A1y - by * A1x);\n  \/\/ Column0 dot -[b cross Column 1]\n  final double z_ = det * (A0x * rx + A0y * ry + A0z * rz);\n\n  x\n    ..x = x_\n    ..y = y_\n    ..z = z_;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/solve3.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "solve3",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "A",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                },
                {
                    "name": "b",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "x",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Sets the diagonal to <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void splatDiagonal(double arg) {\n  _m4storage[0] = arg;\n  _m4storage[5] = arg;\n  _m4storage[10] = arg;\n  _m4storage[15] = arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/splatDiagonal.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "splatDiagonal",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Subtracts <code>o<\/code> from <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void sub(Matrix4 o) {\n  final Float64List oStorage = o._m4storage;\n  _m4storage[0] = _m4storage[0] - oStorage[0];\n  _m4storage[1] = _m4storage[1] - oStorage[1];\n  _m4storage[2] = _m4storage[2] - oStorage[2];\n  _m4storage[3] = _m4storage[3] - oStorage[3];\n  _m4storage[4] = _m4storage[4] - oStorage[4];\n  _m4storage[5] = _m4storage[5] - oStorage[5];\n  _m4storage[6] = _m4storage[6] - oStorage[6];\n  _m4storage[7] = _m4storage[7] - oStorage[7];\n  _m4storage[8] = _m4storage[8] - oStorage[8];\n  _m4storage[9] = _m4storage[9] - oStorage[9];\n  _m4storage[10] = _m4storage[10] - oStorage[10];\n  _m4storage[11] = _m4storage[11] - oStorage[11];\n  _m4storage[12] = _m4storage[12] - oStorage[12];\n  _m4storage[13] = _m4storage[13] - oStorage[13];\n  _m4storage[14] = _m4storage[14] - oStorage[14];\n  _m4storage[15] = _m4storage[15] - oStorage[15];\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/sub.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "sub",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "o",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Returns a printable string<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; '[0] ${getRow(0)}\\n[1] ${getRow(1)}\\n'\n    '[2] ${getRow(2)}\\n[3] ${getRow(3)}\\n';<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns the trace of the matrix. The trace of a matrix is the sum of the\ndiagonal entries.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double trace() {\n  double t = 0.0;\n  t += _m4storage[0];\n  t += _m4storage[5];\n  t += _m4storage[10];\n  t += _m4storage[15];\n  return t;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/trace.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "trace",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Transform <code>arg<\/code> of type <a href=\"vector_math_64\/Vector4-class.html\">Vector4<\/a> using the transformation defined by\n<a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector4 transform(Vector4 arg) {\n  final Float64List argStorage = arg._v4storage;\n  final double x_ = (_m4storage[0] * argStorage[0]) +\n      (_m4storage[4] * argStorage[1]) +\n      (_m4storage[8] * argStorage[2]) +\n      (_m4storage[12] * argStorage[3]);\n  final double y_ = (_m4storage[1] * argStorage[0]) +\n      (_m4storage[5] * argStorage[1]) +\n      (_m4storage[9] * argStorage[2]) +\n      (_m4storage[13] * argStorage[3]);\n  final double z_ = (_m4storage[2] * argStorage[0]) +\n      (_m4storage[6] * argStorage[1]) +\n      (_m4storage[10] * argStorage[2]) +\n      (_m4storage[14] * argStorage[3]);\n  final double w_ = (_m4storage[3] * argStorage[0]) +\n      (_m4storage[7] * argStorage[1]) +\n      (_m4storage[11] * argStorage[2]) +\n      (_m4storage[15] * argStorage[3]);\n  argStorage[0] = x_;\n  argStorage[1] = y_;\n  argStorage[2] = z_;\n  argStorage[3] = w_;\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/transform.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector4",
            "name": "transform",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                }
            ]
        },
        {
            "desc": "<p>Transform <code>arg<\/code> of type <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a> using the transformation defined by\n<a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 transform3(Vector3 arg) {\n  final Float64List argStorage = arg._v3storage;\n  final double x_ = (_m4storage[0] * argStorage[0]) +\n      (_m4storage[4] * argStorage[1]) +\n      (_m4storage[8] * argStorage[2]) +\n      _m4storage[12];\n  final double y_ = (_m4storage[1] * argStorage[0]) +\n      (_m4storage[5] * argStorage[1]) +\n      (_m4storage[9] * argStorage[2]) +\n      _m4storage[13];\n  final double z_ = (_m4storage[2] * argStorage[0]) +\n      (_m4storage[6] * argStorage[1]) +\n      (_m4storage[10] * argStorage[2]) +\n      _m4storage[14];\n  argStorage[0] = x_;\n  argStorage[1] = y_;\n  argStorage[2] = z_;\n  return arg;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/transform3.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "transform3",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Transform a copy of <code>arg<\/code> of type <a href=\"vector_math_64\/Vector4-class.html\">Vector4<\/a> using the transformation\ndefined by <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>. If a <code>out<\/code> parameter is supplied, the copy is stored in\n<code>out<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector4 transformed(Vector4 arg, [Vector4 out]) {\n  if (out == null) {\n    out = new Vector4.copy(arg);\n  } else {\n    out.setFrom(arg);\n  }\n  return transform(out);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/transformed.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector4",
            "name": "transformed",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                },
                {
                    "name": "out",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector4"
                }
            ]
        },
        {
            "desc": "<p>Transform a copy of <code>arg<\/code> of type <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a> using the transformation\ndefined by <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a>. If a <code>out<\/code> parameter is supplied, the copy is stored in\n<code>out<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 transformed3(Vector3 arg, [Vector3 out]) {\n  if (out == null) {\n    out = new Vector3.copy(arg);\n  } else {\n    out.setFrom(arg);\n  }\n  return transform3(out);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/transformed3.html",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "name": "transformed3",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                },
                {
                    "name": "out",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Translate this matrix by a <a href=\"vector_math_64\/Vector3-class.html\">Vector3<\/a>, <a href=\"vector_math_64\/Vector4-class.html\">Vector4<\/a>, or x,y,z<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void translate(dynamic x, [double y = 0.0, double z = 0.0]) {\n  double tx;\n  double ty;\n  double tz;\n  final double tw = x is Vector4 ? x.w : 1.0;\n  if (x is Vector3) {\n    tx = x.x;\n    ty = x.y;\n    tz = x.z;\n  } else if (x is Vector4) {\n    tx = x.x;\n    ty = x.y;\n    tz = x.z;\n  } else if (x is double) {\n    tx = x;\n    ty = y;\n    tz = z;\n  }\n  final double t1 = _m4storage[0] * tx +\n      _m4storage[4] * ty +\n      _m4storage[8] * tz +\n      _m4storage[12] * tw;\n  final double t2 = _m4storage[1] * tx +\n      _m4storage[5] * ty +\n      _m4storage[9] * tz +\n      _m4storage[13] * tw;\n  final double t3 = _m4storage[2] * tx +\n      _m4storage[6] * ty +\n      _m4storage[10] * tz +\n      _m4storage[14] * tw;\n  final double t4 = _m4storage[3] * tx +\n      _m4storage[7] * ty +\n      _m4storage[11] * tz +\n      _m4storage[15] * tw;\n  _m4storage[12] = t1;\n  _m4storage[13] = t2;\n  _m4storage[14] = t3;\n  _m4storage[15] = t4;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/translate.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "translate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "x",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<dynamic>"
                },
                {
                    "name": "y",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "z",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void transpose() {\n  double temp;\n  temp = _m4storage[4];\n  _m4storage[4] = _m4storage[1];\n  _m4storage[1] = temp;\n  temp = _m4storage[8];\n  _m4storage[8] = _m4storage[2];\n  _m4storage[2] = temp;\n  temp = _m4storage[12];\n  _m4storage[12] = _m4storage[3];\n  _m4storage[3] = temp;\n  temp = _m4storage[9];\n  _m4storage[9] = _m4storage[6];\n  _m4storage[6] = temp;\n  temp = _m4storage[13];\n  _m4storage[13] = _m4storage[7];\n  _m4storage[7] = temp;\n  temp = _m4storage[14];\n  _m4storage[14] = _m4storage[11];\n  _m4storage[11] = temp;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/transpose.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "transpose",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Multiply a transposed <a href=\"vector_math_64\/Matrix4-class.html\">this<\/a> with <code>arg<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void transposeMultiply(Matrix4 arg) {\n  final double m00 = _m4storage[0];\n  final double m01 = _m4storage[1];\n  final double m02 = _m4storage[2];\n  final double m03 = _m4storage[3];\n  final double m10 = _m4storage[4];\n  final double m11 = _m4storage[5];\n  final double m12 = _m4storage[6];\n  final double m13 = _m4storage[7];\n  final double m20 = _m4storage[8];\n  final double m21 = _m4storage[9];\n  final double m22 = _m4storage[10];\n  final double m23 = _m4storage[11];\n  final double m30 = _m4storage[12];\n  final double m31 = _m4storage[13];\n  final double m32 = _m4storage[14];\n  final double m33 = _m4storage[15];\n  final Float64List argStorage = arg._m4storage;\n  _m4storage[0] = (m00 * argStorage[0]) +\n      (m01 * argStorage[1]) +\n      (m02 * argStorage[2]) +\n      (m03 * argStorage[3]);\n  _m4storage[4] = (m00 * argStorage[4]) +\n      (m01 * argStorage[5]) +\n      (m02 * argStorage[6]) +\n      (m03 * argStorage[7]);\n  _m4storage[8] = (m00 * argStorage[8]) +\n      (m01 * argStorage[9]) +\n      (m02 * argStorage[10]) +\n      (m03 * argStorage[11]);\n  _m4storage[12] = (m00 * argStorage[12]) +\n      (m01 * argStorage[13]) +\n      (m02 * argStorage[14]) +\n      (m03 * argStorage[15]);\n  _m4storage[1] = (m10 * argStorage[0]) +\n      (m11 * argStorage[1]) +\n      (m12 * argStorage[2]) +\n      (m13 * argStorage[3]);\n  _m4storage[5] = (m10 * argStorage[4]) +\n      (m11 * argStorage[5]) +\n      (m12 * argStorage[6]) +\n      (m13 * argStorage[7]);\n  _m4storage[9] = (m10 * argStorage[8]) +\n      (m11 * argStorage[9]) +\n      (m12 * argStorage[10]) +\n      (m13 * argStorage[11]);\n  _m4storage[13] = (m10 * argStorage[12]) +\n      (m11 * argStorage[13]) +\n      (m12 * argStorage[14]) +\n      (m13 * argStorage[15]);\n  _m4storage[2] = (m20 * argStorage[0]) +\n      (m21 * argStorage[1]) +\n      (m22 * argStorage[2]) +\n      (m23 * argStorage[3]);\n  _m4storage[6] = (m20 * argStorage[4]) +\n      (m21 * argStorage[5]) +\n      (m22 * argStorage[6]) +\n      (m23 * argStorage[7]);\n  _m4storage[10] = (m20 * argStorage[8]) +\n      (m21 * argStorage[9]) +\n      (m22 * argStorage[10]) +\n      (m23 * argStorage[11]);\n  _m4storage[14] = (m20 * argStorage[12]) +\n      (m21 * argStorage[13]) +\n      (m22 * argStorage[14]) +\n      (m23 * argStorage[15]);\n  _m4storage[3] = (m30 * argStorage[0]) +\n      (m31 * argStorage[1]) +\n      (m32 * argStorage[2]) +\n      (m33 * argStorage[3]);\n  _m4storage[7] = (m30 * argStorage[4]) +\n      (m31 * argStorage[5]) +\n      (m32 * argStorage[6]) +\n      (m33 * argStorage[7]);\n  _m4storage[11] = (m30 * argStorage[8]) +\n      (m31 * argStorage[9]) +\n      (m32 * argStorage[10]) +\n      (m33 * argStorage[11]);\n  _m4storage[15] = (m30 * argStorage[12]) +\n      (m31 * argStorage[13]) +\n      (m32 * argStorage[14]) +\n      (m33 * argStorage[15]);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/transposeMultiply.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "transposeMultiply",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "arg",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Transposes just the upper 3x3 rotation matrix.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void transposeRotation() {\n  double temp;\n  temp = _m4storage[1];\n  _m4storage[1] = _m4storage[4];\n  _m4storage[4] = temp;\n  temp = _m4storage[2];\n  _m4storage[2] = _m4storage[8];\n  _m4storage[8] = temp;\n  temp = _m4storage[4];\n  _m4storage[4] = _m4storage[1];\n  _m4storage[1] = temp;\n  temp = _m4storage[6];\n  _m4storage[6] = _m4storage[9];\n  _m4storage[9] = temp;\n  temp = _m4storage[8];\n  _m4storage[8] = _m4storage[2];\n  _m4storage[2] = temp;\n  temp = _m4storage[9];\n  _m4storage[9] = _m4storage[6];\n  _m4storage[6] = temp;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/transposeRotation.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "transposeRotation",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns the tranpose of this.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Matrix4 transposed() =&gt; clone()..transpose();<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/transposed.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix4",
            "name": "transposed",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns a matrix that is the inverse of <code>other<\/code> if <code>other<\/code> is invertible,\notherwise <code>null<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Matrix4 tryInvert(Matrix4 other) {\n  final Matrix4 r = new Matrix4.zero();\n  final double determinant = r.copyInverse(other);\n  if (determinant == 0.0) {\n    return null;\n  }\n  return r;\n}<\/code><\/pre>\n    ",
            "href": "vector_math_64\/Matrix4\/tryInvert.html",
            "isDeprecated": false,
            "type": "vector_math_64.Matrix4",
            "name": "tryInvert",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_64.Matrix4",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_64.Matrix4"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Dimension of the matrix.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get dimension =&gt; 4;<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix4\/dimension.html",
            "name": "dimension",
            "isDeprecated": false,
            "type": "dart:core.int",
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get forward {\n  final double x = _m4storage[8];\n  final double y = _m4storage[9];\n  final double z = _m4storage[10];\n  return new Vector3(x, y, z);\n}<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix4\/forward.html",
            "name": "forward",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"vector_math_64\/Matrix4\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"vector_math_64\/Matrix4\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"vector_math_64\/Matrix4\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"vector_math_64\/Matrix4\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"vector_math_64\/Matrix4\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"vector_math_64\/Matrix4\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get hashCode =&gt; quiver.hashObjects(_m4storage);<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix4\/hashCode.html",
            "name": "hashCode",
            "isDeprecated": false,
            "type": "dart:core.int",
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get right {\n  final double x = _m4storage[0];\n  final double y = _m4storage[1];\n  final double z = _m4storage[2];\n  return new Vector3(x, y, z);\n}<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix4\/right.html",
            "name": "right",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns row 0<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector4 get row0 =&gt; getRow(0);<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix4\/row0.html",
            "name": "row0",
            "isDeprecated": false,
            "type": "vector_math_64.Vector4",
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns row 1<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector4 get row1 =&gt; getRow(1);<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix4\/row1.html",
            "name": "row1",
            "isDeprecated": false,
            "type": "vector_math_64.Vector4",
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns row 2<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector4 get row2 =&gt; getRow(2);<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix4\/row2.html",
            "name": "row2",
            "isDeprecated": false,
            "type": "vector_math_64.Vector4",
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>Returns row 3<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector4 get row3 =&gt; getRow(3);<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix4\/row3.html",
            "name": "row3",
            "isDeprecated": false,
            "type": "vector_math_64.Vector4",
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": "<p>The components of the matrix.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Float64List get storage =&gt; _m4storage;<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix4\/storage.html",
            "name": "storage",
            "isDeprecated": false,
            "type": "dart:typed_data.Float64List",
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get up {\n  final double x = _m4storage[4];\n  final double y = _m4storage[5];\n  final double z = _m4storage[6];\n  return new Vector3(x, y, z);\n}<\/code><\/pre>\n        ",
            "href": "vector_math_64\/Matrix4\/up.html",
            "name": "up",
            "isDeprecated": false,
            "type": "vector_math_64.Vector3",
            "memberOf": "vector_math_64.Matrix4",
            "params": []
        }
    ]
}