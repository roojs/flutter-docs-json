{
    "desc": "<p>An interface for material design chips that can be selected.<\/p>\n<p>The defaults mentioned in the documentation for each attribute are what\nthe implementing classes typically use for defaults (but this class doesn't\nprovide or enforce them).<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/InputChip-class.html\">InputChip<\/a>, a chip that represents a complex piece of information, such\nas an entity (person, place, or thing) or conversational text, in a\ncompact form.<\/li>\n<li>\n<a href=\"material\/ChoiceChip-class.html\">ChoiceChip<\/a>, allows a single selection from a set of options. Choice\nchips contain related descriptive text or categories.<\/li>\n<li>\n<a href=\"material\/FilterChip-class.html\">FilterChip<\/a>, uses tags or descriptive words as a way to filter content.<\/li>\n<li><a href=\"https:\/\/material.io\/design\/components\/chips.html\">material.io\/design\/components\/chips.html<\/a><\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/SelectableChipAttributes-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.SelectableChipAttributes",
    "shortname": "SelectableChipAttributes",
    "extends": [],
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>Called when the chip should change between selected and de-selected\nstates.<\/p>\n<p>When the chip is tapped, then the <a href=\"material\/SelectableChipAttributes\/onSelected.html\">onSelected<\/a> callback, if set, will be\napplied to <code>!selected<\/code> (see <a href=\"material\/SelectableChipAttributes\/selected.html\">selected<\/a>).<\/p>\n<p>The chip passes the new value to the callback but does not actually\nchange state until the parent widget rebuilds the chip with the new\nvalue.<\/p>\n<p>The callback provided to <a href=\"material\/SelectableChipAttributes\/onSelected.html\">onSelected<\/a> should update the state of the\nparent <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> using the <a href=\"widgets\/State\/setState.html\">State.setState<\/a> method, so that the\nparent gets rebuilt.<\/p>\n<p>The <a href=\"material\/SelectableChipAttributes\/onSelected.html\">onSelected<\/a> and <a href=\"material\/TappableChipAttributes\/onPressed.html\">TappableChipAttributes.onPressed<\/a> callbacks must not\nboth be specified at the same time.<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n<div class=\"snippet-description\">\nA <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> that illustrates use of onSelected in an <a href=\"material\/InputChip-class.html\">InputChip<\/a>.\n<\/div>\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">class Wood extends StatefulWidget {\n  @override\n  State&lt;StatefulWidget&gt; createState() =&gt; WoodState();\n}\n\nclass WoodState extends State&lt;Wood&gt; {\n  bool _useChisel = false;\n\n  @override\n  Widget build(BuildContext context) {\n    return InputChip(\n      label: const Text('Use Chisel'),\n      selected: _useChisel,\n      onSelected: (bool newValue) {\n        setState(() {\n          _useChisel = newValue;\n        });\n      },\n    );\n  }\n}<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ValueChanged&lt;bool&gt; get onSelected;<\/code><\/pre>\n        ",
            "href": "material\/SelectableChipAttributes\/onSelected.html",
            "isDeprecated": false,
            "type": "foundation.ValueChanged<dart:core.bool>",
            "name": "onSelected",
            "memberOf": "material.SelectableChipAttributes",
            "params": []
        }
    ],
    "methods": [],
    "props": [
        {
            "desc": "<p>The shape of the translucent highlight painted over the avatar when the\n<a href=\"material\/SelectableChipAttributes\/selected.html\">selected<\/a> property is true.<\/p>\n<p>Only the outer path of the shape is used.<\/p>\n<p>Defaults to <a href=\"painting\/CircleBorder-class.html\">CircleBorder<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ShapeBorder get avatarBorder;<\/code><\/pre>\n        ",
            "href": "material\/SelectableChipAttributes\/avatarBorder.html",
            "name": "avatarBorder",
            "isDeprecated": false,
            "type": "painting.ShapeBorder",
            "memberOf": "material.SelectableChipAttributes",
            "params": []
        },
        {
            "desc": "<p>Elevation to be applied on the chip relative to its parent during the\npress motion.<\/p>\n<p>This controls the size of the shadow below the chip.<\/p>\n<p>Defaults to 8. The value is always non-negative.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get pressElevation;<\/code><\/pre>\n        ",
            "href": "material\/SelectableChipAttributes\/pressElevation.html",
            "name": "pressElevation",
            "isDeprecated": false,
            "type": "dart:core.double",
            "memberOf": "material.SelectableChipAttributes",
            "params": []
        },
        {
            "desc": "<p>Whether or not this chip is selected.<\/p>\n<p>If <a href=\"material\/SelectableChipAttributes\/onSelected.html\">onSelected<\/a> is not null, this value will be used to determine if the\nselect check mark will be shown or not.<\/p>\n<p>Must not be null. Defaults to false.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get selected;<\/code><\/pre>\n        ",
            "href": "material\/SelectableChipAttributes\/selected.html",
            "name": "selected",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "material.SelectableChipAttributes",
            "params": []
        },
        {
            "desc": "<p>Color to be used for the chip's background, indicating that it is\nselected.<\/p>\n<p>The chip is selected when <a href=\"material\/SelectableChipAttributes\/selected.html\">selected<\/a> is true.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Color get selectedColor;<\/code><\/pre>\n        ",
            "href": "material\/SelectableChipAttributes\/selectedColor.html",
            "name": "selectedColor",
            "isDeprecated": false,
            "type": "dart:ui.Color",
            "memberOf": "material.SelectableChipAttributes",
            "params": []
        },
        {
            "desc": "<p>Color of the chip's shadow when the elevation is greater than 0 and the\nchip is selected.<\/p>\n<p>The default is <a href=\"material\/Colors\/black-constant.html\">Colors.black<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Color get selectedShadowColor;<\/code><\/pre>\n        ",
            "href": "material\/SelectableChipAttributes\/selectedShadowColor.html",
            "name": "selectedShadowColor",
            "isDeprecated": false,
            "type": "dart:ui.Color",
            "memberOf": "material.SelectableChipAttributes",
            "params": []
        },
        {
            "desc": "<p>Tooltip string to be used for the body area (where the label and avatar\nare) of the chip.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get tooltip;<\/code><\/pre>\n        ",
            "href": "material\/SelectableChipAttributes\/tooltip.html",
            "name": "tooltip",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "material.SelectableChipAttributes",
            "params": []
        }
    ]
}