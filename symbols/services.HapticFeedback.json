{
    "name": "services.HapticFeedback",
    "extends": [],
    "memberOf": "services",
    "events": [],
    "methods": [
        {
            "name": "heavyImpact",
            "type": "dart:async.Future",
            "desc": "<p>Provides a haptic feedback corresponding a collision impact with a heavy mass.<\/p>\n<p>On iOS versions 10 and above, this uses a <code>UIImpactFeedbackGenerator<\/code> with\n<code>UIImpactFeedbackStyleHeavy<\/code>. This call has no effects on iOS versions\nbelow 10.<\/p>\n<p>On Android, this uses <code>HapticFeedbackConstants.CONTEXT_CLICK<\/code> on API levels\n23 and above. This call has no effects on Android API levels below 23.<\/p>\n    ",
            "static": false,
            "memberOf": "services.HapticFeedback",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "services\/HapticFeedback\/heavyImpact.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Future&lt;void&gt; heavyImpact() async {\n  await SystemChannels.platform.invokeMethod&lt;void&gt;(\n    'HapticFeedback.vibrate',\n    'HapticFeedbackType.heavyImpact',\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "lightImpact",
            "type": "dart:async.Future",
            "desc": "<p>Provides a haptic feedback corresponding a collision impact with a light mass.<\/p>\n<p>On iOS versions 10 and above, this uses a <code>UIImpactFeedbackGenerator<\/code> with\n<code>UIImpactFeedbackStyleLight<\/code>. This call has no effects on iOS versions\nbelow 10.<\/p>\n<p>On Android, this uses <code>HapticFeedbackConstants.VIRTUAL_KEY<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "services.HapticFeedback",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "services\/HapticFeedback\/lightImpact.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Future&lt;void&gt; lightImpact() async {\n  await SystemChannels.platform.invokeMethod&lt;void&gt;(\n    'HapticFeedback.vibrate',\n    'HapticFeedbackType.lightImpact',\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "mediumImpact",
            "type": "dart:async.Future",
            "desc": "<p>Provides a haptic feedback corresponding a collision impact with a medium mass.<\/p>\n<p>On iOS versions 10 and above, this uses a <code>UIImpactFeedbackGenerator<\/code> with\n<code>UIImpactFeedbackStyleMedium<\/code>. This call has no effects on iOS versions\nbelow 10.<\/p>\n<p>On Android, this uses <code>HapticFeedbackConstants.KEYBOARD_TAP<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "services.HapticFeedback",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "services\/HapticFeedback\/mediumImpact.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Future&lt;void&gt; mediumImpact() async {\n  await SystemChannels.platform.invokeMethod&lt;void&gt;(\n    'HapticFeedback.vibrate',\n    'HapticFeedbackType.mediumImpact',\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "selectionClick",
            "type": "dart:async.Future",
            "desc": "<p>Provides a haptic feedback indication selection changing through discrete values.<\/p>\n<p>On iOS versions 10 and above, this uses a <code>UISelectionFeedbackGenerator<\/code>.\nThis call has no effects on iOS versions below 10.<\/p>\n<p>On Android, this uses <code>HapticFeedbackConstants.CLOCK_TICK<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "services.HapticFeedback",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "services\/HapticFeedback\/selectionClick.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Future&lt;void&gt; selectionClick() async {\n  await SystemChannels.platform.invokeMethod&lt;void&gt;(\n    'HapticFeedback.vibrate',\n    'HapticFeedbackType.selectionClick',\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "vibrate",
            "type": "dart:async.Future",
            "desc": "<p>Provides vibration haptic feedback to the user for a short duration.<\/p>\n<p>On iOS devices that support haptic feedback, this uses the default system\nvibration value (<code>kSystemSoundID_Vibrate<\/code>).<\/p>\n<p>On Android, this uses the platform haptic feedback API to simulate a\nresponse to a long press (<code>HapticFeedbackConstants.LONG_PRESS<\/code>).<\/p>\n    ",
            "static": false,
            "memberOf": "services.HapticFeedback",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "services\/HapticFeedback\/vibrate.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Future&lt;void&gt; vibrate() async {\n  await SystemChannels.platform.invokeMethod&lt;void&gt;('HapticFeedback.vibrate');\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "services\/HapticFeedback-class.html",
    "desc": "<p>Allows access to the haptic feedback interface on the device.<\/p>\n<p>This API is intentionally terse since it calls default platform behavior. It\nis not suitable for precise control of the system's haptic feedback module.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "HapticFeedback"
}