{
    "desc": "<p>A <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> implementation that gets the current time in microseconds\nvia a user-supplied function.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "quiver.testing.time\/FakeStopwatch-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "quiver.testing.time",
    "name": "quiver.testing.time.FakeStopwatch",
    "shortname": "FakeStopwatch",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">FakeStopwatch(int now(), int this.frequency)\n    : _now = now,\n      _start = null,\n      _stop = null;<\/code><\/pre>\n    ",
            "href": "quiver.testing.time\/FakeStopwatch\/FakeStopwatch.html",
            "isDeprecated": false,
            "type": "",
            "name": "FakeStopwatch",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "quiver.testing.time.FakeStopwatch",
            "params": [
                {
                    "name": "frequency",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "now",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Resets the <a href=\"quiver.testing.time\/FakeStopwatch\/elapsed.html\">elapsed<\/a> count to zero.<\/p>\n<p>This method does not stop or start the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void reset() {\n  if (_start == null) return;\n  _start = _now();\n  if (_stop != null) {\n    _stop = _start;\n  }\n}<\/code><\/pre>\n    ",
            "href": "quiver.testing.time\/FakeStopwatch\/reset.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "reset",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.testing.time.FakeStopwatch",
            "params": []
        },
        {
            "desc": "<p>Starts the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a>.<\/p>\n<p>The <a href=\"quiver.testing.time\/FakeStopwatch\/elapsed.html\">elapsed<\/a> count is increasing monotonically. If the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> has\nbeen stopped, then calling start again restarts it without resetting the\n<a href=\"quiver.testing.time\/FakeStopwatch\/elapsed.html\">elapsed<\/a> count.<\/p>\n<p>If the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> is currently running, then calling start does nothing.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void start() {\n  if (isRunning) return;\n  if (_start == null) {\n    _start = _now();\n  } else {\n    _start = _now() - (_stop - _start);\n    _stop = null;\n  }\n}<\/code><\/pre>\n    ",
            "href": "quiver.testing.time\/FakeStopwatch\/start.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "start",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.testing.time.FakeStopwatch",
            "params": []
        },
        {
            "desc": "<p>Stops the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a>.<\/p>\n<p>The <a href=\"quiver.testing.time\/FakeStopwatch\/elapsedTicks.html\">elapsedTicks<\/a> count stops increasing after this call. If the\n<a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> is currently not running, then calling this method has no\neffect.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void stop() {\n  if (!isRunning) return;\n  _stop = _now();\n}<\/code><\/pre>\n    ",
            "href": "quiver.testing.time\/FakeStopwatch\/stop.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "stop",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "quiver.testing.time.FakeStopwatch",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The <a href=\"quiver.testing.time\/FakeStopwatch\/elapsedTicks.html\">elapsedTicks<\/a> counter converted to a <a href=\"dart-core\/Duration-class.html\">Duration<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Duration get elapsed =&gt; new Duration(microseconds: elapsedMicroseconds);<\/code><\/pre>\n        ",
            "href": "quiver.testing.time\/FakeStopwatch\/elapsed.html",
            "name": "elapsed",
            "isDeprecated": false,
            "type": "dart:core.Duration",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "quiver.testing.time.FakeStopwatch",
            "params": []
        },
        {
            "desc": "<p>The <a href=\"quiver.testing.time\/FakeStopwatch\/elapsedTicks.html\">elapsedTicks<\/a> counter converted to microseconds.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get elapsedMicroseconds =&gt; (elapsedTicks * 1000000) ~\/ frequency;<\/code><\/pre>\n        ",
            "href": "quiver.testing.time\/FakeStopwatch\/elapsedMicroseconds.html",
            "name": "elapsedMicroseconds",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "quiver.testing.time.FakeStopwatch",
            "params": []
        },
        {
            "desc": "<p>The <a href=\"quiver.testing.time\/FakeStopwatch\/elapsedTicks.html\">elapsedTicks<\/a> counter converted to milliseconds.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get elapsedMilliseconds =&gt; (elapsedTicks * 1000) ~\/ frequency;<\/code><\/pre>\n        ",
            "href": "quiver.testing.time\/FakeStopwatch\/elapsedMilliseconds.html",
            "name": "elapsedMilliseconds",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "quiver.testing.time.FakeStopwatch",
            "params": []
        },
        {
            "desc": "<p>The elapsed number of clock ticks since calling <a href=\"quiver.testing.time\/FakeStopwatch\/start.html\">start<\/a> while the\n<a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> is running.<\/p>\n<p>This is the elapsed number of clock ticks between calling <a href=\"quiver.testing.time\/FakeStopwatch\/start.html\">start<\/a> and\ncalling <a href=\"quiver.testing.time\/FakeStopwatch\/stop.html\">stop<\/a>.<\/p>\n<p>Is 0 if the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> has never been started.<\/p>\n<p>The elapsed number of clock ticks increases by <a href=\"quiver.testing.time\/FakeStopwatch\/frequency.html\">frequency<\/a> every second.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get elapsedTicks {\n  if (_start == null) {\n    return 0;\n  }\n  return (_stop == null) ? (_now() - _start) : (_stop - _start);\n}<\/code><\/pre>\n        ",
            "href": "quiver.testing.time\/FakeStopwatch\/elapsedTicks.html",
            "name": "elapsedTicks",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "quiver.testing.time.FakeStopwatch",
            "params": []
        },
        {
            "desc": "<p>Frequency of the elapsed counter in Hz.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int frequency\n\n<\/code><\/pre>\n        ",
            "href": "quiver.testing.time\/FakeStopwatch\/frequency.html",
            "name": "frequency",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "quiver.testing.time.FakeStopwatch",
            "params": []
        },
        {
            "desc": "<p>Whether the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> is currently running.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isRunning =&gt; _start != null &amp;&amp; _stop == null;<\/code><\/pre>\n        ",
            "href": "quiver.testing.time\/FakeStopwatch\/isRunning.html",
            "name": "isRunning",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "quiver.testing.time.FakeStopwatch",
            "params": []
        }
    ]
}