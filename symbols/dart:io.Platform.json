{
    "desc": "<p>Information about the environment in which the current program is running.<\/p>\n<p>Platform provides information such as the operating system,\nthe hostname of the computer, the value of environment variables,\nthe path to the running program,\nand so on.<\/p>\n<h2 id=\"get-the-uri-to-the-current-dart-script\">Get the URI to the current Dart script<\/h2>\n<p>Use the <a href=\"dart-io\/Platform\/script.html\">script<\/a> getter to get the URI to the currently running\nDart script.<\/p>\n<pre class=\"language-dart\"><code>import 'dart:io' show Platform;\n\nvoid main() {\n  \/\/ Get the URI of the script being run.\n  var uri = Platform.script;\n  \/\/ Convert the URI to a path.\n  var path = uri.toFilePath();\n}\n<\/code><\/pre>\n<h2 id=\"get-the-value-of-an-environment-variable\">Get the value of an environment variable<\/h2>\n<p>The <a href=\"dart-io\/Platform\/environment.html\">environment<\/a> getter returns a the names and values of environment\nvariables in a <a href=\"dart-core\/Map-class.html\">Map<\/a> that contains key-value pairs of strings. The Map is\nunmodifiable. This sample shows how to get the value of the <code>PATH<\/code>\nenvironment variable.<\/p>\n<pre class=\"language-dart\"><code>import 'dart:io' show Platform;\n\nvoid main() {\n  Map&lt;String, String&gt; envVars = Platform.environment;\n  print(envVars['PATH']);\n}\n<\/code><\/pre>\n<h2 id=\"determine-the-os\">Determine the OS<\/h2>\n<p>You can get the name of the operating system as a string with the\n<a href=\"dart-io\/Platform\/operatingSystem.html\">operatingSystem<\/a> getter. You can also use one of the static boolean\ngetters: <a href=\"dart-io\/Platform\/isMacOS.html\">isMacOS<\/a>, <a href=\"dart-io\/Platform\/isLinux.html\">isLinux<\/a>, and <a href=\"dart-io\/Platform\/isWindows.html\">isWindows<\/a>.<\/p>\n<pre class=\"language-dart\"><code>import 'dart:io' show Platform, stdout;\n\nvoid main() {\n  \/\/ Get the operating system as a string.\n  String os = Platform.operatingSystem;\n  \/\/ Or, use a predicate getter.\n  if (Platform.isMacOS) {\n    print('is a Mac');\n  } else {\n    print('is not a Mac');\n  }\n}\n<\/code><\/pre>\n<h2 id=\"other-resources\">Other resources<\/h2>\n<p><a href=\"https:\/\/www.dartlang.org\/dart-by-example\/#dart-io-and-command-line-apps\">Dart by Example<\/a>\nprovides additional task-oriented code samples that show how to use\nvarious API from the <a href=\"dart-io\/dart-io-library.html\">dart:io<\/a> library.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-io\/Platform-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:io",
    "name": "dart:io.Platform",
    "shortname": "Platform",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "",
            "example": "",
            "href": "dart-io\/Platform\/Platform.html",
            "isDeprecated": false,
            "type": "",
            "name": "Platform",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:io.Platform",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The environment for this process as a map from string key to string value.<\/p>\n<p>The map is unmodifiable,\nand its content is retrieved from the operating system on its first use.<\/p>\n<p>Environment variables on Windows are case-insensitive,\nso on Windows the map is case-insensitive and will convert\nall keys to upper case.\nOn other platforms, keys can be distinguished by case.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static Map&lt;String, String&gt; get environment =&gt; _Platform.environment;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/environment.html",
            "name": "environment",
            "isDeprecated": false,
            "type": "dart:core.Map<dart:core.String<dart:core.String>>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>The path of the executable used to run the script in this isolate.<\/p>\n<p>The literal path used to identify the script.\nThis path might be relative or just be a name from which the executable\nwas found by searching the system path.<\/p>\n<p>Use <a href=\"dart-io\/Platform\/resolvedExecutable.html\">resolvedExecutable<\/a> to get an absolute path to the executable.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static String get executable =&gt; _Platform.executable;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/executable.html",
            "name": "executable",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>The flags passed to the executable used to run the script in this isolate.<\/p>\n<p>These are the command-line flags to the executable that precedes\nthe script name.\nProvides a new list every time the value is read.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static List&lt;String&gt; get executableArguments =&gt; _Platform.executableArguments;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/executableArguments.html",
            "name": "executableArguments",
            "isDeprecated": false,
            "type": "dart:core.List<dart:core.String>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>Whether the operating system is a version of\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/Android_%28operating_system%29\">Android<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final bool isAndroid = (_operatingSystem == \"android\")\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/isAndroid.html",
            "name": "isAndroid",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>Whether the operating system is a version of\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/Google_Fuchsia\">Fuchsia<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final bool isFuchsia = (_operatingSystem == \"fuchsia\")\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/isFuchsia.html",
            "name": "isFuchsia",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>Whether the operating system is a version of\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/IOS\">iOS<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final bool isIOS = (_operatingSystem == \"ios\")\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/isIOS.html",
            "name": "isIOS",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>Whether the operating system is a version of\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/Linux\">Linux<\/a>.<\/p>\n<p>This value is <code>false<\/code> if the operating system is a specialized\nversion of Linux that identifies itself by a different name,\nfor example Android (see <a href=\"dart-io\/Platform\/isAndroid.html\">isAndroid<\/a>).<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final bool isLinux = (_operatingSystem == \"linux\")\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/isLinux.html",
            "name": "isLinux",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>Whether the operating system is a version of\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/MacOS\">macOS<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final bool isMacOS = (_operatingSystem == \"macos\")\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/isMacOS.html",
            "name": "isMacOS",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>Whether the operating system is a version of\n<a href=\"https:\/\/en.wikipedia.org\/wiki\/Microsoft_Windows\">Microsoft Windows<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final bool isWindows = (_operatingSystem == \"windows\")\n\n<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/isWindows.html",
            "name": "isWindows",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>The local hostname for the system.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static String get localHostname =&gt; _localHostname;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/localHostname.html",
            "name": "localHostname",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>Get the name of the current locale.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static String get localeName =&gt; _Platform.localeName();<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/localeName.html",
            "name": "localeName",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>The number of individual execution units of the machine.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static int get numberOfProcessors =&gt; _numberOfProcessors;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/numberOfProcessors.html",
            "name": "numberOfProcessors",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>A string representing the operating system or platform.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static String get operatingSystem =&gt; _operatingSystem;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/operatingSystem.html",
            "name": "operatingSystem",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>A string representing the version of the operating system or platform.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static String get operatingSystemVersion =&gt; _operatingSystemVersion;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/operatingSystemVersion.html",
            "name": "operatingSystemVersion",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>The <code>--packages<\/code> flag passed to the executable used to run the script\nin this isolate.<\/p>\n<p>If present, it specifies a file describing how Dart packages are looked up.<\/p>\n<p>Is <code>null<\/code> if there is no <code>--packages<\/code> flag.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static String get packageConfig =&gt; _Platform.packageConfig;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/packageConfig.html",
            "name": "packageConfig",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>This returns <code>null<\/code>, as <code>packages\/<\/code> directories are no longer supported.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@Deprecated('packages\/ directory resolution is not supported in Dart 2')\nstatic String get packageRoot =&gt; null;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/packageRoot.html",
            "name": "packageRoot",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>The path separator used by the operating system to separate\ncomponents in file paths.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static String get pathSeparator =&gt; _pathSeparator;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/pathSeparator.html",
            "name": "pathSeparator",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>The path of the executable used to run the script in this\nisolate after it has been resolved by the OS.<\/p>\n<p>This is the absolute path, with all symlinks resolved, to the\nexecutable used to run the script.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static String get resolvedExecutable =&gt; _Platform.resolvedExecutable;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/resolvedExecutable.html",
            "name": "resolvedExecutable",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>The absolute URI of the script being run in this isolate.<\/p>\n<p>If the script argument on the command line is relative,\nit is resolved to an absolute URI before fetching the script, and\nthat absolute URI is returned.<\/p>\n<p>URI resolution only does string manipulation on the script path, and this\nmay be different from the file system's path resolution behavior. For\nexample, a symbolic link immediately followed by '..' will not be\nlooked up.<\/p>\n<p>If the executable environment does not support <a href=\"dart-io\/Platform\/script.html\">script<\/a>,\nthe URI is empty.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static Uri get script =&gt; _Platform.script;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/script.html",
            "name": "script",
            "isDeprecated": false,
            "type": "dart:core.Uri",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        },
        {
            "desc": "<p>The version of the current Dart runtime.<\/p>\n<p>The value is a <a href=\"http:\/\/semver.org\">semantic versioning<\/a>\nstring representing the version of the current Dart runtime,\npossibly followed by whitespace and other version and\nbuild details.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static String get version =&gt; _version;<\/code><\/pre>\n        ",
            "href": "dart-io\/Platform\/version.html",
            "name": "version",
            "isDeprecated": false,
            "type": "dart:core.String",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:io.Platform",
            "params": []
        }
    ]
}