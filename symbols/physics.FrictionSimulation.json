{
    "desc": "<p>A simulation that applies a drag to slow a particle down.<\/p>\n<p>Models a particle affected by fluid drag, e.g. air resistance.<\/p>\n<p>The simulation ends when the velocity of the particle drops to zero (within\nthe current velocity <a href=\"physics\/Simulation\/tolerance.html\">tolerance<\/a>).<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "physics\/FrictionSimulation-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "physics",
    "name": "physics.FrictionSimulation",
    "shortname": "FrictionSimulation",
    "extends": [
        "physics.Simulation",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a <a href=\"physics\/FrictionSimulation-class.html\">FrictionSimulation<\/a> with the given arguments, namely: the fluid\ndrag coefficient, a unitless value; the initial position, in the same\nlength units as used for <a href=\"physics\/FrictionSimulation\/x.html\">x<\/a>; and the initial velocity, in the same\nvelocity units as used for <a href=\"physics\/FrictionSimulation\/dx.html\">dx<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">FrictionSimulation(\n  double drag,\n  double position,\n  double velocity, {\n  Tolerance tolerance = Tolerance.defaultTolerance,\n}) : _drag = drag,\n     _dragLog = math.log(drag),\n     _x = position,\n     _v = velocity,\n     super(tolerance: tolerance);<\/code><\/pre>\n    ",
            "href": "physics\/FrictionSimulation\/FrictionSimulation.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "physics.FrictionSimulation",
            "params": [
                {
                    "name": "drag",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "position",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "tolerance",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "physics.Tolerance"
                },
                {
                    "name": "velocity",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>The velocity of the object in the simulation at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble dx(double time) =&gt; _v * math.pow(_drag, time);<\/code><\/pre>\n    ",
            "href": "physics\/FrictionSimulation\/dx.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "physics.FrictionSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Whether the simulation is \"done\" at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool isDone(double time) =&gt; dx(time).abs() &lt; tolerance.velocity;<\/code><\/pre>\n    ",
            "href": "physics\/FrictionSimulation\/isDone.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "physics.FrictionSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>The time at which the value of <code>x(time)<\/code> will equal <code>x<\/code>.<\/p>\n<p>Returns <code>double.infinity<\/code> if the simulation will never reach <code>x<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double timeAtX(double x) {\n  if (x == _x)\n    return 0.0;\n  if (_v == 0.0 || (_v &gt; 0 ? (x &lt; _x || x &gt; finalX) : (x &gt; _x || x &lt; finalX)))\n    return double.infinity;\n  return math.log(_dragLog * (x - _x) \/ _v + 1.0) \/ _dragLog;\n}<\/code><\/pre>\n    ",
            "href": "physics\/FrictionSimulation\/timeAtX.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "physics.FrictionSimulation",
            "params": [
                {
                    "name": "x",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>The position of the object in the simulation at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble x(double time) =&gt; _x + _v * math.pow(_drag, time) \/ _dragLog - _v \/ _dragLog;<\/code><\/pre>\n    ",
            "href": "physics\/FrictionSimulation\/x.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "physics.FrictionSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The value of <a href=\"physics\/FrictionSimulation\/x.html\">x<\/a> at <code>double.infinity<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get finalX =&gt; _x - _v \/ _dragLog;<\/code><\/pre>\n        ",
            "href": "physics\/FrictionSimulation\/finalX.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "physics.FrictionSimulation",
            "params": []
        }
    ]
}