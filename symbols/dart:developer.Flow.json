{
    "desc": "<p>A class to represent Flow events.<\/p>\n<p><a href=\"dart-developer\/Flow-class.html\">Flow<\/a> objects are used to thread flow events between timeline slices,\nfor example, those created with the <a href=\"dart-developer\/Timeline-class.html\">Timeline<\/a> class below. Adding\n<a href=\"dart-developer\/Flow-class.html\">Flow<\/a> objects cause arrows to be drawn between slices in Chrome's trace\nviewer. The arrows start at e.g <a href=\"dart-developer\/Timeline-class.html\">Timeline<\/a> events that are passed a\n<a href=\"dart-developer\/Flow\/begin.html\">Flow.begin<\/a> object, go through <a href=\"dart-developer\/Timeline-class.html\">Timeline<\/a> events that are passed a\n<a href=\"dart-developer\/Flow\/step.html\">Flow.step<\/a> object, and end at <a href=\"dart-developer\/Timeline-class.html\">Timeline<\/a> events that are passed a\n<a href=\"dart-developer\/Flow\/end.html\">Flow.end<\/a> object, all having the same <a href=\"dart-developer\/Flow\/id.html\">Flow.id<\/a>. For example:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">var flow = Flow.begin();\nTimeline.timeSync('flow_test', () {\n  doSomething();\n}, flow: flow);\n\nTimeline.timeSync('flow_test', () {\n  doSomething();\n}, flow: Flow.step(flow.id));\n\nTimeline.timeSync('flow_test', () {\n  doSomething();\n}, flow: Flow.end(flow.id));\n<\/code><\/pre>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-developer\/Flow-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "dart:developer",
    "name": "dart:developer.Flow",
    "shortname": "Flow",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>A \"begin\" Flow event.<\/p>\n<p>When passed to a <a href=\"dart-developer\/Timeline-class.html\">Timeline<\/a> method, generates a \"begin\" Flow event.\nIf <code>id<\/code> is not provided, an id that conflicts with no other Dart-generated\nflow id's will be generated.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Flow begin({int id}) {\n  return new Flow._(_begin, id ?? _getNextAsyncId());\n}<\/code><\/pre>\n    ",
            "href": "dart-developer\/Flow\/begin.html",
            "isDeprecated": false,
            "type": "dart:developer.Flow",
            "name": "begin",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:developer.Flow",
            "params": [
                {
                    "name": "id",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>An \"end\" Flow event.<\/p>\n<p>When passed to a <a href=\"dart-developer\/Timeline-class.html\">Timeline<\/a> method, generates a \"end\" Flow event.\nThe <code>id<\/code> argument is required. It can come either from another <a href=\"dart-developer\/Flow-class.html\">Flow<\/a>\nevent, or some id that comes from the environment.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Flow end(int id) =&gt; new Flow._(_end, id);<\/code><\/pre>\n    ",
            "href": "dart-developer\/Flow\/end.html",
            "isDeprecated": false,
            "type": "dart:developer.Flow",
            "name": "end",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:developer.Flow",
            "params": [
                {
                    "name": "id",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>A \"step\" Flow event.<\/p>\n<p>When passed to a <a href=\"dart-developer\/Timeline-class.html\">Timeline<\/a> method, generates a \"step\" Flow event.\nThe <code>id<\/code> argument is required. It can come either from another <a href=\"dart-developer\/Flow-class.html\">Flow<\/a>\nevent, or some id that comes from the environment.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Flow step(int id) =&gt; new Flow._(_step, id);<\/code><\/pre>\n    ",
            "href": "dart-developer\/Flow\/step.html",
            "isDeprecated": false,
            "type": "dart:developer.Flow",
            "name": "step",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:developer.Flow",
            "params": [
                {
                    "name": "id",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The flow id of the flow event.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int id\n\n<\/code><\/pre>\n        ",
            "href": "dart-developer\/Flow\/id.html",
            "name": "id",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:developer.Flow",
            "params": []
        }
    ]
}