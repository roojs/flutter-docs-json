{
    "desc": "<p>A priority queue is a priority based work-list of elements.<\/p>\n<p>The queue allows adding elements, and removing them again in priority order.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-collection_collection\/PriorityQueue-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "collection",
    "name": "collection.PriorityQueue",
    "shortname": "PriorityQueue",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates an empty <a href=\"package-collection_collection\/PriorityQueue-class.html\">PriorityQueue<\/a>.<\/p>\n<p>The created <a href=\"package-collection_collection\/PriorityQueue-class.html\">PriorityQueue<\/a> is a plain <a href=\"package-collection_collection\/HeapPriorityQueue-class.html\">HeapPriorityQueue<\/a>.<\/p>\n<p>The <code>comparison<\/code> is a <a href=\"dart-core\/Comparator.html\">Comparator<\/a> used to compare the priority of\nelements. An element that compares as less than another element has\na higher priority.<\/p>\n<p>If <code>comparison<\/code> is omitted, it defaults to <a href=\"dart-core\/Comparable\/compare.html\">Comparable.compare<\/a>. If this\nis the case, <code>E<\/code> must implement <a href=\"dart-core\/Comparable-class.html\">Comparable<\/a>, and this is checked at\nruntime for every comparison.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory PriorityQueue([int comparison(E e1, E e2)]) = HeapPriorityQueue&lt;E&gt;;<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/PriorityQueue\/PriorityQueue.html",
            "isDeprecated": false,
            "type": "",
            "name": "PriorityQueue",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "collection.PriorityQueue",
            "params": [
                {
                    "name": "e1",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "<E>"
                },
                {
                    "name": "e2",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "<E>"
                }
            ]
        },
        {
            "desc": "<p>Adds element to the queue.<\/p>\n<p>The element will become the next to be removed by <a href=\"package-collection_collection\/PriorityQueue\/removeFirst.html\">removeFirst<\/a>\nwhen all elements with higher priority have been removed.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(E element);<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/PriorityQueue\/add.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "add",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "collection.PriorityQueue",
            "params": [
                {
                    "name": "element",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<E>"
                }
            ]
        },
        {
            "desc": "<p>Adds all <code>elements<\/code> to the queue.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addAll(Iterable&lt;E&gt; elements);<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/PriorityQueue\/addAll.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "addAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "collection.PriorityQueue",
            "params": [
                {
                    "name": "elements",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Iterable"
                }
            ]
        },
        {
            "desc": "<p>Removes all the elements from this queue.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void clear();<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/PriorityQueue\/clear.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "clear",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "collection.PriorityQueue",
            "params": []
        },
        {
            "desc": "<p>Checks if <code>object<\/code> is in the queue.<\/p>\n<p>Returns true if the element is found.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool contains(E object);<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/PriorityQueue\/contains.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "contains",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "collection.PriorityQueue",
            "params": [
                {
                    "name": "object",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<E>"
                }
            ]
        },
        {
            "desc": "<p>Removes an element that compares equal to <code>element<\/code> in the queue.<\/p>\n<p>Returns true if an element is found and removed,\nand false if no equal element is found.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool remove(E element);<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/PriorityQueue\/remove.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "remove",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "collection.PriorityQueue",
            "params": [
                {
                    "name": "element",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<E>"
                }
            ]
        },
        {
            "desc": "<p>Removes all the elements from this queue and returns them.<\/p>\n<p>The returned iterable has no specified order.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Iterable&lt;E&gt; removeAll();<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/PriorityQueue\/removeAll.html",
            "isDeprecated": false,
            "type": "dart:core.Iterable",
            "name": "removeAll",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "collection.PriorityQueue",
            "params": []
        },
        {
            "desc": "<p>Removes and returns the element with the highest priority.<\/p>\n<p>Repeatedly calling this method, without adding element in between,\nis guaranteed to return elements in non-decreasing order as, specified by\n<code>comparison<\/code>.<\/p>\n<p>The queue must not be empty when this method is called.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">E removeFirst();<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/PriorityQueue\/removeFirst.html",
            "isDeprecated": false,
            "type": "<E>",
            "name": "removeFirst",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "collection.PriorityQueue",
            "params": []
        },
        {
            "desc": "<p>Returns a list of the elements of this queue in priority order.<\/p>\n<p>The queue is not modified.<\/p>\n<p>The order is the order that the elements would be in if they were\nremoved from this queue using <a href=\"package-collection_collection\/PriorityQueue\/removeFirst.html\">removeFirst<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">List&lt;E&gt; toList();<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/PriorityQueue\/toList.html",
            "isDeprecated": false,
            "type": "dart:core.List",
            "name": "toList",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "collection.PriorityQueue",
            "params": []
        },
        {
            "desc": "<p>Return a comparator based set using the comparator of this queue.<\/p>\n<p>The queue is not modified.<\/p>\n<p>The returned <a href=\"dart-core\/Set-class.html\">Set<\/a> is currently a <a href=\"dart-collection\/SplayTreeSet-class.html\">SplayTreeSet<\/a>,\nbut this may change as other ordered sets are implemented.<\/p>\n<p>The set contains all the elements of this queue.\nIf an element occurs more than once in the queue,\nthe set will contain it only once.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Set&lt;E&gt; toSet();<\/code><\/pre>\n    ",
            "href": "package-collection_collection\/PriorityQueue\/toSet.html",
            "isDeprecated": false,
            "type": "dart:core.Set",
            "name": "toSet",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "collection.PriorityQueue",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Whether the queue is empty.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isEmpty;<\/code><\/pre>\n        ",
            "href": "package-collection_collection\/PriorityQueue\/isEmpty.html",
            "name": "isEmpty",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "collection.PriorityQueue",
            "params": []
        },
        {
            "desc": "<p>Whether the queue has any elements.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isNotEmpty;<\/code><\/pre>\n        ",
            "href": "package-collection_collection\/PriorityQueue\/isNotEmpty.html",
            "name": "isNotEmpty",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "collection.PriorityQueue",
            "params": []
        },
        {
            "desc": "<p>Number of elements in the queue.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get length;<\/code><\/pre>\n        ",
            "href": "package-collection_collection\/PriorityQueue\/length.html",
            "name": "length",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "collection.PriorityQueue",
            "params": []
        }
    ]
}