{
    "name": "matcher.Matcher",
    "extends": [],
    "memberOf": "matcher",
    "events": [],
    "methods": [
        {
            "name": "Matcher",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "matcher.Matcher",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "package-matcher_matcher\/Matcher\/Matcher.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Matcher();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "describe",
            "type": "matcher.Description",
            "desc": "<p>Builds a textual description of the matcher.<\/p>\n    ",
            "static": false,
            "memberOf": "matcher.Matcher",
            "sig": "",
            "params": [
                {
                    "name": "description",
                    "type": "matcher.Description",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-matcher_matcher\/Matcher\/describe.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description describe(Description description);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "describeMismatch",
            "type": "matcher.Description",
            "desc": "<p>Builds a textual description of a specific mismatch.<\/p>\n<p><code>item<\/code> is the value that was tested by <a href=\"package-matcher_matcher\/Matcher\/matches.html\">matches<\/a>; <code>matchState<\/code> is\nthe <a href=\"dart-core\/Map-class.html\">Map<\/a> that was passed to and supplemented by <a href=\"package-matcher_matcher\/Matcher\/matches.html\">matches<\/a>\nwith additional information about the mismatch, and <code>mismatchDescription<\/code>\nis the <a href=\"package-matcher_matcher\/Description-class.html\">Description<\/a> that is being built to describe the mismatch.<\/p>\n<p>A few matchers make use of the <code>verbose<\/code> flag to provide detailed\ninformation that is not typically included but can be of help in\ndiagnosing failures, such as stack traces.<\/p>\n    ",
            "static": false,
            "memberOf": "matcher.Matcher",
            "sig": "",
            "params": [
                {
                    "name": "item",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "mismatchDescription",
                    "type": "matcher.Description",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "matchState",
                    "type": "dart:core.Map",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "verbose",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-matcher_matcher\/Matcher\/describeMismatch.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description describeMismatch(item, Description mismatchDescription,\n        Map matchState, bool verbose) =&gt;\n    mismatchDescription;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "matches",
            "type": "dart:core.bool",
            "desc": "<p>Does the matching of the actual vs expected values.<\/p>\n<p><code>item<\/code> is the actual value. <code>matchState<\/code> can be supplied\nand may be used to add details about the mismatch that are too\ncostly to determine in <a href=\"package-matcher_matcher\/Matcher\/describeMismatch.html\">describeMismatch<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "matcher.Matcher",
            "sig": "",
            "params": [
                {
                    "name": "item",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "matchState",
                    "type": "dart:core.Map",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-matcher_matcher\/Matcher\/matches.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool matches(item, Map matchState);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "matcher.CustomMatcher",
        "matcher.TypeMatcher",
        "matcher.isInstanceOf",
        "test_api.StreamMatcher",
        "test_api.Throws"
    ],
    "realImplementors": [
        "matcher.CustomMatcher",
        "matcher.TypeMatcher",
        "matcher.isInstanceOf"
    ],
    "cn": [],
    "href": "package-matcher_matcher\/Matcher-class.html",
    "desc": "<p>The base class for all matchers.<\/p>\n<p><a href=\"package-matcher_matcher\/Matcher\/matches.html\">matches<\/a> and <a href=\"package-matcher_matcher\/Matcher\/describe.html\">describe<\/a> must be implemented by subclasses.<\/p>\n<p>Subclasses can override <a href=\"package-matcher_matcher\/Matcher\/describeMismatch.html\">describeMismatch<\/a> if a more specific description is\nrequired when the matcher fails.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Matcher"
}