{
    "desc": "<p>A category with which to annotate a class, for documentation\npurposes.<\/p>\n<p>A category is usually represented as a section and a subsection, each\nof which is a string. The engineering team that owns the library to which\nthe class belongs defines the categories used for classes in that library.\nFor example, the Flutter engineering team has defined categories like\n\"Basic\/Buttons\" and \"Material Design\/Buttons\" for Flutter widgets.<\/p>\n<p>A class can have multiple categories.<\/p>\n<p>\n<\/p>\n<div class=\"snippet-buttons\">\n  <button id=\"shortSnippetButton\" selected>Sample<\/button>\n<\/div>\n<div class=\"snippet-container\">\n  <div class=\"snippet\">\n    <div class=\"copyable-container\">\n      <button class=\"copy-button-overlay copy-button\" title=\"Copy to clipboard\" onclick=\"copyTextToClipboard(findSiblingWithId(this, 'sample-code'));\">\n        <i class=\"material-icons copy-image\">assignment<\/i>\n      <\/button>\n      <pre class=\"language-dart\" id=\"sample-code\"><code class=\"language-dart\">\/\/\/ A copper coffee pot, as desired by Ben Turpin.\n\/\/\/ ...documentation...\n@Category(&lt;String&gt;['Pots', 'Coffee'])\n@Category(&lt;String&gt;['Copper', 'Cookware'])\n@DocumentationIcon('https:\/\/example.com\/images\/coffee.png')\n@Summary('A proper cup of coffee is made in a proper copper coffee pot.')\nclass CopperCoffeePot {\n  \/\/ ...code...\n}<\/code><\/pre>\n    <\/div>\n  <\/div>\n<\/div>\n\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"foundation\/DocumentationIcon-class.html\">DocumentationIcon<\/a>, which is used to give the URL to an image that\nrepresents the class.<\/li>\n<li>\n<a href=\"foundation\/Summary-class.html\">Summary<\/a>, which is used to provide a one-line description of a\nclass that overrides the inline documentations' own description.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "foundation\/Category-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "foundation",
    "name": "foundation.Category",
    "shortname": "Category",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Create an annotation to provide a categorization of a class.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Category(this.sections) : assert(sections != null);<\/code><\/pre>\n    ",
            "href": "foundation\/Category\/Category.html",
            "isDeprecated": false,
            "type": "",
            "name": "Category",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "foundation.Category",
            "params": [
                {
                    "name": "sections",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.List<dart:core.String>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The strings the correspond to the section and subsection of the\ncategory represented by this object.<\/p>\n<p>By convention, this list usually has two items. The allowed values\nare defined by the team that owns the library to which the annotated\nclass belongs.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;String&gt; sections\n\n<\/code><\/pre>\n        ",
            "href": "foundation\/Category\/sections.html",
            "name": "sections",
            "isDeprecated": false,
            "type": "dart:core.List<dart:core.String>",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "foundation.Category",
            "params": []
        }
    ]
}