{
    "desc": null,
    "dtype": "class",
    "example": "",
    "href": "dart-developer\/Metrics-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:developer",
    "name": "dart:developer.Metrics",
    "shortname": "Metrics",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "dart-developer\/Metrics\/Metrics.html",
            "isDeprecated": false,
            "type": "",
            "name": "Metrics",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "dart:developer.Metrics",
            "params": []
        },
        {
            "desc": "<p>Deregister <a href=\"dart-developer\/Metric-class.html\">Metric<\/a>s to make them not visible to Observatory.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void deregister(Metric metric) {\n  ArgumentError.checkNotNull(metric, 'metric');\n  _metrics.remove(metric.name);\n}<\/code><\/pre>\n    ",
            "href": "dart-developer\/Metrics\/deregister.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "deregister",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:developer.Metrics",
            "params": [
                {
                    "name": "metric",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:developer.Metric"
                }
            ]
        },
        {
            "desc": "<p>Register <a href=\"dart-developer\/Metric-class.html\">Metric<\/a>s to make them visible to Observatory.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void register(Metric metric) {\n  ArgumentError.checkNotNull(metric, 'metric');\n  if (_metrics[metric.name] != null) {\n    throw new ArgumentError('Registered metrics have unique names');\n  }\n  _metrics[metric.name] = metric;\n}<\/code><\/pre>\n    ",
            "href": "dart-developer\/Metrics\/register.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "register",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:developer.Metrics",
            "params": [
                {
                    "name": "metric",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:developer.Metric"
                }
            ]
        }
    ],
    "props": []
}