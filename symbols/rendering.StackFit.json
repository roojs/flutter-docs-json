{
    "desc": "<p>How to size the non-positioned children of a <a href=\"widgets\/Stack-class.html\">Stack<\/a>.<\/p>\n<p>This enum is used with <a href=\"widgets\/Stack\/fit.html\">Stack.fit<\/a> and <a href=\"rendering\/RenderStack\/fit.html\">RenderStack.fit<\/a> to control\nhow the <a href=\"rendering\/BoxConstraints-class.html\">BoxConstraints<\/a> passed from the stack's parent to the stack's child\nare adjusted.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/Stack-class.html\">Stack<\/a>, the widget that uses this.<\/li>\n<li>\n<a href=\"rendering\/RenderStack-class.html\">RenderStack<\/a>, the render object that implements the stack algorithm.<\/li>\n<\/ul>",
    "dtype": "enum",
    "example": "",
    "href": "rendering\/StackFit-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "rendering",
    "name": "rendering.StackFit",
    "shortname": "StackFit",
    "extends": [],
    "is_enum": true,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [],
    "props": [
        {
            "desc": "\n          <p>The constraints passed to the stack from its parent are tightened to the\nbiggest size allowed.<\/p>\n<p>For example, if the stack has loose constraints with a width in the range\n10 to 100 and a height in the range 0 to 600, then the non-positioned\nchildren of the stack would all be sized as 100 pixels wide and 600 high.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const StackFit(1)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "expand",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "rendering.StackFit",
            "params": []
        },
        {
            "desc": "\n          <p>The constraints passed to the stack from its parent are loosened.<\/p>\n<p>For example, if the stack has constraints that force it to 350x600, then\nthis would allow the non-positioned children of the stack to have any\nwidth from zero to 350 and any height from zero to 600.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/Center-class.html\">Center<\/a>, which loosens the constraints passed to its child and then\ncenters the child in itself.<\/li>\n<li>\n<a href=\"rendering\/BoxConstraints\/loosen.html\">BoxConstraints.loosen<\/a>, which implements the loosening of box\nconstraints.<\/li>\n<\/ul>\n<div>\n            <span class=\"signature\"><code>const StackFit(0)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "loose",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "rendering.StackFit",
            "params": []
        },
        {
            "desc": "\n          <p>The constraints passed to the stack from its parent are passed unmodified\nto the non-positioned children.<\/p>\n<p>For example, if a <a href=\"widgets\/Stack-class.html\">Stack<\/a> is an <a href=\"widgets\/Expanded-class.html\">Expanded<\/a> child of a <a href=\"widgets\/Row-class.html\">Row<\/a>, the\nhorizontal constraints will be tight and the vertical constraints will be\nloose.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const StackFit(2)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "passthrough",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "rendering.StackFit",
            "params": []
        },
        {
            "desc": "\n          <p>A constant List of the values in this enum, in order of their declaration.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const List&lt;<wbr><span class=\"type-parameter\">StackFit<\/span>&gt;<\/wbr><\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "values",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "rendering.StackFit",
            "params": []
        }
    ]
}