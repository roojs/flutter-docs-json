{
    "desc": "<p>Base class for scrolling activities like dragging and flinging.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/ScrollPosition-class.html\">ScrollPosition<\/a>, which uses <a href=\"widgets\/ScrollActivity-class.html\">ScrollActivity<\/a> objects to manage the\n<a href=\"widgets\/ScrollPosition-class.html\">ScrollPosition<\/a> of a <a href=\"widgets\/Scrollable-class.html\">Scrollable<\/a>.<\/li><\/ul>",
    "dtype": "class",
    "example": null,
    "href": "widgets\/ScrollActivity-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.ScrollActivity",
    "shortname": "ScrollActivity",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Initializes <a href=\"widgets\/ScrollActivity\/delegate.html\">delegate<\/a> for subclasses.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ScrollActivity(this._delegate);<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollActivity\/ScrollActivity.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.ScrollActivity",
            "params": [
                {
                    "name": "_delegate",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.ScrollActivityDelegate"
                }
            ]
        },
        {
            "desc": "<p>Called when the scroll view that is performing this activity changes its metrics.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void applyNewDimensions() { }<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollActivity\/applyNewDimensions.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollActivity",
            "params": []
        },
        {
            "desc": "<p>Dispatch an <a href=\"widgets\/OverscrollNotification-class.html\">OverscrollNotification<\/a> with the given metrics and overscroll.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void dispatchOverscrollNotification(ScrollMetrics metrics, BuildContext context, double overscroll) {\n  OverscrollNotification(metrics: metrics, context: context, overscroll: overscroll).dispatch(context);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollActivity\/dispatchOverscrollNotification.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollActivity",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "metrics",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.ScrollMetrics"
                },
                {
                    "name": "overscroll",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Dispatch a <a href=\"widgets\/ScrollEndNotification-class.html\">ScrollEndNotification<\/a> with the given metrics and overscroll.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void dispatchScrollEndNotification(ScrollMetrics metrics, BuildContext context) {\n  ScrollEndNotification(metrics: metrics, context: context).dispatch(context);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollActivity\/dispatchScrollEndNotification.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollActivity",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "metrics",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.ScrollMetrics"
                }
            ]
        },
        {
            "desc": "<p>Dispatch a <a href=\"widgets\/ScrollStartNotification-class.html\">ScrollStartNotification<\/a> with the given metrics.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void dispatchScrollStartNotification(ScrollMetrics metrics, BuildContext context) {\n  ScrollStartNotification(metrics: metrics, context: context).dispatch(context);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollActivity\/dispatchScrollStartNotification.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollActivity",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "metrics",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.ScrollMetrics"
                }
            ]
        },
        {
            "desc": "<p>Dispatch a <a href=\"widgets\/ScrollUpdateNotification-class.html\">ScrollUpdateNotification<\/a> with the given metrics and scroll delta.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void dispatchScrollUpdateNotification(ScrollMetrics metrics, BuildContext context, double scrollDelta) {\n  ScrollUpdateNotification(metrics: metrics, context: context, scrollDelta: scrollDelta).dispatch(context);\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollActivity\/dispatchScrollUpdateNotification.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollActivity",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "metrics",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.ScrollMetrics"
                },
                {
                    "name": "scrollDelta",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Called when the scroll view stops performing this activity.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@mustCallSuper\nvoid dispose() {\n  _delegate = null;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollActivity\/dispose.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollActivity",
            "params": []
        },
        {
            "desc": "<p>Called by the <a href=\"widgets\/ScrollActivityDelegate-class.html\">ScrollActivityDelegate<\/a> when it has changed type (for\nexample, when changing from an Android-style scroll position to an\niOS-style scroll position). If this activity can differ between the two\nmodes, then it should tell the position to restart that activity\nappropriately.<\/p>\n<p>For example, <a href=\"widgets\/BallisticScrollActivity-class.html\">BallisticScrollActivity<\/a>'s implementation calls\n<a href=\"widgets\/ScrollActivityDelegate\/goBallistic.html\">ScrollActivityDelegate.goBallistic<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void resetActivity() { }<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollActivity\/resetActivity.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollActivity",
            "params": []
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; describeIdentity(this);<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollActivity\/toString.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollActivity",
            "params": []
        },
        {
            "desc": "<p>Updates the activity's link to the <a href=\"widgets\/ScrollActivityDelegate-class.html\">ScrollActivityDelegate<\/a>.<\/p>\n<p>This should only be called when an activity is being moved from a defunct\n(or about-to-be defunct) <a href=\"widgets\/ScrollActivityDelegate-class.html\">ScrollActivityDelegate<\/a> object to a new one.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void updateDelegate(ScrollActivityDelegate value) {\n  assert(_delegate != value);\n  _delegate = value;\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollActivity\/updateDelegate.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollActivity",
            "params": [
                {
                    "name": "value",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.ScrollActivityDelegate"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The delegate that this activity will use to actuate the scroll view.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ScrollActivityDelegate get delegate =&gt; _delegate;<\/code><\/pre>\n        ",
            "href": "widgets\/ScrollActivity\/delegate.html",
            "isDeprecated": "0",
            "type": "widgets.ScrollActivityDelegate",
            "memberOf": "widgets.ScrollActivity",
            "params": []
        },
        {
            "desc": "<p>Whether performing this activity constitutes scrolling.<\/p>\n<p>Used, for example, to determine whether the user scroll direction is\n<a href=\"rendering\/ScrollDirection-class.html\">ScrollDirection.idle<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isScrolling;<\/code><\/pre>\n        ",
            "href": "widgets\/ScrollActivity\/isScrolling.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "widgets.ScrollActivity",
            "params": []
        },
        {
            "desc": "<p>Whether the scroll view should ignore pointer events while performing this\nactivity.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get shouldIgnorePointer;<\/code><\/pre>\n        ",
            "href": "widgets\/ScrollActivity\/shouldIgnorePointer.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "widgets.ScrollActivity",
            "params": []
        },
        {
            "desc": "<p>If applicable, the velocity at which the scroll offset is currently\nindependently changing (i.e. without external stimuli such as a dragging\ngestures) in logical pixels per second for this activity.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get velocity;<\/code><\/pre>\n        ",
            "href": "widgets\/ScrollActivity\/velocity.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "widgets.ScrollActivity",
            "params": []
        }
    ]
}