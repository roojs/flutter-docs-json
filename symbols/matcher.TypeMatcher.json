{
    "desc": "<p>A <a href=\"package-matcher_matcher\/Matcher-class.html\">Matcher<\/a> subclass that supports validating the <a href=\"dart-core\/Type-class.html\">Type<\/a> of the target\nobject.<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">expect(shouldBeDuration, new TypeMatcher&lt;Duration&gt;());\n<\/code><\/pre>\n<p>If you want to further validate attributes of the specified <a href=\"dart-core\/Type-class.html\">Type<\/a>, use the\n<a href=\"package-matcher_matcher\/TypeMatcher\/having.html\">having<\/a> function.<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">void shouldThrowRangeError(int value) {\n  throw new RangeError.range(value, 10, 20);\n}\n\nexpect(\n    () =&gt; shouldThrowRangeError(5),\n    throwsA(const TypeMatcher&lt;RangeError&gt;()\n        .having((e) =&gt; e.start, 'start', greaterThanOrEqualTo(10))\n        .having((e) =&gt; e.end, 'end', lessThanOrEqualTo(20))));\n<\/code><\/pre>\n<p>Notice that you can chain multiple calls to <a href=\"package-matcher_matcher\/TypeMatcher\/having.html\">having<\/a> to verify multiple\naspects of an object.<\/p>\n<p>Note: All of the top-level <code>isType<\/code> matchers exposed by this package are\ninstances of <a href=\"package-matcher_matcher\/TypeMatcher-class.html\">TypeMatcher<\/a>, so you can use the <a href=\"package-matcher_matcher\/TypeMatcher\/having.html\">having<\/a> function without\ncreating your own instance.<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">expect(\n    () =&gt; shouldThrowRangeError(5),\n    throwsA(isRangeError\n        .having((e) =&gt; e.start, 'start', greaterThanOrEqualTo(10))\n        .having((e) =&gt; e.end, 'end', lessThanOrEqualTo(20))));\n<\/code><\/pre>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-matcher_matcher\/TypeMatcher-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "matcher",
    "name": "matcher.TypeMatcher",
    "shortname": "TypeMatcher",
    "extends": [
        "matcher.Matcher",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [
        "matcher.isInstanceOf"
    ],
    "events": [],
    "methods": [
        {
            "desc": "",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const TypeMatcher(\n    [@Deprecated('Provide a type argument to TypeMatcher and omit the name. '\n        'This argument will be removed in the next release.')\n        String name])\n    : this._name =\n          \/\/ ignore: deprecated_member_use\n          name;<\/code><\/pre>\n    ",
            "href": "package-matcher_matcher\/TypeMatcher\/TypeMatcher.html",
            "isDeprecated": false,
            "type": "",
            "name": "TypeMatcher",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "matcher.TypeMatcher",
            "params": [
                {
                    "name": "name",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Builds a textual description of the matcher.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Description describe(Description description) {\n  var name = _name ?? _stripDynamic(T);\n  return description.add(\"&lt;Instance of '$name'&gt;\");\n}<\/code><\/pre>\n    ",
            "href": "package-matcher_matcher\/TypeMatcher\/describe.html",
            "isDeprecated": false,
            "type": "matcher.Description",
            "name": "describe",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "matcher.TypeMatcher",
            "params": [
                {
                    "name": "description",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "matcher.Description"
                }
            ]
        },
        {
            "desc": "<p>Returns a new <a href=\"package-matcher_matcher\/TypeMatcher-class.html\">TypeMatcher<\/a> that validates the existing type as well as\na specific <code>feature<\/code> of the object with the provided <code>matcher<\/code>.<\/p>\n<p>Provides a human-readable <code>description<\/code> of the <code>feature<\/code> to make debugging\nfailures easier.<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">\/\/\/ Validates that the object is a [RangeError] with a message containing\n\/\/\/ the string 'details' and `start` and `end` properties that are `null`.\nfinal _rangeMatcher = isRangeError\n   .having((e) =&gt; e.message, 'message', contains('details'))\n   .having((e) =&gt; e.start, 'start', isNull)\n   .having((e) =&gt; e.end, 'end', isNull);\n<\/code><\/pre>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">TypeMatcher&lt;T&gt; having(\n        Object feature(T source), String description, Object matcher) =&gt;\n    new HavingMatcher(this, description, feature, matcher);<\/code><\/pre>\n    ",
            "href": "package-matcher_matcher\/TypeMatcher\/having.html",
            "isDeprecated": false,
            "type": "matcher.TypeMatcher",
            "name": "having",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "matcher.TypeMatcher",
            "params": [
                {
                    "name": "description",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.String"
                },
                {
                    "name": "matcher",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                },
                {
                    "name": "source",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<T>"
                }
            ]
        },
        {
            "desc": "<p>Does the matching of the actual vs expected values.<\/p>\n<p><code>item<\/code> is the actual value. <code>matchState<\/code> can be supplied\nand may be used to add details about the mismatch that are too\ncostly to determine in <a href=\"package-matcher_matcher\/Matcher\/describeMismatch.html\">describeMismatch<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool matches(Object item, Map matchState) =&gt; item is T;<\/code><\/pre>\n    ",
            "href": "package-matcher_matcher\/TypeMatcher\/matches.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "matches",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "matcher.TypeMatcher",
            "params": [
                {
                    "name": "item",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Object"
                },
                {
                    "name": "matchState",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.Map"
                }
            ]
        }
    ],
    "props": []
}