{
    "desc": "<p>A <a href=\"services\/TextInputFormatter-class.html\">TextInputFormatter<\/a> that prevents the insertion of blacklisted\ncharacters patterns.<\/p>\n<p>Instances of blacklisted characters found in the new <a href=\"services\/TextEditingValue-class.html\">TextEditingValue<\/a>s\nwill be replaced with the <a href=\"services\/BlacklistingTextInputFormatter\/replacementString.html\">replacementString<\/a> which defaults to the empty\nstring.<\/p>\n<p>Since this formatter only removes characters from the text, it attempts to\npreserve the existing <a href=\"services\/TextEditingValue\/selection.html\">TextEditingValue.selection<\/a> to values it would now\nfall at with the removed characters.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"services\/WhitelistingTextInputFormatter-class.html\">WhitelistingTextInputFormatter<\/a>, which uses a whitelist instead of a\nblacklist.<\/li><\/ul>",
    "dtype": "class",
    "example": "",
    "href": "services\/BlacklistingTextInputFormatter-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "services",
    "name": "services.BlacklistingTextInputFormatter",
    "shortname": "BlacklistingTextInputFormatter",
    "extends": [
        "services.TextInputFormatter",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a formatter that prevents the insertion of blacklisted characters patterns.<\/p>\n<p>The <code>blacklistedPattern<\/code> must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">BlacklistingTextInputFormatter(\n  this.blacklistedPattern, {\n  this.replacementString = '',\n}) : assert(blacklistedPattern != null);<\/code><\/pre>\n    ",
            "href": "services\/BlacklistingTextInputFormatter\/BlacklistingTextInputFormatter.html",
            "isDeprecated": false,
            "type": "",
            "name": "BlacklistingTextInputFormatter",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "services.BlacklistingTextInputFormatter",
            "params": [
                {
                    "name": "blacklistedPattern",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.Pattern"
                },
                {
                    "name": "replacementString",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Called when text is being typed or cut\/copy\/pasted in the <a href=\"widgets\/EditableText-class.html\">EditableText<\/a>.<\/p>\n<p>You can override the resulting text based on the previous text value and\nthe incoming new text value.<\/p>\n<p>When formatters are chained, <code>oldValue<\/code> reflects the initial value of\n<a href=\"services\/TextEditingValue-class.html\">TextEditingValue<\/a> at the beginning of the chain.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nTextEditingValue formatEditUpdate(\n  TextEditingValue oldValue, \/\/ unused.\n  TextEditingValue newValue,\n) {\n  return _selectionAwareTextManipulation(\n    newValue,\n    (String substring) {\n      return substring.replaceAll(blacklistedPattern, replacementString);\n    },\n  );\n}<\/code><\/pre>\n    ",
            "href": "services\/BlacklistingTextInputFormatter\/formatEditUpdate.html",
            "isDeprecated": false,
            "type": "services.TextEditingValue",
            "name": "formatEditUpdate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "services.BlacklistingTextInputFormatter",
            "params": [
                {
                    "name": "newValue",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextEditingValue"
                },
                {
                    "name": "oldValue",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "services.TextEditingValue"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>A <a href=\"dart-core\/Pattern-class.html\">Pattern<\/a> to match and replace incoming <a href=\"services\/TextEditingValue-class.html\">TextEditingValue<\/a>s.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Pattern blacklistedPattern\n\n<\/code><\/pre>\n        ",
            "href": "services\/BlacklistingTextInputFormatter\/blacklistedPattern.html",
            "name": "blacklistedPattern",
            "isDeprecated": false,
            "type": "dart:core.Pattern",
            "memberOf": "services.BlacklistingTextInputFormatter",
            "params": []
        },
        {
            "desc": "<p>String used to replace found patterns.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String replacementString\n\n<\/code><\/pre>\n        ",
            "href": "services\/BlacklistingTextInputFormatter\/replacementString.html",
            "name": "replacementString",
            "isDeprecated": false,
            "type": "dart:core.String",
            "memberOf": "services.BlacklistingTextInputFormatter",
            "params": []
        },
        {
            "desc": "<p>A <a href=\"services\/BlacklistingTextInputFormatter-class.html\">BlacklistingTextInputFormatter<\/a> that forces input to be a single line.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final BlacklistingTextInputFormatter singleLineFormatter\n    = BlacklistingTextInputFormatter(RegExp(r'\\n'))\n\n<\/code><\/pre>\n        ",
            "href": "services\/BlacklistingTextInputFormatter\/singleLineFormatter.html",
            "name": "singleLineFormatter",
            "isDeprecated": false,
            "type": "services.BlacklistingTextInputFormatter",
            "memberOf": "services.BlacklistingTextInputFormatter",
            "params": []
        }
    ]
}