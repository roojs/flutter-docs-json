{
    "desc": "<p>A class representing a modification to the default timeout for a test.<\/p>\n<p>By default, a test will time out after 30 seconds. With <a href=\"package-test_api_test_api\/Timeout\/Timeout.html\">new Timeout<\/a>, that\ncan be overridden entirely; with <a href=\"package-test_api_test_api\/Timeout\/Timeout.factor.html\">new Timeout.factor<\/a>, it can be scaled\nrelative to the default.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-test_api_test_api\/Timeout-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "test_api",
    "name": "test_api.Timeout",
    "shortname": "Timeout",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Declares an absolute timeout that overrides the default.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Timeout(this.duration) : scaleFactor = null;<\/code><\/pre>\n    ",
            "href": "package-test_api_test_api\/Timeout\/Timeout.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "test_api.Timeout",
            "params": [
                {
                    "name": "duration",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.Duration"
                }
            ]
        },
        {
            "desc": "<p>Returns a new <a href=\"dart-core\/Duration-class.html\">Duration<\/a> from applying <a href=\"package-test_api_test_api\/Timeout-class.html\">this<\/a> to <code>base<\/code>.<\/p>\n<p>If this is <a href=\"package-test_api_test_api\/Timeout\/none-constant.html\">none<\/a>, returns <code>null<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Duration apply(Duration base) {\n  if (this == none) return null;\n  return duration == null ? base * scaleFactor : duration;\n}<\/code><\/pre>\n    ",
            "href": "package-test_api_test_api\/Timeout\/apply.html",
            "isDeprecated": "0",
            "type": "dart:core.Duration",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "test_api.Timeout",
            "params": [
                {
                    "name": "base",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Duration"
                }
            ]
        },
        {
            "desc": "<p>Returns a new <a href=\"package-test_api_test_api\/Timeout-class.html\">Timeout<\/a> that merges <a href=\"package-test_api_test_api\/Timeout-class.html\">this<\/a> with <code>other<\/code>.<\/p>\n<p><a href=\"package-test_api_test_api\/Timeout\/none-constant.html\">Timeout.none<\/a> takes precedence over everything. If timeout is\n<a href=\"package-test_api_test_api\/Timeout\/none-constant.html\">Timeout.none<\/a> and <code>other<\/code> declares a <a href=\"package-test_api_test_api\/Timeout\/duration.html\">duration<\/a>, that takes precedence.\nOtherwise, this timeout's <a href=\"package-test_api_test_api\/Timeout\/duration.html\">duration<\/a> or <a href=\"package-test_api_test_api\/Timeout\/Timeout.factor.html\">factor<\/a> are multiplied by\n<code>other<\/code>'s <a href=\"package-test_api_test_api\/Timeout\/Timeout.factor.html\">factor<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Timeout merge(Timeout other) {\n  if (this == none || other == none) return none;\n  if (other.duration != null) return Timeout(other.duration);\n  if (duration != null) return Timeout(duration * other.scaleFactor);\n  return Timeout.factor(scaleFactor * other.scaleFactor);\n}<\/code><\/pre>\n    ",
            "href": "package-test_api_test_api\/Timeout\/merge.html",
            "isDeprecated": "0",
            "type": "test_api.Timeout",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "test_api.Timeout",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "test_api.Timeout"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() {\n  if (duration != null) return duration.toString();\n  if (scaleFactor != null) return \"${scaleFactor}x\";\n  return \"none\";\n}<\/code><\/pre>\n    ",
            "href": "package-test_api_test_api\/Timeout\/toString.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "test_api.Timeout",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The timeout duration.<\/p>\n<p>If set, this overrides the default duration entirely. It's <code>null<\/code> for\ntimeouts with a non-null <a href=\"package-test_api_test_api\/Timeout\/scaleFactor.html\">scaleFactor<\/a> and for <a href=\"package-test_api_test_api\/Timeout\/none-constant.html\">Timeout.none<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Duration duration\n\n<\/code><\/pre>\n        ",
            "href": "package-test_api_test_api\/Timeout\/duration.html",
            "isDeprecated": "0",
            "type": "dart:core.Duration",
            "memberOf": "test_api.Timeout",
            "params": []
        },
        {
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"package-test_api_test_api\/Timeout\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"package-test_api_test_api\/Timeout\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"package-test_api_test_api\/Timeout\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"package-test_api_test_api\/Timeout\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"package-test_api_test_api\/Timeout\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"package-test_api_test_api\/Timeout\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get hashCode =&gt; duration.hashCode ^ 5 * scaleFactor.hashCode;<\/code><\/pre>\n        ",
            "href": "package-test_api_test_api\/Timeout\/hashCode.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "test_api.Timeout",
            "params": []
        },
        {
            "desc": "<p>The timeout factor.<\/p>\n<p>The default timeout will be multiplied by this to get the new timeout.\nThus a factor of 2 means that the test will take twice as long to time\nout, and a factor of 0.5 means that it will time out twice as quickly.<\/p>\n<p>This is <code>null<\/code> for timeouts with a non-null <a href=\"package-test_api_test_api\/Timeout\/duration.html\">duration<\/a> and for\n<a href=\"package-test_api_test_api\/Timeout\/none-constant.html\">Timeout.none<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final num scaleFactor\n\n<\/code><\/pre>\n        ",
            "href": "package-test_api_test_api\/Timeout\/scaleFactor.html",
            "isDeprecated": "0",
            "type": "dart:core.num",
            "memberOf": "test_api.Timeout",
            "params": []
        }
    ]
}