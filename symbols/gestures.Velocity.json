{
    "desc": "<p>A velocity in two dimensions.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "gestures\/Velocity-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "gestures",
    "name": "gestures.Velocity",
    "shortname": "Velocity",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a velocity.<\/p>\n<p>The <code>pixelsPerSecond<\/code> argument must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Velocity({\n  @required this.pixelsPerSecond,\n}) : assert(pixelsPerSecond != null);<\/code><\/pre>\n    ",
            "href": "gestures\/Velocity\/Velocity.html",
            "isDeprecated": false,
            "type": "",
            "name": "Velocity",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "gestures.Velocity",
            "params": [
                {
                    "name": "pixelsPerSecond",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:ui.Offset"
                }
            ]
        },
        {
            "desc": "<p>Return a velocity whose magnitude has been clamped to <code>minValue<\/code>\nand <code>maxValue<\/code>.<\/p>\n<p>If the magnitude of this Velocity is less than minValue then return a new\nVelocity with the same direction and with magnitude <code>minValue<\/code>. Similarly,\nif the magnitude of this Velocity is greater than maxValue then return a\nnew Velocity with the same direction and magnitude <code>maxValue<\/code>.<\/p>\n<p>If the magnitude of this Velocity is within the specified bounds then\njust return this.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Velocity clampMagnitude(double minValue, double maxValue) {\n  assert(minValue != null &amp;&amp; minValue &gt;= 0.0);\n  assert(maxValue != null &amp;&amp; maxValue &gt;= 0.0 &amp;&amp; maxValue &gt;= minValue);\n  final double valueSquared = pixelsPerSecond.distanceSquared;\n  if (valueSquared &gt; maxValue * maxValue)\n    return Velocity(pixelsPerSecond: (pixelsPerSecond \/ pixelsPerSecond.distance) * maxValue);\n  if (valueSquared &lt; minValue * minValue)\n    return Velocity(pixelsPerSecond: (pixelsPerSecond \/ pixelsPerSecond.distance) * minValue);\n  return this;\n}<\/code><\/pre>\n    ",
            "href": "gestures\/Velocity\/clampMagnitude.html",
            "isDeprecated": false,
            "type": "gestures.Velocity",
            "name": "clampMagnitude",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "gestures.Velocity",
            "params": [
                {
                    "name": "maxValue",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "minValue",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; 'Velocity(${pixelsPerSecond.dx.toStringAsFixed(1)}, ${pixelsPerSecond.dy.toStringAsFixed(1)})';<\/code><\/pre>\n    ",
            "href": "gestures\/Velocity\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "gestures.Velocity",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"gestures\/Velocity\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"gestures\/Velocity\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"gestures\/Velocity\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"gestures\/Velocity\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"gestures\/Velocity\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"gestures\/Velocity\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get hashCode =&gt; pixelsPerSecond.hashCode;<\/code><\/pre>\n        ",
            "href": "gestures\/Velocity\/hashCode.html",
            "name": "hashCode",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "gestures.Velocity",
            "params": []
        },
        {
            "desc": "<p>The number of pixels per second of velocity in the x and y directions.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Offset pixelsPerSecond\n\n<\/code><\/pre>\n        ",
            "href": "gestures\/Velocity\/pixelsPerSecond.html",
            "name": "pixelsPerSecond",
            "isDeprecated": false,
            "type": "dart:ui.Offset",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "gestures.Velocity",
            "params": []
        },
        {
            "desc": "<p>A velocity that isn't moving at all.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const Velocity zero = Velocity(pixelsPerSecond: Offset.zero)\n\n<\/code><\/pre>\n    ",
            "href": "gestures\/Velocity\/zero-constant.html",
            "name": "zero",
            "isDeprecated": false,
            "type": "gestures.Velocity",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "gestures.Velocity",
            "params": []
        }
    ]
}