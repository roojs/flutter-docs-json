{
    "desc": null,
    "dtype": "class",
    "example": "",
    "href": "vector_math_geometry\/CircleGenerator-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "vector_math_geometry",
    "name": "vector_math_geometry.CircleGenerator",
    "shortname": "CircleGenerator",
    "extends": [
        "vector_math_geometry.GeometryGenerator",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "vector_math_geometry\/CircleGenerator\/CircleGenerator.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "vector_math_geometry.CircleGenerator",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">MeshGeometry createCircle(double radius,\n    {GeometryGeneratorFlags flags,\n    List&lt;GeometryFilter&gt; filters,\n    int segments: 64,\n    double thetaStart: 0.0,\n    double thetaLength: math.pi * 2.0}) {\n  _radius = radius;\n  _segments = segments;\n  _thetaStart = thetaStart;\n  _thetaLength = thetaLength;\n  return createGeometry(flags: flags, filters: filters);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/CircleGenerator\/createCircle.html",
            "isDeprecated": "0",
            "type": "vector_math_geometry.MeshGeometry",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.CircleGenerator",
            "params": [
                {
                    "name": "filters",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.List<vector_math_geometry.GeometryFilter>"
                },
                {
                    "name": "flags",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math_geometry.GeometryGeneratorFlags"
                },
                {
                    "name": "radius",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "segments",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "thetaLength",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "thetaStart",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateIndices(Uint16List indices) {\n  int index = 0;\n  for (int i = 1; i &lt;= _segments; i++) {\n    indices[index] = i;\n    indices[index + 1] = i + 1;\n    indices[index + 2] = 0;\n    index += 3;\n  }\n  assert(index == indexCount);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/CircleGenerator\/generateIndices.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.CircleGenerator",
            "params": [
                {
                    "name": "indices",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:typed_data.Uint16List"
                }
            ]
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateVertexPositions(Vector3List positions, Uint16List indices) {\n  final Vector3 v = new Vector3.zero();\n  positions[0] = v;\n  int index = 1;\n  for (int i = 0; i &lt;= _segments; i++) {\n    final double percent = i \/ _segments;\n    v\n      ..x = _radius * math.cos(_thetaStart + percent * _thetaLength)\n      ..z = _radius * math.sin(_thetaStart + percent * _thetaLength);\n    positions[index] = v;\n    index++;\n  }\n  assert(index == vertexCount);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/CircleGenerator\/generateVertexPositions.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.CircleGenerator",
            "params": [
                {
                    "name": "indices",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:typed_data.Uint16List"
                },
                {
                    "name": "positions",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math_lists.Vector3List"
                }
            ]
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateVertexTexCoords(\n    Vector2List texCoords, Vector3List positions, Uint16List indices) {\n  final Vector2 v = new Vector2(0.5, 0.5);\n  texCoords[0] = v;\n  int index = 1;\n  for (int i = 0; i &lt;= _segments; i++) {\n    final Vector3 position = positions[index];\n    final double x = (position.x \/ (_radius + 1.0)) * 0.5;\n    final double y = (position.z \/ (_radius + 1.0)) * 0.5;\n    v\n      ..x = x + 0.5\n      ..y = y + 0.5;\n    texCoords[index] = v;\n    index++;\n  }\n  assert(index == vertexCount);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/CircleGenerator\/generateVertexTexCoords.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.CircleGenerator",
            "params": [
                {
                    "name": "indices",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:typed_data.Uint16List"
                },
                {
                    "name": "positions",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math_lists.Vector3List"
                },
                {
                    "name": "texCoords",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math_lists.Vector2List"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get indexCount =&gt; (_segments) * 3;<\/code><\/pre>\n        ",
            "href": "vector_math_geometry\/CircleGenerator\/indexCount.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "vector_math_geometry.CircleGenerator",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get vertexCount =&gt; _segments + 2;<\/code><\/pre>\n        ",
            "href": "vector_math_geometry\/CircleGenerator\/vertexCount.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "vector_math_geometry.CircleGenerator",
            "params": []
        }
    ]
}