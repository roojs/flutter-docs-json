{
    "name": "json_rpc_2.Parameters",
    "extends": [],
    "memberOf": "json_rpc_2",
    "events": [],
    "methods": [
        {
            "name": "Parameters",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "json_rpc_2.Parameters",
            "sig": "",
            "params": [
                {
                    "name": "method",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "_value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": true,
            "href": "package-json_rpc_2_json_rpc_2\/Parameters\/Parameters.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Parameters(this.method, this._value);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "operator []",
            "type": "json_rpc_2.Parameter",
            "desc": "<p>Returns a single parameter.<\/p>\n<p>If <code>key<\/code> is a <a href=\"dart-core\/String-class.html\">String<\/a>, the request is expected to provide named\nparameters. If it's an <a href=\"dart-core\/int-class.html\">int<\/a>, the request is expected to provide\npositional parameters. Requests that don't do so will be rejected\nautomatically.<\/p>\n<p>Whether or not the given parameter exists, this returns a <a href=\"package-json_rpc_2_json_rpc_2\/Parameter-class.html\">Parameter<\/a>\nobject. If a parameter's value is accessed through a getter like <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a>\nor <a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asNum.html\">Parameter.asNum<\/a>, the request will be rejected if that parameter\ndoesn't exist. On the other hand, if it's accessed through a method with a\ndefault value like <a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/valueOr.html\">Parameter.valueOr<\/a> or <a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/asNumOr.html\">Parameter.asNumOr<\/a>, the default\nvalue will be returned.<\/p>\n    ",
            "static": false,
            "memberOf": "json_rpc_2.Parameters",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "package-json_rpc_2_json_rpc_2\/Parameters\/operator_get.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Parameter operator [](key) {\n  if (key is int) {\n    _assertPositional();\n    if (key &lt; value.length) {\n      return new Parameter._(method, value[key], this, key);\n    } else {\n      return new _MissingParameter(method, this, key);\n    }\n  } else if (key is String) {\n    _assertNamed();\n    if (value.containsKey(key)) {\n      return new Parameter._(method, value[key], this, key);\n    } else {\n      return new _MissingParameter(method, this, key);\n    }\n  } else {\n    throw new ArgumentError('Parameters[] only takes an int or a string, was '\n        '\"$key\".');\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "asList",
            "type": "dart:core.List",
            "types": [],
            "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists and is a <a href=\"dart-core\/List-class.html\">List<\/a> and returns it.<\/p>\n        ",
            "memberOf": "json_rpc_2.Parameters",
            "isConstant": false,
            "href": "package-json_rpc_2_json_rpc_2\/Parameters\/asList.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">List get asList {\n  _assertPositional();\n  return value;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "asMap",
            "type": "dart:core.Map",
            "types": [],
            "desc": "<p>Asserts that <a href=\"package-json_rpc_2_json_rpc_2\/Parameters\/value.html\">value<\/a> exists and is a <a href=\"dart-core\/Map-class.html\">Map<\/a> and returns it.<\/p>\n        ",
            "memberOf": "json_rpc_2.Parameters",
            "isConstant": false,
            "href": "package-json_rpc_2_json_rpc_2\/Parameters\/asMap.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Map get asMap {\n  _assertNamed();\n  return value;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "method",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The name of the method that this request called.<\/p>\n        ",
            "memberOf": "json_rpc_2.Parameters",
            "isConstant": false,
            "href": "package-json_rpc_2_json_rpc_2\/Parameters\/method.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String method\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "value",
            "type": "",
            "types": [],
            "desc": "<p>The underlying value of the parameters object.<\/p>\n<p>If this is accessed for a <a href=\"package-json_rpc_2_json_rpc_2\/Parameter-class.html\">Parameter<\/a> that was not passed, the request\nwill be automatically rejected. To avoid this, use <a href=\"package-json_rpc_2_json_rpc_2\/Parameter\/valueOr.html\">Parameter.valueOr<\/a>.<\/p>\n        ",
            "memberOf": "json_rpc_2.Parameters",
            "isConstant": false,
            "href": "package-json_rpc_2_json_rpc_2\/Parameters\/value.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">get value =&gt; _value;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [
        "json_rpc_2.Parameter"
    ],
    "realImplementors": [
        "json_rpc_2.Parameter"
    ],
    "cn": [],
    "href": "package-json_rpc_2_json_rpc_2\/Parameters-class.html",
    "desc": "<p>A wrapper for the parameters to a server method.<\/p>\n<p>JSON-RPC 2.0 allows parameters that are either a list or a map. This class\nprovides functions that not only assert that the parameters object is the\ncorrect type, but also that the expected arguments exist and are themselves\nthe correct type.<\/p>\n<p>Example usage:<\/p>\n<pre class=\"language-dart\"><code>server.registerMethod(\"subtract\", (params) {\n  return params[\"minuend\"].asNum - params[\"subtrahend\"].asNum;\n});\n<\/code><\/pre>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Parameters"
}