{
    "desc": "<p>A <a href=\"widgets\/Notification-class.html\">Notification<\/a> related to scrolling.<\/p>\n<p><a href=\"widgets\/Scrollable-class.html\">Scrollable<\/a> widgets notify their ancestors about scrolling-related changes.\nThe notifications have the following lifecycle:<\/p>\n<ul>\n<li>A <a href=\"widgets\/ScrollStartNotification-class.html\">ScrollStartNotification<\/a>, which indicates that the widget has started\nscrolling.<\/li>\n<li>Zero or more <a href=\"widgets\/ScrollUpdateNotification-class.html\">ScrollUpdateNotification<\/a>s, which indicate that the widget\nhas changed its scroll position, mixed with zero or more\n<a href=\"widgets\/OverscrollNotification-class.html\">OverscrollNotification<\/a>s, which indicate that the widget has not changed\nits scroll position because the change would have caused its scroll\nposition to go outside its scroll bounds.<\/li>\n<li>Interspersed with the <a href=\"widgets\/ScrollUpdateNotification-class.html\">ScrollUpdateNotification<\/a>s and\n<a href=\"widgets\/OverscrollNotification-class.html\">OverscrollNotification<\/a>s are zero or more <a href=\"widgets\/UserScrollNotification-class.html\">UserScrollNotification<\/a>s,\nwhich indicate that the user has changed the direction in which they are\nscrolling.<\/li>\n<li>A <a href=\"widgets\/ScrollEndNotification-class.html\">ScrollEndNotification<\/a>, which indicates that the widget has stopped\nscrolling.<\/li>\n<li>A <a href=\"widgets\/UserScrollNotification-class.html\">UserScrollNotification<\/a>, with a <a href=\"widgets\/UserScrollNotification\/direction.html\">UserScrollNotification.direction<\/a> of\n<a href=\"rendering\/ScrollDirection-class.html\">ScrollDirection.idle<\/a>.<\/li>\n<\/ul>\n<p>Notifications bubble up through the tree, which means a given\n<a href=\"widgets\/NotificationListener-class.html\">NotificationListener<\/a> will receive notifications for all descendant\n<a href=\"widgets\/Scrollable-class.html\">Scrollable<\/a> widgets. To focus on notifications from the nearest\n<a href=\"widgets\/Scrollable-class.html\">Scrollable<\/a> descendant, check that the <a href=\"widgets\/ViewportNotificationMixin\/depth.html\">depth<\/a> property of the notification\nis zero.<\/p>\n<p>When a scroll notification is received by a <a href=\"widgets\/NotificationListener-class.html\">NotificationListener<\/a>, the\nlistener will have already completed build and layout, and it is therefore\ntoo late for that widget to call <a href=\"widgets\/State\/setState.html\">State.setState<\/a>. Any attempt to adjust the\nbuild or layout based on a scroll notification would result in a layout that\nlagged one frame behind, which is a poor user experience. Scroll\nnotifications are therefore primarily useful for paint effects (since paint\nhappens after layout). The <a href=\"widgets\/GlowingOverscrollIndicator-class.html\">GlowingOverscrollIndicator<\/a> and <a href=\"material\/Scrollbar-class.html\">Scrollbar<\/a>\nwidgets are examples of paint effects that use scroll notifications.<\/p>\n<p>To drive layout based on the scroll position, consider listening to the\n<a href=\"widgets\/ScrollPosition-class.html\">ScrollPosition<\/a> directly (or indirectly via a <a href=\"widgets\/ScrollController-class.html\">ScrollController<\/a>).<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "widgets\/ScrollNotification-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.ScrollNotification",
    "shortname": "ScrollNotification",
    "extends": [
        "widgets.LayoutChangedNotification",
        "widgets.Notification",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Initializes fields for subclasses.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ScrollNotification({\n  @required this.metrics,\n  @required this.context,\n});<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollNotification\/ScrollNotification.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.ScrollNotification",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.BuildContext"
                },
                {
                    "name": "metrics",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.ScrollMetrics"
                }
            ]
        },
        {
            "desc": "<p>Add additional information to the given description for use by <a href=\"widgets\/Notification\/toString.html\">toString<\/a>.<\/p>\n<p>This method makes it easier for subclasses to coordinate to provide a\nhigh-quality <a href=\"widgets\/Notification\/toString.html\">toString<\/a> implementation. The <a href=\"widgets\/Notification\/toString.html\">toString<\/a> implementation on\nthe <a href=\"widgets\/Notification-class.html\">Notification<\/a> base class calls <a href=\"widgets\/ScrollNotification\/debugFillDescription.html\">debugFillDescription<\/a> to collect\nuseful information from subclasses to incorporate into its return value.<\/p>\n<p>If you override this, make sure to start your method with a call to\n<code>super.debugFillDescription(description)<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid debugFillDescription(List&lt;String&gt; description) {\n  super.debugFillDescription(description);\n  description.add('$metrics');\n}<\/code><\/pre>\n    ",
            "href": "widgets\/ScrollNotification\/debugFillDescription.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ScrollNotification",
            "params": [
                {
                    "name": "description",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.List<dart:core.String>"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The build context of the widget that fired this notification.<\/p>\n<p>This can be used to find the scrollable's render objects to determine the\nsize of the viewport, for instance.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final BuildContext context\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ScrollNotification\/context.html",
            "isDeprecated": "0",
            "type": "widgets.BuildContext",
            "memberOf": "widgets.ScrollNotification",
            "params": []
        },
        {
            "desc": "<p>A description of a <a href=\"widgets\/Scrollable-class.html\">Scrollable<\/a>'s contents, useful for modeling the state\nof its viewport.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ScrollMetrics metrics\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ScrollNotification\/metrics.html",
            "isDeprecated": "0",
            "type": "widgets.ScrollMetrics",
            "memberOf": "widgets.ScrollNotification",
            "params": []
        }
    ]
}