{
    "desc": "<p>A date picker widget in iOS style.<\/p>\n<p>There are several modes of the date picker listed in <a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode<\/a>.<\/p>\n<p>The class will display its children as consecutive columns. Its children\norder is based on internationalization.<\/p>\n<p>Example of the picker in date mode:<\/p>\n<ul>\n<li>US-English: <code>July | 13 | 2012<\/code>\n<\/li>\n<li>Vietnamese: <code>13 | Th\u00e1ng 7 | 2012<\/code>\n<\/li>\n<\/ul>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"cupertino\/CupertinoTimerPicker-class.html\">CupertinoTimerPicker<\/a>, the class that implements the iOS-style timer picker.<\/li>\n<li>\n<a href=\"cupertino\/CupertinoPicker-class.html\">CupertinoPicker<\/a>, the class that implements a content agnostic spinner UI.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "cupertino\/CupertinoDatePicker-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "cupertino",
    "name": "cupertino.CupertinoDatePicker",
    "shortname": "CupertinoDatePicker",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>Callback called when the selected date and\/or time changes. Must not be\nnull.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueChanged&lt;DateTime&gt; onDateTimeChanged\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDatePicker\/onDateTimeChanged.html",
            "isDeprecated": false,
            "type": "foundation.ValueChanged<dart:core.DateTime>",
            "name": "onDateTimeChanged",
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Constructs an iOS style date picker.<\/p>\n<p><code>mode<\/code> is one of the mode listed in <a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode<\/a> and defaults\nto <a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode.dateAndTime<\/a>.<\/p>\n<p><code>onDateTimeChanged<\/code> is the callback called when the selected date or time\nchanges and must not be null.<\/p>\n<p><code>initialDateTime<\/code> is the initial date time of the picker. Defaults to the\npresent date and time and must not be null. The present must conform to\nthe intervals set in <code>minimumDate<\/code>, <code>maximumDate<\/code>, <code>minimumYear<\/code>, and\n<code>maximumYear<\/code>.<\/p>\n<p><code>minimumDate<\/code> is the minimum date that the picker can be scrolled to in\n<a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode.dateAndTime<\/a> mode. Null if there's no limit.<\/p>\n<p><code>maximumDate<\/code> is the maximum date that the picker can be scrolled to in\n<a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode.dateAndTime<\/a> mode. Null if there's no limit.<\/p>\n<p><code>minimumYear<\/code> is the minimum year that the picker can be scrolled to in\n<a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode.date<\/a> mode. Defaults to 1 and must not be null.<\/p>\n<p><code>maximumYear<\/code> is the maximum year that the picker can be scrolled to in\n<a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode.date<\/a> mode. Null if there's no limit.<\/p>\n<p><code>minuteInterval<\/code> is the granularity of the minute spinner. Must be a\npositive integer factor of 60.<\/p>\n<p><code>use24hFormat<\/code> decides whether 24 hour format is used. Defaults to false.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">CupertinoDatePicker({\n  this.mode = CupertinoDatePickerMode.dateAndTime,\n  @required this.onDateTimeChanged,\n  DateTime initialDateTime,\n  this.minimumDate,\n  this.maximumDate,\n  this.minimumYear = 1,\n  this.maximumYear,\n  this.minuteInterval = 1,\n  this.use24hFormat = false,\n}) : initialDateTime = initialDateTime ?? DateTime.now(),\n     assert(mode != null),\n     assert(onDateTimeChanged != null),\n     assert(minimumYear != null),\n     assert(\n       minuteInterval &gt; 0 &amp;&amp; 60 % minuteInterval == 0,\n       'minute interval is not a positive integer factor of 60',\n     ) {\n  assert(this.initialDateTime != null);\n  assert(\n    mode != CupertinoDatePickerMode.dateAndTime || minimumDate == null || !this.initialDateTime.isBefore(minimumDate),\n    'initial date is before minimum date',\n  );\n  assert(\n    mode != CupertinoDatePickerMode.dateAndTime || maximumDate == null || !this.initialDateTime.isAfter(maximumDate),\n    'initial date is after maximum date',\n  );\n  assert(\n    mode != CupertinoDatePickerMode.date || (minimumYear &gt;= 1 &amp;&amp; this.initialDateTime.year &gt;= minimumYear),\n    'initial year is not greater than minimum year, or mininum year is not positive',\n  );\n  assert(\n    mode != CupertinoDatePickerMode.date || maximumYear == null || this.initialDateTime.year &lt;= maximumYear,\n    'initial year is not smaller than maximum year',\n  );\n  assert(\n    this.initialDateTime.minute % minuteInterval == 0,\n    'initial minute is not divisible by minute interval',\n  );\n}<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoDatePicker\/CupertinoDatePicker.html",
            "isDeprecated": false,
            "type": "",
            "name": "CupertinoDatePicker",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": [
                {
                    "name": "initialDateTime",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.DateTime"
                },
                {
                    "name": "maximumDate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.DateTime"
                },
                {
                    "name": "maximumYear",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "minimumDate",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.DateTime"
                },
                {
                    "name": "minimumYear",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "minuteInterval",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "mode",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "cupertino.CupertinoDatePickerMode"
                },
                {
                    "name": "onDateTimeChanged",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.ValueChanged<dart:core.DateTime>"
                },
                {
                    "name": "use24hFormat",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"cupertino\/CupertinoDatePicker\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nState&lt;StatefulWidget&gt; createState() {\n  \/\/ The `time` mode and `dateAndTime` mode of the picker share the time\n  \/\/ columns, so they are placed together to one state.\n  \/\/ The `date` mode has different children and is implemented in a different\n  \/\/ state.\n  if (mode == CupertinoDatePickerMode.time || mode == CupertinoDatePickerMode.dateAndTime)\n    return _CupertinoDatePickerDateTimeState();\n  else\n    return _CupertinoDatePickerDateState();\n}<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoDatePicker\/createState.html",
            "isDeprecated": false,
            "type": "widgets.State<widgets.StatefulWidget>",
            "name": "createState",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The initial date and\/or time of the picker. Defaults to the present date\nand time and must not be null. The present must conform to the intervals\nset in <a href=\"cupertino\/CupertinoDatePicker\/minimumDate.html\">minimumDate<\/a>, <a href=\"cupertino\/CupertinoDatePicker\/maximumDate.html\">maximumDate<\/a>, <a href=\"cupertino\/CupertinoDatePicker\/minimumYear.html\">minimumYear<\/a>, and <a href=\"cupertino\/CupertinoDatePicker\/maximumYear.html\">maximumYear<\/a>.<\/p>\n<p>Changing this value after the initial build will not affect the currently\nselected date time.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final DateTime initialDateTime\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDatePicker\/initialDateTime.html",
            "name": "initialDateTime",
            "isDeprecated": false,
            "type": "dart:core.DateTime",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": []
        },
        {
            "desc": "<p>Maximum date that the picker can be scrolled to in\n<a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode.dateAndTime<\/a> mode. Null if there's no limit.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final DateTime maximumDate\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDatePicker\/maximumDate.html",
            "name": "maximumDate",
            "isDeprecated": false,
            "type": "dart:core.DateTime",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": []
        },
        {
            "desc": "<p>Maximum year that the picker can be scrolled to in\n<a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode.date<\/a> mode. Null if there's no limit.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int maximumYear\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDatePicker\/maximumYear.html",
            "name": "maximumYear",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": []
        },
        {
            "desc": "<p>Minimum date that the picker can be scrolled to in\n<a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode.dateAndTime<\/a> mode. Null if there's no limit.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final DateTime minimumDate\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDatePicker\/minimumDate.html",
            "name": "minimumDate",
            "isDeprecated": false,
            "type": "dart:core.DateTime",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": []
        },
        {
            "desc": "<p>Minimum year that the picker can be scrolled to in\n<a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode.date<\/a> mode. Defaults to 1 and must not be null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int minimumYear\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDatePicker\/minimumYear.html",
            "name": "minimumYear",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": []
        },
        {
            "desc": "<p>The granularity of the minutes spinner, if it is shown in the current mode.\nMust be an integer factor of 60.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int minuteInterval\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDatePicker\/minuteInterval.html",
            "name": "minuteInterval",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": []
        },
        {
            "desc": "<p>The mode of the date picker as one of <a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode<\/a>.\nDefaults to <a href=\"cupertino\/CupertinoDatePickerMode-class.html\">CupertinoDatePickerMode.dateAndTime<\/a>. Cannot be null and\nvalue cannot change after initial build.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final CupertinoDatePickerMode mode\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDatePicker\/mode.html",
            "name": "mode",
            "isDeprecated": false,
            "type": "cupertino.CupertinoDatePickerMode",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": []
        },
        {
            "desc": "<p>Whether to use 24 hour format. Defaults to false.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool use24hFormat\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoDatePicker\/use24hFormat.html",
            "name": "use24hFormat",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "cupertino.CupertinoDatePicker",
            "params": []
        }
    ]
}