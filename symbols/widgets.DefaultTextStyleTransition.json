{
    "desc": "<p>Animated version of a <a href=\"widgets\/DefaultTextStyle-class.html\">DefaultTextStyle<\/a> that animates the different properties\nof its <a href=\"painting\/TextStyle-class.html\">TextStyle<\/a>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/DefaultTextStyle-class.html\">DefaultTextStyle<\/a>, which also defines a <a href=\"painting\/TextStyle-class.html\">TextStyle<\/a> for its descendants\nbut is not animated.<\/li><\/ul>",
    "dtype": "class",
    "example": "",
    "href": "widgets\/DefaultTextStyleTransition-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.DefaultTextStyleTransition",
    "shortname": "DefaultTextStyleTransition",
    "extends": [
        "widgets.AnimatedWidget",
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates an animated <a href=\"widgets\/DefaultTextStyle-class.html\">DefaultTextStyle<\/a> whose <a href=\"painting\/TextStyle-class.html\">TextStyle<\/a> animation updates\nthe widget.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const DefaultTextStyleTransition({\n  Key key,\n  @required Animation&lt;TextStyle&gt; style,\n  @required this.child,\n  this.textAlign,\n  this.softWrap = true,\n  this.overflow = TextOverflow.clip,\n  this.maxLines,\n}) : assert(style != null),\n     assert(child != null),\n     super(key: key, listenable: style);<\/code><\/pre>\n    ",
            "href": "widgets\/DefaultTextStyleTransition\/DefaultTextStyleTransition.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.DefaultTextStyleTransition",
            "params": [
                {
                    "name": "child",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "maxLines",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "overflow",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "rendering.TextOverflow"
                },
                {
                    "name": "softWrap",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "style",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "animation.Animation<painting.TextStyle>"
                },
                {
                    "name": "textAlign",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.TextAlign"
                }
            ]
        },
        {
            "desc": "<p>Override this method to build widgets that depend on the state of the\nlistenable (e.g., the current value of the animation).<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  return DefaultTextStyle(\n    style: style.value,\n    textAlign: textAlign,\n    softWrap: softWrap,\n    overflow: overflow,\n    maxLines: maxLines,\n    child: child,\n  );\n}<\/code><\/pre>\n    ",
            "href": "widgets\/DefaultTextStyleTransition\/build.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.DefaultTextStyleTransition",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The widget below this widget in the tree.<\/p>\n<p>This widget can only have one child. To lay out multiple children, let this\nwidget's child be a widget such as <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Stack-class.html\">Stack<\/a>, which have a\n<code>children<\/code> property, and then provide the children to that widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/DefaultTextStyleTransition\/child.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "widgets.DefaultTextStyleTransition",
            "params": []
        },
        {
            "desc": "<p>An optional maximum number of lines for the text to span, wrapping if necessary.<\/p>\n<p>See <a href=\"widgets\/DefaultTextStyleTransition\/maxLines.html\">DefaultTextStyle.maxLines<\/a> for more details.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int maxLines\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/DefaultTextStyleTransition\/maxLines.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "widgets.DefaultTextStyleTransition",
            "params": []
        },
        {
            "desc": "<p>How visual overflow should be handled.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextOverflow overflow\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/DefaultTextStyleTransition\/overflow.html",
            "isDeprecated": "0",
            "type": "rendering.TextOverflow",
            "memberOf": "widgets.DefaultTextStyleTransition",
            "params": []
        },
        {
            "desc": "<p>Whether the text should break at soft line breaks.<\/p>\n<p>See <a href=\"widgets\/DefaultTextStyleTransition\/softWrap.html\">DefaultTextStyle.softWrap<\/a> for more details.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool softWrap\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/DefaultTextStyleTransition\/softWrap.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "widgets.DefaultTextStyleTransition",
            "params": []
        },
        {
            "desc": "<p>The animation that controls the descendants' text style.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Animation&lt;TextStyle&gt; get style =&gt; listenable;<\/code><\/pre>\n        ",
            "href": "widgets\/DefaultTextStyleTransition\/style.html",
            "isDeprecated": "0",
            "type": "animation.Animation<painting.TextStyle>",
            "memberOf": "widgets.DefaultTextStyleTransition",
            "params": []
        },
        {
            "desc": "<p>How the text should be aligned horizontally.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextAlign textAlign\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/DefaultTextStyleTransition\/textAlign.html",
            "isDeprecated": "0",
            "type": "dart:ui.TextAlign",
            "memberOf": "widgets.DefaultTextStyleTransition",
            "params": []
        }
    ]
}