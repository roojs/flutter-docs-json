{
    "name": "widgets.LongPressDraggable",
    "extends": [
        "widgets.Draggable",
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "LongPressDraggable",
            "type": "",
            "desc": "<p>Creates a widget that can be dragged starting from long press.<\/p>\n<p>The <code>child<\/code> and <code>feedback<\/code> arguments must not be null. If\n<code>maxSimultaneousDrags<\/code> is non-null, it must be non-negative.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.LongPressDraggable",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "child",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "feedback",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "data",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "axis",
                    "type": "painting.Axis",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "childWhenDragging",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "feedbackOffset",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "dragAnchor",
                    "type": "widgets.DragAnchor",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "maxSimultaneousDrags",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onDragStarted",
                    "type": "dart:ui.VoidCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onDraggableCanceled",
                    "type": "widgets.DraggableCanceledCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onDragEnd",
                    "type": "widgets.DragEndCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onDragCompleted",
                    "type": "dart:ui.VoidCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "hapticFeedbackOnStart",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "ignoringFeedbackSemantics",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/LongPressDraggable\/LongPressDraggable.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const LongPressDraggable({\n  Key key,\n  @required Widget child,\n  @required Widget feedback,\n  T data,\n  Axis axis,\n  Widget childWhenDragging,\n  Offset feedbackOffset = Offset.zero,\n  DragAnchor dragAnchor = DragAnchor.child,\n  int maxSimultaneousDrags,\n  VoidCallback onDragStarted,\n  DraggableCanceledCallback onDraggableCanceled,\n  DragEndCallback onDragEnd,\n  VoidCallback onDragCompleted,\n  this.hapticFeedbackOnStart = true,\n  bool ignoringFeedbackSemantics = true,\n}) : super(\n  key: key,\n  child: child,\n  feedback: feedback,\n  data: data,\n  axis: axis,\n  childWhenDragging: childWhenDragging,\n  feedbackOffset: feedbackOffset,\n  dragAnchor: dragAnchor,\n  maxSimultaneousDrags: maxSimultaneousDrags,\n  onDragStarted: onDragStarted,\n  onDraggableCanceled: onDraggableCanceled,\n  onDragEnd: onDragEnd,\n  onDragCompleted: onDragCompleted,\n  ignoringFeedbackSemantics: ignoringFeedbackSemantics,\n);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "createRecognizer",
            "type": "gestures.DelayedMultiDragGestureRecognizer",
            "desc": "<p>Creates a gesture recognizer that recognizes the start of the drag.<\/p>\n<p>Subclasses can override this function to customize when they start\nrecognizing a drag.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.LongPressDraggable",
            "sig": "",
            "params": [
                {
                    "name": "onStart",
                    "type": "gestures.GestureMultiDragStartCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/LongPressDraggable\/createRecognizer.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nDelayedMultiDragGestureRecognizer createRecognizer(GestureMultiDragStartCallback onStart) {\n  return DelayedMultiDragGestureRecognizer()\n    ..onStart = (Offset position) {\n      final Drag result = onStart(position);\n      if (result != null &amp;&amp; hapticFeedbackOnStart)\n        HapticFeedback.selectionClick();\n      return result;\n    };\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "hapticFeedbackOnStart",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether haptic feedback should be triggered on drag start.<\/p>\n        ",
            "memberOf": "widgets.LongPressDraggable",
            "isConstant": false,
            "href": "widgets\/LongPressDraggable\/hapticFeedbackOnStart.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool hapticFeedbackOnStart\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "widgets\/LongPressDraggable-class.html",
    "desc": "<p>Makes its child draggable starting from long press.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "LongPressDraggable"
}