{
    "desc": "<p>A reference to a directory on the file system.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-file_file\/Directory-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "file",
    "name": "file.Directory",
    "shortname": "Directory",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "package-file_file\/Directory\/Directory.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "file.Directory",
            "params": []
        },
        {
            "desc": "<p>Returns a reference to a <a href=\"package-file_file\/Directory-class.html\">Directory<\/a> that exists as a child of this\ndirectory and has the specified <code>basename<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Directory childDirectory(String basename);<\/code><\/pre>\n    ",
            "href": "package-file_file\/Directory\/childDirectory.html",
            "isDeprecated": "0",
            "type": "file.Directory",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "file.Directory",
            "params": [
                {
                    "name": "basename",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Returns a reference to a <a href=\"package-file_file\/File-class.html\">File<\/a> that exists as a child of this directory\nand has the specified <code>basename<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">File childFile(String basename);<\/code><\/pre>\n    ",
            "href": "package-file_file\/Directory\/childFile.html",
            "isDeprecated": "0",
            "type": "file.File",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "file.Directory",
            "params": [
                {
                    "name": "basename",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Returns a reference to a <a href=\"package-file_file\/Link-class.html\">Link<\/a> that exists as a child of this directory\nand has the specified <code>basename<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Link childLink(String basename);<\/code><\/pre>\n    ",
            "href": "package-file_file\/Directory\/childLink.html",
            "isDeprecated": "0",
            "type": "file.Link",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "file.Directory",
            "params": [
                {
                    "name": "basename",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Creates the directory with this name.<\/p>\n<p>If <code>recursive<\/code> is false, only the last directory in the path is\ncreated. If <code>recursive<\/code> is true, all non-existing path components\nare created. If the directory already exists nothing is done.<\/p>\n<p>Returns a <code>Future&lt;Directory&gt;<\/code> that completes with this\ndirectory once it has been created. If the directory cannot be\ncreated the future completes with an exception.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nFuture&lt;Directory&gt; create({bool recursive: false});<\/code><\/pre>\n    ",
            "href": "package-file_file\/Directory\/create.html",
            "isDeprecated": "0",
            "type": "dart:async.Future<file.Directory>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "file.Directory",
            "params": [
                {
                    "name": "recursive",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.bool"
                }
            ]
        },
        {
            "desc": "<p>Creates a temporary directory in this directory. Additional random\ncharacters are appended to <code>prefix<\/code> to produce a unique directory\nname. If <code>prefix<\/code> is missing or null, the empty string is used\nfor <code>prefix<\/code>.<\/p>\n<p>Returns a <code>Future&lt;Directory&gt;<\/code> that completes with the newly\ncreated temporary directory.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nFuture&lt;Directory&gt; createTemp([String prefix]);<\/code><\/pre>\n    ",
            "href": "package-file_file\/Directory\/createTemp.html",
            "isDeprecated": "0",
            "type": "dart:async.Future<file.Directory>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "file.Directory",
            "params": [
                {
                    "name": "prefix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Synchronously creates a temporary directory in this directory.\nAdditional random characters are appended to <code>prefix<\/code> to produce\na unique directory name. If <code>prefix<\/code> is missing or null, the empty\nstring is used for <code>prefix<\/code>.<\/p>\n<p>Returns the newly created temporary directory.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nDirectory createTempSync([String prefix]);<\/code><\/pre>\n    ",
            "href": "package-file_file\/Directory\/createTempSync.html",
            "isDeprecated": "0",
            "type": "file.Directory",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "file.Directory",
            "params": [
                {
                    "name": "prefix",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Lists the sub-directories and files of this <a href=\"package-file_file\/Directory-class.html\">Directory<\/a>.\nOptionally recurses into sub-directories.<\/p>\n<p>If <code>followLinks<\/code> is false, then any symbolic links found\nare reported as <a href=\"package-file_file\/Link-class.html\">Link<\/a> objects, rather than as directories or files,\nand are not recursed into.<\/p>\n<p>If <code>followLinks<\/code> is true, then working links are reported as\ndirectories or files, depending on\ntheir type, and links to directories are recursed into.\nBroken links are reported as <a href=\"package-file_file\/Link-class.html\">Link<\/a> objects.\nIf a symbolic link makes a loop in the file system, then a recursive\nlisting will not follow a link twice in the\nsame recursive descent, but will report it as a <a href=\"package-file_file\/Link-class.html\">Link<\/a>\nthe second time it is seen.<\/p>\n<p>The result is a stream of <a href=\"package-file_file\/FileSystemEntity-class.html\">FileSystemEntity<\/a> objects\nfor the directories, files, and links.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nStream&lt;FileSystemEntity&gt; list(\n    {bool recursive: false, bool followLinks: true});<\/code><\/pre>\n    ",
            "href": "package-file_file\/Directory\/list.html",
            "isDeprecated": "0",
            "type": "dart:async.Stream<file.FileSystemEntity>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "file.Directory",
            "params": [
                {
                    "name": "followLinks",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.bool"
                },
                {
                    "name": "recursive",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.bool"
                }
            ]
        },
        {
            "desc": "<p>Lists the sub-directories and files of this <a href=\"package-file_file\/Directory-class.html\">Directory<\/a>.\nOptionally recurses into sub-directories.<\/p>\n<p>If <code>followLinks<\/code> is false, then any symbolic links found\nare reported as <a href=\"package-file_file\/Link-class.html\">Link<\/a> objects, rather than as directories or files,\nand are not recursed into.<\/p>\n<p>If <code>followLinks<\/code> is true, then working links are reported as\ndirectories or files, depending on\ntheir type, and links to directories are recursed into.\nBroken links are reported as <a href=\"package-file_file\/Link-class.html\">Link<\/a> objects.\nIf a link makes a loop in the file system, then a recursive\nlisting will not follow a link twice in the\nsame recursive descent, but will report it as a <a href=\"package-file_file\/Link-class.html\">Link<\/a>\nthe second time it is seen.<\/p>\n<p>Returns a <a href=\"dart-core\/List-class.html\">List<\/a> containing <a href=\"package-file_file\/FileSystemEntity-class.html\">FileSystemEntity<\/a> objects for the\ndirectories, files, and links.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nList&lt;FileSystemEntity&gt; listSync(\n    {bool recursive: false, bool followLinks: true});<\/code><\/pre>\n    ",
            "href": "package-file_file\/Directory\/listSync.html",
            "isDeprecated": "0",
            "type": "dart:core.List<file.FileSystemEntity>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "file.Directory",
            "params": [
                {
                    "name": "followLinks",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.bool"
                },
                {
                    "name": "recursive",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.bool"
                }
            ]
        },
        {
            "desc": "<p>Renames this directory. Returns a <code>Future&lt;Directory&gt;<\/code> that completes\nwith a <a href=\"package-file_file\/Directory-class.html\">Directory<\/a> instance for the renamed directory.<\/p>\n<p>If newPath identifies an existing directory, that directory is\nreplaced. If newPath identifies an existing file, the operation\nfails and the future completes with an exception.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nFuture&lt;Directory&gt; rename(String newPath);<\/code><\/pre>\n    ",
            "href": "package-file_file\/Directory\/rename.html",
            "isDeprecated": "0",
            "type": "dart:async.Future<file.Directory>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "file.Directory",
            "params": [
                {
                    "name": "newPath",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        },
        {
            "desc": "<p>Synchronously renames this directory. Returns a <a href=\"package-file_file\/Directory-class.html\">Directory<\/a>\ninstance for the renamed directory.<\/p>\n<p>If newPath identifies an existing directory, that directory is\nreplaced. If newPath identifies an existing file the operation\nfails and an exception is thrown.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nDirectory renameSync(String newPath);<\/code><\/pre>\n    ",
            "href": "package-file_file\/Directory\/renameSync.html",
            "isDeprecated": "0",
            "type": "file.Directory",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "file.Directory",
            "params": [
                {
                    "name": "newPath",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.String"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns a <a href=\"package-file_file\/Directory-class.html\">Directory<\/a> instance whose path is the absolute path to <a href=\"package-file_file\/Directory-class.html\">this<\/a>.<\/p>\n<p>The absolute path is computed by prefixing\na relative path with the current working directory, and returning\nan absolute path unchanged.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nDirectory get absolute;<\/code><\/pre>\n        ",
            "href": "package-file_file\/Directory\/absolute.html",
            "isDeprecated": "0",
            "type": "file.Directory",
            "memberOf": "file.Directory",
            "params": []
        }
    ]
}