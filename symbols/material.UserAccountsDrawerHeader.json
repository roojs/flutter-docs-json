{
    "desc": "<p>A material design <a href=\"material\/Drawer-class.html\">Drawer<\/a> header that identifies the app's user.<\/p>\n<p>Requires one of its ancestors to be a <a href=\"material\/Material-class.html\">Material<\/a> widget.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/DrawerHeader-class.html\">DrawerHeader<\/a>, for a drawer header that doesn't show user accounts.<\/li>\n<li><a href=\"https:\/\/material.io\/design\/components\/navigation-drawer.html#anatomy\">material.io\/design\/components\/navigation-drawer.html#anatomy<\/a><\/li>\n<\/ul>",
    "dtype": "class",
    "example": null,
    "href": "material\/UserAccountsDrawerHeader-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.UserAccountsDrawerHeader",
    "shortname": "UserAccountsDrawerHeader",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [
        {
            "desc": "<p>A callback that is called when the horizontal area which contains the\n<a href=\"material\/UserAccountsDrawerHeader\/accountName.html\">accountName<\/a> and <a href=\"material\/UserAccountsDrawerHeader\/accountEmail.html\">accountEmail<\/a> is tapped.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final VoidCallback onDetailsPressed\n\n<\/code><\/pre>\n        ",
            "href": "material\/UserAccountsDrawerHeader\/onDetailsPressed.html",
            "isDeprecated": "0",
            "type": "dart:ui.VoidCallback",
            "memberOf": "material.UserAccountsDrawerHeader",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a material design drawer header.<\/p>\n<p>Requires one of its ancestors to be a <a href=\"material\/Material-class.html\">Material<\/a> widget.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const UserAccountsDrawerHeader({\n  Key key,\n  this.decoration,\n  this.margin = const EdgeInsets.only(bottom: 8.0),\n  this.currentAccountPicture,\n  this.otherAccountsPictures,\n  @required this.accountName,\n  @required this.accountEmail,\n  this.onDetailsPressed,\n}) : super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/UserAccountsDrawerHeader\/UserAccountsDrawerHeader.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.UserAccountsDrawerHeader",
            "params": [
                {
                    "name": "accountEmail",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "accountName",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "currentAccountPicture",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "decoration",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "painting.Decoration"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "margin",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "painting.EdgeInsetsGeometry"
                },
                {
                    "name": "onDetailsPressed",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.VoidCallback"
                },
                {
                    "name": "otherAccountsPictures",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<widgets.Widget>"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/UserAccountsDrawerHeader\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_UserAccountsDrawerHeaderState createState() =&gt; _UserAccountsDrawerHeaderState();<\/code><\/pre>\n    ",
            "href": "material\/UserAccountsDrawerHeader\/createState.html",
            "isDeprecated": "0",
            "type": "<_UserAccountsDrawerHeaderState>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.UserAccountsDrawerHeader",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>A widget that represents the email address of the user's current account.\nIt is displayed on the left, below the <a href=\"material\/UserAccountsDrawerHeader\/accountName.html\">accountName<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget accountEmail\n\n<\/code><\/pre>\n        ",
            "href": "material\/UserAccountsDrawerHeader\/accountEmail.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.UserAccountsDrawerHeader",
            "params": []
        },
        {
            "desc": "<p>A widget that represents the user's current account name. It is\ndisplayed on the left, below the <a href=\"material\/UserAccountsDrawerHeader\/currentAccountPicture.html\">currentAccountPicture<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget accountName\n\n<\/code><\/pre>\n        ",
            "href": "material\/UserAccountsDrawerHeader\/accountName.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.UserAccountsDrawerHeader",
            "params": []
        },
        {
            "desc": "<p>A widget placed in the upper-left corner that represents the current\nuser's account. Normally a <a href=\"material\/CircleAvatar-class.html\">CircleAvatar<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget currentAccountPicture\n\n<\/code><\/pre>\n        ",
            "href": "material\/UserAccountsDrawerHeader\/currentAccountPicture.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "memberOf": "material.UserAccountsDrawerHeader",
            "params": []
        },
        {
            "desc": "<p>The header's background. If decoration is null then a <a href=\"painting\/BoxDecoration-class.html\">BoxDecoration<\/a>\nwith its background color set to the current theme's primaryColor is used.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Decoration decoration\n\n<\/code><\/pre>\n        ",
            "href": "material\/UserAccountsDrawerHeader\/decoration.html",
            "isDeprecated": "0",
            "type": "painting.Decoration",
            "memberOf": "material.UserAccountsDrawerHeader",
            "params": []
        },
        {
            "desc": "<p>The margin around the drawer header.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final EdgeInsetsGeometry margin\n\n<\/code><\/pre>\n        ",
            "href": "material\/UserAccountsDrawerHeader\/margin.html",
            "isDeprecated": "0",
            "type": "painting.EdgeInsetsGeometry",
            "memberOf": "material.UserAccountsDrawerHeader",
            "params": []
        },
        {
            "desc": "<p>A list of widgets that represent the current user's other accounts.\nUp to three of these widgets will be arranged in a row in the header's\nupper-right corner. Normally a list of <a href=\"material\/CircleAvatar-class.html\">CircleAvatar<\/a> widgets.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;Widget&gt; otherAccountsPictures\n\n<\/code><\/pre>\n        ",
            "href": "material\/UserAccountsDrawerHeader\/otherAccountsPictures.html",
            "isDeprecated": "0",
            "type": "dart:core.List<widgets.Widget>",
            "memberOf": "material.UserAccountsDrawerHeader",
            "params": []
        }
    ]
}