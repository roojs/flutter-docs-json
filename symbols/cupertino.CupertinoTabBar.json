{
    "desc": "<p>An iOS-styled bottom navigation tab bar.<\/p>\n<p>Displays multiple tabs using <a href=\"widgets\/BottomNavigationBarItem-class.html\">BottomNavigationBarItem<\/a> with one tab being\nactive, the first tab by default.<\/p>\n<p>This <a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a> doesn't store the active tab itself. You must\nlisten to the <a href=\"cupertino\/CupertinoTabBar\/onTap.html\">onTap<\/a> callbacks and call <code>setState<\/code> with a new <a href=\"cupertino\/CupertinoTabBar\/currentIndex.html\">currentIndex<\/a>\nfor the new selection to reflect. This can also be done automatically\nby wrapping this with a <a href=\"cupertino\/CupertinoTabScaffold-class.html\">CupertinoTabScaffold<\/a>.<\/p>\n<p>Tab changes typically trigger a switch between <a href=\"widgets\/Navigator-class.html\">Navigator<\/a>s, each with its\nown navigation stack, per standard iOS design. This can be done by using\n<a href=\"cupertino\/CupertinoTabView-class.html\">CupertinoTabView<\/a>s inside each tab builder in <a href=\"cupertino\/CupertinoTabScaffold-class.html\">CupertinoTabScaffold<\/a>.<\/p>\n<p>If the given <a href=\"cupertino\/CupertinoTabBar\/backgroundColor.html\">backgroundColor<\/a>'s opacity is not 1.0 (which is the case by\ndefault), it will produce a blurring effect to the content behind it.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"cupertino\/CupertinoTabScaffold-class.html\">CupertinoTabScaffold<\/a>, which hosts the <a href=\"cupertino\/CupertinoTabBar-class.html\">CupertinoTabBar<\/a> at the bottom.<\/li>\n<li>\n<a href=\"widgets\/BottomNavigationBarItem-class.html\">BottomNavigationBarItem<\/a>, an item in a <a href=\"cupertino\/CupertinoTabBar-class.html\">CupertinoTabBar<\/a>.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "cupertino\/CupertinoTabBar-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "cupertino",
    "name": "cupertino.CupertinoTabBar",
    "shortname": "CupertinoTabBar",
    "extends": [
        "widgets.StatelessWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [
        {
            "desc": "<p>The callback that is called when a item is tapped.<\/p>\n<p>The widget creating the bottom navigation bar needs to keep track of the\ncurrent index and call <code>setState<\/code> to rebuild it with the newly provided\nindex.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueChanged&lt;int&gt; onTap\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabBar\/onTap.html",
            "isDeprecated": "0",
            "type": "foundation.ValueChanged<dart:core.int>",
            "memberOf": "cupertino.CupertinoTabBar",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a tab bar in the iOS style.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">CupertinoTabBar({\n  Key key,\n  @required this.items,\n  this.onTap,\n  this.currentIndex = 0,\n  this.backgroundColor,\n  this.activeColor,\n  this.inactiveColor = CupertinoColors.inactiveGray,\n  this.iconSize = 30.0,\n  this.border = const Border(\n    top: BorderSide(\n      color: _kDefaultTabBarBorderColor,\n      width: 0.0, \/\/ One physical pixel.\n      style: BorderStyle.solid,\n    ),\n  ),\n}) : assert(items != null),\n     assert(\n       items.length &gt;= 2,\n       \"Tabs need at least 2 items to conform to Apple's HIG\",\n     ),\n     assert(currentIndex != null),\n     assert(0 &lt;= currentIndex &amp;&amp; currentIndex &lt; items.length),\n     assert(iconSize != null),\n     assert(inactiveColor != null),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoTabBar\/CupertinoTabBar.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "cupertino.CupertinoTabBar",
            "params": [
                {
                    "name": "activeColor",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "backgroundColor",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "border",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "painting.Border"
                },
                {
                    "name": "currentIndex",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.int"
                },
                {
                    "name": "iconSize",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "inactiveColor",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "items",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<widgets.BottomNavigationBarItem>"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "onTap",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.ValueChanged<dart:core.int>"
                }
            ]
        },
        {
            "desc": "<p>Describes the part of the user interface represented by this widget.<\/p>\n<p>The framework calls this method when this widget is inserted into the\ntree in a given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> and when the dependencies of this widget\nchange (e.g., an <a href=\"widgets\/InheritedWidget-class.html\">InheritedWidget<\/a> referenced by this widget changes).<\/p>\n<p>The framework replaces the subtree below this widget with the widget\nreturned by this method, either by updating the existing subtree or by\nremoving the subtree and inflating a new subtree, depending on whether the\nwidget returned by this method can update the root of the existing\nsubtree, as determined by calling <a href=\"widgets\/Widget\/canUpdate.html\">Widget.canUpdate<\/a>.<\/p>\n<p>Typically implementations return a newly created constellation of widgets\nthat are configured with information from this widget's constructor and\nfrom the given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>.<\/p>\n<p>The given <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a> contains information about the location in the\ntree at which this widget is being built. For example, the context\nprovides the set of inherited widgets for this location in the tree. A\ngiven widget might be built with multiple different <a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>\narguments over time if the widget is moved around the tree or if the\nwidget is inserted into the tree in multiple places at once.<\/p>\n<p>The implementation of this method must only depend on:<\/p>\n<ul>\n<li>the fields of the widget, which themselves must not change over time,\nand<\/li>\n<li>any ambient state obtained from the <code>context<\/code> using\n<a href=\"widgets\/BuildContext\/inheritFromWidgetOfExactType.html\">BuildContext.inheritFromWidgetOfExactType<\/a>.<\/li>\n<\/ul>\n<p>If a widget's <a href=\"cupertino\/CupertinoTabBar\/build.html\">build<\/a> method is to depend on anything else, use a\n<a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a> instead.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/StatelessWidget-class.html\">StatelessWidget<\/a>, which contains the discussion on performance considerations.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  final double bottomPadding = MediaQuery.of(context).padding.bottom;\n\n  Widget result = DecoratedBox(\n    decoration: BoxDecoration(\n      border: border,\n      color: backgroundColor ?? CupertinoTheme.of(context).barBackgroundColor,\n    ),\n    child: SizedBox(\n      height: _kTabBarHeight + bottomPadding,\n      child: IconTheme.merge( \/\/ Default with the inactive state.\n        data: IconThemeData(\n          color: inactiveColor,\n          size: iconSize,\n        ),\n        child: DefaultTextStyle( \/\/ Default with the inactive state.\n          style: CupertinoTheme.of(context).textTheme.tabLabelTextStyle.copyWith(color: inactiveColor),\n          child: Padding(\n            padding: EdgeInsets.only(bottom: bottomPadding),\n            child: Row(\n              \/\/ Align bottom since we want the labels to be aligned.\n              crossAxisAlignment: CrossAxisAlignment.end,\n              children: _buildTabItems(context),\n            ),\n          ),\n        ),\n      ),\n    ),\n  );\n\n  if (!opaque(context)) {\n    \/\/ For non-opaque backgrounds, apply a blur effect.\n    result = ClipRect(\n      child: BackdropFilter(\n        filter: ImageFilter.blur(sigmaX: 10.0, sigmaY: 10.0),\n        child: result,\n      ),\n    );\n  }\n\n  return result;\n}<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoTabBar\/build.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoTabBar",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        },
        {
            "desc": "<p>Create a clone of the current <a href=\"cupertino\/CupertinoTabBar-class.html\">CupertinoTabBar<\/a> but with provided\nparameters overridden.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">CupertinoTabBar copyWith({\n  Key key,\n  List&lt;BottomNavigationBarItem&gt; items,\n  Color backgroundColor,\n  Color activeColor,\n  Color inactiveColor,\n  Size iconSize,\n  Border border,\n  int currentIndex,\n  ValueChanged&lt;int&gt; onTap,\n}) {\n  return CupertinoTabBar(\n    key: key ?? this.key,\n    items: items ?? this.items,\n    backgroundColor: backgroundColor ?? this.backgroundColor,\n    activeColor: activeColor ?? this.activeColor,\n    inactiveColor: inactiveColor ?? this.inactiveColor,\n    iconSize: iconSize ?? this.iconSize,\n    border: border ?? this.border,\n    currentIndex: currentIndex ?? this.currentIndex,\n    onTap: onTap ?? this.onTap,\n  );\n}<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoTabBar\/copyWith.html",
            "isDeprecated": "0",
            "type": "cupertino.CupertinoTabBar",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoTabBar",
            "params": [
                {
                    "name": "activeColor",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "backgroundColor",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "border",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "painting.Border"
                },
                {
                    "name": "currentIndex",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "iconSize",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Size"
                },
                {
                    "name": "inactiveColor",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "items",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.List<widgets.BottomNavigationBarItem>"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "foundation.Key"
                },
                {
                    "name": "onTap",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "foundation.ValueChanged<dart:core.int>"
                }
            ]
        },
        {
            "desc": "<p>Indicates whether the tab bar is fully opaque or can have contents behind\nit show through it.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool opaque(BuildContext context) {\n  final Color backgroundColor =\n      this.backgroundColor ?? CupertinoTheme.of(context).barBackgroundColor;\n  return backgroundColor.alpha == 0xFF;\n}<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoTabBar\/opaque.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoTabBar",
            "params": [
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "widgets.BuildContext"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The foreground color of the icon and title for the <a href=\"widgets\/BottomNavigationBarItem-class.html\">BottomNavigationBarItem<\/a>\nof the selected tab.<\/p>\n<p>Defaults to <a href=\"cupertino\/CupertinoTheme-class.html\">CupertinoTheme<\/a>'s <code>primaryColor<\/code> if null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color activeColor\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabBar\/activeColor.html",
            "isDeprecated": "0",
            "type": "dart:ui.Color",
            "memberOf": "cupertino.CupertinoTabBar",
            "params": []
        },
        {
            "desc": "<p>The background color of the tab bar. If it contains transparency, the\ntab bar will automatically produce a blurring effect to the content\nbehind it.<\/p>\n<p>Defaults to <a href=\"cupertino\/CupertinoTheme-class.html\">CupertinoTheme<\/a>'s <code>barBackgroundColor<\/code> when null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color backgroundColor\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabBar\/backgroundColor.html",
            "isDeprecated": "0",
            "type": "dart:ui.Color",
            "memberOf": "cupertino.CupertinoTabBar",
            "params": []
        },
        {
            "desc": "<p>The border of the <a href=\"cupertino\/CupertinoTabBar-class.html\">CupertinoTabBar<\/a>.<\/p>\n<p>The default value is a one physical pixel top border with grey color.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Border border\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabBar\/border.html",
            "isDeprecated": "0",
            "type": "painting.Border",
            "memberOf": "cupertino.CupertinoTabBar",
            "params": []
        },
        {
            "desc": "<p>The index into <a href=\"cupertino\/CupertinoTabBar\/items.html\">items<\/a> of the current active item.<\/p>\n<p>Must not be null and must inclusively be between 0 and the number of tabs\nminus 1.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int currentIndex\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabBar\/currentIndex.html",
            "isDeprecated": "0",
            "type": "dart:core.int",
            "memberOf": "cupertino.CupertinoTabBar",
            "params": []
        },
        {
            "desc": "<p>The size of all of the <a href=\"widgets\/BottomNavigationBarItem-class.html\">BottomNavigationBarItem<\/a> icons.<\/p>\n<p>This value is used to configure the <a href=\"widgets\/IconTheme-class.html\">IconTheme<\/a> for the navigation bar.\nWhen a <a href=\"widgets\/BottomNavigationBarItem\/icon.html\">BottomNavigationBarItem.icon<\/a> widget is not an <a href=\"widgets\/Icon-class.html\">Icon<\/a> the widget\nshould configure itself to match the icon theme's size and color.<\/p>\n<p>Must not be null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double iconSize\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabBar\/iconSize.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "cupertino.CupertinoTabBar",
            "params": []
        },
        {
            "desc": "<p>The foreground color of the icon and title for the <a href=\"widgets\/BottomNavigationBarItem-class.html\">BottomNavigationBarItem<\/a>s\nin the unselected state.<\/p>\n<p>Defaults to <a href=\"cupertino\/CupertinoColors\/inactiveGray-constant.html\">CupertinoColors.inactiveGray<\/a> and cannot be null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color inactiveColor\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabBar\/inactiveColor.html",
            "isDeprecated": "0",
            "type": "dart:ui.Color",
            "memberOf": "cupertino.CupertinoTabBar",
            "params": []
        },
        {
            "desc": "<p>The interactive items laid out within the bottom navigation bar.<\/p>\n<p>Must not be null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final List&lt;BottomNavigationBarItem&gt; items\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabBar\/items.html",
            "isDeprecated": "0",
            "type": "dart:core.List<widgets.BottomNavigationBarItem>",
            "memberOf": "cupertino.CupertinoTabBar",
            "params": []
        },
        {
            "desc": "<p>The size this widget would prefer if it were otherwise unconstrained.<\/p>\n<p>In many cases it's only necessary to define one preferred dimension.\nFor example the <a href=\"material\/Scaffold-class.html\">Scaffold<\/a> only depends on its app bar's preferred\nheight. In that case implementations of this method can just return\n<code>new Size.fromHeight(myAppBarHeight)<\/code>;<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nSize get preferredSize =&gt; const Size.fromHeight(_kTabBarHeight);<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoTabBar\/preferredSize.html",
            "isDeprecated": "0",
            "type": "dart:ui.Size",
            "memberOf": "cupertino.CupertinoTabBar",
            "params": []
        }
    ]
}