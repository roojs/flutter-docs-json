{
    "desc": "<p>Controls an iOS UIView.<\/p>\n<p>Typically created with <a href=\"services\/PlatformViewsService\/initUiKitView.html\">PlatformViewsService.initUiKitView<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "services\/UiKitViewController-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "services",
    "name": "services.UiKitViewController",
    "shortname": "UiKitViewController",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Accept an active gesture.<\/p>\n<p>When a touch sequence is happening on the embedded UIView all touch events are delayed.\nCalling this method releases the delayed events to the embedded UIView and makes it consume\nany following touch events for the pointers involved in the active gesture.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;void&gt; acceptGesture() {\n  final Map&lt;String, dynamic&gt; args = &lt;String, dynamic&gt;{\n    'id': id,\n  };\n  return SystemChannels.platform_views.invokeMethod('acceptGesture', args);\n}<\/code><\/pre>\n    ",
            "href": "services\/UiKitViewController\/acceptGesture.html",
            "isDeprecated": false,
            "type": "dart:async.Future",
            "name": "acceptGesture",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "services.UiKitViewController",
            "params": []
        },
        {
            "desc": "<p>Disposes the view.<\/p>\n<p>The <a href=\"services\/UiKitViewController-class.html\">UiKitViewController<\/a> object is unusable after calling this.\nThe <code>id<\/code> of the platform view cannot be reused after the view is\ndisposed.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;void&gt; dispose() async {\n  _debugDisposed = true;\n  await SystemChannels.platform_views.invokeMethod&lt;void&gt;('dispose', id);\n}<\/code><\/pre>\n    ",
            "href": "services\/UiKitViewController\/dispose.html",
            "isDeprecated": false,
            "type": "dart:async.Future",
            "name": "dispose",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "services.UiKitViewController",
            "params": []
        },
        {
            "desc": "<p>Rejects an active gesture.<\/p>\n<p>When a touch sequence is happening on the embedded UIView all touch events are delayed.\nCalling this method drops the buffered touch events and prevents any future touch events for\nthe pointers that are part of the active touch sequence from arriving to the embedded view.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;void&gt; rejectGesture() {\n  final Map&lt;String, dynamic&gt; args = &lt;String, dynamic&gt;{\n    'id': id,\n  };\n  return SystemChannels.platform_views.invokeMethod('rejectGesture', args);\n}<\/code><\/pre>\n    ",
            "href": "services\/UiKitViewController\/rejectGesture.html",
            "isDeprecated": false,
            "type": "dart:async.Future",
            "name": "rejectGesture",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "services.UiKitViewController",
            "params": []
        },
        {
            "desc": "<p>Sets the layout direction for the Android view.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Future&lt;void&gt; setLayoutDirection(TextDirection layoutDirection) async {\n  assert(!_debugDisposed, 'trying to set a layout direction for a disposed Android View. View id: $id');\n\n  if (layoutDirection == _layoutDirection)\n    return;\n\n  assert(layoutDirection != null);\n  _layoutDirection = layoutDirection;\n\n  \/\/ TODO(amirh): invoke the iOS platform views channel direction method once available.\n}<\/code><\/pre>\n    ",
            "href": "services\/UiKitViewController\/setLayoutDirection.html",
            "isDeprecated": false,
            "type": "dart:async.Future",
            "name": "setLayoutDirection",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "services.UiKitViewController",
            "params": [
                {
                    "name": "layoutDirection",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.TextDirection"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The unique identifier of the iOS view controlled by this controller.<\/p>\n<p>This identifier is typically generated by\n<a href=\"services\/PlatformViewsRegistry\/getNextPlatformViewId.html\">PlatformViewsRegistry.getNextPlatformViewId<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int id\n\n<\/code><\/pre>\n        ",
            "href": "services\/UiKitViewController\/id.html",
            "name": "id",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "services.UiKitViewController",
            "params": []
        }
    ]
}