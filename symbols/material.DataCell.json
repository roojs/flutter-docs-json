{
    "name": "material.DataCell",
    "extends": [],
    "memberOf": "material",
    "events": [
        {
            "name": "onTap",
            "type": "dart:ui.VoidCallback",
            "desc": "<p>Called if the cell is tapped.<\/p>\n<p>If non-null, tapping the cell will call this callback. If\nnull, tapping the cell will attempt to select the row (if\n<a href=\"material\/DataRow\/onSelectChanged.html\">DataRow.onSelectChanged<\/a> is provided).<\/p>\n        ",
            "static": false,
            "memberOf": "",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "material\/DataCell\/onTap.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final VoidCallback onTap\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false,
            "isConstant": false
        }
    ],
    "methods": [
        {
            "name": "DataCell",
            "type": "",
            "desc": "<p>Creates an object to hold the data for a cell in a <a href=\"material\/DataTable-class.html\">DataTable<\/a>.<\/p>\n<p>The first argument is the widget to show for the cell, typically\na <a href=\"widgets\/Text-class.html\">Text<\/a> or <a href=\"material\/DropdownButton-class.html\">DropdownButton<\/a> widget; this becomes the <code>child<\/code>\nproperty and must not be null.<\/p>\n<p>If the cell has no data, then a <a href=\"widgets\/Text-class.html\">Text<\/a> widget with placeholder\ntext should be provided instead, and then the <code>placeholder<\/code>\nargument should be set to true.<\/p>\n    ",
            "static": false,
            "memberOf": "material.DataCell",
            "sig": "",
            "params": [
                {
                    "name": "child",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "placeholder",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "showEditIcon",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "onTap",
                    "type": "dart:ui.VoidCallback",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "material\/DataCell\/DataCell.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const DataCell(\n  this.child, {\n  this.placeholder = false,\n  this.showEditIcon = false,\n  this.onTap,\n}) : assert(child != null);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "child",
            "type": "widgets.Widget",
            "types": [],
            "desc": "<p>The data for the row.<\/p>\n<p>Typically a <a href=\"widgets\/Text-class.html\">Text<\/a> widget or a <a href=\"material\/DropdownButton-class.html\">DropdownButton<\/a> widget.<\/p>\n<p>If the cell has no data, then a <a href=\"widgets\/Text-class.html\">Text<\/a> widget with placeholder\ntext should be provided instead, and <a href=\"material\/DataCell\/placeholder.html\">placeholder<\/a> should be set\nto true.<\/p>\n<p>This widget can only have one child. To lay out multiple children, let this\nwidget's child be a widget such as <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Stack-class.html\">Stack<\/a>, which have a\n<code>children<\/code> property, and then provide the children to that widget.<\/p>\n        ",
            "memberOf": "material.DataCell",
            "isConstant": false,
            "href": "material\/DataCell\/child.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "empty",
            "type": "material.DataCell",
            "types": [],
            "desc": "<p>A cell that has no content and has zero width and height.<\/p>\n        ",
            "memberOf": "material.DataCell",
            "isConstant": false,
            "href": "material\/DataCell\/empty.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final DataCell empty = DataCell(Container(width: 0.0, height: 0.0))\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "placeholder",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the <a href=\"material\/DataCell\/child.html\">child<\/a> is actually a placeholder.<\/p>\n<p>If this is true, the default text style for the cell is changed\nto be appropriate for placeholder text.<\/p>\n        ",
            "memberOf": "material.DataCell",
            "isConstant": false,
            "href": "material\/DataCell\/placeholder.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool placeholder\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "showEditIcon",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether to show an edit icon at the end of the cell.<\/p>\n<p>This does not make the cell actually editable; the caller must\nimplement editing behavior if desired (initiated from the\n<a href=\"material\/DataCell\/onTap.html\">onTap<\/a> callback).<\/p>\n<p>If this is set, <a href=\"material\/DataCell\/onTap.html\">onTap<\/a> should also be set, otherwise tapping\nthe icon will have no effect.<\/p>\n        ",
            "memberOf": "material.DataCell",
            "isConstant": false,
            "href": "material\/DataCell\/showEditIcon.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool showEditIcon\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "material\/DataCell-class.html",
    "desc": "<p>The data for a cell of a <a href=\"material\/DataTable-class.html\">DataTable<\/a>.<\/p>\n<p>One list of <a href=\"material\/DataCell-class.html\">DataCell<\/a> objects must be provided for each <a href=\"material\/DataRow-class.html\">DataRow<\/a>\nin the <a href=\"material\/DataTable-class.html\">DataTable<\/a>, in the <a href=\"material\/DataRow\/DataRow.html\">new DataRow<\/a> constructor's <code>cells<\/code>\nargument.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "DataCell"
}