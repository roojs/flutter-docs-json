{
    "desc": "<p>A spring simulation.<\/p>\n<p>Models a particle attached to a spring that follows Hooke's law.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "physics\/SpringSimulation-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "physics",
    "name": "physics.SpringSimulation",
    "shortname": "SpringSimulation",
    "extends": [
        "physics.Simulation",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [
        "physics.ScrollSpringSimulation"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a spring simulation from the provided spring description, start\ndistance, end distance, and initial velocity.<\/p>\n<p>The units for the start and end distance arguments are arbitrary, but must\nbe consistent with the units used for other lengths in the system.<\/p>\n<p>The units for the velocity are L\/T, where L is the aforementioned\narbitrary unit of length, and T is the time unit used for driving the\n<a href=\"physics\/SpringSimulation-class.html\">SpringSimulation<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">SpringSimulation(\n  SpringDescription spring,\n  double start,\n  double end,\n  double velocity, {\n  Tolerance tolerance = Tolerance.defaultTolerance,\n}) : _endPosition = end,\n     _solution = _SpringSolution(spring, start - end, velocity),\n     super(tolerance: tolerance);<\/code><\/pre>\n    ",
            "href": "physics\/SpringSimulation\/SpringSimulation.html",
            "isDeprecated": false,
            "type": "",
            "name": "SpringSimulation",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "physics.SpringSimulation",
            "params": [
                {
                    "name": "end",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "spring",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "physics.SpringDescription"
                },
                {
                    "name": "start",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "tolerance",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "physics.Tolerance"
                },
                {
                    "name": "velocity",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>The velocity of the object in the simulation at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble dx(double time) =&gt; _solution.dx(time);<\/code><\/pre>\n    ",
            "href": "physics\/SpringSimulation\/dx.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "dx",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "physics.SpringSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Whether the simulation is \"done\" at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nbool isDone(double time) {\n  return nearZero(_solution.x(time), tolerance.distance) &amp;&amp;\n         nearZero(_solution.dx(time), tolerance.velocity);\n}<\/code><\/pre>\n    ",
            "href": "physics\/SpringSimulation\/isDone.html",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "name": "isDone",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "physics.SpringSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; '$runtimeType(end: $_endPosition, $type)';<\/code><\/pre>\n    ",
            "href": "physics\/SpringSimulation\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "physics.SpringSimulation",
            "params": []
        },
        {
            "desc": "<p>The position of the object in the simulation at the given time.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\ndouble x(double time) =&gt; _endPosition + _solution.x(time);<\/code><\/pre>\n    ",
            "href": "physics\/SpringSimulation\/x.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "x",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "physics.SpringSimulation",
            "params": [
                {
                    "name": "time",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The kind of spring being simulated, for debugging purposes.<\/p>\n<p>This is derived from the <a href=\"physics\/SpringDescription-class.html\">SpringDescription<\/a> provided to the <a href=\"physics\/SpringSimulation\/SpringSimulation.html\">new\nSpringSimulation<\/a> constructor.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">SpringType get type =&gt; _solution.type;<\/code><\/pre>\n        ",
            "href": "physics\/SpringSimulation\/type.html",
            "name": "type",
            "isDeprecated": false,
            "type": "physics.SpringType",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "physics.SpringSimulation",
            "params": []
        }
    ]
}