{
    "desc": "<p>A Boolean value that can be associated with a semantics node.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "dart-ui\/SemanticsFlag-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "dart:ui",
    "name": "dart:ui.SemanticsFlag",
    "shortname": "SemanticsFlag",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  switch (index) {\n    case _kHasCheckedStateIndex:\n      return 'SemanticsFlag.hasCheckedState';\n    case _kIsCheckedIndex:\n      return 'SemanticsFlag.isChecked';\n    case _kIsSelectedIndex:\n      return 'SemanticsFlag.isSelected';\n    case _kIsButtonIndex:\n      return 'SemanticsFlag.isButton';\n    case _kIsTextFieldIndex:\n      return 'SemanticsFlag.isTextField';\n    case _kIsFocusedIndex:\n      return 'SemanticsFlag.isFocused';\n    case _kHasEnabledStateIndex:\n      return 'SemanticsFlag.hasEnabledState';\n    case _kIsEnabledIndex:\n      return 'SemanticsFlag.isEnabled';\n    case _kIsInMutuallyExclusiveGroupIndex:\n      return 'SemanticsFlag.isInMutuallyExclusiveGroup';\n    case _kIsHeaderIndex:\n      return 'SemanticsFlag.isHeader';\n    case _kIsObscuredIndex:\n      return 'SemanticsFlag.isObscured';\n    case _kScopesRouteIndex:\n      return 'SemanticsFlag.scopesRoute';\n    case _kNamesRouteIndex:\n      return 'SemanticsFlag.namesRoute';\n    case _kIsHiddenIndex:\n      return 'SemanticsFlag.isHidden';\n    case _kIsImageIndex:\n      return 'SemanticsFlag.isImage';\n    case _kIsLiveRegionIndex:\n      return 'SemanticsFlag.isLiveRegion';\n    case _kHasToggledStateIndex:\n      return 'SemanticsFlag.hasToggledState';\n    case _kIsToggledIndex:\n      return 'SemanticsFlag.isToggled';\n    case _kHasImplicitScrollingIndex:\n      return 'SemanticsFlag.hasImplicitScrolling';\n  }\n  return null;\n}<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/toString.html",
            "isDeprecated": false,
            "type": "dart:core.String",
            "name": "toString",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The semantics node has the quality of either being \"checked\" or \"unchecked\".<\/p>\n<p>This flag is mutually exclusive with <a href=\"dart-ui\/SemanticsFlag\/hasToggledState-constant.html\">hasToggledState<\/a>.<\/p>\n<p>For example, a checkbox or a radio button widget has checked state.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"dart-ui\/SemanticsFlag\/isChecked-constant.html\">SemanticsFlag.isChecked<\/a>, which controls whether the node is \"checked\" or \"unchecked\".<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag hasCheckedState = const SemanticsFlag._(_kHasCheckedStateIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/hasCheckedState-constant.html",
            "name": "hasCheckedState",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>The semantics node has the quality of either being \"enabled\" or\n\"disabled\".<\/p>\n<p>For example, a button can be enabled or disabled and therefore has an\n\"enabled\" state. Static text is usually neither enabled nor disabled and\ntherefore does not have an \"enabled\" state.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag hasEnabledState = const SemanticsFlag._(_kHasEnabledStateIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/hasEnabledState-constant.html",
            "name": "hasEnabledState",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether the platform can scroll the semantics node when the user attempts\nto move focus to an offscreen child.<\/p>\n<p>For example, a <a href=\"widgets\/ListView-class.html\">ListView<\/a> widget has implicit scrolling so that users can\neasily move the accessibility focus to the next set of children. A\n<a href=\"widgets\/PageView-class.html\">PageView<\/a> widget does not have implicit scrolling, so that users don't\nnavigate to the next page when reaching the end of the current one.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag hasImplicitScrolling = const SemanticsFlag._(_kHasImplicitScrollingIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/hasImplicitScrolling-constant.html",
            "name": "hasImplicitScrolling",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>The semantics node has the quality of either being \"on\" or \"off\".<\/p>\n<p>This flag is mutually exclusive with <a href=\"dart-ui\/SemanticsFlag\/hasCheckedState-constant.html\">hasCheckedState<\/a>.<\/p>\n<p>For example, a switch has toggled state.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"dart-ui\/SemanticsFlag\/isToggled-constant.html\">SemanticsFlag.isToggled<\/a>, which controls whether the node is \"on\" or \"off\".<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag hasToggledState = const SemanticsFlag._(_kHasToggledStateIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/hasToggledState-constant.html",
            "name": "hasToggledState",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>The numerical value for this flag.<\/p>\n<p>Each flag has one bit set in this bit field.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int index\n\n<\/code><\/pre>\n        ",
            "href": "dart-ui\/SemanticsFlag\/index.html",
            "name": "index",
            "isDeprecated": false,
            "type": "dart:core.int",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether the semantic node represents a button.<\/p>\n<p>Platforms has special handling for buttons, for example Android's TalkBack\nand iOS's VoiceOver provides an additional hint when the focused object is\na button.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isButton = const SemanticsFlag._(_kIsButtonIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isButton-constant.html",
            "name": "isButton",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether a semantics node that <a href=\"dart-ui\/SemanticsFlag\/hasCheckedState-constant.html\">hasCheckedState<\/a> is checked.<\/p>\n<p>If true, the semantics node is \"checked\". If false, the semantics node is\n\"unchecked\".<\/p>\n<p>For example, if a checkbox has a visible checkmark, <a href=\"dart-ui\/SemanticsFlag\/isChecked-constant.html\">isChecked<\/a> is true.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"dart-ui\/SemanticsFlag\/hasCheckedState-constant.html\">SemanticsFlag.hasCheckedState<\/a>, which enables a checked state.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isChecked = const SemanticsFlag._(_kIsCheckedIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isChecked-constant.html",
            "name": "isChecked",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether a semantic node that <a href=\"dart-ui\/SemanticsFlag\/hasEnabledState-constant.html\">hasEnabledState<\/a> is currently enabled.<\/p>\n<p>A disabled element does not respond to user interaction. For example, a\nbutton that currently does not respond to user interaction should be\nmarked as disabled.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isEnabled = const SemanticsFlag._(_kIsEnabledIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isEnabled-constant.html",
            "name": "isEnabled",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether the semantic node currently holds the user's focus.<\/p>\n<p>The focused element is usually the current receiver of keyboard inputs.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isFocused = const SemanticsFlag._(_kIsFocusedIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isFocused-constant.html",
            "name": "isFocused",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether a semantic node is a header that divides content into sections.<\/p>\n<p>For example, headers can be used to divide a list of alphabetically\nsorted words into the sections A, B, C, etc. as can be found in many\naddress book applications.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isHeader = const SemanticsFlag._(_kIsHeaderIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isHeader-constant.html",
            "name": "isHeader",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether the semantics node is considered hidden.<\/p>\n<p>Hidden elements are currently not visible on screen. They may be covered\nby other elements or positioned outside of the visible area of a viewport.<\/p>\n<p>Hidden elements cannot gain accessibility focus though regular touch. The\nonly way they can be focused is by moving the focus to them via linear\nnavigation.<\/p>\n<p>Platforms are free to completely ignore hidden elements and new platforms\nare encouraged to do so.<\/p>\n<p>Instead of marking an element as hidden it should usually be excluded from\nthe semantics tree altogether. Hidden elements are only included in the\nsemantics tree to work around platform limitations and they are mainly\nused to implement accessibility scrolling on iOS.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isHidden = const SemanticsFlag._(_kIsHiddenIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isHidden-constant.html",
            "name": "isHidden",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether the semantics node represents an image.<\/p>\n<p>Both TalkBack and VoiceOver will inform the user the the semantics node\nrepresents an image.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isImage = const SemanticsFlag._(_kIsImageIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isImage-constant.html",
            "name": "isImage",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether a semantic node is in a mutually exclusive group.<\/p>\n<p>For example, a radio button is in a mutually exclusive group because\nonly one radio button in that group can be marked as <a href=\"dart-ui\/SemanticsFlag\/isChecked-constant.html\">isChecked<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isInMutuallyExclusiveGroup = const SemanticsFlag._(_kIsInMutuallyExclusiveGroupIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isInMutuallyExclusiveGroup-constant.html",
            "name": "isInMutuallyExclusiveGroup",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether the semantics node is a live region.<\/p>\n<p>A live region indicates that updates to semantics node are important.\nPlatforms may use this information to make polite announcements to the\nuser to inform them of updates to this node.<\/p>\n<p>An example of a live region is a <a href=\"material\/SnackBar-class.html\">SnackBar<\/a> widget. On Android, A live\nregion causes a polite announcement to be generated automatically, even\nif the user does not have focus of the widget.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isLiveRegion = const SemanticsFlag._(_kIsLiveRegionIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isLiveRegion-constant.html",
            "name": "isLiveRegion",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether the value of the semantics node is obscured.<\/p>\n<p>This is usually used for text fields to indicate that its content\nis a password or contains other sensitive information.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isObscured = const SemanticsFlag._(_kIsObscuredIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isObscured-constant.html",
            "name": "isObscured",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether a semantics node is selected.<\/p>\n<p>If true, the semantics node is \"selected\". If false, the semantics node is\n\"unselected\".<\/p>\n<p>For example, the active tab in a tab bar has <a href=\"dart-ui\/SemanticsFlag\/isSelected-constant.html\">isSelected<\/a> set to true.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isSelected = const SemanticsFlag._(_kIsSelectedIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isSelected-constant.html",
            "name": "isSelected",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether the semantic node represents a text field.<\/p>\n<p>Text fields are announced as such and allow text input via accessibility\naffordances.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isTextField = const SemanticsFlag._(_kIsTextFieldIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isTextField-constant.html",
            "name": "isTextField",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>If true, the semantics node is \"on\". If false, the semantics node is\n\"off\".<\/p>\n<p>For example, if a switch is in the on position, <a href=\"dart-ui\/SemanticsFlag\/isToggled-constant.html\">isToggled<\/a> is true.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"dart-ui\/SemanticsFlag\/hasToggledState-constant.html\">SemanticsFlag.hasToggledState<\/a>, which enables a toggled state.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag isToggled = const SemanticsFlag._(_kIsToggledIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/isToggled-constant.html",
            "name": "isToggled",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether the semantics node label is the name of a visually distinct\nroute.<\/p>\n<p>This is used by certain widgets like Drawers and Dialogs, to indicate\nthat the node's semantic label can be used to announce an edge triggered\nsemantics update.<\/p>\n<p>Semantic nodes annotated with this flag will still receive a11y focus.<\/p>\n<p>Updating this label within the same active route subtree will not cause\nadditional announcements.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag namesRoute = const SemanticsFlag._(_kNamesRouteIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/namesRoute-constant.html",
            "name": "namesRoute",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>Whether the semantics node is the root of a subtree for which a route name\nshould be announced.<\/p>\n<p>When a node with this flag is removed from the semantics tree, the\nframework will select the last in depth-first, paint order node with this\nflag.  When a node with this flag is added to the semantics tree, it is\nselected automatically, unless there were multiple nodes with this flag\nadded.  In this case, the last added node in depth-first, paint order\nwill be selected.<\/p>\n<p>From this selected node, the framework will search in depth-first, paint\norder for the first node with a <a href=\"dart-ui\/SemanticsFlag\/namesRoute-constant.html\">namesRoute<\/a> flag and a non-null,\nnon-empty label. The <a href=\"dart-ui\/SemanticsFlag\/namesRoute-constant.html\">namesRoute<\/a> and <a href=\"dart-ui\/SemanticsFlag\/scopesRoute-constant.html\">scopesRoute<\/a> flags may be on the\nsame node. The label of the found node will be announced as an edge\ntransition. If no non-empty, non-null label is found then:<\/p>\n<ul>\n<li>VoiceOver will make a chime announcement.<\/li>\n<li>TalkBack will make no announcement<\/li>\n<\/ul>\n<p>Semantic nodes annotated with this flag are generally not a11y focusable.<\/p>\n<p>This is used in widgets such as Routes, Drawers, and Dialogs to\ncommunicate significant changes in the visible screen.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const SemanticsFlag scopesRoute = const SemanticsFlag._(_kScopesRouteIndex)\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/scopesRoute-constant.html",
            "name": "scopesRoute",
            "isDeprecated": false,
            "type": "dart:ui.SemanticsFlag",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        },
        {
            "desc": "<p>The possible semantics flags.<\/p>\n<p>The map's key is the <a href=\"dart-ui\/SemanticsFlag\/index.html\">index<\/a> of the flag and the value is the flag itself.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static const Map&lt;int, SemanticsFlag&gt; values = const &lt;int, SemanticsFlag&gt;{\n  _kHasCheckedStateIndex: hasCheckedState,\n  _kIsCheckedIndex: isChecked,\n  _kIsSelectedIndex: isSelected,\n  _kIsButtonIndex: isButton,\n  _kIsTextFieldIndex: isTextField,\n  _kIsFocusedIndex: isFocused,\n  _kHasEnabledStateIndex: hasEnabledState,\n  _kIsEnabledIndex: isEnabled,\n  _kIsInMutuallyExclusiveGroupIndex: isInMutuallyExclusiveGroup,\n  _kIsHeaderIndex: isHeader,\n  _kIsObscuredIndex: isObscured,\n  _kScopesRouteIndex: scopesRoute,\n  _kNamesRouteIndex: namesRoute,\n  _kIsHiddenIndex: isHidden,\n  _kIsImageIndex: isImage,\n  _kIsLiveRegionIndex: isLiveRegion,\n  _kHasToggledStateIndex: hasToggledState,\n  _kIsToggledIndex: isToggled,\n  _kHasImplicitScrollingIndex: hasImplicitScrolling,\n}\n\n<\/code><\/pre>\n    ",
            "href": "dart-ui\/SemanticsFlag\/values-constant.html",
            "name": "values",
            "isDeprecated": false,
            "type": "dart:core.Map<dart:core.int<dart:ui.SemanticsFlag>>",
            "dtype": "constant",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "dart:ui.SemanticsFlag",
            "params": []
        }
    ]
}