{
    "name": "collection.EqualityMap",
    "extends": [
        "collection.DelegatingMap",
        "dart:core.Object"
    ],
    "memberOf": "collection",
    "events": [],
    "methods": [
        {
            "name": "EqualityMap",
            "type": "",
            "desc": "<p>Creates a map with equality based on <code>equality<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.EqualityMap",
            "sig": "",
            "params": [
                {
                    "name": "equality",
                    "type": "collection.Equality",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-collection_collection\/EqualityMap\/EqualityMap.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">EqualityMap(Equality&lt;K&gt; equality)\n    : super(new LinkedHashMap(\n          equals: equality.equals,\n          hashCode: equality.hash,\n          isValidKey: equality.isValidKey));<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "EqualityMap.from",
            "type": "",
            "desc": "<p>Creates a map with equality based on <code>equality<\/code> that contains all\nkey-value pairs of <code>other<\/code>.<\/p>\n<p>If <code>other<\/code> has multiple keys that are equivalent according to <code>equality<\/code>,\nthe last one reached during iteration takes precedence.<\/p>\n    ",
            "static": false,
            "memberOf": "collection.EqualityMap",
            "sig": "",
            "params": [
                {
                    "name": "equality",
                    "type": "collection.Equality",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "other",
                    "type": "dart:core.Map",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-collection_collection\/EqualityMap\/EqualityMap.from.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">EqualityMap.from(Equality&lt;K&gt; equality, Map&lt;K, V&gt; other)\n    : super(new LinkedHashMap(\n          equals: equality.equals,\n          hashCode: equality.hash,\n          isValidKey: equality.isValidKey)) {\n  addAll(other);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "package-collection_collection\/EqualityMap-class.html",
    "desc": "<p>A <a href=\"dart-core\/Map-class.html\">Map<\/a> whose key equality is determined by an <a href=\"package-collection_collection\/Equality-class.html\">Equality<\/a> object.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "EqualityMap"
}