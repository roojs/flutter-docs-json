{
    "name": "source_span.SourceLocation",
    "extends": [],
    "memberOf": "source_span",
    "events": [],
    "methods": [
        {
            "name": "operator ==",
            "type": "dart:core.bool",
            "desc": "<p>The equality operator.<\/p>\n<p>The default behavior for all <a href=\"dart-core\/Object-class.html\">Object<\/a>s is to return true if and\nonly if <code>this<\/code> and <code>other<\/code> are the same object.<\/p>\n<p>Override this method to specify a different equality relation on\na class. The overriding method must still be an equivalence relation.\nThat is, it must be:<\/p>\n<ul>\n<li>\n<p>Total: It must return a boolean for all arguments. It should never throw\nor return <code>null<\/code>.<\/p>\n<\/li>\n<li>\n<p>Reflexive: For all objects <code>o<\/code>, <code>o == o<\/code> must be true.<\/p>\n<\/li>\n<li>\n<p>Symmetric: For all objects <code>o1<\/code> and <code>o2<\/code>, <code>o1 == o2<\/code> and <code>o2 == o1<\/code> must\neither both be true, or both be false.<\/p>\n<\/li>\n<li>\n<p>Transitive: For all objects <code>o1<\/code>, <code>o2<\/code>, and <code>o3<\/code>, if <code>o1 == o2<\/code> and\n<code>o2 == o3<\/code> are true, then <code>o1 == o3<\/code> must be true.<\/p>\n<\/li>\n<\/ul>\n<p>The method should also be consistent over time,\nso whether two objects are equal should only change\nif at least one of the objects was modified.<\/p>\n<p>If a subclass overrides the equality operator it should override\nthe <a href=\"package-source_span_source_span\/SourceLocation\/hashCode.html\">hashCode<\/a> method as well to maintain consistency.<\/p>\n    ",
            "static": false,
            "memberOf": "source_span.SourceLocation",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "package-source_span_source_span\/SourceLocation\/operator_equals.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool operator ==(other) =&gt;\n    other is SourceLocation &amp;&amp;\n    sourceUrl == other.sourceUrl &amp;&amp;\n    offset == other.offset;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "SourceLocation",
            "type": "",
            "desc": "<p>Creates a new location indicating <code>offset<\/code> within <code>sourceUrl<\/code>.<\/p>\n<p><code>line<\/code> and <code>column<\/code> default to assuming the source is a single line. This\nmeans that <code>line<\/code> defaults to 0 and <code>column<\/code> defaults to <code>offset<\/code>.<\/p>\n<p><code>sourceUrl<\/code> may be either a <a href=\"dart-core\/String-class.html\">String<\/a>, a <a href=\"dart-core\/Uri-class.html\">Uri<\/a>, or <code>null<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "source_span.SourceLocation",
            "sig": "",
            "params": [
                {
                    "name": "offset",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "sourceUrl",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "line",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "column",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-source_span_source_span\/SourceLocation\/SourceLocation.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">SourceLocation(int offset, {sourceUrl, int line, int column})\n    : sourceUrl = sourceUrl is String ? Uri.parse(sourceUrl) : sourceUrl,\n      offset = offset,\n      line = line == null ? 0 : line,\n      column = column == null ? offset : column {\n  if (offset &lt; 0) {\n    throw new RangeError(\"Offset may not be negative, was $offset.\");\n  } else if (line != null &amp;&amp; line &lt; 0) {\n    throw new RangeError(\"Line may not be negative, was $line.\");\n  } else if (column != null &amp;&amp; column &lt; 0) {\n    throw new RangeError(\"Column may not be negative, was $column.\");\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "compareTo",
            "type": "dart:core.int",
            "desc": "<p>Compares two locations.<\/p>\n<p><code>other<\/code> must have the same source URL as <a href=\"package-source_span_source_span\/SourceLocation-class.html\">this<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "source_span.SourceLocation",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "source_span.SourceLocation",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-source_span_source_span\/SourceLocation\/compareTo.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">int compareTo(SourceLocation other) {\n  if (sourceUrl != other.sourceUrl) {\n    throw new ArgumentError(\"Source URLs \\\"${sourceUrl}\\\" and \"\n        \"\\\"${other.sourceUrl}\\\" don't match.\");\n  }\n  return offset - other.offset;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "distance",
            "type": "dart:core.int",
            "desc": "<p>Returns the distance in characters between <a href=\"package-source_span_source_span\/SourceLocation-class.html\">this<\/a> and <code>other<\/code>.<\/p>\n<p>This always returns a non-negative value.<\/p>\n    ",
            "static": false,
            "memberOf": "source_span.SourceLocation",
            "sig": "",
            "params": [
                {
                    "name": "other",
                    "type": "source_span.SourceLocation",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-source_span_source_span\/SourceLocation\/distance.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">int distance(SourceLocation other) {\n  if (sourceUrl != other.sourceUrl) {\n    throw new ArgumentError(\"Source URLs \\\"${sourceUrl}\\\" and \"\n        \"\\\"${other.sourceUrl}\\\" don't match.\");\n  }\n  return (offset - other.offset).abs();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "pointSpan",
            "type": "source_span.SourceSpan",
            "desc": "<p>Returns a span that covers only a single point: this location.<\/p>\n    ",
            "static": false,
            "memberOf": "source_span.SourceLocation",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "package-source_span_source_span\/SourceLocation\/pointSpan.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">SourceSpan pointSpan() =&gt; new SourceSpan(this, this, \"\");<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "source_span.SourceLocation",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "package-source_span_source_span\/SourceLocation\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">String toString() =&gt; '&lt;$runtimeType: $offset $toolString&gt;';<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "column",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The 0-based column of this location in the source<\/p>\n        ",
            "memberOf": "source_span.SourceLocation",
            "isConstant": false,
            "href": "package-source_span_source_span\/SourceLocation\/column.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int column\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "hashCode",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The hash code for this object.<\/p>\n<p>A hash code is a single integer which represents the state of the object\nthat affects <a href=\"package-source_span_source_span\/SourceLocation\/operator_equals.html\">operator ==<\/a> comparisons.<\/p>\n<p>All objects have hash codes.\nThe default hash code represents only the identity of the object,\nthe same way as the default <a href=\"package-source_span_source_span\/SourceLocation\/operator_equals.html\">operator ==<\/a> implementation only considers objects\nequal if they are identical (see <a href=\"dart-core\/identityHashCode.html\">identityHashCode<\/a>).<\/p>\n<p>If <a href=\"package-source_span_source_span\/SourceLocation\/operator_equals.html\">operator ==<\/a> is overridden to use the object state instead,\nthe hash code must also be changed to represent that state.<\/p>\n<p>Hash codes must be the same for objects that are equal to each other\naccording to <a href=\"package-source_span_source_span\/SourceLocation\/operator_equals.html\">operator ==<\/a>.\nThe hash code of an object should only change if the object changes\nin a way that affects equality.\nThere are no further requirements for the hash codes.\nThey need not be consistent between executions of the same program\nand there are no distribution guarantees.<\/p>\n<p>Objects that are not equal are allowed to have the same hash code,\nit is even technically allowed that all instances have the same hash code,\nbut if clashes happen too often, it may reduce the efficiency of hash-based\ndata structures like <a href=\"dart-collection\/HashSet-class.html\">HashSet<\/a> or <a href=\"dart-collection\/HashMap-class.html\">HashMap<\/a>.<\/p>\n<p>If a subclass overrides <a href=\"package-source_span_source_span\/SourceLocation\/hashCode.html\">hashCode<\/a>, it should override the\n<a href=\"package-source_span_source_span\/SourceLocation\/operator_equals.html\">operator ==<\/a> operator as well to maintain consistency.<\/p>\n        ",
            "memberOf": "source_span.SourceLocation",
            "isConstant": false,
            "href": "package-source_span_source_span\/SourceLocation\/hashCode.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get hashCode =&gt; sourceUrl.hashCode + offset;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "line",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The 0-based line of this location in the source.<\/p>\n        ",
            "memberOf": "source_span.SourceLocation",
            "isConstant": false,
            "href": "package-source_span_source_span\/SourceLocation\/line.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int line\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "offset",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The 0-based offset of this location in the source.<\/p>\n        ",
            "memberOf": "source_span.SourceLocation",
            "isConstant": false,
            "href": "package-source_span_source_span\/SourceLocation\/offset.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final int offset\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "sourceUrl",
            "type": "dart:core.Uri",
            "types": [],
            "desc": "<p>URL of the source containing this location.<\/p>\n<p>This may be null, indicating that the source URL is unknown or\nunavailable.<\/p>\n        ",
            "memberOf": "source_span.SourceLocation",
            "isConstant": false,
            "href": "package-source_span_source_span\/SourceLocation\/sourceUrl.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Uri sourceUrl\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "toolString",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>Returns a representation of this location in the <code>source:line:column<\/code>\nformat used by text editors.<\/p>\n<p>This prints 1-based lines and columns.<\/p>\n        ",
            "memberOf": "source_span.SourceLocation",
            "isConstant": false,
            "href": "package-source_span_source_span\/SourceLocation\/toolString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">String get toolString {\n  var source = sourceUrl == null ? 'unknown source' : sourceUrl;\n  return '$source:${line + 1}:${column + 1}';\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [
        "source_span.SourceLocationBase"
    ],
    "realImplementors": [
        "source_span.SourceLocationBase"
    ],
    "cn": [],
    "href": "package-source_span_source_span\/SourceLocation-class.html",
    "desc": "<p>A class that describes a single location within a source file.<\/p>\n<p>This class should not be extended. Instead, <a href=\"package-source_span_source_span\/SourceLocationBase-class.html\">SourceLocationBase<\/a> should be\nextended instead.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "SourceLocation"
}