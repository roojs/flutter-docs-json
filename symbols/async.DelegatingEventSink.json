{
    "desc": "<p>Simple delegating wrapper around an <a href=\"dart-async\/EventSink-class.html\">EventSink<\/a>.<\/p>\n<p>Subclasses can override individual methods, or use this to expose only the\n<a href=\"dart-async\/EventSink-class.html\">EventSink<\/a> methods of a subclass.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "package-async_async\/DelegatingEventSink-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "async",
    "name": "async.DelegatingEventSink",
    "shortname": "DelegatingEventSink",
    "extends": [],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Create a delegating sink forwarding calls to <code>sink<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">DelegatingEventSink(EventSink&lt;T&gt; sink) : _sink = sink;<\/code><\/pre>\n    ",
            "href": "package-async_async\/DelegatingEventSink\/DelegatingEventSink.html",
            "isDeprecated": "0",
            "type": "",
            "name": "DelegatingEventSink",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "async.DelegatingEventSink",
            "params": [
                {
                    "name": "sink",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:async.EventSink"
                }
            ]
        },
        {
            "desc": "<p>Adds a data <code>event<\/code> to the sink.<\/p>\n<p>Must not be called on a closed sink.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(T data) {\n  _sink.add(data);\n}<\/code><\/pre>\n    ",
            "href": "package-async_async\/DelegatingEventSink\/add.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "add",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "async.DelegatingEventSink",
            "params": [
                {
                    "name": "data",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "<T>"
                }
            ]
        },
        {
            "desc": "<p>Adds an <code>error<\/code> to the sink.<\/p>\n<p>Must not be called on a closed sink.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void addError(error, [StackTrace stackTrace]) {\n  _sink.addError(error, stackTrace);\n}<\/code><\/pre>\n    ",
            "href": "package-async_async\/DelegatingEventSink\/addError.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "addError",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "async.DelegatingEventSink",
            "params": [
                {
                    "name": "error",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.Object"
                },
                {
                    "name": "stackTrace",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.StackTrace"
                }
            ]
        },
        {
            "desc": "<p>Closes the sink.<\/p>\n<p>Calling this method more than once is allowed, but does nothing.<\/p>\n<p>Neither <a href=\"package-async_async\/DelegatingEventSink\/add.html\">add<\/a> nor <a href=\"package-async_async\/DelegatingEventSink\/addError.html\">addError<\/a> must be called after this method.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void close() {\n  _sink.close();\n}<\/code><\/pre>\n    ",
            "href": "package-async_async\/DelegatingEventSink\/close.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "close",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "async.DelegatingEventSink",
            "params": []
        },
        {
            "desc": "<p>Creates a wrapper that coerces the type of <code>sink<\/code>.<\/p>\n<p>Unlike <a href=\"package-async_async\/DelegatingEventSink\/DelegatingEventSink.html\">new DelegatingEventSink<\/a>, this only requires its argument to be an\ninstance of <code>EventSink<\/code>, not <code>EventSink&lt;T&gt;<\/code>. This means that calls to\n<a href=\"package-async_async\/DelegatingEventSink\/add.html\">add<\/a> may throw a <a href=\"dart-core\/CastError-class.html\">CastError<\/a> if the argument type doesn't match the\nreified type of <code>sink<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static EventSink&lt;T&gt; typed&lt;T&gt;(EventSink sink) =&gt;\n    sink is EventSink&lt;T&gt; ? sink : new DelegatingEventSink._(sink);<\/code><\/pre>\n    ",
            "href": "package-async_async\/DelegatingEventSink\/typed.html",
            "isDeprecated": "0",
            "type": "dart:async.EventSink",
            "name": "typed",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "async.DelegatingEventSink",
            "params": [
                {
                    "name": "sink",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:async.EventSink"
                }
            ]
        }
    ],
    "props": []
}