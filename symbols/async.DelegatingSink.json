{
    "name": "async.DelegatingSink",
    "extends": [],
    "memberOf": "async",
    "events": [],
    "methods": [
        {
            "name": "DelegatingSink",
            "type": "",
            "desc": "<p>Create a delegating sink forwarding calls to <code>sink<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "async.DelegatingSink",
            "sig": "",
            "params": [
                {
                    "name": "sink",
                    "type": "dart:core.Sink",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "package-async_async\/DelegatingSink\/DelegatingSink.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">DelegatingSink(Sink&lt;T&gt; sink) : _sink = sink;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "add",
            "type": "",
            "desc": "<p>Adds <code>data<\/code> to the sink.<\/p>\n<p>Must not be called after a call to <a href=\"package-async_async\/DelegatingSink\/close.html\">close<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "async.DelegatingSink",
            "sig": "",
            "params": [
                {
                    "name": "data",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "package-async_async\/DelegatingSink\/add.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(T data) {\n  _sink.add(data);\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "close",
            "type": "",
            "desc": "<p>Closes the sink.<\/p>\n<p>The <a href=\"package-async_async\/DelegatingSink\/add.html\">add<\/a> method must not be called after this method.<\/p>\n<p>Calling this method more than once is allowed, but does nothing.<\/p>\n    ",
            "static": false,
            "memberOf": "async.DelegatingSink",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "package-async_async\/DelegatingSink\/close.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void close() {\n  _sink.close();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "typed",
            "type": "dart:core.Sink",
            "desc": "<p>Creates a wrapper that coerces the type of <code>sink<\/code>.<\/p>\n<p>Unlike <a href=\"package-async_async\/DelegatingSink\/DelegatingSink.html\">new DelegatingSink<\/a>, this only requires its argument to be an\ninstance of <code>Sink<\/code>, not <code>Sink&lt;T&gt;<\/code>. This means that calls to <a href=\"package-async_async\/DelegatingSink\/add.html\">add<\/a> may\nthrow a <a href=\"dart-core\/CastError-class.html\">CastError<\/a> if the argument type doesn't match the reified type of\n<code>sink<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "async.DelegatingSink",
            "sig": "",
            "params": [
                {
                    "name": "sink",
                    "type": "dart:core.Sink",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "package-async_async\/DelegatingSink\/typed.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Sink&lt;T&gt; typed&lt;T&gt;(Sink sink) =&gt;\n    sink is Sink&lt;T&gt; ? sink : new DelegatingSink._(sink);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "package-async_async\/DelegatingSink-class.html",
    "desc": "<p>Simple delegating wrapper around a <a href=\"dart-core\/Sink-class.html\">Sink<\/a>.<\/p>\n<p>Subclasses can override individual methods, or use this to expose only the\n<a href=\"dart-core\/Sink-class.html\">Sink<\/a> methods of a subclass.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "DelegatingSink"
}