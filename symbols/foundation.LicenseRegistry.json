{
    "desc": "<p>A registry for packages to add licenses to, so that they can be displayed\ntogether in an interface such as the <a href=\"material\/LicensePage-class.html\">LicensePage<\/a>.<\/p>\n<p>Packages can register their licenses using <a href=\"foundation\/LicenseRegistry\/addLicense.html\">addLicense<\/a>. User interfaces\nthat wish to show all the licenses can obtain them by calling <a href=\"foundation\/LicenseRegistry\/licenses.html\">licenses<\/a>.<\/p>\n<p>The flutter tool will automatically collect the contents of all the LICENSE\nfiles found at the root of each package into a single LICENSE file in the\ndefault asset bundle. Each license in that file is separated from the next\nby a line of eighty hyphens (<code>-<\/code>), and begins with a list of package names\nthat the license applies to, one to a line, separated from the next by a\nblank line. The <code>services<\/code> package registers a license collector that splits\nthat file and adds each entry to the registry.<\/p>\n<p>The LICENSE files in each package can either consist of a single license, or\ncan be in the format described above. In the latter case, each component\nlicense and list of package names is merged independently.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/showAboutDialog.html\">showAboutDialog<\/a>, which shows a Material-style dialog with information\nabout the application, including a button that shows a <a href=\"material\/LicensePage-class.html\">LicensePage<\/a> that\nuses this API to select licenses to show.<\/li>\n<li>\n<a href=\"material\/AboutListTile-class.html\">AboutListTile<\/a>, which is a widget that can be added to a <a href=\"material\/Drawer-class.html\">Drawer<\/a>. When\ntapped it calls <a href=\"material\/showAboutDialog.html\">showAboutDialog<\/a>.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": null,
    "href": "foundation\/LicenseRegistry-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "foundation",
    "name": "foundation.LicenseRegistry",
    "shortname": "LicenseRegistry",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Adds licenses to the registry.<\/p>\n<p>To avoid actually manipulating the licenses unless strictly necessary,\nlicenses are added by adding a closure that returns a list of\n<a href=\"foundation\/LicenseEntry-class.html\">LicenseEntry<\/a> objects. The closure is only called if <a href=\"foundation\/LicenseRegistry\/licenses.html\">licenses<\/a> is itself\ncalled; in normal operation, if the user does not request to see the\nlicenses, the closure will not be called.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static void addLicense(LicenseEntryCollector collector) {\n  _collectors ??= &lt;LicenseEntryCollector&gt;[];\n  _collectors.add(collector);\n}<\/code><\/pre>\n    ",
            "href": "foundation\/LicenseRegistry\/addLicense.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "foundation.LicenseRegistry",
            "params": [
                {
                    "name": "collector",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "foundation.LicenseEntryCollector"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Returns the licenses that have been registered.<\/p>\n<p>Generating the list of licenses is expensive.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static Stream&lt;LicenseEntry&gt; get licenses async* {\n  if (_collectors == null)\n    return;\n  for (LicenseEntryCollector collector in _collectors)\n    yield* collector();\n}<\/code><\/pre>\n        ",
            "href": "foundation\/LicenseRegistry\/licenses.html",
            "isDeprecated": "0",
            "type": "dart:async.Stream<foundation.LicenseEntry>",
            "memberOf": "foundation.LicenseRegistry",
            "params": []
        }
    ]
}