{
    "desc": "<p>Base class for slider tick mark shapes.<\/p>\n<p>Create a subclass of this if you would like a custom slider tick mark shape.\nThis is a simplified version of <a href=\"material\/SliderComponentShape-class.html\">SliderComponentShape<\/a> with a\n<a href=\"material\/SliderThemeData-class.html\">SliderThemeData<\/a> passed when getting the preferred size.<\/p>\n<p>The tick mark painting can be skipped by specifying <a href=\"material\/SliderTickMarkShape\/noTickMark.html\">noTickMark<\/a> for\n<a href=\"material\/SliderThemeData\/tickMarkShape.html\">SliderThemeData.tickMarkShape<\/a>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/RoundSliderTickMarkShape-class.html\">RoundSliderTickMarkShape<\/a> for a simple example of a tick mark shape.<\/li>\n<li>\n<a href=\"material\/SliderTrackShape-class.html\">SliderTrackShape<\/a> for the base class for custom a track shape.<\/li>\n<li>\n<a href=\"material\/SliderComponentShape-class.html\">SliderComponentShape<\/a> for the base class for custom a component shape.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/SliderTickMarkShape-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.SliderTickMarkShape",
    "shortname": "SliderTickMarkShape",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SliderTickMarkShape();<\/code><\/pre>\n    ",
            "href": "material\/SliderTickMarkShape\/SliderTickMarkShape.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.SliderTickMarkShape",
            "params": []
        },
        {
            "desc": "<p>Returns the preferred size of the shape.<\/p>\n<p>It is used to help position the tick marks within the slider.<\/p>\n<p><code>sliderTheme<\/code> is the theme assigned to the <a href=\"material\/Slider-class.html\">Slider<\/a> that this shape\nbelongs to.<\/p>\n<p><code>isEnabled<\/code> has the same value as <code>Slider.isInteractive<\/code>. If true, the\nslider will respond to input.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Size getPreferredSize({\n  SliderThemeData sliderTheme,\n  bool isEnabled,\n});<\/code><\/pre>\n    ",
            "href": "material\/SliderTickMarkShape\/getPreferredSize.html",
            "isDeprecated": "0",
            "type": "dart:ui.Size",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SliderTickMarkShape",
            "params": [
                {
                    "name": "isEnabled",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.bool"
                },
                {
                    "name": "sliderTheme",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "material.SliderThemeData"
                }
            ]
        },
        {
            "desc": "<p>Paints the slider track.<\/p>\n<p><code>context<\/code> is the same context for the render box of the <a href=\"material\/Slider-class.html\">Slider<\/a>.<\/p>\n<p><code>center<\/code> is the offset of the center where this shape should be painted.\nThis offset is relative to the origin of the <code>context<\/code> canvas.<\/p>\n<p><code>parentBox<\/code> is the <a href=\"rendering\/RenderBox-class.html\">RenderBox<\/a> of the <a href=\"material\/Slider-class.html\">Slider<\/a>. Its attributes, such as\nsize, can be used to assist in painting this shape.<\/p>\n<p><code>sliderTheme<\/code> is the theme assigned to the <a href=\"material\/Slider-class.html\">Slider<\/a> that this shape\nbelongs to.<\/p>\n<p><code>enableAnimation<\/code> is an animation triggered when the <a href=\"material\/Slider-class.html\">Slider<\/a> is enabled,\nand it reverses when the slider is disabled. Enabled is the\n<code>Slider.isInteractive<\/code> state. Use this to paint intermediate frames for\nthis shape when the slider changes enabled state.<\/p>\n<p><code>isEnabled<\/code> has the same value as <code>Slider.isInteractive<\/code>. If true, the\nslider will respond to input.<\/p>\n<p><code>textDirection<\/code> can be used to determine how the tick marks are painting\ndepending on whether they are on an active track segment or not. The track\nsegment between the start of the slider and the thumb is the active track\nsegment. The track segment between the thumb and the end of the slider is\nthe inactive track segment. In LTR text direction, the start of the slider\nis on the left, and in RTL text direction, the start of the slider is on\nthe right.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void paint(\n  PaintingContext context,\n  Offset center, {\n  RenderBox parentBox,\n  SliderThemeData sliderTheme,\n  Animation&lt;double&gt; enableAnimation,\n  Offset thumbCenter,\n  bool isEnabled,\n  TextDirection textDirection,\n});<\/code><\/pre>\n    ",
            "href": "material\/SliderTickMarkShape\/paint.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SliderTickMarkShape",
            "params": [
                {
                    "name": "center",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                },
                {
                    "name": "context",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "rendering.PaintingContext"
                },
                {
                    "name": "enableAnimation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "animation.Animation<dart:core.double>"
                },
                {
                    "name": "isEnabled",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.bool"
                },
                {
                    "name": "parentBox",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "rendering.RenderBox"
                },
                {
                    "name": "sliderTheme",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "material.SliderThemeData"
                },
                {
                    "name": "textDirection",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.TextDirection"
                },
                {
                    "name": "thumbCenter",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Special instance of <a href=\"material\/SliderTickMarkShape-class.html\">SliderTickMarkShape<\/a> to skip the tick mark painting.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/SliderThemeData\/tickMarkShape.html\">SliderThemeData.tickMarkShape<\/a>, which is the shape that the <a href=\"material\/Slider-class.html\">Slider<\/a>\nuses when painting tick marks.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final SliderTickMarkShape noTickMark = _EmptySliderTickMarkShape()\n\n<\/code><\/pre>\n        ",
            "href": "material\/SliderTickMarkShape\/noTickMark.html",
            "isDeprecated": "0",
            "type": "material.SliderTickMarkShape",
            "memberOf": "material.SliderTickMarkShape",
            "params": []
        }
    ]
}