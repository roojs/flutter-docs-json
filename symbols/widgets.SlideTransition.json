{
    "name": "widgets.SlideTransition",
    "extends": [
        "widgets.AnimatedWidget",
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "widgets",
    "events": [],
    "methods": [
        {
            "name": "SlideTransition",
            "type": "",
            "desc": "<p>Creates a fractional translation transition.<\/p>\n<p>The <code>position<\/code> argument must not be null.<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.SlideTransition",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "position",
                    "type": "animation.Animation<dart:ui.Offset>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "animation.Animation",
                        "dart:ui.Offset"
                    ]
                },
                {
                    "name": "transformHitTests",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textDirection",
                    "type": "dart:ui.TextDirection",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "child",
                    "type": "widgets.Widget",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "widgets\/SlideTransition\/SlideTransition.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SlideTransition({\n  Key key,\n  @required Animation&lt;Offset&gt; position,\n  this.transformHitTests = true,\n  this.textDirection,\n  this.child,\n}) : assert(position != null),\n     super(key: key, listenable: position);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "build",
            "type": "widgets.Widget",
            "desc": "<p>Override this method to build widgets that depend on the state of the\nlistenable (e.g., the current value of the animation).<\/p>\n    ",
            "static": false,
            "memberOf": "widgets.SlideTransition",
            "sig": "",
            "params": [
                {
                    "name": "context",
                    "type": "widgets.BuildContext",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "widgets\/SlideTransition\/build.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nWidget build(BuildContext context) {\n  Offset offset = position.value;\n  if (textDirection == TextDirection.rtl)\n    offset = Offset(-offset.dx, offset.dy);\n  return FractionalTranslation(\n    translation: offset,\n    transformHitTests: transformHitTests,\n    child: child,\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "child",
            "type": "widgets.Widget",
            "types": [],
            "desc": "<p>The widget below this widget in the tree.<\/p>\n<p>This widget can only have one child. To lay out multiple children, let this\nwidget's child be a widget such as <a href=\"widgets\/Row-class.html\">Row<\/a>, <a href=\"widgets\/Column-class.html\">Column<\/a>, or <a href=\"widgets\/Stack-class.html\">Stack<\/a>, which have a\n<code>children<\/code> property, and then provide the children to that widget.<\/p>\n        ",
            "memberOf": "widgets.SlideTransition",
            "isConstant": false,
            "href": "widgets\/SlideTransition\/child.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "position",
            "type": "animation.Animation<dart:ui.Offset>",
            "types": [
                "animation.Animation",
                "dart:ui.Offset"
            ],
            "desc": "<p>The animation that controls the position of the child.<\/p>\n<p>If the current value of the position animation is <code>(dx, dy)<\/code>, the child\nwill be translated horizontally by <code>width * dx<\/code> and vertically by\n<code>height * dy<\/code>, after applying the <a href=\"widgets\/SlideTransition\/textDirection.html\">textDirection<\/a> if available.<\/p>\n        ",
            "memberOf": "widgets.SlideTransition",
            "isConstant": false,
            "href": "widgets\/SlideTransition\/position.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Animation&lt;Offset&gt; get position =&gt; listenable;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "textDirection",
            "type": "dart:ui.TextDirection",
            "types": [],
            "desc": "<p>The direction to use for the x offset described by the <a href=\"widgets\/SlideTransition\/position.html\">position<\/a>.<\/p>\n<p>If <a href=\"widgets\/SlideTransition\/textDirection.html\">textDirection<\/a> is null, the x offset is applied in the coordinate\nsystem of the canvas (so positive x offsets move the child towards the\nright).<\/p>\n<p>If <a href=\"widgets\/SlideTransition\/textDirection.html\">textDirection<\/a> is <a href=\"dart-ui\/TextDirection-class.html\">TextDirection.rtl<\/a>, the x offset is applied in the\nreading direction such that x offsets move the child towards the left.<\/p>\n<p>If <a href=\"widgets\/SlideTransition\/textDirection.html\">textDirection<\/a> is <a href=\"dart-ui\/TextDirection-class.html\">TextDirection.ltr<\/a>, the x offset is applied in the\nreading direction such that x offsets move the child towards the right.<\/p>\n        ",
            "memberOf": "widgets.SlideTransition",
            "isConstant": false,
            "href": "widgets\/SlideTransition\/textDirection.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final TextDirection textDirection\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "transformHitTests",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether hit testing should be affected by the slide animation.<\/p>\n<p>If false, hit testing will proceed as if the child was not translated at\nall. Setting this value to false is useful for fast animations where you\nexpect the user to commonly interact with the child widget in its final\nlocation and you want the user to benefit from \"muscle memory\".<\/p>\n        ",
            "memberOf": "widgets.SlideTransition",
            "isConstant": false,
            "href": "widgets\/SlideTransition\/transformHitTests.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool transformHitTests\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "widgets\/SlideTransition-class.html",
    "desc": "<p>Animates the position of a widget relative to its normal position.<\/p>\n<p>The translation is expressed as a <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> scaled to the child's size. For\nexample, an <a href=\"dart-ui\/Offset-class.html\">Offset<\/a> with a <code>dx<\/code> of 0.25 will result in a horizontal\ntranslation of one quarter the width of the child.<\/p>\n<p>By default, the offsets are applied in the coordinate system of the canvas\n(so positive x offsets move the child towards the right). If a\n<a href=\"widgets\/SlideTransition\/textDirection.html\">textDirection<\/a> is provided, then the offsets are applied in the reading\ndirection, so in right-to-left text, positive x offsets move towards the\nleft, and in left-to-right text, positive x offsets move towards the right.<\/p>\n<p>Here's an illustration of the <a href=\"widgets\/SlideTransition-class.html\">SlideTransition<\/a> widget, with it's <a href=\"widgets\/SlideTransition\/position.html\">position<\/a>\nanimated by a <a href=\"animation\/CurvedAnimation-class.html\">CurvedAnimation<\/a> set to <a href=\"animation\/Curves\/elasticIn-constant.html\">Curves.elasticIn<\/a>:<\/p>\n<div style=\"position: relative;\">\n  <div id=\"animation_1_play_button_\" onclick=\"if (animation_1.paused) {\n                  animation_1.play();\n                  this.style.display = 'none';\n                } else {\n                  animation_1.pause();\n                  this.style.display = 'block';\n                }\" style=\"position:absolute;\n              width:300px;\n              height:378px;\n              z-index:100000;\n              background-position: center;\n              background-repeat: no-repeat;\n              background-image: url(static-assets\/play_button.svg);\">\n  <\/div>\n  <video id=\"animation_1\" style=\"width:300px; height:378px;\" onclick=\"if (this.paused) {\n                    this.play();\n                    animation_1_play_button_.style.display = 'none';\n                  } else {\n                    this.pause();\n                    animation_1_play_button_.style.display = 'block';\n                  }\" loop=\"\"><source src=\"https:\/\/flutter.github.io\/assets-for-api-docs\/assets\/widgets\/slide_transition.mp4\" type=\"video\/mp4\"><\/source><\/video>\n<\/div>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/AlignTransition-class.html\">AlignTransition<\/a>, an animated version of an <a href=\"widgets\/Align-class.html\">Align<\/a> that animates its\n<a href=\"widgets\/Align\/alignment.html\">Align.alignment<\/a> property.<\/li>\n<li>\n<a href=\"widgets\/PositionedTransition-class.html\">PositionedTransition<\/a>, a widget that animates its child from a start\nposition to an end position over the lifetime of the animation.<\/li>\n<li>\n<a href=\"widgets\/RelativePositionedTransition-class.html\">RelativePositionedTransition<\/a>, a widget that transitions its child's\nposition based on the value of a rectangle relative to a bounding box.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "SlideTransition"
}