{
    "desc": "<p>The part of a material design <a href=\"material\/AppBar-class.html\">AppBar<\/a> that expands and collapses.<\/p>\n<p>Most commonly used in in the <a href=\"material\/SliverAppBar\/flexibleSpace.html\">SliverAppBar.flexibleSpace<\/a> field, a flexible\nspace bar expands and contracts as the app scrolls so that the <a href=\"material\/AppBar-class.html\">AppBar<\/a>\nreaches from the top of the app to the top of the scrolling contents of the\napp.<\/p>\n<p>The widget that sizes the <a href=\"material\/AppBar-class.html\">AppBar<\/a> must wrap it in the widget returned by\n<a href=\"material\/FlexibleSpaceBar\/createSettings.html\">FlexibleSpaceBar.createSettings<\/a>, to convey sizing information down to the\n<a href=\"material\/FlexibleSpaceBar-class.html\">FlexibleSpaceBar<\/a>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/SliverAppBar-class.html\">SliverAppBar<\/a>, which implements the expanding and contracting.<\/li>\n<li>\n<a href=\"material\/AppBar-class.html\">AppBar<\/a>, which is used by <a href=\"material\/SliverAppBar-class.html\">SliverAppBar<\/a>.<\/li>\n<li><a href=\"https:\/\/material.io\/design\/components\/app-bars-top.html#behavior\">material.io\/design\/components\/app-bars-top.html#behavior<\/a><\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/FlexibleSpaceBar-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "material",
    "name": "material.FlexibleSpaceBar",
    "shortname": "FlexibleSpaceBar",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a flexible space bar.<\/p>\n<p>Most commonly used in the <a href=\"material\/AppBar\/flexibleSpace.html\">AppBar.flexibleSpace<\/a> field.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const FlexibleSpaceBar({\n  Key key,\n  this.title,\n  this.background,\n  this.centerTitle,\n  this.titlePadding,\n  this.collapseMode = CollapseMode.parallax,\n}) : assert(collapseMode != null),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "material\/FlexibleSpaceBar\/FlexibleSpaceBar.html",
            "isDeprecated": "0",
            "type": "",
            "name": "FlexibleSpaceBar",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.FlexibleSpaceBar",
            "params": [
                {
                    "name": "background",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "centerTitle",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "collapseMode",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "material.CollapseMode"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "title",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "titlePadding",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "painting.EdgeInsetsGeometry"
                }
            ]
        },
        {
            "desc": "<p>Wraps a widget that contains an <a href=\"material\/AppBar-class.html\">AppBar<\/a> to convey sizing information down\nto the <a href=\"material\/FlexibleSpaceBar-class.html\">FlexibleSpaceBar<\/a>.<\/p>\n<p>Used by <a href=\"material\/Scaffold-class.html\">Scaffold<\/a> and <a href=\"material\/SliverAppBar-class.html\">SliverAppBar<\/a>.<\/p>\n<p><code>toolbarOpacity<\/code> affects how transparent the text within the toolbar\nappears. <code>minExtent<\/code> sets the minimum height of the resulting\n<a href=\"material\/FlexibleSpaceBar-class.html\">FlexibleSpaceBar<\/a> when fully collapsed. <code>maxExtent<\/code> sets the maximum\nheight of the resulting <a href=\"material\/FlexibleSpaceBar-class.html\">FlexibleSpaceBar<\/a> when fully expanded.\n<code>currentExtent<\/code> sets the scale of the <a href=\"material\/FlexibleSpaceBar\/background.html\">FlexibleSpaceBar.background<\/a> and\n<a href=\"material\/FlexibleSpaceBar\/title.html\">FlexibleSpaceBar.title<\/a> widgets of <a href=\"material\/FlexibleSpaceBar-class.html\">FlexibleSpaceBar<\/a> upon\ninitialization.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/FlexibleSpaceBarSettings-class.html\">FlexibleSpaceBarSettings<\/a> which creates a settings object that can be\nused to specify these settings to a <a href=\"material\/FlexibleSpaceBar-class.html\">FlexibleSpaceBar<\/a>.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">static Widget createSettings({\n  double toolbarOpacity,\n  double minExtent,\n  double maxExtent,\n  @required double currentExtent,\n  @required Widget child,\n}) {\n  assert(currentExtent != null);\n  return FlexibleSpaceBarSettings(\n    toolbarOpacity: toolbarOpacity ?? 1.0,\n    minExtent: minExtent ?? currentExtent,\n    maxExtent: maxExtent ?? currentExtent,\n    currentExtent: currentExtent,\n    child: child,\n  );\n}<\/code><\/pre>\n    ",
            "href": "material\/FlexibleSpaceBar\/createSettings.html",
            "isDeprecated": "0",
            "type": "widgets.Widget",
            "name": "createSettings",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.FlexibleSpaceBar",
            "params": [
                {
                    "name": "child",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "widgets.Widget"
                },
                {
                    "name": "currentExtent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "maxExtent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "minExtent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "toolbarOpacity",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/FlexibleSpaceBar\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_FlexibleSpaceBarState createState() =&gt; _FlexibleSpaceBarState();<\/code><\/pre>\n    ",
            "href": "material\/FlexibleSpaceBar\/createState.html",
            "isDeprecated": "0",
            "type": "<_FlexibleSpaceBarState>",
            "name": "createState",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.FlexibleSpaceBar",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Shown behind the <a href=\"material\/FlexibleSpaceBar\/title.html\">title<\/a> when expanded.<\/p>\n<p>Typically an <a href=\"widgets\/Image-class.html\">Image<\/a> widget with <a href=\"widgets\/Image\/fit.html\">Image.fit<\/a> set to <a href=\"painting\/BoxFit-class.html\">BoxFit.cover<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget background\n\n<\/code><\/pre>\n        ",
            "href": "material\/FlexibleSpaceBar\/background.html",
            "name": "background",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "memberOf": "material.FlexibleSpaceBar",
            "params": []
        },
        {
            "desc": "<p>Whether the title should be centered.<\/p>\n<p>By default this property is true if the current target platform\nis <a href=\"foundation\/TargetPlatform-class.html\">TargetPlatform.iOS<\/a>, false otherwise.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool centerTitle\n\n<\/code><\/pre>\n        ",
            "href": "material\/FlexibleSpaceBar\/centerTitle.html",
            "name": "centerTitle",
            "isDeprecated": false,
            "type": "dart:core.bool",
            "memberOf": "material.FlexibleSpaceBar",
            "params": []
        },
        {
            "desc": "<p>Collapse effect while scrolling.<\/p>\n<p>Defaults to <a href=\"material\/CollapseMode-class.html\">CollapseMode.parallax<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final CollapseMode collapseMode\n\n<\/code><\/pre>\n        ",
            "href": "material\/FlexibleSpaceBar\/collapseMode.html",
            "name": "collapseMode",
            "isDeprecated": false,
            "type": "material.CollapseMode",
            "memberOf": "material.FlexibleSpaceBar",
            "params": []
        },
        {
            "desc": "<p>The primary contents of the flexible space bar when expanded.<\/p>\n<p>Typically a <a href=\"widgets\/Text-class.html\">Text<\/a> widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget title\n\n<\/code><\/pre>\n        ",
            "href": "material\/FlexibleSpaceBar\/title.html",
            "name": "title",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "memberOf": "material.FlexibleSpaceBar",
            "params": []
        },
        {
            "desc": "<p>Defines how far the <a href=\"material\/FlexibleSpaceBar\/title.html\">title<\/a> is inset from either the widget's\nbottom-left or its center.<\/p>\n<p>Typically this property is used to adjust how far the title is\nis inset from the bottom-left and it is specified along with\n<a href=\"material\/FlexibleSpaceBar\/centerTitle.html\">centerTitle<\/a> false.<\/p>\n<p>By default the value of this property is\n<code>EdgeInsetsDirectional.only(start: 72, bottom: 16)<\/code> if the title is\nnot centered, <code>EdgeInsetsDirectional.only(start 0, bottom: 16)<\/code> otherwise.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final EdgeInsetsGeometry titlePadding\n\n<\/code><\/pre>\n        ",
            "href": "material\/FlexibleSpaceBar\/titlePadding.html",
            "name": "titlePadding",
            "isDeprecated": false,
            "type": "painting.EdgeInsetsGeometry",
            "memberOf": "material.FlexibleSpaceBar",
            "params": []
        }
    ]
}