{
    "desc": "<p>Factory for creating gesture recognizers that delegates to callbacks.<\/p>\n<p>Used by <a href=\"widgets\/RawGestureDetector\/gestures.html\">RawGestureDetector.gestures<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "widgets\/GestureRecognizerFactoryWithHandlers-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "memberOf": "widgets",
    "name": "widgets.GestureRecognizerFactoryWithHandlers",
    "shortname": "GestureRecognizerFactoryWithHandlers",
    "extends": [
        "widgets.GestureRecognizerFactory",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a gesture recognizer factory with the given callbacks.<\/p>\n<p>The arguments must not be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const GestureRecognizerFactoryWithHandlers(this._constructor, this._initializer)\n  : assert(_constructor != null),\n    assert(_initializer != null);<\/code><\/pre>\n    ",
            "href": "widgets\/GestureRecognizerFactoryWithHandlers\/GestureRecognizerFactoryWithHandlers.html",
            "isDeprecated": false,
            "type": "",
            "name": "GestureRecognizerFactoryWithHandlers",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.GestureRecognizerFactoryWithHandlers",
            "params": [
                {
                    "name": "_constructor",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.GestureRecognizerFactoryConstructor"
                },
                {
                    "name": "_initializer",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.GestureRecognizerFactoryInitializer"
                }
            ]
        },
        {
            "desc": "<p>Must return an instance of T.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nT constructor() =&gt; _constructor();<\/code><\/pre>\n    ",
            "href": "widgets\/GestureRecognizerFactoryWithHandlers\/constructor.html",
            "isDeprecated": false,
            "type": "<T>",
            "name": "constructor",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.GestureRecognizerFactoryWithHandlers",
            "params": []
        },
        {
            "desc": "<p>Must configure the given instance (which will have been created by\n<code>constructor<\/code>).<\/p>\n<p>This normally means setting the callbacks.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid initializer(T instance) =&gt; _initializer(instance);<\/code><\/pre>\n    ",
            "href": "widgets\/GestureRecognizerFactoryWithHandlers\/initializer.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "initializer",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.GestureRecognizerFactoryWithHandlers",
            "params": [
                {
                    "name": "instance",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "<T>"
                }
            ]
        }
    ],
    "props": []
}