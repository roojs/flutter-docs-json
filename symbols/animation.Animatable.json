{
    "desc": "<p>An object that can produce a value of type <code>T<\/code> given an <a href=\"animation\/Animation-class.html\">Animation&lt;double&gt;<\/a>\nas input.<\/p>\n<p>Typically, the values of the input animation are nominally in the range 0.0\nto 1.0. In principle, however, any value could be provided.<\/p>\n<p>The main subclass of <a href=\"animation\/Animatable-class.html\">Animatable<\/a> is <a href=\"animation\/Tween-class.html\">Tween<\/a>.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "animation\/Animatable-class.html",
    "isAbstract": "1",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "animation",
    "name": "animation.Animatable",
    "shortname": "Animatable",
    "extends": [],
    "realImplementors": [
        "animation.ColorTween",
        "animation.ConstantTween",
        "animation.CurveTween",
        "animation.IntTween",
        "animation.RectTween",
        "animation.ReverseTween",
        "animation.SizeTween",
        "animation.StepTween",
        "animation.Tween",
        "animation.TweenSequence",
        "material.MaterialPointArcTween",
        "material.MaterialRectArcTween",
        "material.MaterialRectCenterArcTween",
        "material.ShapeBorderTween",
        "material.ThemeDataTween",
        "rendering.AlignmentGeometryTween",
        "rendering.AlignmentTween",
        "rendering.FractionalOffsetTween",
        "widgets.BorderRadiusTween",
        "widgets.BorderTween",
        "widgets.BoxConstraintsTween",
        "widgets.DecorationTween",
        "widgets.EdgeInsetsGeometryTween",
        "widgets.EdgeInsetsTween",
        "widgets.Matrix4Tween",
        "widgets.RelativeRectTween",
        "widgets.TextStyleTween"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Animatable();<\/code><\/pre>\n    ",
            "href": "animation\/Animatable\/Animatable.html",
            "isDeprecated": "0",
            "type": "",
            "name": "Animatable",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "animation.Animatable",
            "params": []
        },
        {
            "desc": "<p>Returns a new <a href=\"animation\/Animation-class.html\">Animation<\/a> that is driven by the given animation but that\ntakes on values determined by this object.<\/p>\n<p>Essentially this returns an <a href=\"animation\/Animation-class.html\">Animation<\/a> that automatically applies the\n<a href=\"animation\/Animatable\/evaluate.html\">evaluate<\/a> method to the parent's value.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"animation\/Animation\/drive.html\">AnimationController.drive<\/a>, which does the same thing from the\nopposite starting point.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Animation&lt;T&gt; animate(Animation&lt;double&gt; parent) {\n  return _AnimatedEvaluation&lt;T&gt;(parent, this);\n}<\/code><\/pre>\n    ",
            "href": "animation\/Animatable\/animate.html",
            "isDeprecated": "0",
            "type": "animation.Animation",
            "name": "animate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "animation.Animatable",
            "params": [
                {
                    "name": "parent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "animation.Animation<dart:core.double>"
                }
            ]
        },
        {
            "desc": "<p>Returns a new <a href=\"animation\/Animatable-class.html\">Animatable<\/a> whose value is determined by first evaluating\nthe given parent and then evaluating this object.<\/p>\n<p>This allows <a href=\"animation\/Tween-class.html\">Tween<\/a>s to be chained before obtaining an <a href=\"animation\/Animation-class.html\">Animation<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Animatable&lt;T&gt; chain(Animatable&lt;double&gt; parent) {\n  return _ChainedEvaluation&lt;T&gt;(parent, this);\n}<\/code><\/pre>\n    ",
            "href": "animation\/Animatable\/chain.html",
            "isDeprecated": "0",
            "type": "animation.Animatable",
            "name": "chain",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "animation.Animatable",
            "params": [
                {
                    "name": "parent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "animation.Animatable<dart:core.double>"
                }
            ]
        },
        {
            "desc": "<p>The current value of this object for the given <a href=\"animation\/Animation-class.html\">Animation<\/a>.<\/p>\n<p>This function is implemented by deferring to <a href=\"animation\/Animatable\/transform.html\">transform<\/a>. Subclasses that\nwant to provide custom behavior should override <a href=\"animation\/Animatable\/transform.html\">transform<\/a>, not\n<a href=\"animation\/Animatable\/evaluate.html\">evaluate<\/a>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"animation\/Animatable\/transform.html\">transform<\/a>, which is similar but takes a <code>t<\/code> value directly instead of\nan <a href=\"animation\/Animation-class.html\">Animation<\/a>.<\/li>\n<li>\n<a href=\"animation\/Animatable\/animate.html\">animate<\/a>, which creates an <a href=\"animation\/Animation-class.html\">Animation<\/a> out of this object, continually\napplying <a href=\"animation\/Animatable\/evaluate.html\">evaluate<\/a>.<\/li>\n<\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">T evaluate(Animation&lt;double&gt; animation) =&gt; transform(animation.value);<\/code><\/pre>\n    ",
            "href": "animation\/Animatable\/evaluate.html",
            "isDeprecated": "0",
            "type": "<T>",
            "name": "evaluate",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "animation.Animatable",
            "params": [
                {
                    "name": "animation",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "animation.Animation<dart:core.double>"
                }
            ]
        },
        {
            "desc": "<p>Returns the value of the object at point <code>t<\/code>.<\/p>\n<p>The value of <code>t<\/code> is nominally a fraction in the range 0.0 to 1.0, though\nin practice it may extend outside this range.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"animation\/Animatable\/evaluate.html\">evaluate<\/a>, which is a shorthand for applying <a href=\"animation\/Animatable\/transform.html\">transform<\/a> to the value\nof an <a href=\"animation\/Animation-class.html\">Animation<\/a>.<\/li>\n<li>\n<a href=\"animation\/Animatable\/transform.html\">Curve.transform<\/a>, a similar method for easing curves.<\/li>\n<\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">T transform(double t);<\/code><\/pre>\n    ",
            "href": "animation\/Animatable\/transform.html",
            "isDeprecated": "0",
            "type": "<T>",
            "name": "transform",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "animation.Animatable",
            "params": [
                {
                    "name": "t",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": []
}