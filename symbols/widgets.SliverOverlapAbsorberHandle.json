{
    "desc": "<p>Handle to provide to a <a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a>, a <a href=\"widgets\/SliverOverlapInjector-class.html\">SliverOverlapInjector<\/a>,\nand an <a href=\"widgets\/NestedScrollViewViewport-class.html\">NestedScrollViewViewport<\/a>, to shift overlap in a <a href=\"widgets\/NestedScrollView-class.html\">NestedScrollView<\/a>.<\/p>\n<p>A particular <a href=\"widgets\/SliverOverlapAbsorberHandle-class.html\">SliverOverlapAbsorberHandle<\/a> can only be assigned to a single\n<a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a> at a time. It can also be (and normally is) assigned\nto one or more <a href=\"widgets\/SliverOverlapInjector-class.html\">SliverOverlapInjector<\/a>s, which must be later descendants of\nthe same <a href=\"widgets\/NestedScrollViewViewport-class.html\">NestedScrollViewViewport<\/a> as the <a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a>. The\n<a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a> must be a direct descendant of the\n<a href=\"widgets\/NestedScrollViewViewport-class.html\">NestedScrollViewViewport<\/a>, taking part in the same sliver layout. (The\n<a href=\"widgets\/SliverOverlapInjector-class.html\">SliverOverlapInjector<\/a> can be a descendant that takes part in a nested\nscroll view's sliver layout.)<\/p>\n<p>Whenever the <a href=\"widgets\/NestedScrollViewViewport-class.html\">NestedScrollViewViewport<\/a> is marked dirty for layout, it will\ncause its assigned <a href=\"widgets\/SliverOverlapAbsorberHandle-class.html\">SliverOverlapAbsorberHandle<\/a> to fire notifications. It\nis the responsibility of the <a href=\"widgets\/SliverOverlapInjector-class.html\">SliverOverlapInjector<\/a>s (and any other\nclients) to mark themselves dirty when this happens, in case the geometry\nsubsequently changes during layout.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/NestedScrollView-class.html\">NestedScrollView<\/a>, which uses a <a href=\"widgets\/NestedScrollViewViewport-class.html\">NestedScrollViewViewport<\/a> and a\n<a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a> to align its children, and which shows sample\nusage for this class.<\/li><\/ul>",
    "dtype": "class",
    "example": null,
    "href": "widgets\/SliverOverlapAbsorberHandle-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.SliverOverlapAbsorberHandle",
    "shortname": "SliverOverlapAbsorberHandle",
    "extends": [
        "foundation.ChangeNotifier",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": null,
            "href": "widgets\/SliverOverlapAbsorberHandle\/SliverOverlapAbsorberHandle.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.SliverOverlapAbsorberHandle",
            "params": []
        },
        {
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() {\n  String extra;\n  switch (_writers) {\n    case 0:\n      extra = ', orphan';\n      break;\n    case 1:\n      \/\/ normal case\n      break;\n    default:\n      extra = ', $_writers WRITERS ASSIGNED';\n      break;\n  }\n  return '$runtimeType($layoutExtent$extra)';\n}<\/code><\/pre>\n    ",
            "href": "widgets\/SliverOverlapAbsorberHandle\/toString.html",
            "isDeprecated": "0",
            "type": "dart:core.String",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.SliverOverlapAbsorberHandle",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>The current amount of overlap being absorbed by the\n<a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a>.<\/p>\n<p>This corresponds to the <a href=\"widgets\/SliverOverlapAbsorberHandle\/layoutExtent.html\">SliverGeometry.layoutExtent<\/a> of the child of the\n<a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a>.<\/p>\n<p>This is updated during the layout of the <a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a>. It\nshould not change at any other time. No notifications are sent when it\nchanges; clients (e.g. <a href=\"widgets\/SliverOverlapInjector-class.html\">SliverOverlapInjector<\/a>s) are responsible for\nmarking themselves dirty whenever this object sends notifications, which\nhappens any time the <a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a> might subsequently change the\nvalue during that layout.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get layoutExtent =&gt; _layoutExtent;<\/code><\/pre>\n        ",
            "href": "widgets\/SliverOverlapAbsorberHandle\/layoutExtent.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "widgets.SliverOverlapAbsorberHandle",
            "params": []
        },
        {
            "desc": "<p>The total scroll extent of the gap being absorbed by the\n<a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a>.<\/p>\n<p>This corresponds to the <a href=\"widgets\/SliverOverlapAbsorberHandle\/scrollExtent.html\">SliverGeometry.scrollExtent<\/a> of the child of the\n<a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a>.<\/p>\n<p>This is updated during the layout of the <a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a>. It\nshould not change at any other time. No notifications are sent when it\nchanges; clients (e.g. <a href=\"widgets\/SliverOverlapInjector-class.html\">SliverOverlapInjector<\/a>s) are responsible for\nmarking themselves dirty whenever this object sends notifications, which\nhappens any time the <a href=\"widgets\/SliverOverlapAbsorber-class.html\">SliverOverlapAbsorber<\/a> might subsequently change the\nvalue during that layout.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get scrollExtent =&gt; _scrollExtent;<\/code><\/pre>\n        ",
            "href": "widgets\/SliverOverlapAbsorberHandle\/scrollExtent.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "widgets.SliverOverlapAbsorberHandle",
            "params": []
        }
    ]
}