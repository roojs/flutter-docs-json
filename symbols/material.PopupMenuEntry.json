{
    "name": "material.PopupMenuEntry",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "material",
    "events": [],
    "methods": [
        {
            "name": "PopupMenuEntry",
            "type": "",
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "static": false,
            "memberOf": "material.PopupMenuEntry",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "material\/PopupMenuEntry\/PopupMenuEntry.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const PopupMenuEntry({ Key key }) : super(key: key);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "represents",
            "type": "dart:core.bool",
            "desc": "<p>Whether this entry represents a particular value.<\/p>\n<p>This method is used by <a href=\"material\/showMenu.html\">showMenu<\/a>, when it is called, to align the entry\nrepresenting the <code>initialValue<\/code>, if any, to the given <code>position<\/code>, and then\nlater is called on each entry to determine if it should be highlighted (if\nthe method returns true, the entry will have its background color set to\nthe ambient <a href=\"material\/ThemeData\/highlightColor.html\">ThemeData.highlightColor<\/a>). If <code>initialValue<\/code> is null, then\nthis method is not called.<\/p>\n<p>If the <a href=\"material\/PopupMenuEntry-class.html\">PopupMenuEntry<\/a> represents a single value, this should return true\nif the argument matches that value. If it represents multiple values, it\nshould return true if the argument matches any of them.<\/p>\n    ",
            "static": false,
            "memberOf": "material.PopupMenuEntry",
            "sig": "",
            "params": [
                {
                    "name": "value",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "material\/PopupMenuEntry\/represents.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool represents(T value);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "height",
            "type": "dart:core.double",
            "types": [],
            "desc": "<p>The amount of vertical space occupied by this entry.<\/p>\n<p>This value is used at the time the <a href=\"material\/showMenu.html\">showMenu<\/a> method is called, if the\n<code>initialValue<\/code> argument is provided, to determine the position of this\nentry when aligning the selected entry over the given <code>position<\/code>. It is\notherwise ignored.<\/p>\n        ",
            "memberOf": "material.PopupMenuEntry",
            "isConstant": false,
            "href": "material\/PopupMenuEntry\/height.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">double get height;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "material.CheckedPopupMenuItem",
        "material.PopupMenuDivider",
        "material.PopupMenuItem"
    ],
    "realImplementors": [
        "material.CheckedPopupMenuItem",
        "material.PopupMenuDivider",
        "material.PopupMenuItem"
    ],
    "cn": [],
    "href": "material\/PopupMenuEntry-class.html",
    "desc": "<p>A base class for entries in a material design popup menu.<\/p>\n<p>The popup menu widget uses this interface to interact with the menu items.\nTo show a popup menu, use the <a href=\"material\/showMenu.html\">showMenu<\/a> function. To create a button that\nshows a popup menu, consider using <a href=\"material\/PopupMenuButton-class.html\">PopupMenuButton<\/a>.<\/p>\n<p>The type <code>T<\/code> is the type of the value(s) the entry represents. All the\nentries in a given menu must represent values with consistent types.<\/p>\n<p>A <a href=\"material\/PopupMenuEntry-class.html\">PopupMenuEntry<\/a> may represent multiple values, for example a row with\nseveral icons, or a single entry, for example a menu item with an icon (see\n<a href=\"material\/PopupMenuItem-class.html\">PopupMenuItem<\/a>), or no value at all (for example, <a href=\"material\/PopupMenuDivider-class.html\">PopupMenuDivider<\/a>).<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/PopupMenuItem-class.html\">PopupMenuItem<\/a>, a popup menu entry for a single value.<\/li>\n<li>\n<a href=\"material\/PopupMenuDivider-class.html\">PopupMenuDivider<\/a>, a popup menu entry that is just a horizontal line.<\/li>\n<li>\n<a href=\"material\/CheckedPopupMenuItem-class.html\">CheckedPopupMenuItem<\/a>, a popup menu item with a checkmark.<\/li>\n<li>\n<a href=\"material\/showMenu.html\">showMenu<\/a>, a method to dynamically show a popup menu at a given location.<\/li>\n<li>\n<a href=\"material\/PopupMenuButton-class.html\">PopupMenuButton<\/a>, an <a href=\"material\/IconButton-class.html\">IconButton<\/a> that automatically shows a menu when\nit is tapped.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "PopupMenuEntry"
}