{
    "name": "material.PaddleSliderValueIndicatorShape",
    "extends": [
        "material.SliderComponentShape",
        "dart:core.Object"
    ],
    "memberOf": "material",
    "events": [],
    "methods": [
        {
            "name": "PaddleSliderValueIndicatorShape",
            "type": "",
            "desc": "<p>Create a slider value indicator in the shape of an upside-down pear.<\/p>\n    ",
            "static": false,
            "memberOf": "material.PaddleSliderValueIndicatorShape",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "material\/PaddleSliderValueIndicatorShape\/PaddleSliderValueIndicatorShape.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const PaddleSliderValueIndicatorShape();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "getPreferredSize",
            "type": "dart:ui.Size",
            "desc": "<p>Returns the preferred size of the shape, based on the given conditions.<\/p>\n    ",
            "static": false,
            "memberOf": "material.PaddleSliderValueIndicatorShape",
            "sig": "",
            "params": [
                {
                    "name": "isEnabled",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "isDiscrete",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "material\/PaddleSliderValueIndicatorShape\/getPreferredSize.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nSize getPreferredSize(bool isEnabled, bool isDiscrete) =&gt; _preferredSize;<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "paint",
            "type": "",
            "desc": "<p>Paints the shape, taking into account the state passed to it.<\/p>\n<p><code>context<\/code> is the same context for the render box of the <a href=\"material\/Slider-class.html\">Slider<\/a>.<\/p>\n<p><code>center<\/code> is the offset of the center where this shape should be painted.\nThis offset is relative to the origin of the <code>context<\/code> canvas.<\/p>\n<p><code>activationAnimation<\/code> is an animation triggered when the user beings\nto interact with the slider. It reverses when the user stops interacting\nwith the slider.<\/p>\n<p><code>enableAnimation<\/code> is an animation triggered when the <a href=\"material\/Slider-class.html\">Slider<\/a> is enabled,\nand it reverses when the slider is disabled. Enabled is the\n<code>Slider.isInteractive<\/code> state. Use this to paint intermediate frames for\nthis shape when the slider changes enabled state.<\/p>\n<p><code>isDiscrete<\/code> is true if <a href=\"material\/Slider\/divisions.html\">Slider.divisions<\/a> is non-null. If true, the\nslider will render tick marks on top of the track.<\/p>\n<p>If <code>labelPainter<\/code> is non-null, then <code>labelPainter.paint<\/code> should be\ncalled with the location that the label should appear. If the labelPainter\npassed is null, then no label was supplied to the <a href=\"material\/Slider-class.html\">Slider<\/a>.<\/p>\n<p><code>parentBox<\/code> is the <a href=\"rendering\/RenderBox-class.html\">RenderBox<\/a> of the <a href=\"material\/Slider-class.html\">Slider<\/a>. Its attributes, such as\nsize, can be used to assist in painting this shape.<\/p>\n<p><code>sliderTheme<\/code> is the theme assigned to the <a href=\"material\/Slider-class.html\">Slider<\/a> that this shape\nbelongs to.<\/p>\n<p><code>textDirection<\/code> can be used to determine how any extra text or graphics,\nbesides the text painted by the <code>labelPainter<\/code> should be positioned. The\n<code>labelPainter<\/code> already has the <code>textDirection<\/code> set.<\/p>\n<p><code>value<\/code> is the current parametric value (from 0.0 to 1.0) of the slider.<\/p>\n    ",
            "static": false,
            "memberOf": "material.PaddleSliderValueIndicatorShape",
            "sig": "",
            "params": [
                {
                    "name": "context",
                    "type": "rendering.PaintingContext",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "center",
                    "type": "dart:ui.Offset",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "activationAnimation",
                    "type": "animation.Animation<dart:core.double>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "animation.Animation",
                        "dart:core.double"
                    ]
                },
                {
                    "name": "enableAnimation",
                    "type": "animation.Animation<dart:core.double>",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": [
                        "animation.Animation",
                        "dart:core.double"
                    ]
                },
                {
                    "name": "isDiscrete",
                    "type": "dart:core.bool",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "labelPainter",
                    "type": "painting.TextPainter",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "parentBox",
                    "type": "rendering.RenderBox",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "sliderTheme",
                    "type": "material.SliderThemeData",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "textDirection",
                    "type": "dart:ui.TextDirection",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "value",
                    "type": "dart:core.double",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "material\/PaddleSliderValueIndicatorShape\/paint.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid paint(\n  PaintingContext context,\n  Offset center, {\n  Animation&lt;double&gt; activationAnimation,\n  Animation&lt;double&gt; enableAnimation,\n  bool isDiscrete,\n  TextPainter labelPainter,\n  RenderBox parentBox,\n  SliderThemeData sliderTheme,\n  TextDirection textDirection,\n  double value,\n}) {\n  final ColorTween enableColor = ColorTween(\n    begin: sliderTheme.disabledThumbColor,\n    end: sliderTheme.valueIndicatorColor,\n  );\n  _drawValueIndicator(\n    parentBox,\n    context.canvas,\n    center,\n    Paint()..color = enableColor.evaluate(enableAnimation),\n    activationAnimation.value,\n    labelPainter,\n  );\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "material\/PaddleSliderValueIndicatorShape-class.html",
    "desc": "<p>This is the default shape of a <a href=\"material\/Slider-class.html\">Slider<\/a>'s value indicator.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/Slider-class.html\">Slider<\/a>, which includes a value indicator defined by this shape.<\/li>\n<li>\n<a href=\"material\/SliderTheme-class.html\">SliderTheme<\/a>, which can be used to configure the slider value indicator\nof all sliders in a widget subtree.<\/li>\n<\/ul>",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "PaddleSliderValueIndicatorShape"
}