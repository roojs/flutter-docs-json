{
    "name": "rendering.TableCellParentData",
    "extends": [
        "rendering.BoxParentData",
        "rendering.ParentData",
        "dart:core.Object"
    ],
    "memberOf": "rendering",
    "events": [],
    "methods": [
        {
            "name": "TableCellParentData",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "rendering.TableCellParentData",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "rendering\/TableCellParentData\/TableCellParentData.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "rendering.TableCellParentData",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "rendering\/TableCellParentData\/toString.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nString toString() =&gt; '${super.toString()}; ${verticalAlignment == null ? \"default vertical alignment\" : \"$verticalAlignment\"}';<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [
        {
            "name": "verticalAlignment",
            "type": "rendering.TableCellVerticalAlignment",
            "types": [],
            "desc": "<p>Where this cell should be placed vertically.<\/p>\n        ",
            "memberOf": "rendering.TableCellParentData",
            "isConstant": false,
            "href": "rendering\/TableCellParentData\/verticalAlignment.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">TableCellVerticalAlignment verticalAlignment\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "x",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The column that the child was in the last time it was laid out.<\/p>\n        ",
            "memberOf": "rendering.TableCellParentData",
            "isConstant": false,
            "href": "rendering\/TableCellParentData\/x.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int x\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "y",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The row that the child was in the last time it was laid out.<\/p>\n        ",
            "memberOf": "rendering.TableCellParentData",
            "isConstant": false,
            "href": "rendering\/TableCellParentData\/y.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int y\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "rendering\/TableCellParentData-class.html",
    "desc": "<p>Parent data used by <a href=\"rendering\/RenderTable-class.html\">RenderTable<\/a> for its children.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "TableCellParentData"
}