{
    "desc": "<p>A widget whose content stays synced with a <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a>.<\/p>\n<p>Given a <a href=\"foundation\/ValueListenable-class.html\">ValueListenable&lt;T&gt;<\/a> and a <a href=\"widgets\/ValueListenableBuilder\/builder.html\">builder<\/a> which builds widgets from\nconcrete values of <code>T<\/code>, this class will automatically register itself as a\nlistener of the <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a> and call the <a href=\"widgets\/ValueListenableBuilder\/builder.html\">builder<\/a> with updated values\nwhen the value changes.<\/p>\n<h2 id=\"performance-optimizations\">Performance optimizations<\/h2>\n<p>If your <a href=\"widgets\/ValueListenableBuilder\/builder.html\">builder<\/a> function contains a subtree that does not depend on the\nvalue of the <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a>, it's more efficient to build that subtree\nonce instead of rebuilding it on every animation tick.<\/p>\n<p>If you pass the pre-built subtree as the <a href=\"widgets\/ValueListenableBuilder\/child.html\">child<\/a> parameter, the\n<a href=\"widgets\/ValueListenableBuilder-class.html\">ValueListenableBuilder<\/a> will pass it back to your <a href=\"widgets\/ValueListenableBuilder\/builder.html\">builder<\/a> function so\nthat you can incorporate it into your build.<\/p>\n<p>Using this pre-built child is entirely optional, but can improve\nperformance significantly in some cases and is therefore a good practice.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/AnimatedBuilder-class.html\">AnimatedBuilder<\/a>, which also triggers rebuilds from a <a href=\"foundation\/Listenable-class.html\">Listenable<\/a>\nwithout passing back a specific value from a <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a>.<\/li>\n<li>\n<a href=\"widgets\/NotificationListener-class.html\">NotificationListener<\/a>, which lets you rebuild based on <a href=\"widgets\/Notification-class.html\">Notification<\/a>\ncoming from its descendant widgets rather than a <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a> that\nyou have a direct reference to.<\/li>\n<li>\n<a href=\"widgets\/StreamBuilder-class.html\">StreamBuilder<\/a>, where a builder can depend on a <a href=\"dart-async\/Stream-class.html\">Stream<\/a> rather than\na <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a> for more advanced use cases.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "widgets\/ValueListenableBuilder-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.ValueListenableBuilder",
    "shortname": "ValueListenableBuilder",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [
        {
            "desc": "<p>A <a href=\"widgets\/ValueWidgetBuilder.html\">ValueWidgetBuilder<\/a> which builds a widget depending on the\n<a href=\"widgets\/ValueListenableBuilder\/valueListenable.html\">valueListenable<\/a>'s value.<\/p>\n<p>Can incorporate a <a href=\"widgets\/ValueListenableBuilder\/valueListenable.html\">valueListenable<\/a> value-independent widget subtree\nfrom the <a href=\"widgets\/ValueListenableBuilder\/child.html\">child<\/a> parameter into the returned widget tree.<\/p>\n<p>Must not be null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueWidgetBuilder&lt;T&gt; builder\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ValueListenableBuilder\/builder.html",
            "isDeprecated": false,
            "type": "widgets.ValueWidgetBuilder",
            "name": "builder",
            "memberOf": "widgets.ValueListenableBuilder",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a <a href=\"widgets\/ValueListenableBuilder-class.html\">ValueListenableBuilder<\/a>.<\/p>\n<p>The <code>valueListenable<\/code> and <code>builder<\/code> arguments must not be null.\nThe <code>child<\/code> is optional but is good practice to use if part of the widget\nsubtree does not depend on the value of the <code>valueListenable<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const ValueListenableBuilder({\n  @required this.valueListenable,\n  @required this.builder,\n  this.child,\n}) : assert(valueListenable != null),\n     assert(builder != null);<\/code><\/pre>\n    ",
            "href": "widgets\/ValueListenableBuilder\/ValueListenableBuilder.html",
            "isDeprecated": false,
            "type": "",
            "name": "ValueListenableBuilder",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.ValueListenableBuilder",
            "params": [
                {
                    "name": "builder",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.ValueWidgetBuilder"
                },
                {
                    "name": "child",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "valueListenable",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.ValueListenable"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"widgets\/ValueListenableBuilder\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nState&lt;StatefulWidget&gt; createState() =&gt; _ValueListenableBuilderState&lt;T&gt;();<\/code><\/pre>\n    ",
            "href": "widgets\/ValueListenableBuilder\/createState.html",
            "isDeprecated": false,
            "type": "widgets.State<widgets.StatefulWidget>",
            "name": "createState",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "widgets.ValueListenableBuilder",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>A <a href=\"widgets\/ValueListenableBuilder\/valueListenable.html\">valueListenable<\/a>-independent widget which is passed back to the <a href=\"widgets\/ValueListenableBuilder\/builder.html\">builder<\/a>.<\/p>\n<p>This argument is optional and can be null if the entire widget subtree\nthe <a href=\"widgets\/ValueListenableBuilder\/builder.html\">builder<\/a> builds depends on the value of the <a href=\"widgets\/ValueListenableBuilder\/valueListenable.html\">valueListenable<\/a>. For\nexample, if the <a href=\"widgets\/ValueListenableBuilder\/valueListenable.html\">valueListenable<\/a> is a <a href=\"dart-core\/String-class.html\">String<\/a> and the <a href=\"widgets\/ValueListenableBuilder\/builder.html\">builder<\/a> simply\nreturns a <a href=\"widgets\/Text-class.html\">Text<\/a> widget with the <a href=\"dart-core\/String-class.html\">String<\/a> value.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Widget child\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ValueListenableBuilder\/child.html",
            "name": "child",
            "isDeprecated": false,
            "type": "widgets.Widget",
            "memberOf": "widgets.ValueListenableBuilder",
            "params": []
        },
        {
            "desc": "<p>The <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a> whose value you depend on in order to build.<\/p>\n<p>This widget does not ensure that the <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a>'s value is not\nnull, therefore your <a href=\"widgets\/ValueListenableBuilder\/builder.html\">builder<\/a> may need to handle null values.<\/p>\n<p>This <a href=\"foundation\/ValueListenable-class.html\">ValueListenable<\/a> itself must not be null.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueListenable&lt;T&gt; valueListenable\n\n<\/code><\/pre>\n        ",
            "href": "widgets\/ValueListenableBuilder\/valueListenable.html",
            "name": "valueListenable",
            "isDeprecated": false,
            "type": "foundation.ValueListenable",
            "memberOf": "widgets.ValueListenableBuilder",
            "params": []
        }
    ]
}