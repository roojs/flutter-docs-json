{
    "desc": "<p>Base class for slider thumb, thumb overlay, and value indicator shapes.<\/p>\n<p>Create a subclass of this if you would like a custom shape.<\/p>\n<p>All shapes are painted to the same canvas and ordering is important.\nThe overlay is painted first, then the value indicator, then the thumb.<\/p>\n<p>The thumb painting can be skipped by specifying <a href=\"material\/SliderComponentShape\/noThumb.html\">noThumb<\/a> for\n<a href=\"material\/SliderThemeData\/thumbShape.html\">SliderThemeData.thumbShape<\/a>.<\/p>\n<p>The overlay painting can be skipped by specifying <a href=\"material\/SliderComponentShape\/noOverlay.html\">noOverlay<\/a> for\n<a href=\"material\/SliderThemeData\/overlayShape.html\">SliderThemeData.overlayShape<\/a>.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"material\/RoundSliderThumbShape-class.html\">RoundSliderThumbShape<\/a>, which is the the default thumb shape.<\/li>\n<li>\n<a href=\"material\/RoundSliderOverlayShape-class.html\">RoundSliderOverlayShape<\/a>, which is the the default overlay shape.<\/li>\n<li>\n<a href=\"material\/PaddleSliderValueIndicatorShape-class.html\">PaddleSliderValueIndicatorShape<\/a>, which is the the default value\nindicator shape.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "material\/SliderComponentShape-class.html",
    "isAbstract": true,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "material",
    "name": "material.SliderComponentShape",
    "shortname": "SliderComponentShape",
    "extends": [],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [
        "material.PaddleSliderValueIndicatorShape",
        "material.RoundSliderOverlayShape",
        "material.RoundSliderThumbShape"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SliderComponentShape();<\/code><\/pre>\n    ",
            "href": "material\/SliderComponentShape\/SliderComponentShape.html",
            "isDeprecated": false,
            "type": "",
            "name": "SliderComponentShape",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "material.SliderComponentShape",
            "params": []
        },
        {
            "desc": "<p>Returns the preferred size of the shape, based on the given conditions.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Size getPreferredSize(bool isEnabled, bool isDiscrete);<\/code><\/pre>\n    ",
            "href": "material\/SliderComponentShape\/getPreferredSize.html",
            "isDeprecated": false,
            "type": "dart:ui.Size",
            "name": "getPreferredSize",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SliderComponentShape",
            "params": [
                {
                    "name": "isDiscrete",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.bool"
                },
                {
                    "name": "isEnabled",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.bool"
                }
            ]
        },
        {
            "desc": "<p>Paints the shape, taking into account the state passed to it.<\/p>\n<p><code>context<\/code> is the same context for the render box of the <a href=\"material\/Slider-class.html\">Slider<\/a>.<\/p>\n<p><code>center<\/code> is the offset of the center where this shape should be painted.\nThis offset is relative to the origin of the <code>context<\/code> canvas.<\/p>\n<p><code>activationAnimation<\/code> is an animation triggered when the user beings\nto interact with the slider. It reverses when the user stops interacting\nwith the slider.<\/p>\n<p><code>enableAnimation<\/code> is an animation triggered when the <a href=\"material\/Slider-class.html\">Slider<\/a> is enabled,\nand it reverses when the slider is disabled. Enabled is the\n<code>Slider.isInteractive<\/code> state. Use this to paint intermediate frames for\nthis shape when the slider changes enabled state.<\/p>\n<p><code>isDiscrete<\/code> is true if <a href=\"material\/Slider\/divisions.html\">Slider.divisions<\/a> is non-null. If true, the\nslider will render tick marks on top of the track.<\/p>\n<p>If <code>labelPainter<\/code> is non-null, then <code>labelPainter.paint<\/code> should be\ncalled with the location that the label should appear. If the labelPainter\npassed is null, then no label was supplied to the <a href=\"material\/Slider-class.html\">Slider<\/a>.<\/p>\n<p><code>parentBox<\/code> is the <a href=\"rendering\/RenderBox-class.html\">RenderBox<\/a> of the <a href=\"material\/Slider-class.html\">Slider<\/a>. Its attributes, such as\nsize, can be used to assist in painting this shape.<\/p>\n<p><code>sliderTheme<\/code> is the theme assigned to the <a href=\"material\/Slider-class.html\">Slider<\/a> that this shape\nbelongs to.<\/p>\n<p><code>textDirection<\/code> can be used to determine how any extra text or graphics,\nbesides the text painted by the <code>labelPainter<\/code> should be positioned. The\n<code>labelPainter<\/code> already has the <code>textDirection<\/code> set.<\/p>\n<p><code>value<\/code> is the current parametric value (from 0.0 to 1.0) of the slider.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void paint(\n  PaintingContext context,\n  Offset center, {\n  Animation&lt;double&gt; activationAnimation,\n  Animation&lt;double&gt; enableAnimation,\n  bool isDiscrete,\n  TextPainter labelPainter,\n  RenderBox parentBox,\n  SliderThemeData sliderTheme,\n  TextDirection textDirection,\n  double value,\n});<\/code><\/pre>\n    ",
            "href": "material\/SliderComponentShape\/paint.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "paint",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "material.SliderComponentShape",
            "params": [
                {
                    "name": "activationAnimation",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "animation.Animation<dart:core.double>"
                },
                {
                    "name": "center",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.Offset"
                },
                {
                    "name": "context",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "rendering.PaintingContext"
                },
                {
                    "name": "enableAnimation",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "animation.Animation<dart:core.double>"
                },
                {
                    "name": "isDiscrete",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.bool"
                },
                {
                    "name": "labelPainter",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "painting.TextPainter"
                },
                {
                    "name": "parentBox",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "rendering.RenderBox"
                },
                {
                    "name": "sliderTheme",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "material.SliderThemeData"
                },
                {
                    "name": "textDirection",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:ui.TextDirection"
                },
                {
                    "name": "value",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>Special instance of <a href=\"material\/SliderComponentShape-class.html\">SliderComponentShape<\/a> to skip the overlay drawing.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/SliderThemeData\/overlayShape.html\">SliderThemeData.overlayShape<\/a>, which is the shape that the <a href=\"material\/Slider-class.html\">Slider<\/a>\nuses when painting the overlay.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final SliderComponentShape noOverlay = _EmptySliderComponentShape()\n\n<\/code><\/pre>\n        ",
            "href": "material\/SliderComponentShape\/noOverlay.html",
            "name": "noOverlay",
            "isDeprecated": false,
            "type": "material.SliderComponentShape",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.SliderComponentShape",
            "params": []
        },
        {
            "desc": "<p>Special instance of <a href=\"material\/SliderComponentShape-class.html\">SliderComponentShape<\/a> to skip the thumb drawing.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"material\/SliderThemeData\/thumbShape.html\">SliderThemeData.thumbShape<\/a>, which is the shape that the <a href=\"material\/Slider-class.html\">Slider<\/a>\nuses when painting the thumb.<\/li><\/ul>",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static final SliderComponentShape noThumb = _EmptySliderComponentShape()\n\n<\/code><\/pre>\n        ",
            "href": "material\/SliderComponentShape\/noThumb.html",
            "name": "noThumb",
            "isDeprecated": false,
            "type": "material.SliderComponentShape",
            "dtype": "property",
            "isStatic": false,
            "isConstant": false,
            "memberOf": "material.SliderComponentShape",
            "params": []
        }
    ]
}