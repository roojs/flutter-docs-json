{
    "name": "dart:core.Stopwatch",
    "extends": [],
    "memberOf": "dart:core",
    "events": [],
    "methods": [
        {
            "name": "Stopwatch",
            "type": "",
            "desc": "<p>Creates a <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> in stopped state with a zero elapsed count.<\/p>\n<p>The following example shows how to start a <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a>\nimmediately after allocation.<\/p>\n<pre class=\"language-dart\"><code>var stopwatch = new Stopwatch()..start();\n<\/code><\/pre>\n    ",
            "static": false,
            "memberOf": "dart:core.Stopwatch",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "dart-core\/Stopwatch\/Stopwatch.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Stopwatch() {\n  if (_frequency == null) _initTicker();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "reset",
            "type": "",
            "desc": "<p>Resets the <a href=\"dart-core\/Stopwatch\/elapsed.html\">elapsed<\/a> count to zero.<\/p>\n<p>This method does not stop or start the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Stopwatch",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-core\/Stopwatch\/reset.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void reset() {\n  _start = _stop ?? _now();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "start",
            "type": "",
            "desc": "<p>Starts the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a>.<\/p>\n<p>The <a href=\"dart-core\/Stopwatch\/elapsed.html\">elapsed<\/a> count is increasing monotonically. If the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> has\nbeen stopped, then calling start again restarts it without resetting the\n<a href=\"dart-core\/Stopwatch\/elapsed.html\">elapsed<\/a> count.<\/p>\n<p>If the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> is currently running, then calling start does nothing.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Stopwatch",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-core\/Stopwatch\/start.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void start() {\n  if (_stop != null) {\n    \/\/ (Re)start this stopwatch.\n    \/\/ Don't count the time while the stopwatch has been stopped.\n    _start += _now() - _stop;\n    _stop = null;\n  }\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "stop",
            "type": "",
            "desc": "<p>Stops the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a>.<\/p>\n<p>The <a href=\"dart-core\/Stopwatch\/elapsedTicks.html\">elapsedTicks<\/a> count stops increasing after this call. If the\n<a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> is currently not running, then calling this method has no\neffect.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Stopwatch",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-core\/Stopwatch\/stop.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void stop() {\n  _stop ??= _now();\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "elapsed",
            "type": "dart:core.Duration",
            "types": [],
            "desc": "<p>The <a href=\"dart-core\/Stopwatch\/elapsedTicks.html\">elapsedTicks<\/a> counter converted to a <a href=\"dart-core\/Duration-class.html\">Duration<\/a>.<\/p>\n        ",
            "memberOf": "dart:core.Stopwatch",
            "isConstant": false,
            "href": "dart-core\/Stopwatch\/elapsed.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Duration get elapsed {\n  return new Duration(microseconds: elapsedMicroseconds);\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "elapsedMicroseconds",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The <a href=\"dart-core\/Stopwatch\/elapsedTicks.html\">elapsedTicks<\/a> counter converted to microseconds.<\/p>\n        ",
            "memberOf": "dart:core.Stopwatch",
            "isConstant": false,
            "href": "dart-core\/Stopwatch\/elapsedMicroseconds.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">external int get elapsedMicroseconds;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "elapsedMilliseconds",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The <a href=\"dart-core\/Stopwatch\/elapsedTicks.html\">elapsedTicks<\/a> counter converted to milliseconds.<\/p>\n        ",
            "memberOf": "dart:core.Stopwatch",
            "isConstant": false,
            "href": "dart-core\/Stopwatch\/elapsedMilliseconds.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">external int get elapsedMilliseconds;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "elapsedTicks",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>The elapsed number of clock ticks since calling <a href=\"dart-core\/Stopwatch\/start.html\">start<\/a> while the\n<a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> is running.<\/p>\n<p>This is the elapsed number of clock ticks between calling <a href=\"dart-core\/Stopwatch\/start.html\">start<\/a> and\ncalling <a href=\"dart-core\/Stopwatch\/stop.html\">stop<\/a>.<\/p>\n<p>Is 0 if the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> has never been started.<\/p>\n<p>The elapsed number of clock ticks increases by <a href=\"dart-core\/Stopwatch\/frequency.html\">frequency<\/a> every second.<\/p>\n        ",
            "memberOf": "dart:core.Stopwatch",
            "isConstant": false,
            "href": "dart-core\/Stopwatch\/elapsedTicks.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get elapsedTicks {\n  return (_stop ?? _now()) - _start;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "frequency",
            "type": "dart:core.int",
            "types": [],
            "desc": "<p>Frequency of the elapsed counter in Hz.<\/p>\n        ",
            "memberOf": "dart:core.Stopwatch",
            "isConstant": false,
            "href": "dart-core\/Stopwatch\/frequency.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">int get frequency =&gt; _frequency;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "isRunning",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>Whether the <a href=\"dart-core\/Stopwatch-class.html\">Stopwatch<\/a> is currently running.<\/p>\n        ",
            "memberOf": "dart:core.Stopwatch",
            "isConstant": false,
            "href": "dart-core\/Stopwatch\/isRunning.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get isRunning =&gt; _stop == null;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-core\/Stopwatch-class.html",
    "desc": "<p>A simple stopwatch interface to measure elapsed time.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Stopwatch"
}