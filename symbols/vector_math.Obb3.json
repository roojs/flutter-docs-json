{
    "desc": "<p>Defines a 3-dimensional oriented bounding box defined with a <a href=\"vector_math\/Obb3\/center.html\">center<\/a>,\n<a href=\"vector_math\/Obb3\/halfExtents.html\">halfExtents<\/a> and axes.<\/p>\n    ",
    "dtype": "class",
    "example": null,
    "href": "vector_math\/Obb3-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "vector_math",
    "name": "vector_math.Obb3",
    "shortname": "Obb3",
    "extends": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Create a new OBB with erverything set to zero.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Obb3()\n    : _center = new Vector3.zero(),\n      _halfExtents = new Vector3.zero(),\n      _axis0 = new Vector3(1.0, 0.0, 0.0),\n      _axis1 = new Vector3(0.0, 1.0, 0.0),\n      _axis2 = new Vector3(0.0, 0.0, 1.0);<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/Obb3.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": []
        },
        {
            "desc": "<p>Find the closest point <code>q<\/code> on the OBB to the point <code>p<\/code> and store it in <code>q<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void closestPointTo(Vector3 p, Vector3 q) {\n  final Vector3 d = p - _center;\n\n  q.setFrom(_center);\n\n  double dist = d.dot(_axis0);\n  dist = dist.clamp(-_halfExtents.x, _halfExtents.x).toDouble();\n  q.addScaled(_axis0, dist);\n\n  dist = d.dot(_axis1);\n  dist = dist.clamp(-_halfExtents.y, _halfExtents.y).toDouble();\n  q.addScaled(_axis1, dist);\n\n  dist = d.dot(_axis2);\n  dist = dist.clamp(-_halfExtents.z, _halfExtents.z).toDouble();\n  q.addScaled(_axis2, dist);\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/closestPointTo.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "p",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Vector3"
                },
                {
                    "name": "q",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Store the corner with <code>cornerIndex<\/code> in <code>corner<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void copyCorner(int cornerIndex, Vector3 corner) {\n  assert(cornerIndex &gt;= 0 || cornerIndex &lt; 8);\n\n  corner.setFrom(_center);\n\n  switch (cornerIndex) {\n    case 0:\n      corner\n        ..addScaled(_axis0, -_halfExtents.x)\n        ..addScaled(_axis1, -_halfExtents.y)\n        ..addScaled(_axis2, -_halfExtents.z);\n      break;\n    case 1:\n      corner\n        ..addScaled(_axis0, -_halfExtents.x)\n        ..addScaled(_axis1, -_halfExtents.y)\n        ..addScaled(_axis2, _halfExtents.z);\n      break;\n    case 2:\n      corner\n        ..addScaled(_axis0, -_halfExtents.x)\n        ..addScaled(_axis1, _halfExtents.y)\n        ..addScaled(_axis2, -_halfExtents.z);\n      break;\n    case 3:\n      corner\n        ..addScaled(_axis0, -_halfExtents.x)\n        ..addScaled(_axis1, _halfExtents.y)\n        ..addScaled(_axis2, _halfExtents.z);\n      break;\n    case 4:\n      corner\n        ..addScaled(_axis0, _halfExtents.x)\n        ..addScaled(_axis1, -_halfExtents.y)\n        ..addScaled(_axis2, -_halfExtents.z);\n      break;\n    case 5:\n      corner\n        ..addScaled(_axis0, _halfExtents.x)\n        ..addScaled(_axis1, -_halfExtents.y)\n        ..addScaled(_axis2, _halfExtents.z);\n      break;\n    case 6:\n      corner\n        ..addScaled(_axis0, _halfExtents.x)\n        ..addScaled(_axis1, _halfExtents.y)\n        ..addScaled(_axis2, -_halfExtents.z);\n      break;\n    case 7:\n      corner\n        ..addScaled(_axis0, _halfExtents.x)\n        ..addScaled(_axis1, _halfExtents.y)\n        ..addScaled(_axis2, _halfExtents.z);\n      break;\n  }\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/copyCorner.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "corner",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Vector3"
                },
                {
                    "name": "cornerIndex",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>Copy from <code>other<\/code> into <a href=\"vector_math\/Obb3-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void copyFrom(Obb3 other) {\n  _center.setFrom(other._center);\n  _halfExtents.setFrom(other._halfExtents);\n  _axis0.setFrom(other._axis0);\n  _axis1.setFrom(other._axis1);\n  _axis2.setFrom(other._axis2);\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/copyFrom.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Obb3"
                }
            ]
        },
        {
            "desc": "<p>Copy from <a href=\"vector_math\/Obb3-class.html\">this<\/a> into <code>other<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void copyInto(Obb3 other) {\n  other._center.setFrom(_center);\n  other._halfExtents.setFrom(_halfExtents);\n  other._axis0.setFrom(_axis0);\n  other._axis1.setFrom(_axis1);\n  other._axis2.setFrom(_axis2);\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/copyInto.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Obb3"
                }
            ]
        },
        {
            "desc": "<p>Check for intersection between <a href=\"vector_math\/Obb3-class.html\">this<\/a> and <code>other<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool intersectsWithObb3(Obb3 other, [double epsilon = 1e-3]) {\n  \/\/ Compute rotation matrix expressing other in this's coordinate frame\n  _r\n    ..setEntry(0, 0, _axis0.dot(other._axis0))\n    ..setEntry(1, 0, _axis1.dot(other._axis0))\n    ..setEntry(2, 0, _axis2.dot(other._axis0))\n    ..setEntry(0, 1, _axis0.dot(other._axis1))\n    ..setEntry(1, 1, _axis1.dot(other._axis1))\n    ..setEntry(2, 1, _axis2.dot(other._axis1))\n    ..setEntry(0, 2, _axis0.dot(other._axis2))\n    ..setEntry(1, 2, _axis1.dot(other._axis2))\n    ..setEntry(2, 2, _axis2.dot(other._axis2));\n\n  \/\/ Compute translation vector t\n  _t\n    ..setFrom(other._center)\n    ..sub(_center);\n\n  \/\/ Bring translation into this's coordinate frame\n  _t.setValues(_t.dot(_axis0), _t.dot(_axis1), _t.dot(_axis2));\n\n  \/\/ Compute common subexpressions. Add in an epsilon term to\n  \/\/ counteract arithmetic errors when two edges are parallel and\n  \/\/ their cross product is (near) null.\n  for (int i = 0; i &lt; 3; i++) {\n    for (int j = 0; j &lt; 3; j++) {\n      _absR.setEntry(i, j, _r.entry(i, j).abs() + epsilon);\n    }\n  }\n\n  double ra;\n  double rb;\n\n  \/\/ Test axes L = A0, L = A1, L = A2\n  for (int i = 0; i &lt; 3; i++) {\n    ra = _halfExtents[i];\n    rb = other._halfExtents[0] * _absR.entry(i, 0) +\n        other._halfExtents[1] * _absR.entry(i, 1) +\n        other._halfExtents[2] * _absR.entry(i, 2);\n\n    if (_t[i].abs() &gt; ra + rb) {\n      return false;\n    }\n  }\n\n  \/\/ Test axes L = B0, L = B1, L = B2\n  for (int i = 0; i &lt; 3; i++) {\n    ra = _halfExtents[0] * _absR.entry(0, i) +\n        _halfExtents[1] * _absR.entry(1, i) +\n        _halfExtents[2] * _absR.entry(2, i);\n    rb = other._halfExtents[i];\n\n    if ((_t[0] * _r.entry(0, i) +\n                _t[1] * _r.entry(1, i) +\n                _t[2] * _r.entry(2, i))\n            .abs() &gt;\n        ra + rb) {\n      return false;\n    }\n  }\n\n  \/\/ Test axis L = A0 x B0\n  ra = _halfExtents[1] * _absR.entry(2, 0) +\n      _halfExtents[2] * _absR.entry(1, 0);\n  rb = other._halfExtents[1] * _absR.entry(0, 2) +\n      other._halfExtents[2] * _absR.entry(0, 1);\n  if ((_t[2] * _r.entry(1, 0) - _t[1] * _r.entry(2, 0)).abs() &gt; ra + rb) {\n    return false;\n  }\n\n  \/\/ Test axis L = A0 x B1\n  ra = _halfExtents[1] * _absR.entry(2, 1) +\n      _halfExtents[2] * _absR.entry(1, 1);\n  rb = other._halfExtents[0] * _absR.entry(0, 2) +\n      other._halfExtents[2] * _absR.entry(0, 0);\n  if ((_t[2] * _r.entry(1, 1) - _t[1] * _r.entry(2, 1)).abs() &gt; ra + rb) {\n    return false;\n  }\n\n  \/\/ Test axis L = A0 x B2\n  ra = _halfExtents[1] * _absR.entry(2, 2) +\n      _halfExtents[2] * _absR.entry(1, 2);\n  rb = other._halfExtents[0] * _absR.entry(0, 1) +\n      other._halfExtents[1] * _absR.entry(0, 0);\n  if ((_t[2] * _r.entry(1, 2) - _t[1] * _r.entry(2, 2)).abs() &gt; ra + rb) {\n    return false;\n  }\n\n  \/\/ Test axis L = A1 x B0\n  ra = _halfExtents[0] * _absR.entry(2, 0) +\n      _halfExtents[2] * _absR.entry(0, 0);\n  rb = other._halfExtents[1] * _absR.entry(1, 2) +\n      other._halfExtents[2] * _absR.entry(1, 1);\n  if ((_t[0] * _r.entry(2, 0) - _t[2] * _r.entry(0, 0)).abs() &gt; ra + rb) {\n    return false;\n  }\n\n  \/\/ Test axis L = A1 x B1\n  ra = _halfExtents[0] * _absR.entry(2, 1) +\n      _halfExtents[2] * _absR.entry(0, 1);\n  rb = other._halfExtents[0] * _absR.entry(1, 2) +\n      other._halfExtents[2] * _absR.entry(1, 0);\n  if ((_t[0] * _r.entry(2, 1) - _t[2] * _r.entry(0, 1)).abs() &gt; ra + rb) {\n    return false;\n  }\n\n  \/\/ Test axis L = A1 x B2\n  ra = _halfExtents[0] * _absR.entry(2, 2) +\n      _halfExtents[2] * _absR.entry(0, 2);\n  rb = other._halfExtents[0] * _absR.entry(1, 1) +\n      other._halfExtents[1] * _absR.entry(1, 0);\n  if ((_t[0] * _r.entry(2, 2) - _t[2] * _r.entry(0, 2)).abs() &gt; ra + rb) {\n    return false;\n  }\n\n  \/\/ Test axis L = A2 x B0\n  ra = _halfExtents[0] * _absR.entry(1, 0) +\n      _halfExtents[1] * _absR.entry(0, 0);\n  rb = other._halfExtents[1] * _absR.entry(2, 2) +\n      other._halfExtents[2] * _absR.entry(2, 1);\n  if ((_t[1] * _r.entry(0, 0) - _t[0] * _r.entry(1, 0)).abs() &gt; ra + rb) {\n    return false;\n  }\n\n  \/\/ Test axis L = A2 x B1\n  ra = _halfExtents[0] * _absR.entry(1, 1) +\n      _halfExtents[1] * _absR.entry(0, 1);\n  rb = other._halfExtents[0] * _absR.entry(2, 2) +\n      other._halfExtents[2] * _absR.entry(2, 0);\n  if ((_t[1] * _r.entry(0, 1) - _t[0] * _r.entry(1, 1)).abs() &gt; ra + rb) {\n    return false;\n  }\n\n  \/\/ Test axis L = A2 x B2\n  ra = _halfExtents[0] * _absR.entry(1, 2) +\n      _halfExtents[1] * _absR.entry(0, 2);\n  rb = other._halfExtents[0] * _absR.entry(2, 1) +\n      other._halfExtents[1] * _absR.entry(2, 0);\n  if ((_t[1] * _r.entry(0, 2) - _t[0] * _r.entry(1, 2)).abs() &gt; ra + rb) {\n    return false;\n  }\n\n  \/\/ Since no separating axis is found, the OBBs must be intersecting\n  return true;\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/intersectsWithObb3.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "epsilon",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "dart:core.double"
                },
                {
                    "name": "other",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Obb3"
                }
            ]
        },
        {
            "desc": "<p>Return if <a href=\"vector_math\/Obb3-class.html\">this<\/a> intersects with <code>other<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool intersectsWithQuad(Quad other, {IntersectionResult result}) {\n  other.copyTriangles(_quadTriangle0, _quadTriangle1);\n\n  return intersectsWithTriangle(_quadTriangle0, result: result) ||\n      intersectsWithTriangle(_quadTriangle1, result: result);\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/intersectsWithQuad.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Quad"
                },
                {
                    "name": "result",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.IntersectionResult"
                }
            ]
        },
        {
            "desc": "<p>Return if <a href=\"vector_math\/Obb3-class.html\">this<\/a> intersects with <code>other<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool intersectsWithTriangle(Triangle other, {IntersectionResult result}) {\n  _triangle.copyFrom(other);\n\n  _triangle.point0\n    ..sub(_center)\n    ..setValues(_triangle.point0.dot(axis0), _triangle.point0.dot(axis1),\n        _triangle.point0.dot(axis2));\n  _triangle.point1\n    ..sub(_center)\n    ..setValues(_triangle.point1.dot(axis0), _triangle.point1.dot(axis1),\n        _triangle.point1.dot(axis2));\n  _triangle.point2\n    ..sub(_center)\n    ..setValues(_triangle.point2.dot(axis0), _triangle.point2.dot(axis1),\n        _triangle.point2.dot(axis2));\n\n  _aabb3.setCenterAndHalfExtents(_zeroVector, _halfExtents);\n\n  return _aabb3.intersectsWithTriangle(_triangle, result: result);\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/intersectsWithTriangle.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Triangle"
                },
                {
                    "name": "result",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.IntersectionResult"
                }
            ]
        },
        {
            "desc": "<p>Return if <a href=\"vector_math\/Obb3-class.html\">this<\/a> intersects with <code>other<\/code><\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">bool intersectsWithVector3(Vector3 other) {\n  _vector\n    ..setFrom(other)\n    ..sub(_center)\n    ..setValues(_vector.dot(axis0), _vector.dot(axis1), _vector.dot(axis2));\n\n  _aabb3.setCenterAndHalfExtents(_zeroVector, _halfExtents);\n\n  return _aabb3.intersectsWithVector3(_vector);\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/intersectsWithVector3.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "other",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Vector3"
                }
            ]
        },
        {
            "desc": "<p>Reset the rotation of <a href=\"vector_math\/Obb3-class.html\">this<\/a>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void resetRotation() {\n  _axis0.setValues(1.0, 0.0, 0.0);\n  _axis1.setValues(0.0, 1.0, 0.0);\n  _axis2.setValues(0.0, 0.0, 1.0);\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/resetRotation.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": []
        },
        {
            "desc": "<p>Rotate <a href=\"vector_math\/Obb3-class.html\">this<\/a> by the rotation matrix <code>t<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void rotate(Matrix3 t) {\n  t\n    ..transform(_axis0..scale(_halfExtents.x))\n    ..transform(_axis1..scale(_halfExtents.y))\n    ..transform(_axis2..scale(_halfExtents.z));\n\n  _halfExtents\n    ..x = _axis0.normalize()\n    ..y = _axis1.normalize()\n    ..z = _axis2.normalize();\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/rotate.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "t",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Matrix3"
                }
            ]
        },
        {
            "desc": "<p>Transform <a href=\"vector_math\/Obb3-class.html\">this<\/a> by the transform <code>t<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void transform(Matrix4 t) {\n  t\n    ..transform3(_center)\n    ..rotate3(_axis0..scale(_halfExtents.x))\n    ..rotate3(_axis1..scale(_halfExtents.y))\n    ..rotate3(_axis2..scale(_halfExtents.z));\n\n  _halfExtents\n    ..x = _axis0.normalize()\n    ..y = _axis1.normalize()\n    ..z = _axis2.normalize();\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/transform.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "t",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Matrix4"
                }
            ]
        },
        {
            "desc": "<p>Translate <a href=\"vector_math\/Obb3-class.html\">this<\/a> by <code>offset<\/code>.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void translate(Vector3 offset) {\n  _center.add(offset);\n}<\/code><\/pre>\n    ",
            "href": "vector_math\/Obb3\/translate.html",
            "isDeprecated": "0",
            "type": "<void>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math.Obb3",
            "params": [
                {
                    "name": "offset",
                    "desc": null,
                    "example": null,
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": false,
                    "type": "vector_math.Vector3"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": "<p>The first axis of the OBB.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get axis0 =&gt; _axis0;<\/code><\/pre>\n        ",
            "href": "vector_math\/Obb3\/axis0.html",
            "isDeprecated": "0",
            "type": "vector_math.Vector3",
            "memberOf": "vector_math.Obb3",
            "params": []
        },
        {
            "desc": "<p>The second axis of the OBB.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get axis1 =&gt; _axis1;<\/code><\/pre>\n        ",
            "href": "vector_math\/Obb3\/axis1.html",
            "isDeprecated": "0",
            "type": "vector_math.Vector3",
            "memberOf": "vector_math.Obb3",
            "params": []
        },
        {
            "desc": "<p>The third axis of the OBB.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get axis2 =&gt; _axis2;<\/code><\/pre>\n        ",
            "href": "vector_math\/Obb3\/axis2.html",
            "isDeprecated": "0",
            "type": "vector_math.Vector3",
            "memberOf": "vector_math.Obb3",
            "params": []
        },
        {
            "desc": "<p>The center of the OBB.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get center =&gt; _center;<\/code><\/pre>\n        ",
            "href": "vector_math\/Obb3\/center.html",
            "isDeprecated": "0",
            "type": "vector_math.Vector3",
            "memberOf": "vector_math.Obb3",
            "params": []
        },
        {
            "desc": "<p>The half extends of the OBB.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">Vector3 get halfExtents =&gt; _halfExtents;<\/code><\/pre>\n        ",
            "href": "vector_math\/Obb3\/halfExtents.html",
            "isDeprecated": "0",
            "type": "vector_math.Vector3",
            "memberOf": "vector_math.Obb3",
            "params": []
        }
    ]
}