{
    "desc": "<p>An iOS-styled picker.<\/p>\n<p>Displays its children widgets on a wheel for selection and\ncalls back when the currently selected item changes.<\/p>\n<p>Can be used with <a href=\"cupertino\/showCupertinoModalPopup.html\">showCupertinoModalPopup<\/a> to display the picker modally at the\nbottom of the screen.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/ListWheelScrollView-class.html\">ListWheelScrollView<\/a>, the generic widget backing this picker without\nthe iOS design specific chrome.<\/li>\n<li><a href=\"https:\/\/developer.apple.com\/ios\/human-interface-guidelines\/controls\/pickers\/\">developer.apple.com\/ios\/human-interface-guidelines\/controls\/pickers\/<\/a><\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "cupertino\/CupertinoPicker-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "cupertino",
    "name": "cupertino.CupertinoPicker",
    "shortname": "CupertinoPicker",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "events": [
        {
            "desc": "<p>An option callback when the currently centered item changes.<\/p>\n<p>Value changes when the item closest to the center changes.<\/p>\n<p>This can be called during scrolls and during ballistic flings. To get the\nvalue only when the scrolling settles, use a <a href=\"widgets\/NotificationListener-class.html\">NotificationListener<\/a>,\nlisten for <a href=\"widgets\/ScrollEndNotification-class.html\">ScrollEndNotification<\/a> and read its <a href=\"widgets\/FixedExtentMetrics-class.html\">FixedExtentMetrics<\/a>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ValueChanged&lt;int&gt; onSelectedItemChanged\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoPicker\/onSelectedItemChanged.html",
            "isDeprecated": "0",
            "type": "foundation.ValueChanged<dart:core.int>",
            "memberOf": "cupertino.CupertinoPicker",
            "params": []
        }
    ],
    "methods": [
        {
            "desc": "<p>Creates a picker from a concrete list of children.<\/p>\n<p>The <code>diameterRatio<\/code> and <code>itemExtent<\/code> arguments must not be null. The\n<code>itemExtent<\/code> must be greater than zero.<\/p>\n<p>The <code>backgroundColor<\/code> defaults to light gray. It can be set to null to\ndisable the background painting entirely; this is mildly more efficient\nthan using <a href=\"material\/Colors\/transparent-constant.html\">Colors.transparent<\/a>. Also, if it has transparency, no gradient\neffect will be rendered.<\/p>\n<p>The <code>scrollController<\/code> argument can be used to specify a custom\n<a href=\"widgets\/FixedExtentScrollController-class.html\">FixedExtentScrollController<\/a> for programmatically reading or changing\nthe current picker index or for selecting an initial index value.<\/p>\n<p>The <code>looping<\/code> argument decides whether the child list loops and can be\nscrolled infinitely.  If set to true, scrolling past the end of the list\nwill loop the list back to the beginning.  If set to false, the list will\nstop scrolling when you reach the end or the beginning.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">CupertinoPicker({\n  Key key,\n  this.diameterRatio = _kDefaultDiameterRatio,\n  this.backgroundColor = _kDefaultBackground,\n  this.offAxisFraction = 0.0,\n  this.useMagnifier = false,\n  this.magnification = 1.0,\n  this.scrollController,\n  @required this.itemExtent,\n  @required this.onSelectedItemChanged,\n  @required List&lt;Widget&gt; children,\n  bool looping = false,\n}) : assert(children != null),\n     assert(diameterRatio != null),\n     assert(diameterRatio &gt; 0.0, RenderListWheelViewport.diameterRatioZeroMessage),\n     assert(magnification &gt; 0),\n     assert(itemExtent != null),\n     assert(itemExtent &gt; 0),\n     childDelegate = looping\n                     ? ListWheelChildLoopingListDelegate(children: children)\n                     : ListWheelChildListDelegate(children: children),\n     super(key: key);<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoPicker\/CupertinoPicker.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "cupertino.CupertinoPicker",
            "params": [
                {
                    "name": "backgroundColor",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:ui.Color"
                },
                {
                    "name": "children",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.List<widgets.Widget>"
                },
                {
                    "name": "diameterRatio",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "itemExtent",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "key",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "looping",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                },
                {
                    "name": "magnification",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "offAxisFraction",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "onSelectedItemChanged",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "foundation.ValueChanged<dart:core.int>"
                },
                {
                    "name": "scrollController",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "widgets.FixedExtentScrollController"
                },
                {
                    "name": "useMagnifier",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": "0",
                    "isOptional": true,
                    "type": "dart:core.bool"
                }
            ]
        },
        {
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"cupertino\/CupertinoPicker\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nState&lt;StatefulWidget&gt; createState() =&gt; _CupertinoPickerState();<\/code><\/pre>\n    ",
            "href": "cupertino\/CupertinoPicker\/createState.html",
            "isDeprecated": "0",
            "type": "widgets.State<widgets.StatefulWidget>",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "cupertino.CupertinoPicker",
            "params": []
        }
    ],
    "props": [
        {
            "desc": "<p>Background color behind the children.<\/p>\n<p>Defaults to a gray color in the iOS color palette.<\/p>\n<p>This can be set to null to disable the background painting entirely; this\nis mildly more efficient than using <a href=\"material\/Colors\/transparent-constant.html\">Colors.transparent<\/a>.<\/p>\n<p>Any alpha value less 255 (fully opaque) will cause the removal of the\nwheel list edge fade gradient from rendering of the widget.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final Color backgroundColor\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoPicker\/backgroundColor.html",
            "isDeprecated": "0",
            "type": "dart:ui.Color",
            "memberOf": "cupertino.CupertinoPicker",
            "params": []
        },
        {
            "desc": "<p>A delegate that lazily instantiates children.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final ListWheelChildDelegate childDelegate\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoPicker\/childDelegate.html",
            "isDeprecated": "0",
            "type": "widgets.ListWheelChildDelegate",
            "memberOf": "cupertino.CupertinoPicker",
            "params": []
        },
        {
            "desc": "<p>Relative ratio between this picker's height and the simulated cylinder's diameter.<\/p>\n<p>Smaller values creates more pronounced curvatures in the scrollable wheel.<\/p>\n<p>For more details, see <a href=\"cupertino\/CupertinoPicker\/diameterRatio.html\">ListWheelScrollView.diameterRatio<\/a>.<\/p>\n<p>Must not be null and defaults to <code>1.1<\/code> to visually mimic iOS.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double diameterRatio\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoPicker\/diameterRatio.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "cupertino.CupertinoPicker",
            "params": []
        },
        {
            "desc": "<p>The uniform height of all children.<\/p>\n<p>All children will be given the <a href=\"rendering\/BoxConstraints-class.html\">BoxConstraints<\/a> to match this exact\nheight. Must not be null and must be positive.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double itemExtent\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoPicker\/itemExtent.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "cupertino.CupertinoPicker",
            "params": []
        },
        {
            "desc": "<p>The zoomed-in rate of the magnifier, if it is used.<\/p>\n<p>The default value is 1.0, which will not change anything.\nIf the value is &gt; 1.0, the center item will be zoomed in by that rate, and\nit will also be rendered as flat, not cylindrical like the rest of the list.\nThe item will be zoomed out if magnification &lt; 1.0.<\/p>\n<p>Must be positive.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double magnification\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoPicker\/magnification.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "cupertino.CupertinoPicker",
            "params": []
        },
        {
            "desc": "<p>How much the wheel is horizontally off-center, as a fraction of its width.\nThis property creates the visual effect of looking at a vertical wheel from\nits side where its vanishing points at the edge curves to one side instead\nof looking at the wheel head-on.<\/p>\n<p>The value is horizontal distance between the wheel's center and the vertical\nvanishing line at the edges of the wheel, represented as a fraction of the\nwheel's width.<\/p>\n<p>The value <code>0.0<\/code> means the wheel is looked at head-on and its vanishing\nline runs through the center of the wheel. Negative values means moving\nthe wheel to the left of the observer, thus the edges curve to the right.\nPositive values means moving the wheel to the right of the observer,\nthus the edges curve to the left.<\/p>\n<p>The visual effect causes the wheel's edges to curve rather than moving\nthe center. So a value of <code>0.5<\/code> means the edges' vanishing line will touch\nthe wheel's size's left edge.<\/p>\n<p>Defaults to 0.0, which means looking at the wheel head-on.\nThe visual effect can be unaesthetic if this value is too far from the\nrange <code>-0.5, 0.5<\/code>.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final double offAxisFraction\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoPicker\/offAxisFraction.html",
            "isDeprecated": "0",
            "type": "dart:core.double",
            "memberOf": "cupertino.CupertinoPicker",
            "params": []
        },
        {
            "desc": "<p>A <a href=\"widgets\/FixedExtentScrollController-class.html\">FixedExtentScrollController<\/a> to read and control the current item.<\/p>\n<p>If null, an implicit one will be created internally.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final FixedExtentScrollController scrollController\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoPicker\/scrollController.html",
            "isDeprecated": "0",
            "type": "widgets.FixedExtentScrollController",
            "memberOf": "cupertino.CupertinoPicker",
            "params": []
        },
        {
            "desc": "<p>Whether to use the magnifier for the center item of the wheel.<\/p>\n        ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final bool useMagnifier\n\n<\/code><\/pre>\n        ",
            "href": "cupertino\/CupertinoPicker\/useMagnifier.html",
            "isDeprecated": "0",
            "type": "dart:core.bool",
            "memberOf": "cupertino.CupertinoPicker",
            "params": []
        }
    ]
}