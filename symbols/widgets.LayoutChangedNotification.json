{
    "desc": "<p>Indicates that the layout of one of the descendants of the object receiving\nthis notification has changed in some way, and that therefore any\nassumptions about that layout are no longer valid.<\/p>\n<p>Useful if, for instance, you're trying to align multiple descendants.<\/p>\n<p>To listen for notifications in a subtree, use a\n<a href=\"widgets\/NotificationListener-class.html\">NotificationListener&lt;LayoutChangedNotification&gt;<\/a>.<\/p>\n<p>To send a notification, call <a href=\"widgets\/Notification\/dispatch.html\">dispatch<\/a> on the notification you wish to\nsend. The notification will be delivered to any <a href=\"widgets\/NotificationListener-class.html\">NotificationListener<\/a>\nwidgets with the appropriate type parameters that are ancestors of the given\n<a href=\"widgets\/BuildContext-class.html\">BuildContext<\/a>.<\/p>\n<p>In the widgets library, only the <a href=\"widgets\/SizeChangedLayoutNotifier-class.html\">SizeChangedLayoutNotifier<\/a> class and\n<a href=\"widgets\/Scrollable-class.html\">Scrollable<\/a> classes dispatch this notification (specifically, they dispatch\n<a href=\"widgets\/SizeChangedLayoutNotification-class.html\">SizeChangedLayoutNotification<\/a>s and <a href=\"widgets\/ScrollNotification-class.html\">ScrollNotification<\/a>s respectively).\nTransitions, in particular, do not. Changing one's layout in one's build\nfunction does not cause this notification to be dispatched automatically. If\nan ancestor expects to be notified for any layout change, make sure you\neither only use widgets that never change layout, or that notify their\nancestors when appropriate, or alternatively, dispatch the notifications\nyourself when appropriate.<\/p>\n<p>Also, since this notification is sent when the layout is changed, it is only\nuseful for paint effects that depend on the layout. If you were to use this\nnotification to change the build, for instance, you would always be one\nframe behind, which would look really ugly and laggy.<\/p>\n    ",
    "dtype": "class",
    "example": "",
    "href": "widgets\/LayoutChangedNotification-class.html",
    "isAbstract": "0",
    "isConstant": "0",
    "isDeprecated": "0",
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "widgets",
    "name": "widgets.LayoutChangedNotification",
    "shortname": "LayoutChangedNotification",
    "extends": [
        "widgets.Notification",
        "dart:core.Object"
    ],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "widgets\/LayoutChangedNotification\/LayoutChangedNotification.html",
            "isDeprecated": "0",
            "type": "",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.LayoutChangedNotification",
            "params": []
        }
    ],
    "props": []
}