{
    "name": "semantics.SemanticsBinding",
    "extends": [],
    "memberOf": "semantics",
    "events": [],
    "methods": [
        {
            "name": "SemanticsBinding",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "semantics.SemanticsBinding",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "semantics\/SemanticsBinding\/SemanticsBinding.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "handleAccessibilityFeaturesChanged",
            "type": "",
            "desc": "<p>Called when the platform accessibility features change.<\/p>\n<p>See <a href=\"dart-ui\/Window\/onAccessibilityFeaturesChanged.html\">Window.onAccessibilityFeaturesChanged<\/a>.<\/p>\n    ",
            "static": false,
            "memberOf": "semantics.SemanticsBinding",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "semantics\/SemanticsBinding\/handleAccessibilityFeaturesChanged.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@protected\nvoid handleAccessibilityFeaturesChanged() {\n  _accessibilityFeatures = window.accessibilityFeatures;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "initInstances",
            "type": "",
            "desc": "<p>The initialization method. Subclasses override this method to hook into\nthe platform and otherwise configure their services. Subclasses must call\n\"super.initInstances()\".<\/p>\n<p>By convention, if the service is to be provided as a singleton, it should\nbe exposed as <code>MixinClassName.instance<\/code>, a static getter that returns\n<code>MixinClassName._instance<\/code>, a static field that is set by\n<code>initInstances()<\/code>.<\/p>\n    ",
            "static": false,
            "memberOf": "semantics.SemanticsBinding",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "semantics\/SemanticsBinding\/initInstances.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid initInstances() {\n  super.initInstances();\n  _instance = this;\n  _accessibilityFeatures = window.accessibilityFeatures;\n}<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "accessibilityFeatures",
            "type": "dart:ui.AccessibilityFeatures",
            "types": [],
            "desc": "<p>The currently active set of <a href=\"dart-ui\/AccessibilityFeatures-class.html\">AccessibilityFeatures<\/a>.<\/p>\n<p>This is initialized the first time <a href=\"widgets\/runApp.html\">runApp<\/a> is called and updated whenever\na flag is changed.<\/p>\n<p>To listen to changes to accessibility features, create a\n<a href=\"widgets\/WidgetsBindingObserver-class.html\">WidgetsBindingObserver<\/a> and listen to <code>didChangeAccessibilityFeatures<\/code>.<\/p>\n        ",
            "memberOf": "semantics.SemanticsBinding",
            "isConstant": false,
            "href": "semantics\/SemanticsBinding\/accessibilityFeatures.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">ui.AccessibilityFeatures get accessibilityFeatures =&gt; _accessibilityFeatures;<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "disableAnimations",
            "type": "dart:core.bool",
            "types": [],
            "desc": "<p>The platform is requesting that animations be disabled or simplified.<\/p>\n<p>This setting can be overridden for testing or debugging by setting\n<a href=\"semantics\/debugSemanticsDisableAnimations.html\">debugSemanticsDisableAnimations<\/a>.<\/p>\n        ",
            "memberOf": "semantics.SemanticsBinding",
            "isConstant": false,
            "href": "semantics\/SemanticsBinding\/disableAnimations.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">bool get disableAnimations {\n  bool value = _accessibilityFeatures.disableAnimations;\n  assert(() {\n    if (debugSemanticsDisableAnimations != null)\n      value = debugSemanticsDisableAnimations;\n    return true;\n  }());\n  return value;\n}<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "instance",
            "type": "semantics.SemanticsBinding",
            "types": [],
            "desc": "<p>The current <a href=\"semantics\/SemanticsBinding-mixin.html\">SemanticsBinding<\/a>, if one has been created.<\/p>\n        ",
            "memberOf": "semantics.SemanticsBinding",
            "isConstant": false,
            "href": "semantics\/SemanticsBinding\/instance.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">static SemanticsBinding get instance =&gt; _instance;<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": true,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "semantics\/SemanticsBinding-mixin.html",
    "desc": "<p>The glue between the semantics layer and the Flutter engine.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "mixin",
    "shortname": "SemanticsBinding"
}