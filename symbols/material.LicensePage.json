{
    "name": "material.LicensePage",
    "extends": [
        "widgets.StatefulWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "memberOf": "material",
    "events": [],
    "methods": [
        {
            "name": "LicensePage",
            "type": "",
            "desc": "<p>Creates a page that shows licenses for software used by the application.<\/p>\n<p>The arguments are all optional. The application name, if omitted, will be\nderived from the nearest <a href=\"widgets\/Title-class.html\">Title<\/a> widget. The version and legalese values\ndefault to the empty string.<\/p>\n<p>The licenses shown on the <a href=\"material\/LicensePage-class.html\">LicensePage<\/a> are those returned by the\n<a href=\"foundation\/LicenseRegistry-class.html\">LicenseRegistry<\/a> API, which can be used to add more licenses to the list.<\/p>\n    ",
            "static": false,
            "memberOf": "material.LicensePage",
            "sig": "",
            "params": [
                {
                    "name": "key",
                    "type": "foundation.Key",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "applicationName",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "applicationVersion",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "applicationLegalese",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "material\/LicensePage\/LicensePage.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const LicensePage({\n  Key key,\n  this.applicationName,\n  this.applicationVersion,\n  this.applicationLegalese,\n}) : super(key: key);<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "createState",
            "type": "",
            "desc": "<p>Creates the mutable state for this widget at a given location in the tree.<\/p>\n<p>Subclasses should override this method to return a newly created\ninstance of their associated <a href=\"widgets\/State-class.html\">State<\/a> subclass:<\/p>\n<pre class=\"language-dart\"><code class=\"language-dart\">@override\n_MyState createState() =&gt; _MyState();\n<\/code><\/pre>\n<p>The framework can call this method multiple times over the lifetime of\na <a href=\"widgets\/StatefulWidget-class.html\">StatefulWidget<\/a>. For example, if the widget is inserted into the tree\nin multiple locations, the framework will create a separate <a href=\"widgets\/State-class.html\">State<\/a> object\nfor each location. Similarly, if the widget is removed from the tree and\nlater inserted into the tree again, the framework will call <a href=\"material\/LicensePage\/createState.html\">createState<\/a>\nagain to create a fresh <a href=\"widgets\/State-class.html\">State<\/a> object, simplifying the lifecycle of\n<a href=\"widgets\/State-class.html\">State<\/a> objects.<\/p>\n    ",
            "static": false,
            "memberOf": "material.LicensePage",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "material\/LicensePage\/createState.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\n_LicensePageState createState() =&gt; _LicensePageState();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        }
    ],
    "props": [
        {
            "name": "applicationLegalese",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>A string to show in small print.<\/p>\n<p>Typically this is a copyright notice.<\/p>\n<p>Defaults to the empty string.<\/p>\n        ",
            "memberOf": "material.LicensePage",
            "isConstant": false,
            "href": "material\/LicensePage\/applicationLegalese.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String applicationLegalese\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "applicationName",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The name of the application.<\/p>\n<p>Defaults to the value of <a href=\"widgets\/Title\/title.html\">Title.title<\/a>, if a <a href=\"widgets\/Title-class.html\">Title<\/a> widget can be found.\nOtherwise, defaults to <a href=\"dart-io\/Platform\/resolvedExecutable.html\">Platform.resolvedExecutable<\/a>.<\/p>\n        ",
            "memberOf": "material.LicensePage",
            "isConstant": false,
            "href": "material\/LicensePage\/applicationName.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String applicationName\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        },
        {
            "name": "applicationVersion",
            "type": "dart:core.String",
            "types": [],
            "desc": "<p>The version of this build of the application.<\/p>\n<p>This string is shown under the application name.<\/p>\n<p>Defaults to the empty string.<\/p>\n        ",
            "memberOf": "material.LicensePage",
            "isConstant": false,
            "href": "material\/LicensePage\/applicationVersion.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">final String applicationVersion\n\n<\/code><\/pre>\n        ",
            "isDeprecated": false
        }
    ],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "material\/LicensePage-class.html",
    "desc": "<p>A page that shows licenses for software used by the application.<\/p>\n<p>To show a <a href=\"material\/LicensePage-class.html\">LicensePage<\/a>, use <a href=\"material\/showLicensePage.html\">showLicensePage<\/a>.<\/p>\n<p>The <a href=\"material\/AboutDialog-class.html\">AboutDialog<\/a> shown by <a href=\"material\/showAboutDialog.html\">showAboutDialog<\/a> and <a href=\"material\/AboutListTile-class.html\">AboutListTile<\/a> includes\na button that calls <a href=\"material\/showLicensePage.html\">showLicensePage<\/a>.<\/p>\n<p>The licenses shown on the <a href=\"material\/LicensePage-class.html\">LicensePage<\/a> are those returned by the\n<a href=\"foundation\/LicenseRegistry-class.html\">LicenseRegistry<\/a> API, which can be used to add more licenses to the list.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "LicensePage"
}