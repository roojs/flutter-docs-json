{
    "name": "dart:convert.ChunkedConversionSink",
    "extends": [],
    "memberOf": "dart:convert",
    "events": [],
    "methods": [
        {
            "name": "ChunkedConversionSink",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:convert.ChunkedConversionSink",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "dart-convert\/ChunkedConversionSink\/ChunkedConversionSink.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">ChunkedConversionSink();<\/code><\/pre>\n    ",
            "isDeprecated": false
        },
        {
            "name": "add",
            "type": "",
            "desc": "<p>Adds chunked data to this sink.<\/p>\n<p>This method is also used when converters are used as <a href=\"dart-async\/StreamTransformer-class.html\">StreamTransformer<\/a>s.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:convert.ChunkedConversionSink",
            "sig": "",
            "params": [
                {
                    "name": "chunk",
                    "type": "",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                }
            ],
            "isConstructor": false,
            "href": "dart-convert\/ChunkedConversionSink\/add.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void add(T chunk);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "close",
            "type": "",
            "desc": "<p>Closes the sink.<\/p>\n<p>This signals the end of the chunked conversion. This method is called\nwhen converters are used as <a href=\"dart-async\/StreamTransformer-class.html\">StreamTransformer<\/a>'s.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:convert.ChunkedConversionSink",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "dart-convert\/ChunkedConversionSink\/close.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">void close();<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": []
        },
        {
            "name": "ChunkedConversionSink.withCallback",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:convert.ChunkedConversionSink",
            "sig": "",
            "params": [
                {
                    "name": "accumulated",
                    "type": "dart:core.List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false,
                    "types": []
                },
                {
                    "name": "accumulated",
                    "type": "dart:core.List",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": true,
            "href": "dart-convert\/ChunkedConversionSink\/ChunkedConversionSink.withCallback.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">factory ChunkedConversionSink.withCallback(\n    void callback(List&lt;T&gt; accumulated)) = _SimpleCallbackSink&lt;T&gt;;<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [
        "convert.ByteAccumulatorSink",
        "dart:convert.ByteConversionSink",
        "dart:convert.ByteConversionSinkBase",
        "dart:convert.StringConversionSink"
    ],
    "realImplementors": [
        "convert.ByteAccumulatorSink"
    ],
    "cn": [],
    "href": "dart-convert\/ChunkedConversionSink-class.html",
    "desc": "<p>A <a href=\"dart-convert\/ChunkedConversionSink-class.html\">ChunkedConversionSink<\/a> is used to transmit data more efficiently between\ntwo converters during chunked conversions.<\/p>\n<p>The basic <code>ChunkedConversionSink<\/code> is just a <a href=\"dart-core\/Sink-class.html\">Sink<\/a>, and converters should\nwork with a plain <code>Sink<\/code>, but may work more efficiently with certain\nspecialized types of <code>ChunkedConversionSink<\/code>.<\/p>\n<p>It is recommended that implementations of <code>ChunkedConversionSink<\/code> extend\nthis class, to inherit any further methods that may be added to the class.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "ChunkedConversionSink"
}