{
    "desc": "<p>The size and position of all the tiles in a <a href=\"rendering\/RenderSliverGrid-class.html\">RenderSliverGrid<\/a>.<\/p>\n<p>Rather that providing a grid with a <a href=\"rendering\/SliverGridLayout-class.html\">SliverGridLayout<\/a> directly, you instead\nprovide the grid a <a href=\"rendering\/SliverGridDelegate-class.html\">SliverGridDelegate<\/a>, which can compute a\n<a href=\"rendering\/SliverGridLayout-class.html\">SliverGridLayout<\/a> given the current <a href=\"rendering\/SliverConstraints-class.html\">SliverConstraints<\/a>.<\/p>\n<p>The tiles can be placed arbitrarily, but it is more efficient to place tiles\nin roughly in order by scroll offset because grids reify a contiguous\nsequence of children.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"rendering\/SliverGridRegularTileLayout-class.html\">SliverGridRegularTileLayout<\/a>, which represents a layout that uses\nequally sized and spaced tiles.<\/li>\n<li>\n<a href=\"rendering\/SliverGridGeometry-class.html\">SliverGridGeometry<\/a>, which represents the size and position of a single\ntile in a grid.<\/li>\n<li>\n<a href=\"rendering\/SliverGridDelegate\/getLayout.html\">SliverGridDelegate.getLayout<\/a>, which returns this object to describe the\ndelegate's layout.<\/li>\n<li>\n<a href=\"rendering\/RenderSliverGrid-class.html\">RenderSliverGrid<\/a>, which uses this class during its\n<a href=\"rendering\/RenderSliverGrid\/performLayout.html\">RenderSliverGrid.performLayout<\/a> method.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "rendering\/SliverGridLayout-class.html",
    "isAbstract": true,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "rendering",
    "name": "rendering.SliverGridLayout",
    "shortname": "SliverGridLayout",
    "extends": [],
    "realImplementors": [
        "rendering.SliverGridRegularTileLayout"
    ],
    "events": [],
    "methods": [
        {
            "desc": "<p>Abstract const constructor. This constructor enables subclasses to provide\nconst constructors so that they can be used in const expressions.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const SliverGridLayout();<\/code><\/pre>\n    ",
            "href": "rendering\/SliverGridLayout\/SliverGridLayout.html",
            "isDeprecated": false,
            "type": "",
            "name": "SliverGridLayout",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "rendering.SliverGridLayout",
            "params": []
        },
        {
            "desc": "<p>The scroll extent needed to fully display all the tiles if there are\n<code>childCount<\/code> children in total.<\/p>\n<p>The child count will never be null.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">double computeMaxScrollOffset(int childCount);<\/code><\/pre>\n    ",
            "href": "rendering\/SliverGridLayout\/computeMaxScrollOffset.html",
            "isDeprecated": false,
            "type": "dart:core.double",
            "name": "computeMaxScrollOffset",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.SliverGridLayout",
            "params": [
                {
                    "name": "childCount",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>The size and position of the child with the given index.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">SliverGridGeometry getGeometryForChildIndex(int index);<\/code><\/pre>\n    ",
            "href": "rendering\/SliverGridLayout\/getGeometryForChildIndex.html",
            "isDeprecated": false,
            "type": "rendering.SliverGridGeometry",
            "name": "getGeometryForChildIndex",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.SliverGridLayout",
            "params": [
                {
                    "name": "index",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                }
            ]
        },
        {
            "desc": "<p>The maximum child index that is visible at (or before) this scroll offset.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">int getMaxChildIndexForScrollOffset(double scrollOffset);<\/code><\/pre>\n    ",
            "href": "rendering\/SliverGridLayout\/getMaxChildIndexForScrollOffset.html",
            "isDeprecated": false,
            "type": "dart:core.int",
            "name": "getMaxChildIndexForScrollOffset",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.SliverGridLayout",
            "params": [
                {
                    "name": "scrollOffset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        },
        {
            "desc": "<p>The minimum child index that is visible at (or after) this scroll offset.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">int getMinChildIndexForScrollOffset(double scrollOffset);<\/code><\/pre>\n    ",
            "href": "rendering\/SliverGridLayout\/getMinChildIndexForScrollOffset.html",
            "isDeprecated": false,
            "type": "dart:core.int",
            "name": "getMinChildIndexForScrollOffset",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "rendering.SliverGridLayout",
            "params": [
                {
                    "name": "scrollOffset",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": []
}