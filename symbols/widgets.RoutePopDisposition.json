{
    "desc": "<p>Indicates whether the current route should be popped.<\/p>\n<p>Used as the return value for <a href=\"widgets\/Route\/willPop.html\">Route.willPop<\/a>.<\/p>\n<p>See also:<\/p>\n<ul><li>\n<a href=\"widgets\/WillPopScope-class.html\">WillPopScope<\/a>, a widget that hooks into the route's <a href=\"widgets\/Route\/willPop.html\">Route.willPop<\/a>\nmechanism.<\/li><\/ul>",
    "dtype": "enum",
    "example": "",
    "href": "widgets\/RoutePopDisposition-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "widgets",
    "name": "widgets.RoutePopDisposition",
    "shortname": "RoutePopDisposition",
    "extends": [],
    "is_enum": true,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [],
    "props": [
        {
            "desc": "\n          <p>Delegate this to the next level of navigation.<\/p>\n<p>If <a href=\"widgets\/Route\/willPop.html\">Route.willPop<\/a> return <a href=\"widgets\/RoutePopDisposition-class.html\">bubble<\/a> then the back button will be handled\nby the <a href=\"services\/SystemNavigator-class.html\">SystemNavigator<\/a>, which will usually close the application.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const RoutePopDisposition(2)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "bubble",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "widgets.RoutePopDisposition",
            "params": []
        },
        {
            "desc": "\n          <p>Do not pop the route.<\/p>\n<p>If <a href=\"widgets\/Route\/willPop.html\">Route.willPop<\/a> returns <a href=\"widgets\/RoutePopDisposition-class.html\">doNotPop<\/a> then the back button will be ignored.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const RoutePopDisposition(1)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "doNotPop",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "widgets.RoutePopDisposition",
            "params": []
        },
        {
            "desc": "\n          <p>Pop the route.<\/p>\n<p>If <a href=\"widgets\/Route\/willPop.html\">Route.willPop<\/a> returns <a href=\"widgets\/RoutePopDisposition-class.html\">pop<\/a> then the back button will actually pop\nthe current route.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const RoutePopDisposition(0)<\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "pop",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "widgets.RoutePopDisposition",
            "params": []
        },
        {
            "desc": "\n          <p>A constant List of the values in this enum, in order of their declaration.<\/p>\n                  \n  <div>\n            <span class=\"signature\"><code>const List&lt;<wbr><span class=\"type-parameter\">RoutePopDisposition<\/span>&gt;<\/wbr><\/code><\/span>\n          <\/div>\n        ",
            "example": "",
            "href": "",
            "name": "values",
            "isDeprecated": false,
            "type": "",
            "dtype": "enum-value",
            "isStatic": true,
            "isConstant": true,
            "memberOf": "widgets.RoutePopDisposition",
            "params": []
        }
    ]
}