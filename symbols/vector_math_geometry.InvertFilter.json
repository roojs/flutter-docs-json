{
    "desc": null,
    "dtype": "class",
    "example": "",
    "href": "vector_math_geometry\/InvertFilter-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "vector_math_geometry",
    "name": "vector_math_geometry.InvertFilter",
    "shortname": "InvertFilter",
    "extends": [
        "vector_math_geometry.InplaceGeometryFilter",
        "vector_math_geometry.GeometryFilter",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "vector_math_geometry\/InvertFilter\/InvertFilter.html",
            "isDeprecated": "0",
            "type": "",
            "name": "InvertFilter",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "vector_math_geometry.InvertFilter",
            "params": []
        },
        {
            "desc": "<p>Applies the filter to the mesh.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid filterInplace(MeshGeometry mesh) {\n  \/\/ TODO: Do the tangents need to be inverted? Maybe just the W component?\n  \/\/ TODO: Should modify in-place be allowed, or should it be required\n  \/\/ to return a new geometry?\n\n  \/\/ Swap all the triangle indices\n  for (int i = 0; i &lt; mesh.indices.length; i += 3) {\n    final int tmp = mesh.indices[i];\n    mesh.indices[i] = mesh.indices[i + 2];\n    mesh.indices[i + 2] = tmp;\n  }\n\n  final VectorList&lt;Vector&gt; normals = mesh.getViewForAttrib('NORMAL');\n  if (normals is Vector3List) {\n    for (int i = 0; i &lt; normals.length; ++i) {\n      normals[i] = -normals[i];\n    }\n  }\n}<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/InvertFilter\/filterInplace.html",
            "isDeprecated": "0",
            "type": "<void>",
            "name": "filterInplace",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.InvertFilter",
            "params": [
                {
                    "name": "mesh",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_geometry.MeshGeometry"
                }
            ]
        }
    ],
    "props": []
}