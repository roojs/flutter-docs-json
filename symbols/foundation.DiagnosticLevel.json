{
    "type": "",
    "name": "foundation.DiagnosticLevel",
    "extends": [],
    "memberOf": "foundation",
    "events": [],
    "methods": [
        {
            "name": "toString",
            "type": "dart:core.String",
            "desc": "<p>Returns a string representation of this object.<\/p>\n    ",
            "static": false,
            "memberOf": "foundation.DiagnosticLevel",
            "sig": "",
            "params": [],
            "isConstructor": false,
            "href": "foundation\/DiagnosticLevel\/toString.html",
            "example": "",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": true,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": false,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "foundation\/DiagnosticLevel-class.html",
    "desc": "<p>The various priority levels used to filter which diagnostics are shown and\nomitted.<\/p>\n<p>Trees of Flutter diagnostics can be very large so filtering the diagnostics\nshown matters. Typically filtering to only show diagnostics with at least\nlevel <a href=\"foundation\/DiagnosticLevel-class.html\">debug<\/a> is appropriate.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "enum",
    "shortname": "DiagnosticLevel"
}