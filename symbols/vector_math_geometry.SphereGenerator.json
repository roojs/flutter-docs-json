{
    "desc": null,
    "dtype": "class",
    "example": "",
    "href": "vector_math_geometry\/SphereGenerator-class.html",
    "isAbstract": false,
    "isConstant": "0",
    "isDeprecated": false,
    "is_enum": 1,
    "is_mixin": 1,
    "is_typedef": 1,
    "memberOf": "vector_math_geometry",
    "name": "vector_math_geometry.SphereGenerator",
    "shortname": "SphereGenerator",
    "extends": [
        "vector_math_geometry.GeometryGenerator",
        "dart:core.Object"
    ],
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": null,
            "example": "",
            "href": "vector_math_geometry\/SphereGenerator\/SphereGenerator.html",
            "isDeprecated": false,
            "type": "",
            "name": "SphereGenerator",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "vector_math_geometry.SphereGenerator",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">MeshGeometry createSphere(num radius,\n    {int latSegments: 16,\n    int lonSegments: 16,\n    GeometryGeneratorFlags flags,\n    List&lt;GeometryFilter&gt; filters}) {\n  _radius = radius.toDouble();\n  _latSegments = latSegments;\n  _lonSegments = lonSegments;\n\n  return createGeometry(flags: flags, filters: filters);\n}<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/SphereGenerator\/createSphere.html",
            "isDeprecated": false,
            "type": "vector_math_geometry.MeshGeometry",
            "name": "createSphere",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.SphereGenerator",
            "params": [
                {
                    "name": "filters",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.List<vector_math_geometry.GeometryFilter>"
                },
                {
                    "name": "flags",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_geometry.GeometryGeneratorFlags"
                },
                {
                    "name": "latSegments",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "lonSegments",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.int"
                },
                {
                    "name": "radius",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:core.num"
                }
            ]
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateIndices(Uint16List indices) {\n  int i = 0;\n  for (int y = 0; y &lt; _latSegments; ++y) {\n    final int base1 = (_lonSegments + 1) * y;\n    final int base2 = (_lonSegments + 1) * (y + 1);\n\n    for (int x = 0; x &lt; _lonSegments; ++x) {\n      indices[i++] = base1 + x;\n      indices[i++] = base1 + x + 1;\n      indices[i++] = base2 + x;\n\n      indices[i++] = base1 + x + 1;\n      indices[i++] = base2 + x + 1;\n      indices[i++] = base2 + x;\n    }\n  }\n}<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/SphereGenerator\/generateIndices.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "generateIndices",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.SphereGenerator",
            "params": [
                {
                    "name": "indices",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Uint16List"
                }
            ]
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateVertexNormals(\n    Vector3List normals, Vector3List positions, Uint16List indices) {\n  int i = 0;\n  for (int y = 0; y &lt;= _latSegments; ++y) {\n    final double v = y \/ _latSegments;\n    final double sv = math.sin(v * math.pi);\n    final double cv = math.cos(v * math.pi);\n\n    for (int x = 0; x &lt;= _lonSegments; ++x) {\n      final double u = x \/ _lonSegments;\n\n      normals[i++] = new Vector3(math.cos(u * math.pi * 2.0) * sv, cv,\n          math.sin(u * math.pi * 2.0) * sv);\n    }\n  }\n}<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/SphereGenerator\/generateVertexNormals.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "generateVertexNormals",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.SphereGenerator",
            "params": [
                {
                    "name": "indices",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Uint16List"
                },
                {
                    "name": "normals",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_lists.Vector3List"
                },
                {
                    "name": "positions",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_lists.Vector3List"
                }
            ]
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateVertexPositions(Vector3List positions, Uint16List indices) {\n  int i = 0;\n  for (int y = 0; y &lt;= _latSegments; ++y) {\n    final double v = y \/ _latSegments;\n    final double sv = math.sin(v * math.pi);\n    final double cv = math.cos(v * math.pi);\n\n    for (int x = 0; x &lt;= _lonSegments; ++x) {\n      final double u = x \/ _lonSegments;\n\n      positions[i++] = new Vector3(_radius * math.cos(u * math.pi * 2.0) * sv,\n          _radius * cv, _radius * math.sin(u * math.pi * 2.0) * sv);\n    }\n  }\n}<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/SphereGenerator\/generateVertexPositions.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "generateVertexPositions",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.SphereGenerator",
            "params": [
                {
                    "name": "indices",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Uint16List"
                },
                {
                    "name": "positions",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_lists.Vector3List"
                }
            ]
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">@override\nvoid generateVertexTexCoords(\n    Vector2List texCoords, Vector3List positions, Uint16List indices) {\n  int i = 0;\n  for (int y = 0; y &lt;= _latSegments; ++y) {\n    final double v = y \/ _latSegments;\n\n    for (int x = 0; x &lt;= _lonSegments; ++x) {\n      final double u = x \/ _lonSegments;\n      texCoords[i++] = new Vector2(u, v);\n    }\n  }\n}<\/code><\/pre>\n    ",
            "href": "vector_math_geometry\/SphereGenerator\/generateVertexTexCoords.html",
            "isDeprecated": false,
            "type": "<void>",
            "name": "generateVertexTexCoords",
            "dtype": "method",
            "isConstructor": false,
            "static": false,
            "memberOf": "vector_math_geometry.SphereGenerator",
            "params": [
                {
                    "name": "indices",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "dart:typed_data.Uint16List"
                },
                {
                    "name": "positions",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_lists.Vector3List"
                },
                {
                    "name": "texCoords",
                    "desc": null,
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": false,
                    "type": "vector_math_lists.Vector2List"
                }
            ]
        }
    ],
    "props": [
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get indexCount =&gt; 6 * _lonSegments * _latSegments;<\/code><\/pre>\n        ",
            "href": "vector_math_geometry\/SphereGenerator\/indexCount.html",
            "name": "indexCount",
            "isDeprecated": false,
            "type": "dart:core.int",
            "memberOf": "vector_math_geometry.SphereGenerator",
            "params": []
        },
        {
            "desc": null,
            "example": "<h2><span>Implementation<\/span><\/h2>\n          <pre class=\"language-dart\"><code class=\"language-dart\">@override\nint get vertexCount =&gt; (_lonSegments + 1) * (_latSegments + 1);<\/code><\/pre>\n        ",
            "href": "vector_math_geometry\/SphereGenerator\/vertexCount.html",
            "name": "vertexCount",
            "isDeprecated": false,
            "type": "dart:core.int",
            "memberOf": "vector_math_geometry.SphereGenerator",
            "params": []
        }
    ]
}