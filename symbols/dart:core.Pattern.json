{
    "name": "dart:core.Pattern",
    "extends": [],
    "memberOf": "dart:core",
    "events": [],
    "methods": [
        {
            "name": "Pattern",
            "type": "",
            "desc": "",
            "static": false,
            "memberOf": "dart:core.Pattern",
            "sig": "",
            "params": [],
            "isConstructor": true,
            "href": "dart-core\/Pattern\/Pattern.html",
            "example": "",
            "isDeprecated": false
        },
        {
            "name": "allMatches",
            "type": "dart:core.Iterable<dart:core.Match>",
            "desc": "<p>Match this pattern against the string repeatedly.<\/p>\n<p>If <code>start<\/code> is provided, matching will start at that index.<\/p>\n<p>The returned iterable lazily computes all the non-overlapping matches\nof the pattern on the string, ordered by start index.\nIf a user only requests the first\nmatch, this function should not compute all possible matches.<\/p>\n<p>The matches are found by repeatedly finding the first match\nof the pattern on the string, starting from the end of the previous\nmatch, and initially starting from index zero.<\/p>\n<p>If the pattern matches the empty string at some point, the next\nmatch is found by starting at the previous match's end plus one.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Pattern",
            "sig": "",
            "params": [
                {
                    "name": "string",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "start",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-core\/Pattern\/allMatches.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Iterable&lt;Match&gt; allMatches(String string, [int start = 0]);<\/code><\/pre>\n    ",
            "isDeprecated": false,
            "types": [
                "dart:core.Iterable",
                "dart:core.Match"
            ]
        },
        {
            "name": "matchAsPrefix",
            "type": "dart:core.Match",
            "desc": "<p>Match this pattern against the start of <code>string<\/code>.<\/p>\n<p>If <code>start<\/code> is provided, it must be an integer in the range <code>0<\/code> ..\n<code>string.length<\/code>. In that case, this patten is tested against the\nstring at the <code>start<\/code> position. That is, a <a href=\"dart-core\/Match-class.html\">Match<\/a> is returned if the\npattern can match a part of the string starting from position <code>start<\/code>.\nReturns <code>null<\/code> if the pattern doesn't match.<\/p>\n    ",
            "static": false,
            "memberOf": "dart:core.Pattern",
            "sig": "",
            "params": [
                {
                    "name": "string",
                    "type": "dart:core.String",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                },
                {
                    "name": "start",
                    "type": "dart:core.int",
                    "desc": "",
                    "isOptional": true,
                    "href": "",
                    "example": "",
                    "isDeprecated": false
                }
            ],
            "isConstructor": false,
            "href": "dart-core\/Pattern\/matchAsPrefix.html",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">Match matchAsPrefix(String string, [int start = 0]);<\/code><\/pre>\n    ",
            "isDeprecated": false
        }
    ],
    "props": [],
    "isMixin": false,
    "isEnum": false,
    "isTypedef": false,
    "isConstant": false,
    "isAbstract": true,
    "implementors": [],
    "realImplementors": [],
    "cn": [],
    "href": "dart-core\/Pattern-class.html",
    "desc": "<p>An interface for basic searches within strings.<\/p>\n    ",
    "example": "",
    "isDeprecated": false,
    "dtype": "class",
    "shortname": "Pattern"
}