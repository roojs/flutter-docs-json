{
    "desc": "<p>A widget that centers its child within itself.<\/p>\n<p>This widget will be as big as possible if its dimensions are constrained and\n<a href=\"widgets\/Align\/widthFactor.html\">widthFactor<\/a> and <a href=\"widgets\/Align\/heightFactor.html\">heightFactor<\/a> are null. If a dimension is unconstrained\nand the corresponding size factor is null then the widget will match its\nchild's size in that dimension. If a size factor is non-null then the\ncorresponding dimension of this widget will be the product of the child's\ndimension and the size factor. For example if widthFactor is 2.0 then\nthe width of this widget will always be twice its child's width.<\/p>\n<p>See also:<\/p>\n<ul>\n<li>\n<a href=\"widgets\/Align-class.html\">Align<\/a>, which lets you arbitrarily position a child within itself,\nrather than just centering it.<\/li>\n<li>\n<a href=\"widgets\/Row-class.html\">Row<\/a>, a widget that displays its children in a horizontal array.<\/li>\n<li>\n<a href=\"widgets\/Column-class.html\">Column<\/a>, a widget that displays its children in a vertical array.<\/li>\n<li>\n<a href=\"widgets\/Container-class.html\">Container<\/a>, a convenience widget that combines common painting,\npositioning, and sizing widgets.<\/li>\n<li>The <a href=\"https:\/\/flutter.io\/widgets\/layout\/\">catalog of layout widgets<\/a>.<\/li>\n<\/ul>",
    "dtype": "class",
    "example": "",
    "href": "widgets\/Center-class.html",
    "isAbstract": false,
    "isConstant": false,
    "isDeprecated": false,
    "memberOf": "widgets",
    "name": "widgets.Center",
    "shortname": "Center",
    "extends": [
        "widgets.Align",
        "widgets.SingleChildRenderObjectWidget",
        "widgets.RenderObjectWidget",
        "widgets.Widget",
        "foundation.DiagnosticableTree",
        "foundation.Diagnosticable",
        "dart:core.Object"
    ],
    "is_enum": false,
    "is_mixin": false,
    "realImplementors": [],
    "events": [],
    "methods": [
        {
            "desc": "<p>Creates a widget that centers its child.<\/p>\n    ",
            "example": "<h2><span>Implementation<\/span><\/h2>\n      <pre class=\"language-dart\"><code class=\"language-dart\">const Center({ Key key, double widthFactor, double heightFactor, Widget child })\n  : super(key: key, widthFactor: widthFactor, heightFactor: heightFactor, child: child);<\/code><\/pre>\n    ",
            "href": "widgets\/Center\/Center.html",
            "isDeprecated": false,
            "type": "",
            "name": "Center",
            "dtype": "constructor",
            "isConstructor": true,
            "static": false,
            "memberOf": "widgets.Center",
            "params": [
                {
                    "name": "child",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "widgets.Widget"
                },
                {
                    "name": "heightFactor",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                },
                {
                    "name": "key",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "foundation.Key"
                },
                {
                    "name": "widthFactor",
                    "desc": "",
                    "example": "",
                    "href": "",
                    "isDeprecated": false,
                    "isOptional": true,
                    "type": "dart:core.double"
                }
            ]
        }
    ],
    "props": []
}